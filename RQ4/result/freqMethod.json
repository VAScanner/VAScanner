{
    "com.alibaba:fastjson:1.2.47": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 165,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 171,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 161,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 63,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 3,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 48,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 8,
        "com.alibaba.fastjson.JSON:void writeJSONString(java.io.Writer,java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 48,
        "com.alibaba.fastjson.JSONPath:java.lang.Object read(java.lang.String,java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 83,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 11,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 51,
        "com.alibaba.fastjson.JSONReader:java.lang.Object readObject()": 2,
        "com.alibaba.fastjson.JSONReader:java.lang.String readString()": 8,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 2,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 33,
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:java.math.BigDecimal getBigDecimal(java.lang.String)": 52,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(java.lang.Class)": 37,
        "com.alibaba.fastjson.JSONArray:java.util.List toJavaList(java.lang.Class)": 19,
        "com.alibaba.fastjson.JSONArray:java.math.BigDecimal getBigDecimal(int)": 2,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONArray getJSONArray(int)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.io.InputStream,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSONObject:java.lang.Object getObject(java.lang.String,java.lang.Class)": 25,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)": 2
    },
    "io.netty:netty-all:4.1.21.Final": {
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind()": 1,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 2,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 4,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 4,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 4,
        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)": 2,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListeners(io.netty.util.concurrent.GenericFutureListener[])": 2,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[])": 2,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[])": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2
    },
    "com.alibaba:fastjson:1.2.71": {
        "com.alibaba.fastjson.JSONArray:java.util.List toJavaList(java.lang.Class)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 53,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 75,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 7,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 6,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 54,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 130,
        "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)": 31,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 45,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 19,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 6,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONArray getJSONArray(int)": 1,
        "com.alibaba.fastjson.serializer.JSONSerializer:void write(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 6
    },
    "com.alibaba:fastjson:1.2.62": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 24,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 13,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 6,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 52,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 54,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 42,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(byte[],com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 8,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 63,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 25,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 8,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 2,
        "com.alibaba.fastjson.JSONObject:java.lang.Object getObject(java.lang.String,java.lang.Class)": 4
    },
    "io.netty:netty-all:4.1.34.Final": {
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2
    },
    "com.alibaba:fastjson:1.2.78": {
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 18,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 3,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 3,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 6,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 2
    },
    "org.apache.httpcomponents:httpclient:4.5.6": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 38,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 4
    },
    "io.netty:netty-all:4.1.19.Final": {
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()": 12,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 12,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 4,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 4,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 4,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 3,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 2,
        "io.netty.channel.ChannelOutboundHandlerAdapter:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2
    },
    "org.hibernate:hibernate-core:4.1.5.Final": {
        "org.hibernate.internal.CollectionFilterImpl:java.util.List list()": 4,
        "org.hibernate.internal.SessionImpl:org.hibernate.Query createQuery(java.lang.String)": 4
    },
    "org.apache.httpcomponents:httpclient:4.5.2": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 49,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 72,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 4,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)": 1,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)": 1,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)": 1,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)": 1
    },
    "io.netty:netty-all:4.1.31.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 3,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 3,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1
    },
    "com.alibaba:fastjson:1.2.58": {
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 14,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 14,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 4,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 31,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 28,
        "com.alibaba.fastjson.util.TypeUtils:java.lang.Float castToFloat(java.lang.Object)": 1,
        "com.alibaba.fastjson.util.TypeUtils:java.lang.Double castToDouble(java.lang.Object)": 1,
        "com.alibaba.fastjson.util.TypeUtils:java.math.BigDecimal castToBigDecimal(java.lang.Object)": 1,
        "com.alibaba.fastjson.util.TypeUtils:java.math.BigInteger castToBigInteger(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 2,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1
    },
    "org.apache.httpcomponents:httpclient:4.5.3": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 61,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 4,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 10,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:9.0.36": {
        "org.apache.catalina.connector.CoyoteWriter:void close()": 17,
        "org.apache.catalina.connector.CoyoteWriter:void flush()": 14,
        "org.apache.catalina.connector.CoyoteWriter:void write(java.lang.String)": 18,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": 1,
        "org.apache.catalina.startup.Tomcat:void start()": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)": 1,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()": 8,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()": 7,
        "org.apache.catalina.connector.CoyoteOutputStream:void close()": 8,
        "org.apache.catalina.connector.CoyoteOutputStream:void flush()": 7,
        "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])": 4,
        "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close()": 3,
        "org.apache.catalina.connector.CoyoteWriter:void print(java.lang.String)": 11,
        "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)": 5,
        "org.apache.catalina.core.StandardContext:org.apache.catalina.Wrapper createWrapper()": 5,
        "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": 5,
        "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)": 5,
        "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,javax.servlet.Filter)": 5,
        "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration getFilterRegistration(java.lang.String)": 5,
        "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)": 4,
        "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read(byte[],int,int)": 4,
        "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])": 4,
        "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)": 2,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(byte[],int,int)": 4,
        "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)": 4,
        "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()": 9,
        "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession()": 9,
        "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()": 2
    },
    "commons-beanutils:commons-beanutils:1.9.3": {
        "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)": 22,
        "org.apache.commons.beanutils.WrapDynaClass$2:int hashCode()": 18,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)": 964,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)": 218,
        "org.apache.commons.beanutils.BeanUtils:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)": 4,
        "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsKey(java.lang.Object)": 44,
        "org.apache.commons.beanutils.BeanUtils:java.lang.String getProperty(java.lang.Object,java.lang.String)": 4,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set keySet()": 16,
        "org.apache.commons.beanutils.WrapDynaClass$2:void putAll(java.util.Map)": 9,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object remove(java.lang.Object)": 10,
        "org.apache.commons.beanutils.PropertyUtilsBean:java.lang.Object getNestedProperty(java.lang.Object,java.lang.String)": 1,
        "org.apache.commons.beanutils.PropertyUtilsBean:void <init>()": 2,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set entrySet()": 11,
        "org.apache.commons.beanutils.ConvertUtils:java.lang.Object convert(java.lang.Object,java.lang.Class)": 2,
        "org.apache.commons.beanutils.BeanUtils:void copyProperties(java.lang.Object,java.lang.Object)": 5,
        "org.apache.commons.beanutils.ConvertUtils:java.lang.Object convert(java.lang.String,java.lang.Class)": 1,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Collection values()": 8,
        "org.apache.commons.beanutils.WrapDynaClass$2:int size()": 5,
        "org.apache.commons.beanutils.WrapDynaClass$2:boolean isEmpty()": 6,
        "org.apache.commons.beanutils.converters.AbstractConverter:java.lang.Object convert(java.lang.Class,java.lang.Object)": 16,
        "org.apache.commons.beanutils.converters.IntegerConverter:void <init>(java.lang.Object)": 1,
        "org.apache.commons.beanutils.converters.LongConverter:void <init>(java.lang.Object)": 1,
        "org.apache.commons.beanutils.converters.BigDecimalConverter:void <init>(java.lang.Object)": 2,
        "org.apache.commons.beanutils.converters.FloatConverter:void <init>(java.lang.Object)": 2,
        "org.apache.commons.beanutils.converters.BooleanConverter:void <init>(java.lang.Object)": 1,
        "org.apache.commons.beanutils.converters.StringConverter:void <init>(java.lang.Object)": 1,
        "org.apache.commons.beanutils.PropertyUtilsBean:java.lang.Class getPropertyType(java.lang.Object,java.lang.String)": 1,
        "org.apache.commons.beanutils.PropertyUtilsBean:java.lang.Object getProperty(java.lang.Object,java.lang.String)": 1,
        "org.apache.commons.beanutils.converters.DateConverter:void <init>(java.lang.Object)": 1,
        "org.apache.commons.beanutils.ConvertUtils:void register(org.apache.commons.beanutils.Converter,java.lang.Class)": 2,
        "org.apache.commons.beanutils.PropertyUtils:java.lang.Object getProperty(java.lang.Object,java.lang.String)": 5,
        "org.apache.commons.beanutils.PropertyUtils:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)": 1,
        "org.apache.commons.beanutils.WrapDynaClass$2:void clear()": 2,
        "org.apache.commons.beanutils.BeanUtils:void copyProperty(java.lang.Object,java.lang.String,java.lang.Object)": 1,
        "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsValue(java.lang.Object)": 1,
        "org.apache.commons.beanutils.BeanUtils:void populate(java.lang.Object,java.util.Map)": 3,
        "org.apache.commons.beanutils.PropertyUtils:java.util.Map describe(java.lang.Object)": 1,
        "org.apache.commons.beanutils.PropertyUtils:java.beans.PropertyDescriptor[] getPropertyDescriptors(java.lang.Class)": 1,
        "org.apache.commons.beanutils.PropertyUtils:java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.Object,java.lang.String)": 2,
        "org.apache.commons.beanutils.PropertyUtils:java.lang.reflect.Method getReadMethod(java.beans.PropertyDescriptor)": 2
    },
    "com.alibaba:fastjson:1.2.53": {
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 7,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 4,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 2,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "io.netty:netty-all:4.1.16.Final": {
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 11,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 11,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 18,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 18,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise)": 1,
        "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()": 10,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 6,
        "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(java.lang.String,io.netty.channel.ChannelHandler)": 32,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 26,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 3,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)": 2,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 11,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 6,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 11,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 9,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 5,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)": 3,
        "io.netty.channel.group.DefaultChannelGroup:io.netty.channel.group.ChannelGroupFuture close()": 5,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()": 9,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()": 17,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 7,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)": 5,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)": 5,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 5,
        "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 10,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 2,
        "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()": 1,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()": 1,
        "io.netty.util.concurrent.ScheduledFutureTask:void run()": 4,
        "io.netty.util.concurrent.DefaultPromise$1:void run()": 4,
        "io.netty.util.concurrent.DefaultPromise$2:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$3:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$4:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$2:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$7:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$8:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$5:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$6:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$9:void run()": 4,
        "io.netty.handler.codec.compression.JZlibEncoder$1:void run()": 4,
        "io.netty.handler.codec.compression.JZlibEncoder$3:void run()": 4,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()": 4,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()": 4,
        "io.netty.channel.ChannelOutboundBuffer$3:void run()": 4,
        "io.netty.channel.ChannelOutboundBuffer$2:void run()": 4,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()": 4,
        "io.netty.bootstrap.Bootstrap$3:void run()": 4,
        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()": 4,
        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()": 4,
        "io.netty.handler.codec.compression.JdkZlibEncoder$3:void run()": 4,
        "io.netty.handler.codec.compression.JdkZlibEncoder$1:void run()": 4,
        "io.netty.handler.ssl.SslHandler$5:void run()": 4,
        "io.netty.handler.ssl.SslHandler$1:void run()": 4,
        "io.netty.handler.ssl.SslHandler$3:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()": 4,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)": 1,
        "io.netty.util.concurrent.ImmediateEventExecutor:void execute(java.lang.Runnable)": 1,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": 5,
        "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.Object call()": 1,
        "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addFirst(java.lang.String,io.netty.channel.ChannelHandler)": 1,
        "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelHandler remove(java.lang.String)": 2,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture write(java.lang.Object)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)": 1
    },
    "com.alibaba:fastjson:1.2.48": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 1
    },
    "com.alibaba:fastjson:1.2.74": {
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 23,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 22,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 3,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 7,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 5,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 4
    },
    "org.apache.httpcomponents:httpclient:4.5.7": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 12
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.50": {
        "org.apache.tomcat.util.http.fileupload.IOUtils:void closeQuietly(java.io.Closeable)": 2
    },
    "com.thoughtworks.xstream:xstream:1.4.7": {
        "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)": 2,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 3,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])": 1,
        "com.thoughtworks.xstream.XStream:void <init>()": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL)": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 2
    },
    "com.alibaba:fastjson:1.2.79": {
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 6,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 9,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 3,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 6,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 2,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 8,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 8,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "io.netty:netty-all:4.1.2.Final": {
        "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])": 11,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2
    },
    "dom4j:dom4j:1.6.1": {
        "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)": 9
    },
    "com.thoughtworks.xstream:xstream:1.4.11.1": {
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 1
    },
    "org.apache.httpcomponents:httpclient:4.3.6": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 3,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)": 2,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 28,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 1
    },
    "org.apache.httpcomponents:httpclient:4.5.11": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 10
    },
    "io.netty:netty-all:4.1.3.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 2,
        "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])": 9
    },
    "org.apache.httpcomponents:httpclient:4.5.12": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 1,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 9
    },
    "com.alibaba:fastjson:1.2.72": {
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 9,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 5,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 25,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 25,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 6,
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 1
    },
    "org.springframework.amqp:spring-amqp:1.4.3.RELEASE": {
        "org.springframework.amqp.core.Message:java.lang.String toString()": 3
    },
    "com.alibaba:fastjson:1.2.54": {
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 16,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 11,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 4,
        "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)": 1,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONArray getJSONArray(int)": 6,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 15,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 5,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 23,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 13,
        "com.alibaba.fastjson.JSONObject:java.lang.Float getFloat(java.lang.String)": 14,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 9,
        "com.alibaba.fastjson.JSONArray:java.lang.Float getFloat(int)": 4,
        "com.alibaba.fastjson.JSONObject:float getFloatValue(java.lang.String)": 5,
        "com.alibaba.fastjson.JSONObject:java.lang.Double getDouble(java.lang.String)": 5,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 6
    },
    "org.apache.kafka:kafka-clients:1.0.0": {
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 4,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void subscribe(java.util.Collection)": 4,
        "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.List partitionsFor(java.lang.String)": 1,
        "org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread:void run()": 4,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void commitSync(java.util.Map)": 1,
        "org.apache.kafka.clients.consumer.KafkaConsumer:org.apache.kafka.clients.consumer.ConsumerRecords poll(long)": 4,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void commitAsync()": 1,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void close()": 2,
        "org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable:void run()": 2,
        "org.apache.kafka.clients.NetworkClientUtils:boolean awaitReady(org.apache.kafka.clients.KafkaClient,org.apache.kafka.common.Node,org.apache.kafka.common.utils.Time,long)": 1,
        "org.apache.kafka.clients.NetworkClientUtils:org.apache.kafka.clients.ClientResponse sendAndReceive(org.apache.kafka.clients.KafkaClient,org.apache.kafka.clients.ClientRequest,org.apache.kafka.common.utils.Time)": 1
    },
    "org.apache.wicket:wicket-core:8.11.0": {
        "org.apache.wicket.model.AbstractPropertyModel:java.lang.Object getObject()": 52,
        "org.apache.wicket.model.LoadableDetachableModel:java.lang.Object getObject()": 61,
        "org.apache.wicket.model.ChainingModel:java.lang.Object getObject()": 1,
        "org.apache.wicket.Component:java.lang.Object getDefaultModelObject()": 3,
        "org.apache.wicket.Component:void configure()": 1,
        "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(org.apache.wicket.core.request.handler.IPageProvider,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)": 1,
        "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler mapExpectedExceptions(java.lang.Exception,org.apache.wicket.Application)": 1
    },
    "com.alibaba:fastjson:1.2.49": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 15,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 26,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 28,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 11,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONArray getJSONArray(int)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 8,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 5,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 76,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 18,
        "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)": 4,
        "com.alibaba.fastjson.JSONArray:java.math.BigDecimal getBigDecimal(int)": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 10,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 8,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 2,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 8
    },
    "commons-fileupload:commons-fileupload:1.4": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 4
    },
    "org.apache.ant:ant:1.8.3": {
        "org.apache.tools.ant.ProjectHelper:void configureProject(org.apache.tools.ant.Project,java.io.File)": 1,
        "org.apache.tools.ant.taskdefs.Definer:void execute()": 1
    },
    "org.codehaus.plexus:plexus-utils:3.0.10": {
        "org.codehaus.plexus.util.cli.Commandline:void <init>()": 1,
        "org.codehaus.plexus.util.cli.Commandline:java.lang.String[] getShellCommandline()": 1,
        "org.codehaus.plexus.util.cli.CommandLineUtils:int executeCommandLine(org.codehaus.plexus.util.cli.Commandline,org.codehaus.plexus.util.cli.StreamConsumer,org.codehaus.plexus.util.cli.StreamConsumer,int)": 1
    },
    "com.squareup.retrofit2:retrofit:2.3.0": {
        "retrofit2.OkHttpCall:retrofit2.Response execute()": 45,
        "retrofit2.OkHttpCall:void enqueue(retrofit2.Callback)": 26
    },
    "io.netty:netty-all:4.0.56.Final": {
        "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])": 2,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 1,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 1,
        "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setSuccess()": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)": 1
    },
    "commons-beanutils:commons-beanutils:1.9.2": {
        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object remove(java.lang.Object)": 13,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)": 319,
        "org.apache.commons.beanutils.WrapDynaClass$2:int hashCode()": 6,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)": 204,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set entrySet()": 25,
        "org.apache.commons.beanutils.WrapDynaClass$2:int size()": 17,
        "org.apache.commons.beanutils.WrapDynaClass$2:boolean isEmpty()": 3,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Collection values()": 4,
        "org.apache.commons.beanutils.BeanUtils:java.lang.Object cloneBean(java.lang.Object)": 2,
        "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsKey(java.lang.Object)": 26,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set keySet()": 20,
        "org.apache.commons.beanutils.BeanUtils:void populate(java.lang.Object,java.util.Map)": 4,
        "org.apache.commons.beanutils.PropertyUtils:java.lang.Object getProperty(java.lang.Object,java.lang.String)": 6,
        "org.apache.commons.beanutils.PropertyUtils:java.beans.PropertyDescriptor[] getPropertyDescriptors(java.lang.Class)": 1,
        "org.apache.commons.beanutils.WrapDynaClass$2:void clear()": 6,
        "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)": 10,
        "org.apache.commons.beanutils.ConvertUtils:void register(org.apache.commons.beanutils.Converter,java.lang.Class)": 3,
        "org.apache.commons.beanutils.BeanUtilsBean:org.apache.commons.beanutils.BeanUtilsBean getInstance()": 1,
        "org.apache.commons.beanutils.BeanUtils:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)": 6,
        "org.apache.commons.beanutils.BeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)": 101,
        "org.apache.commons.beanutils.BeanMap:java.lang.Object clone()": 5,
        "org.apache.commons.beanutils.BeanUtils:void copyProperty(java.lang.Object,java.lang.String,java.lang.Object)": 2,
        "org.apache.commons.beanutils.ConvertUtils:java.lang.Object convert(java.lang.Object,java.lang.Class)": 2,
        "org.apache.commons.beanutils.BeanUtils:void copyProperties(java.lang.Object,java.lang.Object)": 1,
        "org.apache.commons.beanutils.PropertyUtils:void copyProperties(java.lang.Object,java.lang.Object)": 1
    },
    "org.apache.zookeeper:zookeeper:3.4.13": {
        "org.apache.zookeeper.server.quorum.CommitProcessor:void run()": 1,
        "org.apache.zookeeper.server.PrepRequestProcessor:void run()": 1,
        "org.apache.zookeeper.server.quorum.QuorumPeer:void run()": 1,
        "org.apache.zookeeper.server.SyncRequestProcessor:void run()": 1
    },
    "org.dom4j:dom4j:2.0.0-RC1": {
        "org.dom4j.tree.DefaultElement:java.lang.Object clone()": 1,
        "org.dom4j.tree.DefaultDocument:java.lang.Object clone()": 1
    },
    "org.apache.httpcomponents:httpclient:4.3.3": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 4
    },
    "io.netty:netty-all:4.1.17.Final": {
        "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()": 3,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()": 3,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 11,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 6,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int)": 5,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 10,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()": 10,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 11,
        "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 8,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 11,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 11,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 11,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 5,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 5,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture write(java.lang.Object)": 8,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()": 2,
        "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()": 2,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setSuccess()": 3,
        "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setSuccess()": 3,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setSuccess()": 3,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable)": 1,
        "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)": 1,
        "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable)": 1,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 8,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)": 1,
        "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelHandler remove(java.lang.Class)": 1,
        "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])": 24,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 3,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 3,
        "io.netty.util.concurrent.ScheduledFutureTask:void run()": 1,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()": 1,
        "io.netty.channel.ChannelOutboundBuffer$3:void run()": 1,
        "io.netty.channel.ChannelOutboundBuffer$2:void run()": 1,
        "io.netty.util.concurrent.DefaultPromise$1:void run()": 1,
        "io.netty.util.concurrent.DefaultPromise$2:void run()": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()": 1,
        "io.netty.bootstrap.Bootstrap$3:void run()": 1,
        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()": 1,
        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()": 1,
        "io.netty.handler.codec.compression.JdkZlibEncoder$3:void run()": 1,
        "io.netty.handler.codec.compression.JdkZlibEncoder$1:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$3:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$4:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$2:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$7:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$8:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$5:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$6:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$9:void run()": 1,
        "io.netty.handler.codec.compression.JZlibEncoder$1:void run()": 1,
        "io.netty.handler.codec.compression.JZlibEncoder$3:void run()": 1,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()": 1,
        "io.netty.handler.ssl.SslHandler$5:void run()": 1,
        "io.netty.handler.ssl.SslHandler$1:void run()": 1,
        "io.netty.handler.ssl.SslHandler$3:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()": 1,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 3,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 1,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": 2,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": 1
    },
    "org.apache.ant:ant:1.9.3": {
        "org.apache.tools.ant.types.resources.AbstractResourceCollectionWrapper:java.lang.String toString()": 2,
        "org.apache.tools.ant.types.resources.URLResource:java.lang.String toString()": 2,
        "org.apache.tools.ant.types.Resource:java.lang.String toString()": 2,
        "org.apache.tools.ant.types.Path:java.lang.String toString()": 2,
        "org.apache.tools.ant.types.resources.FileResource:java.lang.String toString()": 2,
        "org.apache.tools.ant.types.resources.BaseResourceCollectionContainer:java.lang.String toString()": 2,
        "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()": 2,
        "org.apache.tools.ant.types.CommandlineJava:java.lang.String toString()": 2,
        "org.apache.tools.ant.types.resources.Restrict:java.lang.String toString()": 2,
        "org.apache.tools.ant.taskdefs.Java:int executeJava()": 1
    },
    "org.apache.commons:commons-compress:1.10": {
        "org.apache.commons.compress.archivers.jar.JarArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 1
    },
    "com.alibaba:fastjson:1.2.56": {
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 29,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 27,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 10,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 3,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 4,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "org.apache.poi:poi-ooxml:3.10-FINAL": {
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()": 3,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(int)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()": 1,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)": 1,
        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)": 1
    },
    "org.apache.shiro:shiro-core:1.3.2": {
        "org.apache.shiro.crypto.JcaCipherService:org.apache.shiro.util.ByteSource encrypt(byte[],byte[])": 2,
        "org.apache.shiro.crypto.JcaCipherService:org.apache.shiro.util.ByteSource decrypt(byte[],byte[])": 1,
        "org.apache.shiro.crypto.AesCipherService:void <init>()": 1
    },
    "edu.stanford.nlp:stanford-corenlp:3.3.0": {
        "edu.stanford.nlp.trees.CompositeTreebank$CompositeTreebankIterator:edu.stanford.nlp.trees.Tree next()": 3,
        "edu.stanford.nlp.trees.GrammaticalStructure$TreeBankGrammaticalStructureWrapper$GsIterator:edu.stanford.nlp.trees.GrammaticalStructure next()": 3,
        "edu.stanford.nlp.trees.TransformingTreebank$TransformingTreebankIterator:edu.stanford.nlp.trees.Tree next()": 3,
        "edu.stanford.nlp.trees.DiskTreebank$DiskTreebankIterator:edu.stanford.nlp.trees.Tree next()": 3,
        "edu.stanford.nlp.trees.GrammaticalStructure$LazyLoadTreesByParsing$1:edu.stanford.nlp.trees.Tree next()": 3
    },
    "com.alibaba:fastjson:1.2.43": {
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 9,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 9,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 3
    },
    "org.mongodb:mongo-java-driver:3.11.0": {
        "com.mongodb.client.internal.MongoCollectionImpl:void insertMany(java.util.List)": 1,
        "com.mongodb.operation.QueryBatchCursor:java.util.List next()": 1,
        "com.mongodb.operation.QueryBatchCursor:boolean hasNext()": 1,
        "com.mongodb.client.internal.MongoChangeStreamCursorImpl:java.lang.Object next()": 1,
        "com.mongodb.client.internal.MongoChangeStreamCursorImpl:boolean hasNext()": 1,
        "com.mongodb.operation.ChangeStreamBatchCursor:java.util.List next()": 1,
        "com.mongodb.operation.ChangeStreamBatchCursor:boolean hasNext()": 1,
        "com.mongodb.client.internal.MongoMappingCursor:java.lang.Object next()": 1,
        "com.mongodb.client.internal.MongoMappingCursor:boolean hasNext()": 1,
        "com.mongodb.operation.ListCollectionsOperation$ProjectingBatchCursor:java.util.List next()": 1,
        "com.mongodb.operation.ListCollectionsOperation$ProjectingBatchCursor:boolean hasNext()": 1
    },
    "commons-beanutils:commons-beanutils:1.9.1": {
        "org.apache.commons.beanutils.BeanUtilsBean:void copyProperties(java.lang.Object,java.lang.Object)": 1,
        "org.apache.commons.beanutils.BeanUtils:void copyProperties(java.lang.Object,java.lang.Object)": 3,
        "org.apache.commons.beanutils.BeanUtilsBean:void <init>()": 1,
        "org.apache.commons.beanutils.BeanUtilsBean:void copyProperty(java.lang.Object,java.lang.String,java.lang.Object)": 1,
        "org.apache.commons.beanutils.BeanUtils:java.lang.Object cloneBean(java.lang.Object)": 1,
        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set entrySet()": 1,
        "org.apache.commons.beanutils.BeanUtils:void populate(java.lang.Object,java.util.Map)": 1
    },
    "org.apache.poi:poi-ooxml:4.0.1": {
        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)": 9,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)": 13,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)": 15,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.util.Date)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)": 3,
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()": 5,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell getCell(int)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()": 16
    },
    "org.hibernate:hibernate-core:4.3.10.Final": {
        "org.hibernate.internal.CollectionFilterImpl:java.util.List list()": 2,
        "org.hibernate.internal.SessionImpl:org.hibernate.Query createQuery(java.lang.String)": 2,
        "org.hibernate.internal.CriteriaImpl:java.util.List list()": 2,
        "org.hibernate.internal.CriteriaImpl$Subcriteria:java.util.List list()": 2,
        "org.hibernate.internal.CriteriaImpl:org.hibernate.ScrollableResults scroll()": 1,
        "org.hibernate.internal.CriteriaImpl$Subcriteria:org.hibernate.ScrollableResults scroll()": 1,
        "org.hibernate.internal.QueryImpl:int executeUpdate()": 1,
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory(org.hibernate.service.ServiceRegistry)": 2
    },
    "com.alibaba:fastjson:1.2.51": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 26,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 6,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 41,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 41,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 4,
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 12,
        "com.alibaba.fastjson.JSONPath:boolean set(java.lang.Object,java.lang.String,java.lang.Object)": 6,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 10,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 2,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 2
    },
    "com.alibaba:fastjson:1.2.68": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 18,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 97,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 52,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 8,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 10,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 4,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 8,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 10
    },
    "org.apache.httpcomponents:httpclient:4.5.5": {
        "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)": 1,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 21,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 5,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)": 2,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 46,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)": 2,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)": 2,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)": 2
    },
    "io.netty:netty:3.6.5.Final": {
        "org.jboss.netty.handler.codec.http.CookieDecoder:java.util.Set decode(java.lang.String)": 2
    },
    "com.thoughtworks.xstream:xstream:1.4.9": {
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])": 2,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:long readLong()": 2,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()": 2,
        "com.thoughtworks.xstream.XStream:void <init>()": 8,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 9,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 13,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File)": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)": 1,
        "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)": 2,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1
    },
    "org.apache.commons:commons-compress:1.18": {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)": 2
    },
    "org.apache.httpcomponents:httpclient:4.5": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 39,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 2,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 10
    },
    "org.apache.httpcomponents:httpclient:4.4.1": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 4,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 7
    },
    "com.alibaba:fastjson:1.2.76": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 29,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 37,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 39,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 14,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 22,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 14,
        "com.alibaba.fastjson.JSONObject:java.lang.Object toJavaObject(java.lang.Class)": 7,
        "com.alibaba.fastjson.JSONPath:java.lang.String toJSONString()": 1,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 7,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 14,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 4,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 33,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 2,
        "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)": 5
    },
    "io.netty:netty-all:4.1.10.Final": {
        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 3,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 10,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1
    },
    "org.apache.httpcomponents:httpclient:4.2.5": {
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 21,
        "org.apache.http.impl.client.DecompressingHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 18,
        "org.apache.http.impl.client.DecompressingHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 1,
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 1,
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)": 1,
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)": 1,
        "org.apache.http.impl.client.DecompressingHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 1,
        "org.apache.http.impl.client.AbstractHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 1,
        "org.apache.http.impl.client.DecompressingHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)": 1,
        "org.apache.http.impl.client.AbstractHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)": 1,
        "org.apache.http.impl.client.AbstractHttpClient:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)": 1,
        "org.apache.http.impl.client.AbstractHttpClient:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)": 1,
        "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)": 2
    },
    "io.netty:netty-all:4.1.12.Final": {
        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)": 8,
        "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()": 1,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()": 1,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": 6,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 7,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelUnregistered(io.netty.channel.ChannelHandlerContext)": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.util.concurrent.ScheduledFutureTask:boolean cancel(boolean)": 3,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 4,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 3,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelRegistered(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 3,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()": 1,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind()": 1
    },
    "org.hibernate:hibernate-core:3.3.2.GA": {
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()": 1,
        "org.hibernate.impl.CollectionFilterImpl:java.util.List list()": 2,
        "org.hibernate.impl.SessionImpl:org.hibernate.Query createQuery(java.lang.String)": 2
    },
    "org.apache.httpcomponents:httpclient:4.1.1": {
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 4
    },
    "org.apache.activemq:activemq-client:5.8.0": {
        "org.apache.activemq.ActiveMQMessageConsumer:void close()": 8,
        "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 13,
        "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String)": 1
    },
    "org.apache.activemq:activemq-broker:5.8.0": {
        "org.apache.activemq.broker.BrokerService:void start()": 2
    },
    "org.apache.httpcomponents:httpclient:4.5.10": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 31,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 1,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 5
    },
    "org.apache.ant:ant:1.8.2": {
        "org.apache.tools.ant.types.resources.PropertyResource:boolean equals(java.lang.Object)": 1,
        "org.apache.tools.ant.types.resources.AbstractResourceCollectionWrapper:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.URLResource:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.Path:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.FileResource:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.BaseResourceCollectionContainer:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.Restrict:java.lang.String toString()": 1
    },
    "org.apache.httpcomponents:httpclient:4.5.1": {
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 1,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 5,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 3,
        "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)": 1
    },
    "org.apache.hadoop:hadoop-common:2.6.0": {
        "org.apache.hadoop.fs.FileUtil:void unTar(java.io.File,java.io.File)": 1
    },
    "org.apache.hadoop:hadoop-mapreduce-client-core:2.6.0": {
        "org.apache.hadoop.mapreduce.task.ReduceContextImpl$ValueIterator:java.lang.Object next()": 57,
        "org.apache.hadoop.mapreduce.lib.reduce.WrappedReducer$Context:boolean nextKey()": 1
    },
    "com.alibaba:fastjson:1.2.61": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 12,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 15,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 14,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1
    },
    "com.alibaba:fastjson:1.2.75": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 30,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 111,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 104,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 18,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 42,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 9,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.serializer.JSONSerializer:void write(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 3,
        "com.alibaba.fastjson.parser.DefaultJSONParser:java.lang.Object parseObject(java.lang.reflect.Type,java.lang.Object)": 2,
        "com.alibaba.fastjson.serializer.ReferenceCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.AppendableSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.parser.deserializer.OptionalCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.ObjectArrayCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.CollectionCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.JodaCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.ToStringSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.JavaBeanSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.JSONSerializableSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.DateCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.CalendarCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.ListSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.ArraySerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.JSONAwareSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.MiscCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.AnnotationSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.EnumSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.EnumerationSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.JSONObjectCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.GuavaCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.MapSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)": 5,
        "com.alibaba.fastjson.serializer.SerializeFilterable:java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)": 4,
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializeFilter[],com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 5,
        "com.alibaba.fastjson.JSONObject:java.lang.Object toJavaObject(java.lang.Class)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1
    },
    "com.alibaba:fastjson:1.2.46": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 12,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 3,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(java.lang.Class)": 4
    },
    "io.netty:netty-all:4.0.35.Final": {
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 1
    },
    "io.netty:netty-all:4.1.13.Final": {
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 7,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)": 6,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 4,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 5,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 5,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)": 3,
        "io.netty.util.concurrent.ScheduledFutureTask:boolean cancel(boolean)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelActive()": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)": 1,
        "io.netty.channel.DefaultChannelPipeline$3:void run()": 3,
        "io.netty.channel.DefaultChannelPipeline$4:void run()": 3,
        "io.netty.channel.DefaultChannelPipeline$2:void run()": 3,
        "io.netty.channel.DefaultChannelPipeline$7:void run()": 3,
        "io.netty.channel.DefaultChannelPipeline$8:void run()": 3,
        "io.netty.channel.DefaultChannelPipeline$5:void run()": 3,
        "io.netty.channel.DefaultChannelPipeline$6:void run()": 3,
        "io.netty.channel.DefaultChannelPipeline$9:void run()": 3,
        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()": 3,
        "io.netty.util.concurrent.ScheduledFutureTask:void run()": 3,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()": 3,
        "io.netty.channel.ChannelOutboundBuffer$3:void run()": 3,
        "io.netty.channel.ChannelOutboundBuffer$2:void run()": 3,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()": 3,
        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()": 3,
        "io.netty.util.concurrent.DefaultPromise$1:void run()": 3,
        "io.netty.util.concurrent.DefaultPromise$2:void run()": 3,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()": 3,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()": 4
    },
    "org.apache.httpcomponents:httpclient:4.5.8": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 10,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 2
    },
    "io.netty:netty-all:4.0.24.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)": 4,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 8,
        "io.netty.channel.group.DefaultChannelGroup:io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 8,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)": 1,
        "io.netty.channel.group.DefaultChannelGroup:io.netty.channel.group.ChannelGroupFuture close()": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 2,
        "io.netty.util.concurrent.DefaultPromise:boolean cancel(boolean)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2
    },
    "org.apache.poi:poi-ooxml:3.16": {
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()": 7,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)": 2,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)": 2,
        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)": 2
    },
    "org.apache.shiro:shiro-web:1.3.2": {
        "org.apache.shiro.web.filter.authc.FormAuthenticationFilter:boolean onAccessDenied(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": 1,
        "org.apache.shiro.web.filter.authc.AuthenticatingFilter:boolean isAccessAllowed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)": 1
    },
    "io.netty:netty-all:4.1.25.Final": {
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 7,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 3,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 7,
        "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setSuccess()": 1,
        "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setSuccess()": 1,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setSuccess()": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 3,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable)": 1,
        "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)": 1,
        "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable)": 1,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)": 1,
        "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])": 2,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 5,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 3,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 1,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()": 1,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)": 4,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelActive()": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelInactive()": 1,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 1,
        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 3,
        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelRegistered(io.netty.channel.ChannelHandlerContext)": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelUnregistered(io.netty.channel.ChannelHandlerContext)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind()": 1
    },
    "io.netty:netty-all:4.0.41.Final": {
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 4,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 13,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2
    },
    "org.apache.kafka:kafka-clients:2.6.0": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 1
    },
    "io.netty:netty:3.9.1.Final": {
        "org.jboss.netty.handler.codec.http.CookieDecoder:java.util.Set decode(java.lang.String)": 1
    },
    "org.hibernate:hibernate-core:4.3.1.Final": {
        "org.hibernate.internal.CollectionFilterImpl:java.util.List list()": 6,
        "org.hibernate.internal.SessionImpl:org.hibernate.Query createQuery(java.lang.String)": 7,
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory(org.hibernate.service.ServiceRegistry)": 2
    },
    "org.apache.httpcomponents:httpclient:4.2.3": {
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 13,
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 1
    },
    "org.mongodb:mongo-java-driver:3.12.7": {
        "com.mongodb.operation.QueryBatchCursor:java.util.List next()": 55,
        "com.mongodb.client.internal.MongoChangeStreamCursorImpl:java.lang.Object next()": 61,
        "com.mongodb.DBCursor:com.mongodb.DBObject next()": 33,
        "com.mongodb.client.internal.MongoBatchCursorAdapter:java.lang.Object next()": 33,
        "com.mongodb.operation.ChangeStreamBatchCursor:java.util.List next()": 55,
        "com.mongodb.client.internal.MongoMappingCursor:java.lang.Object next()": 61,
        "com.mongodb.MongoCursorAdapter:com.mongodb.DBObject next()": 33,
        "com.mongodb.operation.ListCollectionsOperation$ProjectingBatchCursor:java.util.List next()": 55,
        "com.mongodb.operation.QueryBatchCursor:boolean hasNext()": 64,
        "com.mongodb.client.internal.MongoChangeStreamCursorImpl:boolean hasNext()": 70,
        "com.mongodb.DBCursor:boolean hasNext()": 42,
        "com.mongodb.client.internal.MongoBatchCursorAdapter:boolean hasNext()": 42,
        "com.mongodb.operation.ChangeStreamBatchCursor:boolean hasNext()": 64,
        "com.mongodb.client.internal.MongoMappingCursor:boolean hasNext()": 70,
        "com.mongodb.MongoCursorAdapter:boolean hasNext()": 42,
        "com.mongodb.operation.ListCollectionsOperation$ProjectingBatchCursor:boolean hasNext()": 64,
        "com.mongodb.Mongo:java.util.List getDatabaseNames()": 1,
        "com.mongodb.client.internal.MongoCollectionImpl:void insertOne(java.lang.Object)": 2,
        "com.mongodb.client.internal.MongoIterableImpl:com.mongodb.client.MongoCursor iterator()": 32,
        "com.mongodb.client.internal.MongoCollectionImpl:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson)": 2,
        "com.mongodb.client.internal.ChangeStreamIterableImpl$1:com.mongodb.client.MongoCursor iterator()": 26,
        "com.mongodb.client.internal.MappingIterable:com.mongodb.client.MongoCursor iterator()": 26,
        "com.mongodb.client.internal.ChangeStreamIterableImpl:com.mongodb.client.MongoCursor iterator()": 26
    },
    "org.apache.commons:commons-compress:1.15": {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)": 6,
        "org.apache.commons.compress.archivers.jar.JarArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.zip.ZipArchiveEntry getNextZipEntry()": 3,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int read(byte[],int,int)": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:long skip(long)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.38": {
        "org.apache.catalina.connector.CoyoteOutputStream:void close()": 1,
        "org.apache.catalina.connector.CoyoteOutputStream:void flush()": 1,
        "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])": 1,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()": 1,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()": 1,
        "org.apache.catalina.webresources.DirResourceSet:void <init>(org.apache.catalina.WebResourceRoot,java.lang.String,java.lang.String,java.lang.String)": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": 1,
        "org.apache.catalina.startup.Tomcat:void start()": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)": 1
    },
    "com.alibaba:fastjson:1.2.66": {
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 2
    },
    "com.thoughtworks.xstream:xstream:1.3.1": {
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 4,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 5,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:long readLong()": 10,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:short readShort()": 9,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()": 13,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:float readFloat()": 7,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:double readDouble()": 7,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:char readChar()": 7,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:byte readByte()": 8,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:boolean readBoolean()": 9,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.String readUTF()": 7,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[])": 4,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[],int,int)": 2,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedShort()": 2,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])": 2,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read()": 3,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedByte()": 1,
        "com.thoughtworks.xstream.XStream:void <init>()": 3,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.16": {
        "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)": 1,
        "org.apache.pdfbox.pdfparser.PDFParser:void parse()": 1,
        "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)": 1,
        "org.apache.pdfbox.io.RandomAccessInputStream:int read(byte[],int,int)": 4,
        "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)": 1
    },
    "com.alibaba:fastjson:1.2.59": {
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 4,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 4,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 9,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 22,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 14,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 3,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 4,
        "com.alibaba.fastjson.JSONObject:java.lang.Double getDouble(java.lang.String)": 2,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 2,
        "com.alibaba.fastjson.JSONObject:java.lang.Float getFloat(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1
    },
    "com.alibaba:fastjson:1.2.41": {
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 7,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 1,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 5,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 4
    },
    "org.springframework.security:spring-security-core:4.0.0.RELEASE": {
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:java.lang.String encode(java.lang.CharSequence)": 1
    },
    "org.apache.httpcomponents:httpclient:4.2.1": {
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 15
    },
    "org.apache.httpcomponents:httpclient:4.3.5": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 20,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 1
    },
    "com.alibaba:fastjson:1.2.44": {
        "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)": 25,
        "com.alibaba.fastjson.JSONArray:java.lang.Double getDouble(int)": 20,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 24,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 11,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 5,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 7,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 5,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 16,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONArray getJSONArray(int)": 9,
        "com.alibaba.fastjson.JSONArray:java.util.List toJavaList(java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.Double getDouble(java.lang.String)": 3,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 15,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 24,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 26,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 24,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 2
    },
    "org.apache.ant:ant:1.10.6": {
        "org.apache.tools.zip.ZipFile:void <init>(java.io.File,java.lang.String)": 1
    },
    "org.apache.ant:ant:1.10.1": {
        "org.apache.tools.ant.types.resources.PropertyResource:boolean equals(java.lang.Object)": 39,
        "org.apache.tools.ant.types.resources.MappedResource:boolean equals(java.lang.Object)": 39,
        "org.apache.tools.ant.types.resources.AbstractResourceCollectionWrapper:java.lang.String toString()": 36,
        "org.apache.tools.ant.types.resources.FileResource:java.lang.String toString()": 36,
        "org.apache.tools.ant.types.resources.BaseResourceCollectionContainer:java.lang.String toString()": 36,
        "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()": 36,
        "org.apache.tools.ant.types.resources.Restrict:java.lang.String toString()": 36,
        "org.apache.tools.ant.types.resources.URLResource:java.lang.String toString()": 36,
        "org.apache.tools.ant.types.resources.MappedResource:java.lang.String toString()": 36,
        "org.apache.tools.ant.types.Path:java.lang.String toString()": 36,
        "org.apache.tools.ant.types.resources.FileResource:int compareTo(java.lang.Object)": 2,
        "org.apache.tools.ant.types.Resource:int compareTo(java.lang.Object)": 2,
        "org.apache.tools.ant.types.resources.ResourceDecorator:int compareTo(java.lang.Object)": 2
    },
    "io.undertow:undertow-core:2.0.26.Final": {
        "io.undertow.io.UndertowInputStream:void close()": 2,
        "io.undertow.Undertow:void start()": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.23": {
        "org.apache.catalina.connector.CoyoteWriter:void write(java.lang.String)": 64,
        "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession(boolean)": 18,
        "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)": 18,
        "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": 4,
        "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": 3,
        "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": 4,
        "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()": 5,
        "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession()": 5,
        "org.apache.catalina.connector.ResponseFacade:void sendRedirect(java.lang.String)": 8,
        "org.apache.catalina.connector.Response:void sendRedirect(java.lang.String)": 8,
        "org.apache.catalina.webresources.DirResourceSet:void <init>(org.apache.catalina.WebResourceRoot,java.lang.String,java.lang.String,java.lang.String)": 3,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": 3,
        "org.apache.catalina.startup.Tomcat:void start()": 3,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)": 3,
        "org.apache.catalina.connector.CoyoteOutputStream:void close()": 1,
        "org.apache.catalina.connector.CoyoteOutputStream:void flush()": 1,
        "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])": 1,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()": 1,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()": 1,
        "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": 1,
        "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": 8,
        "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)": 8,
        "org.apache.catalina.connector.Request:java.lang.String getContextPath()": 1,
        "org.apache.catalina.connector.RequestFacade:java.lang.String getContextPath()": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:9.0.54": {
        "org.apache.catalina.connector.CoyoteWriter:void print(java.lang.String)": 3,
        "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": 9,
        "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)": 9,
        "org.apache.catalina.connector.CoyoteWriter:void write(java.lang.String)": 4
    },
    "org.apache.poi:poi-ooxml:3.17": {
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()": 85,
        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)": 20,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)": 65,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)": 16,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)": 15,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)": 4,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.util.Calendar)": 4,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.util.Date)": 4,
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()": 10,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell getCell(int)": 14,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(org.apache.poi.ss.usermodel.CellType)": 9,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int,org.apache.poi.ss.usermodel.CellType)": 2,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(int)": 3
    },
    "org.apache.kafka:kafka-clients:2.3.0": {
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 1,
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 2,
        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)": 3,
        "org.apache.kafka.common.security.token.delegation.DelegationToken:boolean equals(java.lang.Object)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:9.0.0.M6": {
        "org.apache.catalina.connector.CoyoteWriter:void write(java.lang.String)": 10,
        "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)": 20,
        "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": 20,
        "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)": 20,
        "org.apache.catalina.core.ApplicationContextFacade:java.lang.String getRealPath(java.lang.String)": 4,
        "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext:java.lang.String getRealPath(java.lang.String)": 4,
        "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)": 2,
        "org.apache.catalina.core.ApplicationHttpRequest:java.util.Enumeration getParameterNames()": 2,
        "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)": 2,
        "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()": 2,
        "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)": 2,
        "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()": 2,
        "org.apache.catalina.core.ApplicationContextFacade:java.io.InputStream getResourceAsStream(java.lang.String)": 2,
        "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext:java.io.InputStream getResourceAsStream(java.lang.String)": 2,
        "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession(boolean)": 3,
        "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)": 3,
        "org.apache.catalina.connector.ResponseFacade:void sendRedirect(java.lang.String)": 3,
        "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectURL(java.lang.String)": 3,
        "org.apache.catalina.connector.Response:void sendRedirect(java.lang.String)": 3,
        "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)": 3,
        "org.apache.catalina.connector.CoyoteWriter:void println()": 4,
        "org.apache.catalina.connector.CoyoteWriter:void println(java.lang.String)": 2,
        "org.apache.catalina.webresources.DirResourceSet:void <init>(org.apache.catalina.WebResourceRoot,java.lang.String,java.lang.String,java.lang.String)": 2,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": 2,
        "org.apache.catalina.startup.Tomcat:void start()": 2,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)": 2,
        "org.apache.catalina.connector.Request:java.lang.String getContextPath()": 1,
        "org.apache.catalina.connector.RequestFacade:java.lang.String getContextPath()": 1
    },
    "org.hibernate:hibernate-core:4.3.5.Final": {
        "org.hibernate.internal.CollectionFilterImpl:java.util.List list()": 5,
        "org.hibernate.internal.SessionImpl:org.hibernate.Query createQuery(java.lang.String)": 6,
        "org.hibernate.internal.CriteriaImpl:java.util.List list()": 1,
        "org.hibernate.internal.CriteriaImpl$Subcriteria:java.util.List list()": 1,
        "org.hibernate.internal.QueryImpl:int executeUpdate()": 1,
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory(org.hibernate.service.ServiceRegistry)": 2
    },
    "org.springframework.security:spring-security-core:5.0.0.RELEASE": {
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:java.lang.String encode(java.lang.CharSequence)": 1,
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:boolean matches(java.lang.CharSequence,java.lang.String)": 1
    },
    "org.apache.httpcomponents:httpclient:4.5.4": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 8
    },
    "com.alibaba:fastjson:1.2.73": {
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 13,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 21,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 10,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 43,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 43,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 12,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 4,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSONObject:java.lang.Object toJavaObject(java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 5,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "io.netty:netty-all:4.0.33.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelActive()": 4,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 7,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 5,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 8,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelUnregistered(io.netty.channel.ChannelHandlerContext)": 4,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)": 3,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()": 5,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture disconnect()": 3,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 6,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 8,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)": 3,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)": 1
    },
    "org.apache.kafka:kafka-clients:1.1.0": {
        "org.apache.kafka.clients.consumer.KafkaConsumer:org.apache.kafka.clients.consumer.ConsumerRecords poll(long)": 4,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void subscribe(java.util.Collection)": 2,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 4,
        "org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread:void run()": 8,
        "org.apache.kafka.clients.consumer.KafkaConsumer:long position(org.apache.kafka.common.TopicPartition)": 2,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void assign(java.util.Collection)": 3,
        "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.Map endOffsets(java.util.Collection)": 2,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void close()": 2,
        "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.List partitionsFor(java.lang.String)": 1,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void commitAsync()": 1
    },
    "commons-fileupload:commons-fileupload:1.2.1": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 2
    },
    "org.codehaus.plexus:plexus-utils:1.5.4": {
        "org.codehaus.plexus.util.cli.Commandline:void <init>()": 1,
        "org.codehaus.plexus.util.cli.CommandLineUtils:int executeCommandLine(org.codehaus.plexus.util.cli.Commandline,java.io.InputStream,org.codehaus.plexus.util.cli.StreamConsumer,org.codehaus.plexus.util.cli.StreamConsumer)": 1
    },
    "xerces:xercesImpl:2.9.1": {
        "org.apache.xerces.parsers.AbstractSAXParser:void parse(org.xml.sax.InputSource)": 6,
        "org.apache.xerces.util.XMLAttributesImpl:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)": 1,
        "org.apache.xerces.parsers.AbstractSAXParser:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": 1,
        "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": 1,
        "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": 1,
        "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": 1
    },
    "org.apache.shiro:shiro-web:1.2.4": {
        "org.apache.shiro.web.util.WebUtils:java.lang.String getPathWithinApplication(javax.servlet.http.HttpServletRequest)": 1
    },
    "org.apache.ant:ant:1.9.0": {
        "org.apache.tools.ant.types.resources.AbstractResourceCollectionWrapper:java.lang.String toString()": 13,
        "org.apache.tools.ant.types.resources.URLResource:java.lang.String toString()": 13,
        "org.apache.tools.ant.types.Resource:java.lang.String toString()": 13,
        "org.apache.tools.ant.types.Path:java.lang.String toString()": 13,
        "org.apache.tools.ant.types.resources.FileResource:java.lang.String toString()": 13,
        "org.apache.tools.ant.types.resources.BaseResourceCollectionContainer:java.lang.String toString()": 13,
        "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()": 13,
        "org.apache.tools.ant.types.resources.Restrict:java.lang.String toString()": 13
    },
    "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0": {
        "org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG:void run()": 1
    },
    "com.thoughtworks.xstream:xstream:1.4.8": {
        "com.thoughtworks.xstream.XStream:void <init>()": 1,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 1
    },
    "org.springframework:spring-core:3.1.1.RELEASE": {
        "org.springframework.core.io.ClassPathResource:void <init>(java.lang.String,java.lang.ClassLoader)": 1,
        "org.springframework.core.io.support.PathMatchingResourcePatternResolver:org.springframework.core.io.Resource[] getResources(java.lang.String)": 1
    },
    "io.netty:netty-all:4.1.6.Final": {
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 35,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 33,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 35,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 7,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)": 6,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 7,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 4,
        "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 24,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 5,
        "io.netty.channel.ChannelInitializer:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": 4,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 4,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)": 9,
        "io.netty.channel.DefaultChannelPipeline$3:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$4:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$2:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$7:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$8:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$5:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$6:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$9:void run()": 4,
        "io.netty.util.concurrent.ScheduledFutureTask:void run()": 4,
        "io.netty.channel.ChannelOutboundBuffer$3:void run()": 4,
        "io.netty.channel.ChannelOutboundBuffer$2:void run()": 4,
        "io.netty.channel.nio.NioEventLoop$6:void run()": 4,
        "io.netty.util.concurrent.DefaultPromise$1:void run()": 4,
        "io.netty.util.concurrent.DefaultPromise$2:void run()": 4,
        "io.netty.handler.ssl.SslHandler$5:void run()": 2,
        "io.netty.handler.ssl.SslHandler$1:void run()": 2,
        "io.netty.handler.ssl.SslHandler$3:void run()": 2,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()": 4,
        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()": 4,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()": 4,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()": 4,
        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()": 4,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)": 5,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 8,
        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 16,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 4,
        "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()": 1,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 5,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)": 4,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()": 1,
        "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)": 2,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object)": 2,
        "io.netty.channel.DefaultChannelPromise:io.netty.util.concurrent.Promise setSuccess(java.lang.Object)": 2,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable)": 2,
        "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable)": 2,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)": 2,
        "io.netty.bootstrap.Bootstrap$3:void run()": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind()": 2,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.channel.DefaultEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 1
    },
    "com.thoughtworks.xstream:xstream:1.4.15": {
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])": 3,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read()": 2,
        "com.thoughtworks.xstream.XStream:void <init>()": 1
    },
    "org.apache.ant:ant:1.9.15": {
        "org.apache.tools.ant.taskdefs.Property:void execute()": 1,
        "org.apache.tools.ant.types.resources.AbstractResourceCollectionWrapper:java.lang.String toString()": 4,
        "org.apache.tools.ant.types.resources.URLResource:java.lang.String toString()": 4,
        "org.apache.tools.ant.types.resources.MappedResource:java.lang.String toString()": 4,
        "org.apache.tools.ant.types.Path:java.lang.String toString()": 4,
        "org.apache.tools.ant.types.resources.FileResource:java.lang.String toString()": 4,
        "org.apache.tools.ant.types.resources.BaseResourceCollectionContainer:java.lang.String toString()": 4,
        "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()": 4,
        "org.apache.tools.ant.types.resources.Restrict:java.lang.String toString()": 4,
        "org.apache.tools.ant.taskdefs.SubAnt:void execute()": 1,
        "org.apache.tools.ant.Task:void maybeConfigure()": 2,
        "org.apache.tools.ant.ComponentHelper:org.apache.tools.ant.AntTypeDefinition getDefinition(java.lang.String)": 2,
        "org.apache.tools.ant.UnknownElement:void maybeConfigure()": 1
    },
    "com.alibaba:fastjson:1.2.55": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 10,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 10,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 3,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 2,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 2
    },
    "com.thoughtworks.xstream:xstream:1.4.4": {
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1
    },
    "io.netty:netty-all:4.0.28.Final": {
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 6,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 3,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)": 2,
        "io.netty.channel.local.LocalEventLoopGroup:void <init>()": 2
    },
    "org.apache.httpcomponents:httpclient:4.3.2": {
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 1,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 9
    },
    "org.dom4j:dom4j:2.1.0": {
        "org.dom4j.tree.AbstractElement:java.lang.String toString()": 3,
        "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)": 1
    },
    "com.thoughtworks.xstream:xstream:1.4.10": {
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 5,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 2,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": 1,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)": 1,
        "com.thoughtworks.xstream.XStream:void <init>()": 3
    },
    "org.hibernate:hibernate-core:4.3.8.Final": {
        "org.hibernate.internal.SessionImpl:org.hibernate.Query createQuery(java.lang.String)": 41,
        "org.hibernate.internal.CollectionFilterImpl:java.util.List list()": 12,
        "org.hibernate.internal.CriteriaImpl:java.util.List list()": 14,
        "org.hibernate.internal.CriteriaImpl$Subcriteria:java.util.List list()": 14,
        "org.hibernate.internal.QueryImpl:int executeUpdate()": 17
    },
    "org.springframework:spring-web:4.2.0.RELEASE": {
        "org.springframework.web.util.UrlPathHelper:java.lang.String getOriginatingContextPath(javax.servlet.http.HttpServletRequest)": 1,
        "org.springframework.web.util.UrlPathHelper:java.lang.String getOriginatingRequestUri(javax.servlet.http.HttpServletRequest)": 1
    },
    "io.netty:netty-all:4.1.32.Final": {
        "io.netty.channel.group.DefaultChannelGroup:io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 5,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 2
    },
    "org.postgresql:postgresql:42.2.12": {
        "org.postgresql.Driver$ConnectThread:void run()": 1
    },
    "org.apache.activemq:activemq-all:5.14.1": {
        "org.apache.activemq.jms.pool.PooledMessageConsumer:javax.jms.Message receive(long)": 1,
        "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive(long)": 2,
        "org.apache.activemq.jms.pool.PooledProducer:void send(javax.jms.Destination,javax.jms.Message)": 1,
        "org.apache.activemq.ActiveMQMessageProducerSupport:void send(javax.jms.Destination,javax.jms.Message)": 1,
        "org.apache.activemq.jms.pool.PooledSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 2,
        "org.apache.activemq.jms.pool.PooledSession:javax.jms.MessageProducer createProducer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQSession:javax.jms.MessageProducer createProducer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageProducer createProducer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageProducer createProducer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQConnection:javax.jms.Session createSession(boolean,int)": 3,
        "org.apache.activemq.jms.pool.PooledConnection:void start()": 2,
        "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.Connection createConnection()": 3,
        "org.apache.activemq.jms.pool.PooledConnection:void close()": 3,
        "org.apache.activemq.ActiveMQConnection:void close()": 3,
        "org.apache.activemq.ActiveMQQueueSession:void close()": 3,
        "org.apache.activemq.jms.pool.PooledSession:void close()": 3,
        "org.apache.activemq.ActiveMQSession:void close()": 3,
        "org.apache.activemq.ActiveMQTopicSession:void close()": 3,
        "org.apache.activemq.ActiveMQMessageConsumer:void close()": 2,
        "org.apache.activemq.jms.pool.PooledMessageConsumer:void close()": 1,
        "org.apache.activemq.thread.DedicatedTaskRunner$1:void run()": 1,
        "org.apache.activemq.ActiveMQMessageConsumer:void rollback()": 1,
        "org.slf4j.impl.Log4jLoggerAdapter:void warn(java.lang.String,java.lang.Object,java.lang.Object)": 1,
        "org.slf4j.impl.Log4jLoggerAdapter:void info(java.lang.String,java.lang.Object)": 1,
        "org.apache.activemq.jms.pool.PooledConnectionFactory:void start()": 1,
        "org.apache.activemq.jms.pool.PooledConnectionFactory:void stop()": 1,
        "org.slf4j.impl.Log4jLoggerAdapter:void debug(java.lang.String,java.lang.Object,java.lang.Object)": 1,
        "org.apache.activemq.jms.pool.PooledProducer:void send(javax.jms.Message)": 1,
        "org.apache.activemq.ActiveMQMessageProducerSupport:void send(javax.jms.Message)": 1
    },
    "org.apache.activemq:activemq-client:5.14.1": {
        "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 2,
        "org.apache.activemq.ActiveMQMessageConsumer:void close()": 2,
        "org.apache.activemq.ActiveMQMessageConsumer:void rollback()": 1
    },
    "com.thoughtworks.xstream:xstream:1.2.2": {
        "com.thoughtworks.xstream.XStream:void <init>()": 1
    },
    "org.apache.kafka:kafka-clients:2.8.0": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 2,
        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)": 1
    },
    "com.squareup.retrofit2:retrofit:2.4.0": {
        "retrofit2.OkHttpCall:retrofit2.Response execute()": 2
    },
    "org.apache.httpcomponents:httpclient:4.5.9": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 8,
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 2,
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 1
    },
    "org.apache.httpcomponents:httpclient:4.3.1": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 6
    },
    "com.thoughtworks.xstream:xstream:1.4.12": {
        "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class)": 9,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()": 2,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:float readFloat()": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])": 2,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String,java.lang.Object)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)": 3,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)": 1
    },
    "org.apache.zookeeper:zookeeper:3.4.5": {
        "org.apache.zookeeper.server.quorum.CommitProcessor:void run()": 6,
        "org.apache.zookeeper.server.PrepRequestProcessor:void run()": 6,
        "org.apache.zookeeper.server.SyncRequestProcessor:void run()": 6
    },
    "org.apache.tomcat:tomcat-catalina:8.5.40": {
        "org.apache.catalina.core.ContainerBase:void addValve(org.apache.catalina.Valve)": 2,
        "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": 3,
        "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": 3,
        "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": 3,
        "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()": 1,
        "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": 1
    },
    "commons-fileupload:commons-fileupload:1.3.3": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 6,
        "org.apache.commons.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.commons.fileupload.RequestContext)": 2
    },
    "org.apache.ant:ant:1.9.6": {
        "org.apache.tools.ant.types.resources.AbstractResourceCollectionWrapper:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.FileResource:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.BaseResourceCollectionContainer:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.Restrict:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.URLResource:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.MappedResource:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.Path:java.lang.String toString()": 1
    },
    "xerces:xercesImpl:2.8.1": {
        "org.apache.xerces.parsers.DOMParser:void parse(org.xml.sax.InputSource)": 2
    },
    "org.apache.httpcomponents:httpclient:4.1": {
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 3
    },
    "com.squareup.retrofit2:retrofit:2.1.0": {
        "retrofit2.OkHttpCall:retrofit2.Response execute()": 10
    },
    "commons-fileupload:commons-fileupload:1.2.2": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 2
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.51": {
        "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()": 4,
        "org.apache.catalina.connector.CoyoteWriter:void write(java.lang.String)": 2,
        "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": 6,
        "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()": 1
    },
    "com.alibaba:fastjson:1.2.70": {
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 25,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 147,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 11,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 62,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 102,
        "com.alibaba.fastjson.JSONObject:java.lang.Object getObject(java.lang.String,java.lang.Class)": 4,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 36,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 25,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 13,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 24,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 3,
        "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 7,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 3,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String,com.alibaba.fastjson.parser.Feature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 9,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 6,
        "com.alibaba.fastjson.JSONArray:java.lang.Object getObject(int,java.lang.Class)": 5
    },
    "io.vertx:vertx-core:3.8.2": {
        "io.vertx.core.eventbus.impl.MessageImpl:void fail(int,java.lang.String)": 3,
        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)": 15,
        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)": 230,
        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)": 230,
        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)": 230,
        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)": 230
    },
    "org.eclipse.jetty:jetty-server:9.3.9.v20160517": {
        "org.eclipse.jetty.server.handler.ResourceHandler:void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": 1
    },
    "org.apache.httpcomponents:httpclient:4.1.2": {
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 3
    },
    "org.kohsuke:libpam4j:1.8": {
        "org.jvnet.libpam.PAM:org.jvnet.libpam.UnixUser authenticate(java.lang.String,java.lang.String)": 1
    },
    "commons-fileupload:commons-fileupload:1.3.1": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 4,
        "org.apache.commons.fileupload.servlet.ServletFileUpload:org.apache.commons.fileupload.FileItemIterator getItemIterator(javax.servlet.http.HttpServletRequest)": 1
    },
    "org.apache.commons:commons-compress:1.12": {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 1
    },
    "org.apache.tika:tika-core:1.19": {
        "org.apache.tika.Tika:java.lang.String detect(byte[],java.lang.String)": 1,
        "org.apache.tika.Tika:java.lang.String detect(byte[])": 1,
        "org.apache.tika.parser.ParsingReader$ParsingTask:void run()": 17
    },
    "org.apache.httpcomponents:httpclient:4.4": {
        "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": 2
    },
    "io.netty:netty-all:4.1.5.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 9,
        "io.netty.util.concurrent.DefaultPromise:boolean cancel(boolean)": 1,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.InetAddress,int)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 1,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 2
    },
    "org.springframework:spring-core:3.2.3.RELEASE": {
        "org.springframework.core.io.support.PathMatchingResourcePatternResolver:org.springframework.core.io.Resource[] getResources(java.lang.String)": 1
    },
    "org.apache.ant:ant:1.9.7": {
        "org.apache.tools.zip.ZipFile:void <init>(java.lang.String,java.lang.String)": 1,
        "org.apache.tools.zip.ZipFile:void <init>(java.io.File)": 3
    },
    "org.springframework.security:spring-security-core:5.0.7.RELEASE": {
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:java.lang.String encode(java.lang.CharSequence)": 3,
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:boolean matches(java.lang.CharSequence,java.lang.String)": 2
    },
    "io.undertow:undertow-core:2.0.13.Final": {
        "io.undertow.Undertow:void start()": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.2": {
        "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)": 1
    },
    "com.alibaba:fastjson:1.2.67": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 10,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 13,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 7,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 2,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "io.netty:netty-all:4.1.9.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 3,
        "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()": 1,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()": 1,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 3,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 3,
        "io.netty.util.concurrent.ScheduledFutureTask:boolean cancel(boolean)": 2,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 1,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1
    },
    "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.4.4": {
        "com.fasterxml.jackson.dataformat.xml.XmlMapper:void <init>()": 2
    },
    "org.hibernate:hibernate-core:4.2.4.Final": {
        "org.hibernate.internal.CollectionFilterImpl:java.util.List list()": 1,
        "org.hibernate.internal.SessionImpl:org.hibernate.Query createQuery(java.lang.String)": 2,
        "org.hibernate.internal.QueryImpl:int executeUpdate()": 1
    },
    "com.sparkjava:spark-core:2.2": {
        "spark.SparkBase:void staticFileLocation(java.lang.String)": 1
    },
    "org.apache.kafka:kafka-clients:2.7.0": {
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 1,
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 1
    },
    "com.jamesmurty.utils:java-xmlbuilder:1.1": {
        "com.jamesmurty.utils.XMLBuilder:com.jamesmurty.utils.XMLBuilder create(java.lang.String)": 32,
        "com.jamesmurty.utils.XMLBuilder:com.jamesmurty.utils.XMLBuilder parse(org.xml.sax.InputSource)": 1
    },
    "org.apache.kafka:kafka-clients:2.0.0": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 8,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 18,
        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)": 7,
        "org.apache.kafka.common.security.token.delegation.DelegationToken:boolean equals(java.lang.Object)": 1
    },
    "io.undertow:undertow-core:1.4.18.Final": {
        "io.undertow.Undertow:void start()": 1
    },
    "com.alibaba:fastjson:1.2.57": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 20,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString()": 3,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 3,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 3,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 2
    },
    "org.apache.poi:poi-ooxml:3.12": {
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)": 2,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)": 2,
        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)": 2,
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:9.0.46": {
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()": 5,
        "org.apache.catalina.connector.CoyoteOutputStream:void close()": 5,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()": 2,
        "org.apache.catalina.connector.CoyoteOutputStream:void flush()": 2,
        "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])": 5,
        "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()": 6,
        "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": 2,
        "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)": 2,
        "org.apache.catalina.connector.CoyoteReader:boolean ready()": 1,
        "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])": 3,
        "org.apache.catalina.connector.CoyoteInputStream:int read()": 1,
        "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()": 1
    },
    "org.apache.shiro:shiro-core:1.2.4": {
        "org.apache.shiro.crypto.JcaCipherService:org.apache.shiro.util.ByteSource encrypt(byte[],byte[])": 1,
        "org.apache.shiro.crypto.AesCipherService:void <init>()": 1
    },
    "org.springframework.security:spring-security-core:4.1.3.RELEASE": {
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:boolean matches(java.lang.CharSequence,java.lang.String)": 1,
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:java.lang.String encode(java.lang.CharSequence)": 1
    },
    "org.hibernate:hibernate-core:4.3.6.Final": {
        "org.hibernate.internal.CriteriaImpl$Subcriteria:java.util.List list()": 1,
        "org.hibernate.internal.CriteriaImpl:java.util.List list()": 1,
        "org.hibernate.internal.CriteriaImpl:java.lang.Object uniqueResult()": 1,
        "org.hibernate.internal.CriteriaImpl$Subcriteria:java.lang.Object uniqueResult()": 1
    },
    "com.thoughtworks.xstream:xstream:1.4.16": {
        "com.thoughtworks.xstream.XStream:void <init>()": 6,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File)": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read()": 1
    },
    "org.springframework.security:spring-security-core:4.2.4.RELEASE": {
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:java.lang.String encode(java.lang.CharSequence)": 2
    },
    "org.apache.shiro:shiro-core:1.2.3": {
        "org.apache.shiro.crypto.AesCipherService:void <init>()": 2,
        "org.apache.shiro.crypto.JcaCipherService:org.apache.shiro.util.ByteSource decrypt(byte[],byte[])": 1,
        "org.apache.shiro.crypto.JcaCipherService:org.apache.shiro.util.ByteSource encrypt(byte[],byte[])": 1
    },
    "org.apache.httpcomponents:httpclient:4.3.4": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 2
    },
    "org.apache.httpcomponents:httpclient:4.3-beta2": {
        "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 3
    },
    "org.springframework.security:spring-security-core:5.0.8.RELEASE": {
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:java.lang.String encode(java.lang.CharSequence)": 2
    },
    "org.apache.tomcat.embed:tomcat-embed-core:9.0.43": {
        "org.apache.catalina.connector.CoyoteInputStream:int read()": 4,
        "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()": 4,
        "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)": 5,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(byte[],int,int)": 5,
        "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)": 5,
        "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)": 2,
        "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read(byte[],int,int)": 2,
        "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])": 3,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()": 2,
        "org.apache.catalina.connector.CoyoteOutputStream:void flush()": 2,
        "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])": 19,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()": 1,
        "org.apache.catalina.connector.CoyoteOutputStream:void close()": 1,
        "org.apache.catalina.connector.CoyoteInputStream:int available()": 2,
        "org.apache.catalina.connector.CoyoteWriter:void flush()": 1
    },
    "org.apache.kafka:kafka-clients:2.1.1": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 3,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 1
    },
    "org.springframework.security:spring-security-core:5.2.2.RELEASE": {
        "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder:java.lang.String encode(java.lang.CharSequence)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.2": {
        "org.apache.catalina.connector.CoyoteOutputStream:void close()": 1,
        "org.apache.catalina.connector.CoyoteOutputStream:void flush()": 1,
        "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])": 1,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()": 1,
        "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()": 1,
        "org.apache.catalina.webresources.DirResourceSet:void <init>(org.apache.catalina.WebResourceRoot,java.lang.String,java.lang.String,java.lang.String)": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": 1,
        "org.apache.catalina.startup.Tomcat:void start()": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)": 1
    },
    "org.hibernate:hibernate-core:5.2.9.Final": {
        "org.hibernate.internal.CriteriaImpl:java.util.List list()": 1,
        "org.hibernate.internal.CriteriaImpl$Subcriteria:java.util.List list()": 1
    },
    "org.dom4j:dom4j:2.0.0": {
        "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)": 1,
        "org.dom4j.tree.DefaultElement:java.lang.Object clone()": 2,
        "org.dom4j.tree.DefaultDocument:java.lang.Object clone()": 2
    },
    "org.apache.kafka:kafka-clients:2.5.0": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 1
    },
    "org.apache.kafka:kafka-clients:2.8.1": {
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 1,
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 1
    },
    "com.alibaba:fastjson:1.2.69": {
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 3,
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 3,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 3
    },
    "org.apache.ant:ant:1.9.10": {
        "org.apache.tools.ant.types.resources.AbstractResourceCollectionWrapper:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.FileResource:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.BaseResourceCollectionContainer:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.Restrict:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.URLResource:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.resources.MappedResource:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.Path:java.lang.String toString()": 1,
        "org.apache.tools.ant.types.FileSet:java.util.Iterator iterator()": 1
    },
    "io.netty:netty-all:4.0.36.Final": {
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2
    },
    "io.netty:netty-all:4.1.39.Final": {
        "io.netty.util.concurrent.ScheduledFutureTask:void run()": 1,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()": 1,
        "io.netty.channel.ChannelOutboundBuffer$3:void run()": 1,
        "io.netty.channel.ChannelOutboundBuffer$2:void run()": 1,
        "io.netty.util.concurrent.DefaultPromise$1:void run()": 1,
        "io.netty.util.concurrent.DefaultPromise$2:void run()": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()": 1,
        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()": 1,
        "io.netty.channel.AbstractChannelHandlerContext$Tasks$4:void run()": 1,
        "io.netty.channel.AbstractChannelHandlerContext$Tasks$3:void run()": 1,
        "io.netty.channel.AbstractChannelHandlerContext$Tasks$2:void run()": 1,
        "io.netty.channel.AbstractChannelHandlerContext$Tasks$1:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$3:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$4:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$2:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$5:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$6:void run()": 1,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()": 1,
        "io.netty.util.concurrent.FastThreadLocalRunnable:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()": 1,
        "io.netty.util.internal.ThreadExecutorMap$2:void run()": 1,
        "io.netty.util.concurrent.PromiseCombiner$1$1:void run()": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 5,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 5,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 1,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 2,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2
    },
    "com.alibaba:fastjson:1.2.42": {
        "com.alibaba.fastjson.JSON:java.lang.String toString()": 3,
        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 3,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "io.netty:netty-all:4.1.14.Final": {
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": 1,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": 2,
        "io.netty.util.concurrent.ScheduledFutureTask:void run()": 1,
        "io.netty.channel.ChannelOutboundBuffer$3:void run()": 1,
        "io.netty.channel.ChannelOutboundBuffer$2:void run()": 1,
        "io.netty.util.concurrent.DefaultPromise$1:void run()": 1,
        "io.netty.util.concurrent.DefaultPromise$2:void run()": 1,
        "io.netty.bootstrap.Bootstrap$3:void run()": 1,
        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()": 1,
        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$3:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$4:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$2:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$7:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$8:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$5:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$6:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$9:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()": 1,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()": 1,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 1
    },
    "org.codehaus.plexus:plexus-utils:3.0.8": {
        "org.codehaus.plexus.util.cli.Commandline:void <init>()": 1,
        "org.codehaus.plexus.util.cli.CommandLineUtils:int executeCommandLine(org.codehaus.plexus.util.cli.Commandline,java.io.InputStream,org.codehaus.plexus.util.cli.StreamConsumer,org.codehaus.plexus.util.cli.StreamConsumer)": 1
    },
    "io.undertow:undertow-core:1.4.16.Final": {
        "io.undertow.Undertow:void start()": 1
    },
    "io.vertx:vertx-core:3.7.1": {
        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)": 8,
        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)": 8,
        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)": 8,
        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)": 8,
        "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void run()": 4
    },
    "io.netty:netty-all:4.1.0.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()": 1,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 5,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 5,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 5,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 2,
        "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.util.concurrent.CompleteFuture:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 3,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.4": {
        "org.apache.catalina.connector.CoyoteInputStream:int read()": 1,
        "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read()": 1,
        "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()": 1,
        "org.apache.catalina.startup.Tomcat:void start()": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)": 1
    },
    "org.springframework:spring-core:3.2.5.RELEASE": {
        "org.springframework.core.io.ClassPathResource:void <init>(java.lang.String)": 4
    },
    "org.springframework:spring-core:4.0.3.RELEASE": {
        "org.springframework.core.io.DefaultResourceLoader:org.springframework.core.io.Resource getResource(java.lang.String)": 2,
        "org.springframework.core.io.support.PathMatchingResourcePatternResolver:org.springframework.core.io.Resource getResource(java.lang.String)": 2
    },
    "com.alibaba:fastjson:1.2.60": {
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 9,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1
    },
    "org.apache.commons:commons-compress:1.5": {
        "org.apache.commons.compress.archivers.jar.JarArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.12": {
        "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)": 2,
        "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)": 4,
        "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)": 3,
        "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)": 1
    },
    "io.netty:netty-all:4.0.42.Final": {
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelRegistered(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelUnregistered(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 3,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind()": 1,
        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 4,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:7.0.91": {
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": 1,
        "org.apache.catalina.startup.Tomcat:void start()": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)": 1,
        "org.apache.catalina.connector.CoyoteWriter:void println(java.lang.String)": 1,
        "org.apache.catalina.connector.Request:java.lang.String getRemoteAddr()": 1,
        "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteAddr()": 1
    },
    "org.apache.kafka:kafka-clients:2.8.2": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 1
    },
    "org.keycloak:keycloak-services:7.0.0": {
        "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)": 1
    },
    "org.apache.shiro:shiro-web:1.2.3": {
        "org.apache.shiro.web.util.WebUtils:java.lang.String getPathWithinApplication(javax.servlet.http.HttpServletRequest)": 1
    },
    "org.apache.ant:ant:1.9.14": {
        "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File)": 9,
        "org.apache.tools.ant.taskdefs.Delete:void execute()": 1,
        "org.apache.tools.ant.taskdefs.Chmod:void execute()": 1
    },
    "org.apache.httpcomponents:httpclient:4.2.2": {
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 1,
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)": 1
    },
    "org.apache.httpcomponents:httpclient:4.0.1": {
        "org.apache.http.conn.ssl.AbstractVerifier:void verify(java.lang.String,java.security.cert.X509Certificate)": 1
    },
    "xalan:xalan:2.7.1": {
        "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)": 5,
        "org.apache.xpath.axes.UnionPathIterator:int nextNode()": 1,
        "org.apache.xpath.axes.DescendantIterator:int nextNode()": 1,
        "org.apache.xpath.axes.BasicTestIterator:int nextNode()": 1,
        "org.apache.xpath.axes.WalkingIterator:int nextNode()": 1,
        "org.apache.xpath.axes.NodeSequence:int nextNode()": 1,
        "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String)": 1,
        "org.apache.xpath.objects.XObject:java.lang.String toString()": 7,
        "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)": 1
    },
    "org.apache.zookeeper:zookeeper:3.3.5": {
        "org.apache.zookeeper.server.quorum.CommitProcessor:void run()": 2,
        "org.apache.zookeeper.server.SyncRequestProcessor:void run()": 2
    },
    "org.apache.httpcomponents:httpclient:4.1.3": {
        "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": 2
    },
    "org.springframework:spring-web:4.1.1.RELEASE": {
        "org.springframework.web.accept.ContentNegotiationManagerFactoryBean:void afterPropertiesSet()": 1
    },
    "org.apache.poi:poi-ooxml:3.9": {
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()": 28,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int,int)": 1,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell getCell(int)": 24,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellFormula(java.lang.String)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)": 5,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)": 7,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()": 13,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(int)": 7,
        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)": 5,
        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)": 9,
        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)": 1,
        "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()": 3
    },
    "org.apache.pdfbox:pdfbox:2.0.8": {
        "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)": 7,
        "org.apache.pdfbox.text.PDFTextStripper:java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument)": 1,
        "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)": 3
    },
    "org.hibernate:hibernate-core:4.1.7.Final": {
        "org.hibernate.internal.CollectionFilterImpl:java.util.List list()": 1,
        "org.hibernate.internal.SessionImpl:org.hibernate.Query createQuery(java.lang.String)": 1
    },
    "com.thoughtworks.xstream:xstream:1.4.17": {
        "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(com.thoughtworks.xstream.io.HierarchicalStreamReader)": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 1,
        "com.thoughtworks.xstream.core.util.CustomObjectInputStream:boolean readBoolean()": 2
    },
    "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.6.1": {
        "com.fasterxml.jackson.dataformat.xml.XmlMapper:void <init>(com.fasterxml.jackson.dataformat.xml.JacksonXmlModule)": 1
    },
    "org.springframework.batch:spring-batch-core:2.2.0.RELEASE": {
        "org.springframework.batch.core.repository.support.AbstractJobRepositoryFactoryBean:java.lang.Object getObject()": 1,
        "org.springframework.batch.core.repository.support.JobRepositoryFactoryBean:void afterPropertiesSet()": 1
    },
    "com.squareup.retrofit2:retrofit:2.0.0": {
        "retrofit2.OkHttpCall:retrofit2.Response execute()": 2
    },
    "io.netty:netty-all:4.1.27.Final": {
        "io.netty.channel.DefaultChannelPipeline$3:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$4:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$2:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$7:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$8:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$5:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$6:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$9:void run()": 2,
        "io.netty.util.concurrent.ScheduledFutureTask:void run()": 2,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()": 2,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()": 2,
        "io.netty.channel.ChannelOutboundBuffer$3:void run()": 2,
        "io.netty.channel.ChannelOutboundBuffer$2:void run()": 2,
        "io.netty.util.concurrent.DefaultPromise$1:void run()": 2,
        "io.netty.util.concurrent.DefaultPromise$2:void run()": 2,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()": 2,
        "io.netty.util.concurrent.FastThreadLocalRunnable:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()": 2,
        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()": 2,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 3,
        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)": 1
    },
    "cn.hutool:hutool-all:4.0.9": {
        "cn.hutool.core.io.FileUtil:byte[] readBytes(java.lang.String)": 1
    },
    "io.netty:netty-all:4.1.22.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()": 7,
        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)": 10,
        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)": 10,
        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 10,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)": 1,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 6,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect()": 4,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 5,
        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()": 5,
        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int)": 1,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": 5,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)": 4,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 7,
        "io.netty.util.concurrent.ScheduledFutureTask:void run()": 18,
        "io.netty.util.concurrent.DefaultPromise$1:void run()": 18,
        "io.netty.util.concurrent.DefaultPromise$2:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$3:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$4:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$2:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$7:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$8:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$5:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$6:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$9:void run()": 18,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()": 18,
        "io.netty.util.concurrent.FastThreadLocalRunnable:void run()": 18,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()": 18,
        "io.netty.channel.ChannelOutboundBuffer$3:void run()": 18,
        "io.netty.channel.ChannelOutboundBuffer$2:void run()": 18,
        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()": 18,
        "io.netty.bootstrap.Bootstrap$3:void run()": 18,
        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()": 18,
        "io.netty.handler.ssl.SslHandler$5:void run()": 18,
        "io.netty.handler.ssl.SslHandler$1:void run()": 18,
        "io.netty.handler.ssl.SslHandler$3:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()": 18,
        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()": 18,
        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)": 4,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": 1,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)": 1,
        "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)": 4,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 1,
        "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 1,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)": 1,
        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)": 2,
        "io.netty.channel.DefaultEventLoopGroup:void <init>(int)": 1,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>()": 1,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int)": 1
    },
    "com.thoughtworks.xstream:xstream:1.4.2": {
        "com.thoughtworks.xstream.XStream:void <init>()": 1
    },
    "org.apache.kafka:kafka-clients:2.3.1": {
        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)": 1,
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 1
    },
    "org.jodd:jodd-http:6.0.5": {
        "jodd.http.HttpRequest:jodd.http.HttpResponse send()": 12,
        "jodd.http.HttpRequest:jodd.http.HttpRequest post(java.lang.String)": 6,
        "jodd.http.HttpRequest:jodd.http.HttpRequest get(java.lang.String)": 4,
        "jodd.http.HttpRequest:jodd.http.HttpRequest put(java.lang.String)": 1,
        "jodd.http.HttpRequest:jodd.http.HttpRequest patch(java.lang.String)": 1
    },
    "org.hibernate:hibernate-core:5.4.11.Final": {
        "org.hibernate.internal.CriteriaImpl:java.util.List list()": 16,
        "org.hibernate.internal.CriteriaImpl$Subcriteria:java.util.List list()": 16,
        "org.hibernate.internal.CriteriaImpl:java.lang.Object uniqueResult()": 6,
        "org.hibernate.internal.CriteriaImpl$Subcriteria:java.lang.Object uniqueResult()": 6
    },
    "org.jodd:jodd-http:5.1.5": {
        "jodd.http.HttpRequest:jodd.http.HttpResponse send()": 3,
        "jodd.http.HttpRequest:jodd.http.HttpRequest get(java.lang.String)": 1,
        "jodd.http.HttpRequest:jodd.http.HttpRequest post(java.lang.String)": 2
    },
    "org.springframework.batch:spring-batch-core:3.0.3.RELEASE": {
        "org.springframework.batch.core.repository.dao.JdbcExecutionContextDao:void afterPropertiesSet()": 1,
        "org.springframework.batch.core.repository.dao.JdbcExecutionContextDao:void setSerializer(org.springframework.batch.core.repository.ExecutionContextSerializer)": 1
    },
    "org.apache.commons:commons-compress:1.3": {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.zip.ZipArchiveEntry getNextZipEntry()": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int read(byte[],int,int)": 1
    },
    "org.apache.wicket:wicket-core:6.24.0": {
        "org.apache.wicket.Component:void setResponsePage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": 5,
        "org.apache.wicket.Component:void setResponsePage(java.lang.Class)": 2
    },
    "org.apache.ant:ant:1.9.4": {
        "org.apache.tools.ant.taskdefs.Definer:void execute()": 1,
        "org.apache.tools.ant.Task:void maybeConfigure()": 1,
        "org.apache.tools.ant.UnknownElement:void maybeConfigure()": 1
    },
    "io.netty:netty-all:4.1.37.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 1
    },
    "org.apache.kafka:kafka-clients:2.4.0": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Map,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)": 2
    },
    "io.netty:netty-all:4.0.34.Final": {
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 4,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 10,
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 13,
        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)": 3
    },
    "org.postgresql:postgresql:42.1.1": {
        "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.Reader)": 1
    },
    "org.apache.commons:commons-compress:1.9": {
        "org.apache.commons.compress.archivers.jar.JarArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 1
    },
    "commons-fileupload:commons-fileupload:1.3": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:org.apache.commons.fileupload.FileItemIterator getItemIterator(javax.servlet.http.HttpServletRequest)": 1,
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 1
    },
    "org.apache.tomcat:tomcat-coyote:7.0.85": {
        "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()": 3,
        "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()": 3,
        "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()": 3,
        "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()": 3,
        "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()": 3,
        "org.apache.tomcat.util.net.NioEndpoint$PollerEvent:void run()": 3
    },
    "io.netty:netty-all:4.0.27.Final": {
        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)": 1,
        "io.netty.channel.DefaultChannelPipeline$3:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$4:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$1:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$2:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$5:void run()": 2,
        "io.netty.channel.DefaultChannelPipeline$6:void run()": 2,
        "io.netty.util.concurrent.ScheduledFutureTask:void run()": 2,
        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()": 2,
        "io.netty.channel.ChannelOutboundBuffer$3:void run()": 2,
        "io.netty.util.concurrent.DefaultPromise$3:void run()": 2,
        "io.netty.util.concurrent.DefaultPromise$1:void run()": 2,
        "io.netty.util.concurrent.DefaultPromise$2:void run()": 2,
        "io.netty.bootstrap.Bootstrap$2:void run()": 2,
        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()": 2,
        "io.netty.util.concurrent.DefaultPromise$LateListeners:void run()": 2,
        "io.netty.util.concurrent.DefaultPromise$LateListenerNotifier:void run()": 2,
        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()": 2,
        "io.netty.util.concurrent.DefaultPromise:boolean cancel(boolean)": 4,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect()": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.6": {
        "org.apache.pdfbox.text.PDFTextStripper:java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument)": 7,
        "org.apache.pdfbox.pdfparser.PDFParser:void parse()": 4
    },
    "com.sparkjava:spark-core:2.4": {
        "spark.Spark:void staticFileLocation(java.lang.String)": 1
    },
    "org.mongodb:mongo-java-driver:3.12.1": {
        "com.mongodb.operation.ChangeStreamBatchCursor:java.util.List next()": 1,
        "com.mongodb.operation.ChangeStreamBatchCursor:boolean hasNext()": 1,
        "com.mongodb.operation.QueryBatchCursor:java.util.List next()": 1,
        "com.mongodb.operation.QueryBatchCursor:boolean hasNext()": 1,
        "com.mongodb.client.internal.MongoMappingCursor:java.lang.Object next()": 1,
        "com.mongodb.client.internal.MongoMappingCursor:boolean hasNext()": 1,
        "com.mongodb.client.internal.MongoChangeStreamCursorImpl:java.lang.Object next()": 1,
        "com.mongodb.client.internal.MongoChangeStreamCursorImpl:boolean hasNext()": 1,
        "com.mongodb.MongoCursorAdapter:com.mongodb.DBObject next()": 1,
        "com.mongodb.MongoCursorAdapter:boolean hasNext()": 1,
        "com.mongodb.DBCursor:com.mongodb.DBObject next()": 1,
        "com.mongodb.DBCursor:boolean hasNext()": 1,
        "com.mongodb.operation.ListCollectionsOperation$ProjectingBatchCursor:java.util.List next()": 1,
        "com.mongodb.operation.ListCollectionsOperation$ProjectingBatchCursor:boolean hasNext()": 1,
        "com.mongodb.client.internal.MongoBatchCursorAdapter:java.lang.Object next()": 1,
        "com.mongodb.client.internal.MongoBatchCursorAdapter:boolean hasNext()": 1
    },
    "edu.stanford.nlp:stanford-corenlp:4.2.0": {
        "edu.stanford.nlp.stats.Counters$3:java.lang.Object put(java.lang.Object,java.lang.Object)": 1,
        "edu.stanford.nlp.util.CollectionValuedMap:java.lang.Object put(java.lang.Object,java.lang.Object)": 1,
        "edu.stanford.nlp.util.DeltaMap:java.lang.Object put(java.lang.Object,java.lang.Object)": 1,
        "edu.stanford.nlp.util.ArrayMap:java.lang.Object put(java.lang.Object,java.lang.Object)": 1,
        "edu.stanford.nlp.objectbank.DelimitRegExIterator:java.lang.Object next()": 3,
        "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapValueIterator:java.lang.Object next()": 3,
        "edu.stanford.nlp.trees.TransformingTreebank$TransformingTreebankIterator:edu.stanford.nlp.trees.Tree next()": 3,
        "edu.stanford.nlp.util.FilteredIterator:java.lang.Object next()": 3,
        "edu.stanford.nlp.util.DeltaMap$1$1NullingIterator:java.util.Map$Entry next()": 3,
        "edu.stanford.nlp.stats.ClassicCounter$2$1:java.util.Map$Entry next()": 3,
        "edu.stanford.nlp.trees.CompositeTreebank$CompositeTreebankIterator:edu.stanford.nlp.trees.Tree next()": 3,
        "edu.stanford.nlp.objectbank.ObjectBank$OBIterator:java.lang.Object next()": 3,
        "edu.stanford.nlp.trees.DiskTreebank$DiskTreebankIterator:edu.stanford.nlp.trees.Tree next()": 3,
        "edu.stanford.nlp.stats.IntCounter$1$1:java.util.Map$Entry next()": 3,
        "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$LazyLoadTreesByParsing$1:edu.stanford.nlp.trees.Tree next()": 3,
        "edu.stanford.nlp.semgraph.semgrex.GraphRelation$SearchNodeIterator:edu.stanford.nlp.ling.IndexedWord next()": 3,
        "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapIterator:edu.stanford.nlp.util.TwoDimensionalMap$Entry next()": 3,
        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:java.lang.Object next()": 3,
        "edu.stanford.nlp.util.ConcatenationIterator:java.lang.Object next()": 3,
        "edu.stanford.nlp.graph.DirectedMultiGraph$EdgeIterator:java.lang.Object next()": 3,
        "edu.stanford.nlp.graph.DirectedMultiGraph$EdgeIterator:boolean hasNext()": 3,
        "edu.stanford.nlp.objectbank.LineIterator:java.lang.Object next()": 3,
        "edu.stanford.nlp.stats.Counters$2$1$1:java.util.Map$Entry next()": 3,
        "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator:edu.stanford.nlp.trees.GrammaticalStructure next()": 3,
        "edu.stanford.nlp.process.AbstractTokenizer:java.lang.Object next()": 3,
        "edu.stanford.nlp.process.AbstractTokenizer:boolean hasNext()": 3,
        "edu.stanford.nlp.util.IterableIterator:java.lang.Object next()": 3,
        "edu.stanford.nlp.util.IterableIterator:boolean hasNext()": 3,
        "edu.stanford.nlp.stats.Counters$2$1:java.util.Iterator iterator()": 1,
        "edu.stanford.nlp.util.DeltaMap$1:java.util.Iterator iterator()": 1,
        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:java.util.Iterator iterator()": 1,
        "edu.stanford.nlp.stats.IntCounter$1:java.util.Iterator iterator()": 1,
        "edu.stanford.nlp.stats.ClassicCounter$2:java.util.Iterator iterator()": 1,
        "edu.stanford.nlp.stats.Counters$3:java.lang.Double get(java.lang.Object)": 3,
        "edu.stanford.nlp.util.CollectionValuedMap:java.util.Collection get(java.lang.Object)": 3,
        "edu.stanford.nlp.util.DeltaMap:java.lang.Object get(java.lang.Object)": 3,
        "edu.stanford.nlp.util.ArrayMap:java.lang.Object get(java.lang.Object)": 3,
        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:boolean add(java.lang.Object)": 17
    },
    "org.apache.ant:ant:1.10.3": {
        "org.apache.tools.ant.types.resources.AbstractResourceCollectionWrapper:java.lang.String toString()": 3,
        "org.apache.tools.ant.types.Path:java.lang.String toString()": 3,
        "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()": 3,
        "org.apache.tools.ant.types.resources.Restrict:java.lang.String toString()": 3
    },
    "org.apache.tika:tika-parsers:1.19.1": {
        "org.apache.tika.parser.pdf.PDFParserConfig:boolean equals(java.lang.Object)": 2,
        "org.apache.tika.parser.pdf.PDFParser:void <init>()": 1,
        "org.apache.tika.parser.pdf.PDFParser:void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)": 1
    },
    "org.apache.ant:ant:1.8.0": {
        "org.apache.tools.ant.taskdefs.Execute:java.util.Vector getProcEnvironment()": 1,
        "org.apache.tools.ant.taskdefs.Java:void execute()": 1
    },
    "xalan:xalan:2.7.0": {
        "org.apache.xml.dtm.ref.DTMChildIterNodeList:org.w3c.dom.Node item(int)": 8,
        "org.apache.xml.dtm.ref.DTMChildIterNodeList:int getLength()": 10,
        "org.apache.xml.dtm.ref.DTMNodeList:org.w3c.dom.Node item(int)": 8,
        "org.apache.xml.dtm.ref.DTMNodeList:int getLength()": 10,
        "org.apache.xpath.objects.XNodeSet:org.w3c.dom.NodeList nodelist()": 1,
        "org.apache.xpath.objects.XNodeSetForDOM:org.w3c.dom.NodeList nodelist()": 1,
        "org.apache.xpath.objects.XObject:java.lang.String toString()": 3,
        "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String)": 1
    },
    "io.undertow:undertow-core:2.0.27.Final": {
        "io.undertow.Undertow:void start()": 1
    },
    "org.apache.hadoop:hadoop-mapreduce-client-core:2.7.0": {
        "org.apache.hadoop.mapreduce.task.ReduceContextImpl$ValueIterator:java.lang.Object next()": 140
    },
    "com.alibaba:fastjson:1.2.50": {
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 1
    },
    "org.apache.activemq:activemq-all:5.13.2": {
        "org.springframework.context.support.AbstractApplicationContext:java.lang.Object getBean(java.lang.String)": 26,
        "org.springframework.context.support.ClassPathXmlApplicationContext:void <init>(java.lang.String)": 27,
        "org.springframework.util.ConcurrentReferenceHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)": 5,
        "org.apache.activemq.ActiveMQConnection:void close()": 6,
        "org.apache.activemq.ActiveMQSession:void close()": 6,
        "org.apache.activemq.ActiveMQTopicSession:void close()": 6,
        "org.apache.activemq.ActiveMQQueueSession:void close()": 6,
        "org.apache.activemq.ActiveMQMessageProducerSupport:void send(javax.jms.Message)": 1,
        "org.apache.activemq.ActiveMQSession:javax.jms.MessageProducer createProducer(javax.jms.Destination)": 1,
        "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageProducer createProducer(javax.jms.Destination)": 1,
        "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageProducer createProducer(javax.jms.Destination)": 1,
        "org.apache.activemq.ActiveMQConnection:javax.jms.Session createSession(boolean,int)": 2,
        "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.Connection createConnection()": 2,
        "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive()": 1,
        "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 1,
        "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 1,
        "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": 1,
        "org.slf4j.impl.Log4jLoggerAdapter:void info(java.lang.String,java.lang.Object[])": 2,
        "org.springframework.core.ResolvableType:java.lang.String toString()": 1
    },
    "org.hibernate:hibernate-core:5.0.7.Final": {
        "org.hibernate.internal.CriteriaImpl:java.util.List list()": 7,
        "org.hibernate.internal.CriteriaImpl$Subcriteria:java.util.List list()": 7
    },
    "org.apache.tomcat.embed:tomcat-embed-core:7.0.59": {
        "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)": 2,
        "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)": 2,
        "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void write(byte[],int,int)": 2,
        "org.apache.catalina.loader.WebappLoader:void addRepository(java.lang.String)": 3
    },
    "org.apache.tomcat:tomcat-coyote:8.0.14": {
        "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)": 2,
        "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void write(byte[],int,int)": 2
    },
    "org.apache.tomcat:tomcat-coyote:7.0.59": {
        "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void write(byte[],int,int)": 2
    },
    "org.apache.tomcat:tomcat-catalina:7.0.59": {
        "org.apache.catalina.loader.WebappLoader:void addRepository(java.lang.String)": 3,
        "org.apache.catalina.loader.WebappLoader:boolean modified()": 1
    },
    "org.springframework.data:spring-data-commons:1.11.2.RELEASE": {
        "org.springframework.data.repository.query.parser.PartTree:void <init>(java.lang.String,java.lang.Class)": 1
    },
    "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.5.0": {
        "com.fasterxml.jackson.dataformat.xml.XmlMapper:void <init>(javax.xml.stream.XMLInputFactory)": 1
    }
}
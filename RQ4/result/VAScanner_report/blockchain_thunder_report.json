{
    "project name": "blockchain_thunder",
    "modules": {
        "network.thunder:thunder-core": {
            "vulnerable dependencies": {
                "org.apache.httpcomponents:httpclient:4.5": {
                    "used-method num": 0,
                    "used method": []
                },
                "junit:junit:4.12": {
                    "used-method num": 0,
                    "used method": []
                },
                "io.netty:netty-all:4.0.33.Final": {
                    "used-method num": 135,
                    "used method": [
                        "io.netty.channel.nio.SelectedSelectionKeySet:boolean add(java.lang.Object)",
                        "io.netty.util.internal.ReadOnlyIterator:java.lang.Object next()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                        "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                        "io.netty.channel.ChannelOption:void <clinit>()",
                        "io.netty.channel.ChannelDuplexHandler:void <init>()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                        "io.netty.bootstrap.ServerBootstrap:void <init>()",
                        "io.netty.channel.ChannelInitializer:void <clinit>()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.Object getValue()",
                        "io.netty.util.UniqueName:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[])",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean containsKey(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:int size()",
                        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.String toString()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.bootstrap.Bootstrap:void <init>()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:boolean add(java.lang.Object)",
                        "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ForkJoinPool:java.lang.String toString()",
                        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                        "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                        "io.netty.util.internal.MpscLinkedQueue:boolean contains(java.lang.Object)",
                        "io.netty.buffer.PoolArena:java.lang.String toString()",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                        "io.netty.util.concurrent.AbstractEventExecutor:java.util.Iterator iterator()",
                        "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                        "io.netty.bootstrap.Bootstrap:io.netty.bootstrap.Bootstrap clone()",
                        "io.netty.handler.logging.LoggingHandler:void <init>(io.netty.handler.logging.LogLevel)",
                        "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                        "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                        "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future submit(java.lang.Runnable)",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                        "io.netty.util.concurrent.MultithreadEventExecutorGroup:java.util.Iterator iterator()",
                        "io.netty.util.Signal:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean add(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean remove(java.lang.Object)",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean contains(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView keySet()",
                        "io.netty.util.internal.RecyclableArrayList:java.lang.Object set(int,java.lang.Object)",
                        "io.netty.util.concurrent.AbstractFuture:java.lang.Object get()",
                        "io.netty.util.concurrent.AbstractEventExecutorGroup:io.netty.util.concurrent.Future submit(java.lang.Runnable)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                        "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                        "io.netty.buffer.FixedCompositeByteBuf:java.lang.String toString()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                        "io.netty.handler.codec.ByteToMessageDecoder:void <init>()",
                        "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                        "io.netty.util.internal.ConcurrentCircularArrayQueue:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean contains(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ForkJoinTask:java.lang.Object get()",
                        "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                        "io.netty.bootstrap.ServerBootstrap:java.lang.String toString()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelActive()",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:void remove()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                        "io.netty.handler.codec.MessageToByteEncoder:void <init>()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                        "io.netty.bootstrap.Bootstrap:void <clinit>()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:boolean contains(java.lang.Object)",
                        "io.netty.util.UniqueName:void <clinit>()",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                        "io.netty.util.internal.chmv8.LongAdderV8:java.lang.String toString()",
                        "io.netty.bootstrap.Bootstrap:java.lang.String toString()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap clone()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean remove(java.lang.Object)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.util.internal.MpscLinkedQueue:java.util.Iterator iterator()",
                        "io.netty.handler.codec.LengthFieldPrepender:void <init>(int)",
                        "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                        "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean addAll(java.util.Collection)",
                        "io.netty.buffer.CompositeByteBuf:java.util.Iterator iterator()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.String toString()",
                        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)",
                        "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                        "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                        "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                        "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()",
                        "io.netty.util.concurrent.AbstractEventExecutorGroup:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                        "io.netty.buffer.PoolChunk:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ForkJoinWorkerThread:void run()",
                        "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean add(java.lang.Object)",
                        "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.util.Set entrySet()",
                        "io.netty.util.internal.MpscLinkedQueue:boolean add(java.lang.Object)",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean addAll(java.util.Collection)",
                        "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                        "io.netty.util.internal.ReadOnlyIterator:void remove()",
                        "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                        "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object remove(java.lang.Object)",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                        "io.netty.channel.ChannelInitializer:void <init>()",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void channelUnregistered(io.netty.channel.ChannelHandlerContext)",
                        "io.netty.handler.logging.LogLevel:void <clinit>()",
                        "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture disconnect()",
                        "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ForkJoinPool:io.netty.util.internal.chmv8.ForkJoinTask submit(java.lang.Runnable)",
                        "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()",
                        "io.netty.util.concurrent.GlobalEventExecutor:void shutdown()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)",
                        "io.netty.util.internal.ReadOnlyIterator:boolean hasNext()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:void remove()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2019-16869"
                    ],
                    "used vul-method": [
                        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelActive()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void channelUnregistered(io.netty.channel.ChannelHandlerContext)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture disconnect()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)"
                    ],
                    "vul-called frequency": 20,
                    "related vul root method": {
                        "CVE-2019-16869": [
                            "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-16869": [
                            "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                            "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                            "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                            "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelActive()",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                            "io.netty.channel.ChannelInboundHandlerAdapter:void channelUnregistered(io.netty.channel.ChannelHandlerContext)",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture disconnect()",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)"
                        ]
                    }
                }
            }
        },
        "network.thunder:thunder-parent": {
            "vulnerable dependencies": {
                "org.apache.httpcomponents:httpclient:4.5": {
                    "used-method num": 2,
                    "used method": [
                        "org.apache.http.client.utils.URLEncodedUtils:void <clinit>()",
                        "org.apache.http.client.utils.URLEncodedUtils:java.util.List parse(java.lang.String,java.nio.charset.Charset)"
                    ]
                },
                "junit:junit:4.12": {
                    "used-method num": 0,
                    "used method": []
                },
                "io.netty:netty-all:4.0.33.Final": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        }
    }
}
{
    "project name": "eBay_Winder",
    "modules": {
        "org.ebayopensource.winder:winderParent": {
            "vulnerable dependencies": {
                "org.quartz-scheduler:quartz:2.2.1": {
                    "used-method num": 154,
                    "used method": [
                        "org.quartz.JobBuilder:org.quartz.JobBuilder newJob(java.lang.Class)",
                        "org.quartz.impl.RemoteScheduler:void addJob(org.quartz.JobDetail,boolean)",
                        "org.quartz.utils.DirtyFlagMap:void clear()",
                        "org.quartz.impl.RemoteScheduler:void pauseJob(org.quartz.JobKey)",
                        "org.quartz.impl.JobDetailImpl:org.quartz.JobDataMap getJobDataMap()",
                        "org.quartz.simpl.CascadingClassLoadHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class)",
                        "org.quartz.core.QuartzScheduler$1:void run()",
                        "org.quartz.impl.triggers.CronTriggerImpl:java.lang.Object clone()",
                        "org.quartz.impl.RemoteScheduler:java.util.List getTriggersOfJob(org.quartz.JobKey)",
                        "org.quartz.impl.JobDetailImpl:void setRequestsRecovery(boolean)",
                        "org.quartz.utils.Key:java.lang.String getGroup()",
                        "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.String getString(java.lang.String)",
                        "org.quartz.impl.jdbcjobstore.JobStoreSupport:void <clinit>()",
                        "org.quartz.impl.RemoteScheduler:org.quartz.JobDetail getJobDetail(org.quartz.JobKey)",
                        "org.quartz.utils.DirtyFlagMap:java.util.Set entrySet()",
                        "org.quartz.impl.RemoteScheduler:void start()",
                        "org.quartz.impl.JobDetailImpl:void setDurability(boolean)",
                        "org.quartz.impl.RemoteScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                        "org.quartz.impl.RemoteScheduler:java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)",
                        "org.quartz.simpl.InitThreadContextClassLoadHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class)",
                        "org.quartz.SimpleScheduleBuilder:org.quartz.SimpleScheduleBuilder simpleSchedule()",
                        "org.quartz.utils.DirtyFlagMap:java.lang.Object get(java.lang.Object)",
                        "org.quartz.JobExecutionException:void <init>(java.lang.String,java.lang.Throwable)",
                        "org.quartz.impl.jdbcjobstore.SchedulerStateRecord:long getCheckinTimestamp()",
                        "org.quartz.impl.DirectSchedulerFactory:org.quartz.Scheduler getScheduler()",
                        "org.quartz.impl.jdbcjobstore.TriggerStatus:java.lang.String toString()",
                        "org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl:void setNextFireTime(java.util.Date)",
                        "org.quartz.JobKey:void <init>(java.lang.String,java.lang.String)",
                        "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.Object put(java.lang.String,java.lang.Object)",
                        "org.quartz.CronScheduleBuilder:org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)",
                        "org.quartz.impl.JobDetailImpl:void setDescription(java.lang.String)",
                        "org.quartz.JobBuilder:org.quartz.JobDetail build()",
                        "org.quartz.impl.DirectSchedulerFactory:void createVolatileScheduler(int)",
                        "org.quartz.simpl.ThreadContextClassLoadHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class)",
                        "org.quartz.core.JobRunShell:void run()",
                        "org.quartz.impl.RemoteScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                        "org.quartz.utils.DBConnectionManager:void <clinit>()",
                        "org.quartz.impl.RemoteScheduler:void resumeJob(org.quartz.JobKey)",
                        "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder startAt(java.util.Date)",
                        "org.quartz.utils.StringKeyDirtyFlagMap:void put(java.lang.String,long)",
                        "org.quartz.impl.JobDetailImpl:void setGroup(java.lang.String)",
                        "org.quartz.impl.StdScheduler:org.quartz.JobDetail getJobDetail(org.quartz.JobKey)",
                        "org.quartz.utils.StringKeyDirtyFlagMap:void put(java.lang.String,java.lang.String)",
                        "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntrySet:java.util.Iterator iterator()",
                        "org.quartz.JobDataMap:void <init>(java.util.Map)",
                        "org.quartz.impl.JobDetailImpl:void <init>()",
                        "org.quartz.impl.RemoteScheduler:java.util.List getJobGroupNames()",
                        "org.quartz.simpl.SimpleThreadPool$WorkerThread:void run()",
                        "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry:java.lang.Object getKey()",
                        "org.quartz.impl.JobDetailImpl:void setJobDataMap(org.quartz.JobDataMap)",
                        "org.quartz.impl.jdbcjobstore.StdJDBCDelegate:void closeResultSet(java.sql.ResultSet)",
                        "org.quartz.utils.DirtyFlagMap:java.lang.Object clone()",
                        "org.quartz.TimeOfDay:java.lang.String toString()",
                        "org.quartz.impl.StdScheduler:java.util.Date scheduleJob(org.quartz.Trigger)",
                        "org.quartz.JobDataMap:void <init>()",
                        "org.quartz.impl.DirectSchedulerFactory:void createScheduler(java.lang.String,java.lang.String,org.quartz.spi.ThreadPool,org.quartz.spi.ThreadExecutor,org.quartz.spi.JobStore,java.util.Map,java.lang.String,int,long,long,boolean,java.lang.String,int,long)",
                        "org.quartz.simpl.SimpleThreadPool:void <init>(int,int)",
                        "org.quartz.utils.counter.sampled.SampledCounterImpl$1:void run()",
                        "org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl:void setEndTime(java.util.Date)",
                        "org.quartz.utils.DBConnectionManager:void addConnectionProvider(java.lang.String,org.quartz.utils.ConnectionProvider)",
                        "org.quartz.utils.DirtyFlagMap$DirtyFlagCollection:java.util.Iterator iterator()",
                        "org.quartz.impl.triggers.AbstractTrigger:org.quartz.TriggerKey getKey()",
                        "org.quartz.impl.matchers.GroupMatcher:org.quartz.impl.matchers.GroupMatcher groupEquals(java.lang.String)",
                        "org.quartz.utils.DirtyFlagMap:boolean isEmpty()",
                        "org.quartz.impl.StdScheduler:void shutdown(boolean)",
                        "org.quartz.impl.jdbcjobstore.StdJDBCDelegate:void closeStatement(java.sql.Statement)",
                        "org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler:void run()",
                        "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:boolean hasNext()",
                        "org.quartz.impl.JobExecutionContextImpl:boolean isRecovering()",
                        "org.quartz.impl.triggers.SimpleTriggerImpl:void setNextFireTime(java.util.Date)",
                        "org.quartz.plugins.history.LoggingJobHistoryPlugin:void <init>()",
                        "org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager:void run()",
                        "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntryIterator:org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry next()",
                        "org.quartz.simpl.SimpleInstanceIdGenerator:void <init>()",
                        "org.quartz.impl.JobExecutionContextImpl:org.quartz.JobDetail getJobDetail()",
                        "org.quartz.impl.StdScheduler:boolean unscheduleJob(org.quartz.TriggerKey)",
                        "org.quartz.impl.JobDetailImpl:boolean requestsRecovery()",
                        "org.quartz.impl.JobDetailImpl:boolean isConcurrentExectionDisallowed()",
                        "org.quartz.impl.StdScheduler:java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)",
                        "org.quartz.impl.triggers.SimpleTriggerImpl:void setEndTime(java.util.Date)",
                        "org.quartz.impl.JobDetailImpl:java.lang.Class getJobClass()",
                        "org.quartz.utils.UpdateChecker:void run()",
                        "org.quartz.simpl.LoadingLoaderClassLoadHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class)",
                        "org.quartz.impl.RemoteScheduler:java.util.Date scheduleJob(org.quartz.Trigger)",
                        "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry:java.lang.Object getValue()",
                        "org.quartz.impl.JobDetailImpl:org.quartz.JobBuilder getJobBuilder()",
                        "org.quartz.impl.JobExecutionContextImpl:java.lang.String toString()",
                        "org.quartz.SchedulerMetaData:java.lang.String toString()",
                        "org.quartz.impl.DefaultThreadExecutor:void <init>()",
                        "org.quartz.impl.JobExecutionContextImpl:org.quartz.Trigger getTrigger()",
                        "org.quartz.utils.PoolingConnectionProvider:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)",
                        "org.quartz.SchedulerException:java.lang.String toString()",
                        "org.quartz.utils.DirtyFlagMap:java.util.Collection values()",
                        "org.quartz.impl.StdScheduler:void resumeJob(org.quartz.JobKey)",
                        "org.quartz.JobBuilder:org.quartz.JobBuilder storeDurably(boolean)",
                        "org.quartz.impl.StdScheduler:java.util.List getJobGroupNames()",
                        "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "org.quartz.utils.DirtyFlagMap:int size()",
                        "org.quartz.impl.triggers.CronTriggerImpl:void setNextFireTime(java.util.Date)",
                        "org.quartz.impl.triggers.CalendarIntervalTriggerImpl:void setEndTime(java.util.Date)",
                        "org.quartz.impl.triggers.AbstractTrigger:java.lang.Object clone()",
                        "org.quartz.impl.JobDetailImpl:java.lang.Object clone()",
                        "org.quartz.impl.jdbcjobstore.StdJDBCDelegate:void <init>()",
                        "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder forJob(java.lang.String,java.lang.String)",
                        "org.quartz.JobBuilder:org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)",
                        "org.quartz.impl.JobDetailImpl:java.lang.String toString()",
                        "org.quartz.impl.JobDetailImpl:boolean isPersistJobDataAfterExecution()",
                        "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:java.lang.Object next()",
                        "org.quartz.impl.StdScheduler:void start()",
                        "org.quartz.utils.DirtyFlagMap:boolean containsKey(java.lang.Object)",
                        "org.quartz.JobBuilder:org.quartz.JobBuilder usingJobData(org.quartz.JobDataMap)",
                        "org.quartz.utils.counter.sampled.TimeStampedCounterValue:java.lang.String toString()",
                        "org.quartz.impl.RemoteScheduler:void shutdown(boolean)",
                        "org.quartz.impl.StdScheduler:java.util.List getTriggersOfJob(org.quartz.JobKey)",
                        "org.quartz.impl.JobDetailImpl:java.lang.String getDescription()",
                        "org.quartz.impl.JobDetailImpl:org.quartz.JobKey getKey()",
                        "org.quartz.TriggerKey:void <init>(java.lang.String,java.lang.String)",
                        "org.quartz.SimpleScheduleBuilder:org.quartz.SimpleScheduleBuilder repeatForever()",
                        "org.quartz.simpl.SimpleThreadPool:void initialize()",
                        "org.quartz.impl.DirectSchedulerFactory:void <clinit>()",
                        "org.quartz.impl.DirectSchedulerFactory:org.quartz.Scheduler getScheduler(java.lang.String)",
                        "org.quartz.impl.StdScheduler:void pauseJob(org.quartz.JobKey)",
                        "org.quartz.impl.jdbcjobstore.SchedulerStateRecord:long getCheckinInterval()",
                        "org.quartz.utils.DBConnectionManager:org.quartz.utils.DBConnectionManager getInstance()",
                        "org.quartz.core.QuartzSchedulerThread:void run()",
                        "org.quartz.impl.triggers.CronTriggerImpl:void setEndTime(java.util.Date)",
                        "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)",
                        "org.quartz.JobBuilder:org.quartz.JobBuilder requestRecovery(boolean)",
                        "org.quartz.impl.StdScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                        "org.quartz.utils.Key:java.lang.String getName()",
                        "org.quartz.simpl.SimpleClassLoadHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class)",
                        "org.quartz.simpl.SimpleInstanceIdGenerator:java.lang.String generateInstanceId()",
                        "org.quartz.utils.Key:java.lang.String toString()",
                        "org.quartz.simpl.CascadingClassLoadHelper:void initialize()",
                        "org.quartz.utils.DBConnectionManager:java.sql.Connection getConnection(java.lang.String)",
                        "org.quartz.impl.JobDetailImpl:void setJobClass(java.lang.Class)",
                        "org.quartz.impl.jdbcjobstore.JobStoreTX:void <init>()",
                        "org.quartz.CronExpression:java.lang.Object clone()",
                        "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder newTrigger()",
                        "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder endAt(java.util.Date)",
                        "org.quartz.impl.triggers.CalendarIntervalTriggerImpl:void setNextFireTime(java.util.Date)",
                        "org.quartz.utils.DirtyFlagMap:java.util.Set keySet()",
                        "org.quartz.simpl.CascadingClassLoadHelper:void <init>()",
                        "org.quartz.impl.StdScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                        "org.quartz.impl.RemoteScheduler:boolean unscheduleJob(org.quartz.TriggerKey)",
                        "org.quartz.impl.JobDetailImpl:void setName(java.lang.String)",
                        "org.quartz.plugins.history.LoggingTriggerHistoryPlugin:void <init>()",
                        "org.quartz.TriggerBuilder:org.quartz.Trigger build()",
                        "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)",
                        "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry:java.lang.Object setValue(java.lang.Object)",
                        "org.quartz.impl.StdScheduler:void addJob(org.quartz.JobDetail,boolean)",
                        "org.quartz.impl.JobDetailImpl:boolean isDurable()",
                        "org.quartz.impl.triggers.AbstractTrigger:java.lang.String toString()",
                        "org.quartz.SimpleScheduleBuilder:org.quartz.SimpleScheduleBuilder withIntervalInSeconds(int)"
                    ]
                },
                "junit:junit:4.11": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        }
    }
}
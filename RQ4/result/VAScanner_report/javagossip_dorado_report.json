{
    "project name": "javagossip_dorado",
    "modules": {
        "ai.houyi:dorado": {
            "vulnerable dependencies": {
                "io.netty:netty-all:4.1.27.Final": {
                    "used-method num": 505,
                    "used method": [
                        "io.netty.channel.nio.SelectedSelectionKeySet:boolean add(java.lang.Object)",
                        "io.netty.handler.codec.DecoderException:void <init>(java.lang.Throwable)",
                        "io.netty.buffer.ByteBufInputStream:void close()",
                        "io.netty.handler.codec.http.multipart.DiskFileUpload:java.lang.String getFilename()",
                        "io.netty.buffer.WrappedByteBuf:boolean isReadable()",
                        "io.netty.buffer.AbstractByteBuf:short readUnsignedByte()",
                        "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:void <init>(long)",
                        "io.netty.buffer.ByteBufOutputStream:void write(int)",
                        "io.netty.util.internal.InternalThreadLocalMap:void <clinit>()",
                        "io.netty.buffer.AbstractByteBuf:int writerIndex()",
                        "io.netty.buffer.AbstractByteBuf:byte getByte(int)",
                        "io.netty.handler.codec.http.HttpMethod:java.lang.String toString()",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                        "io.netty.buffer.PooledUnsafeDirectByteBuf:byte[] array()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:boolean hasNext()",
                        "io.netty.util.internal.AppendableCharSequence:char charAt(int)",
                        "io.netty.handler.codec.http.EmptyHttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf copy()",
                        "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                        "io.netty.util.internal.logging.Log4JLogger:void info(java.lang.String,java.lang.Object[])",
                        "io.netty.channel.ChannelOption:void <clinit>()",
                        "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.Object getKey()",
                        "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String getValue()",
                        "io.netty.util.internal.StringUtil:void <clinit>()",
                        "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:byte[] get()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:long length()",
                        "io.netty.channel.CombinedChannelDuplexHandler:void <clinit>()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                        "io.netty.bootstrap.ServerBootstrap:void <init>()",
                        "io.netty.util.internal.logging.Slf4JLogger:void debug(java.lang.String)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:short readUnsignedByte()",
                        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                        "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String getKey()",
                        "io.netty.buffer.SwappedByteBuf:byte[] array()",
                        "io.netty.channel.ChannelInitializer:void <clinit>()",
                        "io.netty.handler.codec.http.DefaultHttpHeaders$3:java.lang.String next()",
                        "io.netty.util.internal.logging.Log4JLogger:void debug(java.lang.String,java.lang.Object[])",
                        "io.netty.handler.codec.http.DefaultHttpMessage:io.netty.handler.codec.http.HttpVersion protocolVersion()",
                        "io.netty.handler.codec.DecoderException:void <init>()",
                        "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:java.util.Iterator iterator()",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                        "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeByte(int)",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readerIndex(int)",
                        "io.netty.handler.codec.HeadersUtils$StringEntryIterator:java.util.Map$Entry next()",
                        "io.netty.buffer.UnpooledUnsafeHeapByteBuf:byte getByte(int)",
                        "io.netty.buffer.PooledDirectByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.channel.DefaultChannelPipeline$4:void run()",
                        "io.netty.handler.codec.http.QueryStringDecoder:void <init>(java.lang.String)",
                        "io.netty.util.internal.logging.Slf4JLogger:void error(java.lang.String,java.lang.Throwable)",
                        "io.netty.handler.codec.DefaultHeaders$ValueIterator:boolean hasNext()",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.handler.codec.http.multipart.AbstractMemoryHttpData:byte[] get()",
                        "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                        "io.netty.buffer.AbstractUnpooledSlicedByteBuf:byte[] array()",
                        "io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:boolean hasNext()",
                        "io.netty.buffer.SwappedByteBuf:boolean isReadable()",
                        "io.netty.buffer.WrappedByteBuf:int writeBytes(java.io.InputStream,int)",
                        "io.netty.buffer.CompositeByteBuf:boolean hasArray()",
                        "io.netty.buffer.EmptyByteBuf:short readUnsignedByte()",
                        "io.netty.util.internal.logging.Slf4JLogger:void debug(java.lang.String,java.lang.Object[])",
                        "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:int size()",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                        "io.netty.buffer.SwappedByteBuf:boolean release()",
                        "io.netty.handler.codec.http.DefaultHttpRequest:io.netty.handler.codec.http.HttpMethod method()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:byte readByte()",
                        "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String toString()",
                        "io.netty.util.AsciiString:boolean contentEquals(java.lang.CharSequence)",
                        "io.netty.handler.codec.http.HttpUtil:void setContentLength(io.netty.handler.codec.http.HttpMessage,long)",
                        "io.netty.buffer.ReadOnlyByteBufferBuf:boolean hasArray()",
                        "io.netty.buffer.SwappedByteBuf:int readerIndex()",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String getName()",
                        "io.netty.buffer.ByteBufUtil:void <clinit>()",
                        "io.netty.handler.codec.http.multipart.MemoryAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)",
                        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()",
                        "io.netty.handler.codec.http.HttpMethod:java.lang.String name()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                        "io.netty.util.internal.logging.Log4JLogger:void debug(java.lang.String)",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue:int size()",
                        "io.netty.handler.codec.http.HttpResponseStatus:io.netty.handler.codec.http.HttpResponseStatus valueOf(int)",
                        "io.netty.handler.codec.http.EmptyHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)",
                        "io.netty.buffer.AbstractUnpooledSlicedByteBuf:boolean hasArray()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean release()",
                        "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:int getDiscardThreshold()",
                        "io.netty.buffer.ReadOnlyByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void destroy()",
                        "io.netty.buffer.PooledUnsafeDirectByteBuf:int arrayOffset()",
                        "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                        "io.netty.buffer.EmptyByteBuf:int refCnt()",
                        "io.netty.buffer.PooledDuplicatedByteBuf:int arrayOffset()",
                        "io.netty.handler.codec.DecoderException:void <init>(java.lang.String,java.lang.Throwable)",
                        "io.netty.util.AbstractReferenceCounted:boolean release()",
                        "io.netty.buffer.AbstractUnpooledSlicedByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.channel.DefaultChannelPipeline$3:void run()",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:boolean isMultipart()",
                        "io.netty.buffer.PooledUnsafeDirectByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.buffer.PooledDirectByteBuf:byte[] array()",
                        "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.Object getValue()",
                        "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                        "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                        "io.netty.buffer.EmptyByteBuf:boolean isReadable()",
                        "io.netty.util.internal.logging.JdkLogger:void debug(java.lang.String)",
                        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                        "io.netty.buffer.ReadOnlyByteBufferBuf:byte getByte(int)",
                        "io.netty.bootstrap.ServerBootstrap$1$1:void run()",
                        "io.netty.handler.codec.http.HttpUtil:void <clinit>()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                        "io.netty.buffer.FixedCompositeByteBuf:boolean hasArray()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void removeHttpDataFromClean(io.netty.handler.codec.http.multipart.InterfaceHttpData)",
                        "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:int size()",
                        "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void addContent(io.netty.buffer.ByteBuf,boolean)",
                        "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:int size()",
                        "io.netty.buffer.ByteBufUtil:int writeUtf8(io.netty.buffer.ByteBuf,java.lang.CharSequence)",
                        "io.netty.handler.codec.http.DefaultHttpHeaders$3:boolean hasNext()",
                        "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:byte[] get()",
                        "io.netty.buffer.PoolArena:java.lang.String toString()",
                        "io.netty.buffer.UnpooledDirectByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                        "io.netty.util.ReferenceCountUtil$ReleasingTask:void run()",
                        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                        "io.netty.handler.codec.DefaultHeaders$ValueIterator:java.lang.Object next()",
                        "io.netty.util.AbstractConstant:void <clinit>()",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void removeHttpDataFromClean(io.netty.handler.codec.http.multipart.InterfaceHttpData)",
                        "io.netty.buffer.DuplicatedByteBuf:int arrayOffset()",
                        "io.netty.buffer.SwappedByteBuf:short readUnsignedByte()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf discardReadBytes()",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                        "io.netty.buffer.ReadOnlyByteBufferBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.buffer.ByteBufInputStream:int read()",
                        "io.netty.buffer.Unpooled:void <clinit>()",
                        "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:void cleanRequestHttpData(io.netty.handler.codec.http.HttpRequest)",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf discardReadBytes()",
                        "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder offer(io.netty.handler.codec.http.HttpContent)",
                        "io.netty.buffer.SwappedByteBuf:int writerIndex()",
                        "io.netty.handler.codec.http.multipart.AbstractHttpData:void setCharset(java.nio.charset.Charset)",
                        "io.netty.buffer.PooledHeapByteBuf:byte[] array()",
                        "io.netty.util.CharsetUtil:void <clinit>()",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.handler.codec.CodecOutputList:void clear()",
                        "io.netty.util.internal.ObjectUtil:int checkPositiveOrZero(int,java.lang.String)",
                        "io.netty.buffer.PooledSlicedByteBuf:int arrayOffset()",
                        "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String)",
                        "io.netty.handler.codec.DecoderException:void <init>(java.lang.String)",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void setDiscardThreshold(int)",
                        "io.netty.util.AbstractReferenceCounted:int refCnt()",
                        "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                        "io.netty.bootstrap.ServerBootstrapConfig:java.lang.String toString()",
                        "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                        "io.netty.buffer.EmptyByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                        "io.netty.buffer.PooledDuplicatedByteBuf:byte getByte(int)",
                        "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                        "io.netty.channel.DefaultChannelId:java.lang.String toString()",
                        "io.netty.buffer.PooledDuplicatedByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.util.internal.logging.Slf4JLogger:void info(java.lang.String,java.lang.Object[])",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:boolean contains(java.lang.CharSequence)",
                        "io.netty.util.Signal:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData next()",
                        "io.netty.buffer.WrappedByteBuf:int arrayOffset()",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:boolean isCompleted()",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:int refCnt()",
                        "io.netty.util.concurrent.FastThreadLocalRunnable:void run()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.buffer.ByteBufOutputStream:void <init>(io.netty.buffer.ByteBuf)",
                        "io.netty.buffer.PooledHeapByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:boolean isEmpty()",
                        "io.netty.buffer.ReadOnlyByteBufferBuf:int arrayOffset()",
                        "io.netty.buffer.FixedCompositeByteBuf:io.netty.buffer.ByteBuf discardReadBytes()",
                        "io.netty.buffer.FixedCompositeByteBuf:byte getByte(int)",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf discardReadBytes()",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData next()",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.util.internal.logging.InternalLoggerFactory:io.netty.util.internal.logging.InternalLogger getInstance(java.lang.String)",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:io.netty.handler.codec.http.FullHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus)",
                        "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.lang.String toString()",
                        "io.netty.buffer.UnpooledUnsafeDirectByteBuf:boolean hasArray()",
                        "io.netty.buffer.ByteBufInputStream:void <init>(io.netty.buffer.ByteBuf)",
                        "io.netty.handler.codec.DefaultHeaders:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType:void <clinit>()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:java.util.List getBodyHttpDatas()",
                        "io.netty.util.concurrent.DefaultPromise$2:void run()",
                        "io.netty.buffer.AbstractByteBuf:boolean isReadable()",
                        "io.netty.util.internal.logging.JdkLogger:void debug(java.lang.String,java.lang.Object[])",
                        "io.netty.buffer.EmptyByteBuf:boolean hasArray()",
                        "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                        "io.netty.buffer.SwappedByteBuf:byte getByte(int)",
                        "io.netty.handler.codec.http.HttpHeaders:java.lang.String get(java.lang.CharSequence)",
                        "io.netty.buffer.EmptyByteBuf:int readerIndex()",
                        "io.netty.buffer.SwappedByteBuf:byte readByte()",
                        "io.netty.buffer.UnpooledUnsafeDirectByteBuf:int arrayOffset()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData currentPartialHttpData()",
                        "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:java.lang.String toString()",
                        "io.netty.handler.timeout.IdleStateEvent:void <clinit>()",
                        "io.netty.buffer.FixedCompositeByteBuf:java.lang.String toString()",
                        "io.netty.buffer.UnpooledHeapByteBuf:byte[] array()",
                        "io.netty.buffer.ByteBufInputStream:int available()",
                        "io.netty.buffer.WrappedByteBuf:int writerIndex()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:java.lang.String toString()",
                        "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                        "io.netty.buffer.WrappedByteBuf:byte getByte(int)",
                        "io.netty.handler.codec.http.multipart.DiskFileUpload:java.lang.String toString()",
                        "io.netty.buffer.PooledSlicedByteBuf:byte getByte(int)",
                        "io.netty.buffer.EmptyByteBuf:byte readByte()",
                        "io.netty.channel.DefaultChannelPipeline$7:void run()",
                        "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf copy()",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                        "io.netty.buffer.SwappedByteBuf:int writeBytes(java.io.InputStream,int)",
                        "io.netty.handler.codec.DefaultHeaders$HeaderIterator:boolean hasNext()",
                        "io.netty.handler.codec.http.HttpVersion:java.lang.String toString()",
                        "io.netty.handler.codec.http.DefaultFullHttpResponse:java.lang.String toString()",
                        "io.netty.handler.codec.http.EmptyHttpHeaders:java.util.List getAll(java.lang.String)",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder offer(io.netty.handler.codec.http.HttpContent)",
                        "io.netty.handler.timeout.IdleStateHandler:void <init>(int,int,int)",
                        "io.netty.handler.codec.http.multipart.DiskAttribute:java.lang.String toString()",
                        "io.netty.buffer.SwappedByteBuf:int arrayOffset()",
                        "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:int size()",
                        "io.netty.util.internal.InternalThreadLocalMap:java.util.ArrayList arrayList(int)",
                        "io.netty.util.internal.StringUtil:java.lang.String substringAfter(java.lang.String,char)",
                        "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release()",
                        "io.netty.handler.codec.http.multipart.DiskAttribute:java.lang.String getValue()",
                        "io.netty.buffer.FixedCompositeByteBuf:int arrayOffset()",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)",
                        "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void destroy()",
                        "io.netty.handler.codec.http.multipart.MemoryAttribute:java.lang.String toString()",
                        "io.netty.handler.codec.http.HttpObjectAggregator:void <clinit>()",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                        "io.netty.buffer.CompositeByteBuf:byte getByte(int)",
                        "io.netty.handler.codec.http.QueryStringDecoder:java.lang.String toString()",
                        "io.netty.buffer.EmptyByteBuf:boolean release()",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:java.util.List getAll(java.lang.String)",
                        "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                        "io.netty.handler.codec.CodecOutputList:int size()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                        "io.netty.channel.ChannelFutureListener:void <clinit>()",
                        "io.netty.handler.codec.HeadersUtils$1:int size()",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:int getDiscardThreshold()",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)",
                        "io.netty.channel.DefaultChannelPipeline$2:void run()",
                        "io.netty.handler.codec.http.multipart.MemoryAttribute:java.lang.String getValue()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:io.netty.handler.codec.http.HttpMethod method()",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                        "io.netty.util.AsciiString:int length()",
                        "io.netty.buffer.UnpooledDirectByteBuf:boolean hasArray()",
                        "io.netty.buffer.EmptyByteBuf:int writerIndex()",
                        "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                        "io.netty.util.internal.logging.JdkLogger:void error(java.lang.String,java.lang.Object[])",
                        "io.netty.util.internal.logging.Slf4JLogger:void info(java.lang.String)",
                        "io.netty.buffer.AbstractByteBuf:int writeBytes(java.io.InputStream,int)",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.buffer.ByteBuf content()",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.buffer.UnpooledHeapByteBuf:boolean hasArray()",
                        "io.netty.buffer.WrappedByteBuf:boolean hasArray()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:int refCnt()",
                        "io.netty.buffer.UnpooledHeapByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.buffer.AbstractDerivedByteBuf:boolean release()",
                        "io.netty.buffer.PooledUnsafeDirectByteBuf:boolean hasArray()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:boolean isMultipart()",
                        "io.netty.buffer.WrappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)",
                        "io.netty.util.internal.logging.Log4JLogger:void warn(java.lang.String)",
                        "io.netty.buffer.DuplicatedByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readerIndex(int)",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                        "io.netty.buffer.UnpooledHeapByteBuf:byte getByte(int)",
                        "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:java.lang.String toString()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap clone()",
                        "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readerIndex(int)",
                        "io.netty.util.ReferenceCountUtil:void <clinit>()",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:boolean release()",
                        "io.netty.handler.codec.DecoderResult:java.lang.String toString()",
                        "io.netty.util.concurrent.DefaultPromise$3:void run()",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)",
                        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)",
                        "io.netty.buffer.AbstractPooledDerivedByteBuf:byte[] array()",
                        "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData getBodyHttpData(java.lang.String)",
                        "io.netty.util.internal.AppendableCharSequence:int length()",
                        "io.netty.channel.DefaultChannelPipeline$8:void run()",
                        "io.netty.buffer.CompositeByteBuf:int arrayOffset()",
                        "io.netty.handler.codec.http.multipart.MemoryAttribute:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                        "io.netty.buffer.PooledDirectByteBuf:int arrayOffset()",
                        "io.netty.buffer.PooledSlicedByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.handler.codec.http.HttpHeaders:boolean contains(java.lang.CharSequence)",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String toString()",
                        "io.netty.handler.codec.http.QueryStringDecoder:java.lang.String path()",
                        "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:java.lang.String toString()",
                        "io.netty.buffer.AbstractByteBuf:byte readByte()",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.handler.codec.http.multipart.MemoryFileUpload:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:java.util.List getBodyHttpDatas(java.lang.String)",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String getContentType()",
                        "io.netty.buffer.FixedCompositeByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void cleanFiles()",
                        "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.buffer.ByteBuf content()",
                        "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,long)",
                        "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                        "io.netty.buffer.CompositeByteBuf:byte[] array()",
                        "io.netty.handler.codec.HeadersUtils$CharSequenceDelegatingStringSet:boolean add(java.lang.Object)",
                        "io.netty.buffer.UnpooledUnsafeDirectByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.handler.codec.http.QueryStringDecoder:java.lang.String decodeComponent(java.lang.String,java.nio.charset.Charset)",
                        "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf copy()",
                        "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void setDiscardThreshold(int)",
                        "io.netty.handler.codec.http.multipart.DiskAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)",
                        "io.netty.handler.codec.http.cookie.ServerCookieDecoder:java.util.Set decode(java.lang.String)",
                        "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                        "io.netty.buffer.WrappedByteBuf:byte readByte()",
                        "io.netty.util.internal.logging.Log4JLogger:void warn(java.lang.String,java.lang.Object[])",
                        "io.netty.buffer.ReadOnlyByteBuf:int arrayOffset()",
                        "io.netty.util.internal.logging.Slf4JLogger:void warn(java.lang.String)",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                        "io.netty.handler.codec.http.DefaultHttpContent:java.lang.String toString()",
                        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.Channel channel()",
                        "io.netty.handler.codec.http.HttpResponseStatus:io.netty.handler.codec.http.HttpResponseStatus valueOf(int,java.lang.String)",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                        "io.netty.buffer.ReadOnlyByteBuf:boolean hasArray()",
                        "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String uri()",
                        "io.netty.buffer.UnpooledDirectByteBuf:int arrayOffset()",
                        "io.netty.channel.AbstractChannelHandlerContext:java.lang.String toString()",
                        "io.netty.util.internal.UnpaddedInternalThreadLocalMap:void <clinit>()",
                        "io.netty.buffer.AbstractByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf discardReadBytes()",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readerIndex(int)",
                        "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                        "io.netty.util.internal.logging.Log4JLogger:void error(java.lang.String,java.lang.Throwable)",
                        "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                        "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                        "io.netty.handler.codec.http.HttpResponseStatus:void <clinit>()",
                        "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release()",
                        "io.netty.buffer.UnpooledUnsafeDirectByteBuf:byte[] array()",
                        "io.netty.buffer.ReadOnlyByteBuf:byte[] array()",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf discardReadBytes()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:byte getByte(int)",
                        "io.netty.util.internal.logging.JdkLogger:void error(java.lang.String,java.lang.Throwable)",
                        "io.netty.util.internal.logging.JdkLogger:void info(java.lang.String,java.lang.Object[])",
                        "io.netty.handler.codec.http.multipart.AbstractMemoryHttpData:void addContent(io.netty.buffer.ByteBuf,boolean)",
                        "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:int writeBytes(java.io.InputStream,int)",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                        "io.netty.handler.codec.http.HttpHeaderValues:void <clinit>()",
                        "io.netty.channel.DefaultChannelPipeline$9:void run()",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                        "io.netty.channel.VoidChannelPromise:io.netty.channel.Channel channel()",
                        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)",
                        "io.netty.handler.codec.http.cookie.ServerCookieDecoder:void <clinit>()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:void addContent(io.netty.buffer.ByteBuf,boolean)",
                        "io.netty.handler.codec.HeadersUtils$1:java.lang.String get(int)",
                        "io.netty.buffer.PoolChunk:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.MemoryFileUpload:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String getName()",
                        "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                        "io.netty.buffer.AbstractReferenceCountedByteBuf:int refCnt()",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:boolean release()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.http.HttpVersion protocolVersion()",
                        "io.netty.util.concurrent.DefaultPromise$4:void run()",
                        "io.netty.handler.codec.HeadersUtils$StringEntryIterator:boolean hasNext()",
                        "io.netty.util.AsciiString:boolean contentEqualsIgnoreCase(java.lang.CharSequence)",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf discardReadBytes()",
                        "io.netty.buffer.ReadOnlyUnsafeDirectByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:void setCharset(java.nio.charset.Charset)",
                        "io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent:java.lang.String toString()",
                        "io.netty.buffer.AbstractPooledDerivedByteBuf:boolean hasArray()",
                        "io.netty.buffer.PooledHeapByteBuf:boolean hasArray()",
                        "io.netty.buffer.AbstractDerivedByteBuf:int refCnt()",
                        "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                        "io.netty.channel.DefaultChannelPipeline$6:void run()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:java.util.List getBodyHttpDatas(java.lang.String)",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.handler.codec.http.HttpUtil:void setKeepAlive(io.netty.handler.codec.http.HttpMessage,boolean)",
                        "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                        "io.netty.buffer.WrappedByteBuf:int readerIndex()",
                        "io.netty.buffer.UnpooledDirectByteBuf:byte getByte(int)",
                        "io.netty.handler.codec.http.DefaultLastHttpContent:java.lang.String toString()",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readerIndex(int)",
                        "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:int size()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String uri()",
                        "io.netty.buffer.FixedCompositeByteBuf:byte[] array()",
                        "io.netty.util.AsciiString:java.lang.String toString()",
                        "io.netty.buffer.SwappedByteBuf:int refCnt()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void cleanFiles()",
                        "io.netty.buffer.EmptyByteBuf:byte[] array()",
                        "io.netty.util.concurrent.DefaultPromise$1:void run()",
                        "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:boolean hasNext()",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData currentPartialHttpData()",
                        "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:int size()",
                        "io.netty.handler.codec.http.DefaultFullHttpRequest:java.lang.String toString()",
                        "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.handler.codec.http.FullHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus)",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:java.lang.String get(java.lang.CharSequence)",
                        "io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:io.netty.util.internal.PriorityQueueNode next()",
                        "io.netty.handler.codec.http.HttpHeaderNames:void <clinit>()",
                        "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.buffer.SwappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                        "io.netty.util.internal.logging.JdkLogger:void warn(java.lang.String,java.lang.Object[])",
                        "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:void removeHttpDataFromClean(io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.multipart.InterfaceHttpData)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                        "io.netty.buffer.DuplicatedByteBuf:byte[] array()",
                        "io.netty.buffer.PooledByteBufAllocatorMetric:java.lang.String toString()",
                        "io.netty.buffer.WrappedByteBuf:int refCnt()",
                        "io.netty.util.AsciiString:char charAt(int)",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf copy()",
                        "io.netty.handler.codec.http.multipart.MemoryFileUpload:java.lang.String getContentType()",
                        "io.netty.util.ThreadDeathWatcher$Watcher:void run()",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf copy()",
                        "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                        "io.netty.buffer.ReadOnlyByteBuf:byte getByte(int)",
                        "io.netty.util.internal.logging.JdkLogger:void warn(java.lang.String)",
                        "io.netty.util.internal.logging.Slf4JLogger:void error(java.lang.String,java.lang.Object[])",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:java.util.List getBodyHttpDatas()",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.netty.buffer.AbstractUnpooledSlicedByteBuf:byte getByte(int)",
                        "io.netty.util.internal.InternalThreadLocalMap:io.netty.util.internal.InternalThreadLocalMap get()",
                        "io.netty.handler.codec.http.HttpResponseStatus:java.lang.String toString()",
                        "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                        "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData getBodyHttpData(java.lang.String)",
                        "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                        "io.netty.channel.ChannelInitializer:void <init>()",
                        "io.netty.buffer.EmptyByteBuf:int arrayOffset()",
                        "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String toString()",
                        "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                        "io.netty.handler.codec.http.multipart.MemoryFileUpload:java.lang.String getFilename()",
                        "io.netty.buffer.DuplicatedByteBuf:byte getByte(int)",
                        "io.netty.buffer.ReadOnlyByteBufferBuf:byte[] array()",
                        "io.netty.handler.codec.http.QueryStringDecoder:java.util.Map parameters()",
                        "io.netty.util.internal.logging.Log4JLogger:void error(java.lang.String,java.lang.Object[])",
                        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)",
                        "io.netty.handler.codec.http.HttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)",
                        "io.netty.util.internal.logging.Log4JLogger:void info(java.lang.String)",
                        "io.netty.handler.codec.http.multipart.DiskFileUpload:java.lang.String getContentType()",
                        "io.netty.buffer.UnpooledHeapByteBuf:int arrayOffset()",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String getValue()",
                        "io.netty.buffer.PooledHeapByteBuf:int arrayOffset()",
                        "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                        "io.netty.util.ResourceLeakDetector$Record:java.lang.String toString()",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                        "io.netty.util.AbstractConstant:java.lang.String toString()",
                        "io.netty.handler.codec.http.DefaultFullHttpRequest:io.netty.buffer.ByteBuf content()",
                        "io.netty.handler.codec.http.HttpServerCodec:void <init>()",
                        "io.netty.buffer.WrappedByteBuf:boolean release()",
                        "io.netty.buffer.AbstractByteBuf:int readerIndex()",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.util.internal.logging.Slf4JLogger:void warn(java.lang.String,java.lang.Object[])",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String toString()",
                        "io.netty.channel.nio.NioEventLoop$6:void run()",
                        "io.netty.handler.codec.http.multipart.AbstractHttpData:boolean isCompleted()",
                        "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.String toString()",
                        "io.netty.handler.codec.http.HttpUtil:boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)",
                        "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                        "io.netty.buffer.UnpooledDirectByteBuf:byte[] array()",
                        "io.netty.buffer.SwappedByteBuf:boolean hasArray()",
                        "io.netty.channel.WriteBufferWaterMark:java.lang.String toString()",
                        "io.netty.channel.DefaultChannelPipeline$5:void run()",
                        "io.netty.handler.codec.http.HttpMethod:void <clinit>()",
                        "io.netty.handler.codec.http.multipart.AbstractHttpData:long length()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.buffer.UnreleasableByteBuf:boolean release()",
                        "io.netty.handler.codec.http.HttpHeaders:java.lang.String toString()",
                        "io.netty.util.internal.logging.JdkLogger:void info(java.lang.String)",
                        "io.netty.bootstrap.AbstractBootstrap:java.lang.String toString()",
                        "io.netty.util.internal.AppendableCharSequence:java.lang.String toString()",
                        "io.netty.buffer.WrappedByteBuf:short readUnsignedByte()",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf copy(int,int)",
                        "io.netty.handler.codec.http.EmptyHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.netty.buffer.EmptyByteBuf:int writeBytes(java.io.InputStream,int)",
                        "io.netty.buffer.PooledDirectByteBuf:boolean hasArray()",
                        "io.netty.handler.codec.DefaultHeaders$HeaderIterator:java.util.Map$Entry next()",
                        "io.netty.buffer.AbstractUnpooledSlicedByteBuf:int arrayOffset()",
                        "io.netty.buffer.WrappedByteBuf:byte[] array()",
                        "io.netty.handler.codec.http.DefaultHttpContent:io.netty.buffer.ByteBuf content()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String getFilename()",
                        "io.netty.buffer.DuplicatedByteBuf:boolean hasArray()",
                        "io.netty.buffer.ReadOnlyByteBuf:io.netty.buffer.ByteBuf discardReadBytes()",
                        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer(int)",
                        "io.netty.handler.codec.http.multipart.AbstractHttpData:java.lang.String getName()",
                        "io.netty.handler.codec.http.DefaultHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                        "io.netty.util.internal.ObjectUtil:java.lang.Object checkNotNull(java.lang.Object,java.lang.String)",
                        "io.netty.buffer.EmptyByteBuf:byte getByte(int)"
                    ],
                    "CVE": [
                        "CVE-2019-16869"
                    ],
                    "used vul-method": [
                        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                        "io.netty.channel.DefaultChannelPipeline$4:void run()",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                        "io.netty.channel.DefaultChannelPipeline$3:void run()",
                        "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                        "io.netty.util.concurrent.FastThreadLocalRunnable:void run()",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.util.concurrent.DefaultPromise$2:void run()",
                        "io.netty.channel.DefaultChannelPipeline$7:void run()",
                        "io.netty.channel.DefaultChannelPipeline$2:void run()",
                        "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                        "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.channel.DefaultChannelPipeline$8:void run()",
                        "io.netty.channel.DefaultChannelPipeline$9:void run()",
                        "io.netty.channel.DefaultChannelPipeline$6:void run()",
                        "io.netty.util.concurrent.DefaultPromise$1:void run()",
                        "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                        "io.netty.channel.DefaultChannelPipeline$5:void run()"
                    ],
                    "vul-called frequency": 53,
                    "related vul root method": {
                        "CVE-2019-16869": [
                            "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-16869": [
                            "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                            "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                            "io.netty.channel.DefaultChannelPipeline$4:void run()",
                            "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                            "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                            "io.netty.channel.DefaultChannelPipeline$3:void run()",
                            "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                            "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                            "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                            "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                            "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                            "io.netty.util.concurrent.FastThreadLocalRunnable:void run()",
                            "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                            "io.netty.util.concurrent.DefaultPromise$2:void run()",
                            "io.netty.channel.DefaultChannelPipeline$7:void run()",
                            "io.netty.channel.DefaultChannelPipeline$2:void run()",
                            "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                            "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                            "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                            "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                            "io.netty.channel.DefaultChannelPipeline$8:void run()",
                            "io.netty.channel.DefaultChannelPipeline$9:void run()",
                            "io.netty.channel.DefaultChannelPipeline$6:void run()",
                            "io.netty.util.concurrent.DefaultPromise$1:void run()",
                            "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                            "io.netty.channel.DefaultChannelPipeline$5:void run()"
                        ]
                    }
                },
                "com.alibaba:fastjson:1.2.47": {
                    "used-method num": 33,
                    "used method": [
                        "com.alibaba.fastjson.JSONObject:void clear()",
                        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.io.InputStream,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])",
                        "com.alibaba.fastjson.serializer.JSONSerializer:java.lang.String toString()",
                        "com.alibaba.fastjson.parser.ParseContext:java.lang.String toString()",
                        "com.alibaba.fastjson.JSONArray:java.util.Iterator iterator()",
                        "com.alibaba.fastjson.JSON:java.lang.String toString()",
                        "com.alibaba.fastjson.JSONArray:java.lang.Object[] toArray(java.lang.Object[])",
                        "com.alibaba.fastjson.JSONObject:boolean containsKey(java.lang.Object)",
                        "com.alibaba.fastjson.parser.Feature:void <clinit>()",
                        "com.alibaba.fastjson.JSONArray:void clear()",
                        "com.alibaba.fastjson.JSONObject:java.util.Set entrySet()",
                        "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)",
                        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                        "com.alibaba.fastjson.JSONObject:int size()",
                        "com.alibaba.fastjson.JSONArray:boolean addAll(java.util.Collection)",
                        "com.alibaba.fastjson.serializer.SerializeWriter:void close()",
                        "com.alibaba.fastjson.JSONArray:boolean isEmpty()",
                        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])",
                        "com.alibaba.fastjson.serializer.SerialContext:java.lang.String toString()",
                        "com.alibaba.fastjson.JSONArray:int size()",
                        "com.alibaba.fastjson.serializer.SerializeWriter:java.lang.String toString()",
                        "com.alibaba.fastjson.JSONObject:java.lang.Object clone()",
                        "com.alibaba.fastjson.JSON:void <clinit>()",
                        "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "com.alibaba.fastjson.JSONObject:void putAll(java.util.Map)",
                        "com.alibaba.fastjson.serializer.SerializerFeature:void <clinit>()",
                        "com.alibaba.fastjson.JSONArray:java.lang.Object clone()",
                        "com.alibaba.fastjson.JSONArray:java.lang.Object get(int)",
                        "com.alibaba.fastjson.serializer.SerializeWriter:void write(char[],int,int)",
                        "com.alibaba.fastjson.JSONObject:java.lang.Object remove(java.lang.Object)",
                        "com.alibaba.fastjson.JSONArray:boolean add(java.lang.Object)",
                        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])"
                    ],
                    "CVE": [
                        "CVE-2022-25845"
                    ],
                    "used vul-method": [
                        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.io.InputStream,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])",
                        "com.alibaba.fastjson.JSON:java.lang.String toString()",
                        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                        "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])",
                        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])"
                    ],
                    "vul-called frequency": 8,
                    "related vul root method": {
                        "CVE-2022-25845": [
                            "com.alibaba.fastjson.parser.ParserConfig:java.lang.Class checkAutoType(java.lang.String,java.lang.Class,int)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2022-25845": [
                            "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.io.InputStream,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])",
                            "com.alibaba.fastjson.JSON:java.lang.String toString()",
                            "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                            "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                            "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])",
                            "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])"
                        ]
                    }
                }
            }
        }
    }
}
{
    "project name": "cloudfoundry-community_java-nats",
    "modules": {
        "com.github.cloudfoundry-community:nats-parent": {
            "vulnerable dependencies": {
                "io.netty:netty-all:4.0.27.Final": {
                    "used-method num": 144,
                    "used method": [
                        "io.netty.buffer.EmptyByteBuf:int writerIndex()",
                        "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf skipBytes(int)",
                        "io.netty.handler.codec.TooLongFrameException:void <init>(java.lang.String)",
                        "io.netty.channel.nio.SelectedSelectionKeySet:boolean add(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean add(java.lang.Object)",
                        "io.netty.util.concurrent.AbstractEventExecutor:java.util.Iterator iterator()",
                        "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                        "io.netty.buffer.EmptyByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                        "io.netty.buffer.AbstractByteBuf:int writerIndex()",
                        "io.netty.buffer.SwappedByteBuf:int writerIndex()",
                        "io.netty.buffer.AbstractByteBuf:byte getByte(int)",
                        "io.netty.channel.DefaultChannelPipeline$6:void run()",
                        "io.netty.bootstrap.Bootstrap:io.netty.bootstrap.Bootstrap clone()",
                        "io.netty.handler.codec.MessageToByteEncoder:void <init>()",
                        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                        "io.netty.util.CharsetUtil:void <clinit>()",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ForkJoinPool:void execute(java.lang.Runnable)",
                        "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                        "io.netty.buffer.WrappedByteBuf:int readerIndex()",
                        "io.netty.buffer.UnpooledDirectByteBuf:byte getByte(int)",
                        "io.netty.util.internal.MpscLinkedQueue$1:boolean hasNext()",
                        "io.netty.bootstrap.Bootstrap:void <clinit>()",
                        "io.netty.util.concurrent.GlobalEventExecutor:void execute(java.lang.Runnable)",
                        "io.netty.buffer.PoolThreadCache$1:void run()",
                        "io.netty.handler.codec.ReplayingDecoderBuffer:int writerIndex()",
                        "io.netty.channel.DefaultChannelPipeline$1:void run()",
                        "io.netty.buffer.UnpooledHeapByteBuf:byte getByte(int)",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                        "io.netty.util.concurrent.DefaultPromise$1:void run()",
                        "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                        "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                        "io.netty.util.concurrent.DefaultPromise$5:void run()",
                        "io.netty.channel.ChannelInitializer:void <clinit>()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                        "io.netty.util.concurrent.MultithreadEventExecutorGroup:java.util.Iterator iterator()",
                        "io.netty.util.concurrent.DefaultPromise$LateListeners:void run()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                        "io.netty.util.concurrent.DefaultPromise$3:void run()",
                        "io.netty.util.internal.MpscLinkedQueue:boolean add(java.lang.Object)",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean add(java.lang.Object)",
                        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                        "io.netty.buffer.AbstractByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.util.ThreadDeathWatcher$Watcher:void run()",
                        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                        "io.netty.buffer.ByteBufOutputStream:void <init>(io.netty.buffer.ByteBuf)",
                        "io.netty.util.internal.MpscLinkedQueue:java.util.Iterator iterator()",
                        "io.netty.buffer.ReadOnlyByteBuf:byte getByte(int)",
                        "io.netty.handler.codec.ReplayingDecoderBuffer:byte getByte(int)",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeByte(int)",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                        "io.netty.util.concurrent.DefaultPromise:boolean cancel(boolean)",
                        "io.netty.channel.DefaultChannelPipeline$4:void run()",
                        "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf readBytes(int)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object remove(java.lang.Object)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                        "io.netty.channel.ChannelInitializer:void <init>()",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                        "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                        "io.netty.util.concurrent.DefaultPromise$2:void run()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                        "io.netty.buffer.SwappedByteBuf:byte getByte(int)",
                        "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable:void run()",
                        "io.netty.buffer.EmptyByteBuf:int readerIndex()",
                        "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf skipBytes(int)",
                        "io.netty.buffer.SwappedByteBuf:int readerIndex()",
                        "io.netty.channel.nio.NioEventLoop$1:void run()",
                        "io.netty.buffer.WrappedByteBuf:int writerIndex()",
                        "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                        "io.netty.bootstrap.Bootstrap$2:void run()",
                        "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable:void run()",
                        "io.netty.buffer.WrappedByteBuf:byte getByte(int)",
                        "io.netty.util.concurrent.DefaultPromise$LateListenerNotifier:void run()",
                        "io.netty.buffer.SwappedByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                        "io.netty.util.internal.MpscLinkedQueue$1:java.lang.Object next()",
                        "io.netty.buffer.AbstractByteBuf:int readerIndex()",
                        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect()",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "io.netty.bootstrap.Bootstrap:void <init>()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:java.util.Iterator iterator()",
                        "io.netty.handler.codec.ReplayingDecoder:void <init>()",
                        "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.channel.MultithreadEventLoopGroup:io.netty.channel.EventLoop next()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:boolean add(java.lang.Object)",
                        "io.netty.handler.codec.ReplayingDecoderBuffer:int readerIndex()",
                        "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction:void run()",
                        "io.netty.channel.DefaultChannelPipeline$5:void run()",
                        "io.netty.channel.SingleThreadEventLoop:io.netty.channel.EventLoop next()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                        "io.netty.channel.DefaultChannelPipeline$3:void run()",
                        "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()",
                        "io.netty.util.concurrent.GlobalEventExecutor:void shutdown()",
                        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:byte getByte(int)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                        "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.util.Collection values()",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                        "io.netty.buffer.WrappedByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                        "io.netty.buffer.ReadOnlyByteBufferBuf:byte getByte(int)",
                        "io.netty.buffer.CompositeByteBuf:byte getByte(int)",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                        "io.netty.handler.codec.ReplayingDecoderBuffer:java.lang.String toString(int,int,java.nio.charset.Charset)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                        "io.netty.util.concurrent.GlobalEventExecutor$PurgeTask:void run()",
                        "io.netty.util.concurrent.AbstractEventExecutorGroup:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                        "io.netty.util.internal.chmv8.ForkJoinWorkerThread:void run()",
                        "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                        "io.netty.util.ReferenceCountUtil$ReleasingTask:void run()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                        "io.netty.channel.DefaultChannelPipeline$2:void run()",
                        "io.netty.util.concurrent.DefaultPromise$4:void run()",
                        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()",
                        "io.netty.buffer.EmptyByteBuf:byte getByte(int)",
                        "io.netty.handler.codec.ReplayingDecoder:void <clinit>()"
                    ],
                    "CVE": [
                        "CVE-2019-16869"
                    ],
                    "used vul-method": [
                        "io.netty.channel.DefaultChannelPipeline$6:void run()",
                        "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                        "io.netty.channel.DefaultChannelPipeline$1:void run()",
                        "io.netty.util.concurrent.DefaultPromise$1:void run()",
                        "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                        "io.netty.util.concurrent.DefaultPromise$LateListeners:void run()",
                        "io.netty.util.concurrent.DefaultPromise$3:void run()",
                        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                        "io.netty.util.concurrent.DefaultPromise:boolean cancel(boolean)",
                        "io.netty.channel.DefaultChannelPipeline$4:void run()",
                        "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                        "io.netty.util.concurrent.DefaultPromise$2:void run()",
                        "io.netty.bootstrap.Bootstrap$2:void run()",
                        "io.netty.util.concurrent.DefaultPromise$LateListenerNotifier:void run()",
                        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect()",
                        "io.netty.channel.DefaultChannelPipeline$5:void run()",
                        "io.netty.channel.DefaultChannelPipeline$3:void run()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                        "io.netty.channel.DefaultChannelPipeline$2:void run()",
                        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
                    ],
                    "vul-called frequency": 41,
                    "related vul root method": {
                        "CVE-2019-16869": [
                            "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-16869": [
                            "io.netty.channel.DefaultChannelPipeline$6:void run()",
                            "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                            "io.netty.channel.DefaultChannelPipeline$1:void run()",
                            "io.netty.util.concurrent.DefaultPromise$1:void run()",
                            "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                            "io.netty.util.concurrent.DefaultPromise$LateListeners:void run()",
                            "io.netty.util.concurrent.DefaultPromise$3:void run()",
                            "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                            "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                            "io.netty.util.concurrent.DefaultPromise:boolean cancel(boolean)",
                            "io.netty.channel.DefaultChannelPipeline$4:void run()",
                            "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                            "io.netty.util.concurrent.DefaultPromise$2:void run()",
                            "io.netty.bootstrap.Bootstrap$2:void run()",
                            "io.netty.util.concurrent.DefaultPromise$LateListenerNotifier:void run()",
                            "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect()",
                            "io.netty.channel.DefaultChannelPipeline$5:void run()",
                            "io.netty.channel.DefaultChannelPipeline$3:void run()",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                            "io.netty.channel.DefaultChannelPipeline$2:void run()",
                            "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
                        ]
                    }
                },
                "ch.qos.logback:logback-classic:1.0.6": {
                    "used-method num": 9,
                    "used method": [
                        "ch.qos.logback.classic.Logger:void warn(java.lang.String,java.lang.Object)",
                        "ch.qos.logback.classic.Logger:void error(java.lang.String,java.lang.Throwable)",
                        "ch.qos.logback.classic.Logger:void debug(java.lang.String,java.lang.Object,java.lang.Object)",
                        "ch.qos.logback.classic.Logger:void debug(java.lang.String)",
                        "ch.qos.logback.classic.Logger:void info(java.lang.String,java.lang.Object)",
                        "ch.qos.logback.classic.Logger:void warn(java.lang.String)",
                        "ch.qos.logback.classic.Logger:void debug(java.lang.String,java.lang.Object)",
                        "ch.qos.logback.classic.Logger:void trace(java.lang.String,java.lang.Object)",
                        "ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread:void run()"
                    ]
                }
            }
        }
    }
}
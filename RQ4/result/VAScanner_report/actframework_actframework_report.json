{
    "project name": "actframework_actframework",
    "vulnerable dependencies": {
        "com.alibaba:fastjson:1.2.75": {
            "used-method num": 182,
            "used method": [
                "com.alibaba.fastjson.JSONArray:void <init>()",
                "com.alibaba.fastjson.serializer.JSONSerializer:java.lang.String toString()",
                "com.alibaba.fastjson.parser.JSONLexerBase:long longValue()",
                "com.alibaba.fastjson.serializer.BigIntegerCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONSerializer:void write(java.lang.Object)",
                "com.alibaba.fastjson.serializer.JSONSerializer:void decrementIdent()",
                "com.alibaba.fastjson.parser.JSONScanner:char next()",
                "com.alibaba.fastjson.parser.ParserConfig:com.alibaba.fastjson.parser.ParserConfig getGlobalInstance()",
                "com.alibaba.fastjson.serializer.SerializeWriter:void write(int)",
                "com.alibaba.fastjson.serializer.FloatCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.CalendarCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONSerializer:void <init>(com.alibaba.fastjson.serializer.SerializeWriter,com.alibaba.fastjson.serializer.SerializeConfig)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.String,java.lang.Object)",
                "com.alibaba.fastjson.serializer.SerializeFilterable:boolean applyName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String)",
                "com.alibaba.fastjson.JSONArray:int hashCode()",
                "com.alibaba.fastjson.JSONArray:void add(int,java.lang.Object)",
                "com.alibaba.fastjson.JSON:void <clinit>()",
                "com.alibaba.fastjson.TypeReference:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:java.util.Set keySet()",
                "com.alibaba.fastjson.parser.ParseContext:java.lang.String toString()",
                "com.alibaba.fastjson.parser.JSONScanner:java.lang.String stringVal()",
                "com.alibaba.fastjson.serializer.DoubleSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONSerializer:void println()",
                "com.alibaba.fastjson.parser.JSONLexerBase:char getCurrent()",
                "com.alibaba.fastjson.serializer.SerializeWriter:void writeInt(int)",
                "com.alibaba.fastjson.JSONObject:boolean containsKey(java.lang.Object)",
                "com.alibaba.fastjson.util.GenericArrayTypeImpl:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)",
                "com.alibaba.fastjson.parser.Feature:void <clinit>()",
                "com.alibaba.fastjson.serializer.LongCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])",
                "com.alibaba.fastjson.serializer.EnumerationSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.ArraySerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONObjectCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.ListSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.TypeReference:java.lang.reflect.Type getType()",
                "com.alibaba.fastjson.serializer.SerializeFilterable:void <init>()",
                "com.alibaba.fastjson.JSONArray:boolean removeAll(java.util.Collection)",
                "com.alibaba.fastjson.serializer.SerializeWriter:void write(java.lang.String)",
                "com.alibaba.fastjson.serializer.JSONSerializer:void writeReference(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:boolean isEmpty()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object clone()",
                "com.alibaba.fastjson.serializer.SerializeWriter:void write(char[],int,int)",
                "com.alibaba.fastjson.util.ParameterizedTypeImpl:java.lang.reflect.Type[] getActualTypeArguments()",
                "com.alibaba.fastjson.JSONArray:boolean add(java.lang.Object)",
                "com.alibaba.fastjson.serializer.AtomicCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.DateCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.parser.JSONLexerBase:void resetStringPosition()",
                "com.alibaba.fastjson.serializer.SerializeConfig:void <clinit>()",
                "com.alibaba.fastjson.serializer.ToStringSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)",
                "com.alibaba.fastjson.JSONException:void <init>(java.lang.String)",
                "com.alibaba.fastjson.serializer.JodaCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.util.TypeUtils:void clearClassMapping()",
                "com.alibaba.fastjson.util.FieldInfo:int compareTo(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:java.lang.Object remove(int)",
                "com.alibaba.fastjson.serializer.SerializeConfig:boolean put(java.lang.reflect.Type,com.alibaba.fastjson.serializer.ObjectSerializer)",
                "com.alibaba.fastjson.serializer.CharacterCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)",
                "com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.parser.JSONLexerBase:void nextToken()",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializeFilter[],com.alibaba.fastjson.serializer.SerializerFeature[])",
                "com.alibaba.fastjson.parser.DefaultJSONParser:com.alibaba.fastjson.parser.ParseContext getContext()",
                "com.alibaba.fastjson.JSONObject:void putAll(java.util.Map)",
                "com.alibaba.fastjson.serializer.MiscCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONSerializer:com.alibaba.fastjson.serializer.ObjectSerializer getObjectWriter(java.lang.Class)",
                "com.alibaba.fastjson.JSONArray:java.util.Iterator iterator()",
                "com.alibaba.fastjson.JSONArray:boolean contains(java.lang.Object)",
                "com.alibaba.fastjson.parser.DefaultJSONParser:java.lang.Object parseObject(java.lang.reflect.Type,java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:void <init>(boolean)",
                "com.alibaba.fastjson.serializer.SerializeWriter:void writeFieldName(java.lang.String)",
                "com.alibaba.fastjson.serializer.AdderSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.SerializeFilterable:java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)",
                "com.alibaba.fastjson.JSONObject:java.util.Set entrySet()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)",
                "com.alibaba.fastjson.serializer.SerializeWriter:void writeNull()",
                "com.alibaba.fastjson.JSONArray:boolean remove(java.lang.Object)",
                "com.alibaba.fastjson.parser.JSONLexerBase:int token()",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.TypeReference:void <init>()",
                "com.alibaba.fastjson.parser.JSONLexerBase:boolean isEnabled(com.alibaba.fastjson.parser.Feature)",
                "com.alibaba.fastjson.JSONArray:int size()",
                "com.alibaba.fastjson.serializer.SerializeWriter:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Boolean getBoolean(java.lang.String)",
                "com.alibaba.fastjson.util.GenericArrayTypeImpl:int hashCode()",
                "com.alibaba.fastjson.serializer.IntegerCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.SerializeWriter:boolean isEnabled(int)",
                "com.alibaba.fastjson.serializer.SerializeWriter:void <clinit>()",
                "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.serializer.SerializeFilterable:java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object)",
                "com.alibaba.fastjson.serializer.MapSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.SerializeWriter:void writeFieldName(java.lang.String,boolean)",
                "com.alibaba.fastjson.JSONObject:void <init>()",
                "com.alibaba.fastjson.parser.DefaultJSONParser:com.alibaba.fastjson.parser.SymbolTable getSymbolTable()",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.serializer.AnnotationSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.SerializeConfig:void <init>()",
                "com.alibaba.fastjson.serializer.SerializeWriter:com.alibaba.fastjson.serializer.SerializeWriter append(char)",
                "com.alibaba.fastjson.JSONPath:void <clinit>()",
                "com.alibaba.fastjson.serializer.SerializeConfig:com.alibaba.fastjson.serializer.SerializeConfig getGlobalInstance()",
                "com.alibaba.fastjson.parser.DefaultJSONParser:void setContext(com.alibaba.fastjson.parser.ParseContext)",
                "com.alibaba.fastjson.parser.JSONLexerBase:java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable,char)",
                "com.alibaba.fastjson.serializer.SerialContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object clone()",
                "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                "com.alibaba.fastjson.serializer.FieldSerializer:int compareTo(java.lang.Object)",
                "com.alibaba.fastjson.serializer.CollectionCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                "com.alibaba.fastjson.JSONObject:void clear()",
                "com.alibaba.fastjson.serializer.PrimitiveArraySerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.util.ParameterizedTypeImpl:java.lang.reflect.Type getRawType()",
                "com.alibaba.fastjson.parser.ParserConfig:void putDeserializer(java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ObjectDeserializer)",
                "com.alibaba.fastjson.JSONObject:java.util.Collection values()",
                "com.alibaba.fastjson.parser.deserializer.OptionalCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.ObjectArrayCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONSerializableSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.support.moneta.MonetaCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSONArray:java.lang.Object set(int,java.lang.Object)",
                "com.alibaba.fastjson.util.TypeUtils:void <clinit>()",
                "com.alibaba.fastjson.serializer.SerializeFilterable:java.util.List getNameFilters()",
                "com.alibaba.fastjson.parser.ParserConfig:void <clinit>()",
                "com.alibaba.fastjson.serializer.GuavaCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSONObject:int size()",
                "com.alibaba.fastjson.JSONArray:boolean addAll(java.util.Collection)",
                "com.alibaba.fastjson.serializer.JavaBeanSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONSerializer:boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature)",
                "com.alibaba.fastjson.JSONArray:boolean isEmpty()",
                "com.alibaba.fastjson.serializer.StringCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.SerializeWriter:void <init>(java.io.Writer,int,com.alibaba.fastjson.serializer.SerializerFeature[])",
                "com.alibaba.fastjson.serializer.SerializeFilterable:boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object)",
                "com.alibaba.fastjson.util.ASMClassLoader:java.lang.Class loadClass(java.lang.String,boolean)",
                "com.alibaba.fastjson.serializer.AwtCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.SerializeWriter:void writeString(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.parser.JSONLexerBase:void nextToken(int)",
                "com.alibaba.fastjson.support.springfox.SwaggerJsonSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSONArray:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.serializer.JSONSerializer:boolean containsReference(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:int indexOf(java.lang.Object)",
                "com.alibaba.fastjson.util.ParameterizedTypeImpl:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.serializer.ByteBufferCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.SerializeFilterable:java.util.List getPropertyFilters()",
                "com.alibaba.fastjson.serializer.ClobSeriliazer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                "com.alibaba.fastjson.serializer.JSONSerializer:void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.serializer.SerializeFilterable:java.util.List getPropertyPreFilters()",
                "com.alibaba.fastjson.serializer.JSONAwareSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.parser.DefaultJSONParser:com.alibaba.fastjson.parser.JSONLexer getLexer()",
                "com.alibaba.fastjson.serializer.SerializeFilterable:java.util.List getValueFilters()",
                "com.alibaba.fastjson.JSONObject:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "com.alibaba.fastjson.serializer.SerializeFilterable:void addFilter(com.alibaba.fastjson.serializer.SerializeFilter)",
                "com.alibaba.fastjson.parser.JSONLexerBase:int pos()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object remove(java.lang.Object)",
                "com.alibaba.fastjson.serializer.EnumSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONSerializer:void setContext(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object,int)",
                "com.alibaba.fastjson.serializer.JSONSerializer:void incrementIndent()",
                "com.alibaba.fastjson.serializer.JSONSerializer:com.alibaba.fastjson.serializer.SerializeWriter getWriter()",
                "com.alibaba.fastjson.serializer.AppendableSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.SerializeWriter:com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence)",
                "com.alibaba.fastjson.JSONArray:java.lang.Object[] toArray(java.lang.Object[])",
                "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)",
                "com.alibaba.fastjson.serializer.BigDecimalCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSONArray:void clear()",
                "com.alibaba.fastjson.parser.JSONLexerBase:java.lang.String scanSymbolUnQuoted(com.alibaba.fastjson.parser.SymbolTable)",
                "com.alibaba.fastjson.JSONObject:boolean containsValue(java.lang.Object)",
                "com.alibaba.fastjson.serializer.SerializeWriter:void close()",
                "com.alibaba.fastjson.parser.DefaultJSONParser:void checkMapResolve(java.util.Map,java.lang.Object)",
                "com.alibaba.fastjson.serializer.ReferenceCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.parser.JSONLexerBase:void skipWhitespace()",
                "com.alibaba.fastjson.serializer.BooleanCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.util.GenericArrayTypeImpl:java.lang.String toString()",
                "com.alibaba.fastjson.parser.DefaultJSONParser:com.alibaba.fastjson.parser.ParseContext setContext(com.alibaba.fastjson.parser.ParseContext,java.lang.Object,java.lang.Object)",
                "com.alibaba.fastjson.serializer.SerializeWriter:boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature)",
                "com.alibaba.fastjson.serializer.SerializeWriter:void writeLong(long)",
                "com.alibaba.fastjson.serializer.SerializerFeature:void <clinit>()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object get(int)",
                "com.alibaba.fastjson.JSONArray:java.util.List subList(int,int)",
                "com.alibaba.fastjson.util.ParameterizedTypeImpl:int hashCode()"
            ],
            "CVE": [
                "CVE-2022-25845"
            ],
            "used vul-method": [
                "com.alibaba.fastjson.serializer.JSONSerializer:void write(java.lang.Object)",
                "com.alibaba.fastjson.serializer.CalendarCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])",
                "com.alibaba.fastjson.serializer.EnumerationSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.ArraySerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONObjectCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.ListSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.DateCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.ToStringSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)",
                "com.alibaba.fastjson.serializer.JodaCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializeFilter[],com.alibaba.fastjson.serializer.SerializerFeature[])",
                "com.alibaba.fastjson.serializer.MiscCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.parser.DefaultJSONParser:java.lang.Object parseObject(java.lang.reflect.Type,java.lang.Object)",
                "com.alibaba.fastjson.serializer.SerializeFilterable:java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.serializer.MapSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.serializer.AnnotationSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)",
                "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                "com.alibaba.fastjson.serializer.CollectionCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                "com.alibaba.fastjson.parser.deserializer.OptionalCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.ObjectArrayCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JSONSerializableSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.GuavaCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.JavaBeanSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.serializer.JSONAwareSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.EnumSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.serializer.AppendableSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)",
                "com.alibaba.fastjson.serializer.ReferenceCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)"
            ],
            "vul-called frequency": 310,
            "related vul root method": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.parser.ParserConfig:java.lang.Class checkAutoType(java.lang.String,java.lang.Class,int)"
                ]
            },
            "CVE-API": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.serializer.JSONSerializer:void write(java.lang.Object)",
                    "com.alibaba.fastjson.serializer.CalendarCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)",
                    "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])",
                    "com.alibaba.fastjson.serializer.EnumerationSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.ArraySerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.JSONObjectCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.ListSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.DateCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.ToStringSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)",
                    "com.alibaba.fastjson.serializer.JodaCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializeFilter[],com.alibaba.fastjson.serializer.SerializerFeature[])",
                    "com.alibaba.fastjson.serializer.MiscCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.parser.DefaultJSONParser:java.lang.Object parseObject(java.lang.reflect.Type,java.lang.Object)",
                    "com.alibaba.fastjson.serializer.SerializeFilterable:java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                    "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)",
                    "com.alibaba.fastjson.JSON:java.lang.String toString()",
                    "com.alibaba.fastjson.serializer.MapSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                    "com.alibaba.fastjson.serializer.AnnotationSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)",
                    "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                    "com.alibaba.fastjson.serializer.CollectionCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                    "com.alibaba.fastjson.parser.deserializer.OptionalCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.ObjectArrayCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.JSONSerializableSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.GuavaCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.JavaBeanSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                    "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                    "com.alibaba.fastjson.serializer.JSONAwareSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.EnumSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.serializer.AppendableSerializer:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)",
                    "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)",
                    "com.alibaba.fastjson.serializer.ReferenceCodec:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)"
                ]
            }
        },
        "io.undertow:undertow-core:2.1.6.Final": {
            "used-method num": 264,
            "used method": [
                "io.undertow.util.AttachmentList:boolean add(java.lang.Object)",
                "io.undertow.protocols.ssl.SslConduit$1:void run()",
                "io.undertow.util.HeaderMap:boolean contains(io.undertow.util.HttpString)",
                "io.undertow.util.HeaderValues:void push(java.lang.Object)",
                "io.undertow.util.HeaderValues$1:boolean hasNext()",
                "io.undertow.io.UndertowOutputStream:void flush()",
                "io.undertow.websockets.WebSocketExtension$Parameter:java.lang.String toString()",
                "io.undertow.server.handlers.HttpContinueAcceptingHandler$1:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.util.HeaderMap$2:java.util.Iterator iterator()",
                "io.undertow.server.handlers.sse.ServerSentEventConnection$5:void run()",
                "io.undertow.server.HttpServerExchange:io.undertow.server.HttpServerExchange dispatch(java.lang.Runnable)",
                "io.undertow.conduits.WriteTimeoutStreamSinkConduit$1:void run()",
                "io.undertow.server.HttpServerExchange:io.undertow.server.HttpServerExchange setStatusCode(int)",
                "io.undertow.server.protocol.framed.AbstractFramedChannel:java.lang.String toString()",
                "io.undertow.util.FlexBase64$EncoderOutputStream:void flush()",
                "io.undertow.server.HttpServerExchange:io.undertow.server.HttpServerExchange endExchange()",
                "io.undertow.io.UndertowOutputStream:void write(int)",
                "io.undertow.server.HttpServerExchange:java.lang.String getQueryString()",
                "io.undertow.protocols.ssl.UndertowAcceptingSslChannel:void resumeAccepts()",
                "io.undertow.protocols.ssl.SslConduit$5:void run()",
                "io.undertow.util.FlexBase64$DecoderInputStream:int read(byte[],int,int)",
                "io.undertow.io.UndertowInputStream:int read(byte[],int,int)",
                "io.undertow.util.HeaderValues:java.lang.Object[] toArray(java.lang.Object[])",
                "io.undertow.io.AsyncSenderImpl:void send(java.nio.ByteBuffer)",
                "io.undertow.protocols.ssl.SslConduit:java.lang.String toString()",
                "io.undertow.util.HeaderMap$2$1:io.undertow.util.HttpString next()",
                "io.undertow.server.handlers.resource.URLResource:void <init>(java.net.URL,java.lang.String)",
                "io.undertow.protocols.http2.Http2Channel$1:void run()",
                "io.undertow.server.handlers.encoding.EncodingMapping:int compareTo(java.lang.Object)",
                "io.undertow.server.handlers.proxy.ProxyHandler$ProxyAction$1$1$1:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.server.handlers.resource.PathResource$1TransferTask$1:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.io.UndertowInputStream:int read()",
                "io.undertow.server.HttpServerExchange:java.lang.String getRelativePath()",
                "io.undertow.io.DefaultIoCallback$1:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.util.PathTemplate:boolean equals(java.lang.Object)",
                "io.undertow.server.handlers.resource.CachedResource$CacheKey:boolean equals(java.lang.Object)",
                "io.undertow.util.FlexBase64$DecoderOutputStream:void write(byte[],int,int)",
                "io.undertow.util.SubstringMap$1$1:boolean hasNext()",
                "io.undertow.server.handlers.form.FormData:boolean equals(java.lang.Object)",
                "io.undertow.server.HttpServerExchange:org.xnio.channels.StreamSourceChannel getRequestChannel()",
                "io.undertow.server.HttpServerExchange:io.undertow.util.HttpString getRequestMethod()",
                "io.undertow.util.HeaderMap$2:int size()",
                "io.undertow.util.FlexBase64$DecoderInputStream:void close()",
                "io.undertow.util.HeaderMap:io.undertow.util.HeaderMap add(io.undertow.util.HttpString,java.lang.String)",
                "io.undertow.io.BlockingSenderImpl:void close(io.undertow.io.IoCallback)",
                "io.undertow.server.HttpServerExchange:java.io.InputStream getInputStream()",
                "io.undertow.util.CopyOnWriteMap:java.util.Set keySet()",
                "io.undertow.util.HeaderMap:io.undertow.util.HeaderMap put(io.undertow.util.HttpString,java.lang.String)",
                "io.undertow.util.QValueParser$QValueResult:int compareTo(java.lang.Object)",
                "io.undertow.util.HeaderMap:java.util.Collection getHeaderNames()",
                "io.undertow.util.HeaderValues:boolean add(java.lang.Object)",
                "io.undertow.conduits.RateLimitingStreamSinkConduit$1:void run()",
                "io.undertow.server.HttpServerExchange:io.undertow.io.Receiver getRequestReceiver()",
                "io.undertow.io.DefaultIoCallback$1:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.io.UndertowInputStream:void <init>(io.undertow.server.HttpServerExchange)",
                "io.undertow.util.QValueParser$QValueResult:boolean equals(java.lang.Object)",
                "io.undertow.websockets.WebSocketProtocolHandshakeHandler:void handleRequest(io.undertow.server.HttpServerExchange)",
                "io.undertow.server.handlers.builder.PredicatedHandlersParser$Token:java.lang.String toString()",
                "io.undertow.util.CopyOnWriteMap:void putAll(java.util.Map)",
                "io.undertow.util.FlexBase64$EncoderInputStream:int read()",
                "io.undertow.util.ETag:boolean equals(java.lang.Object)",
                "io.undertow.util.HeaderMap$1:boolean hasNext()",
                "io.undertow.server.handlers.RequestLimit$2:void run()",
                "io.undertow.server.handlers.resource.PathResource$1ServerTask:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.util.PathTemplateMatcher$PathTemplateHolder:int compareTo(java.lang.Object)",
                "io.undertow.server.handlers.form.FormData:java.util.Iterator iterator()",
                "io.undertow.protocols.ssl.UndertowXnioSsl:void <clinit>()",
                "io.undertow.server.protocol.framed.AbstractFramedChannel$2$1:void run()",
                "io.undertow.util.HeaderMap:java.lang.String get(io.undertow.util.HttpString,int)",
                "io.undertow.io.AsyncSenderImpl$TransferTask:void run()",
                "io.undertow.server.handlers.proxy.ProxyHandler$ProxyAction$1$1$1:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.conduits.IdleTimeoutConduit$1:void run()",
                "io.undertow.server.handlers.builder.PredicatedHandlersParser$ValueNode:java.lang.String toString()",
                "io.undertow.server.handlers.CookieImpl:java.lang.String getPath()",
                "io.undertow.util.HeaderMap$2:void clear()",
                "io.undertow.util.HeaderValues:java.lang.Object set(int,java.lang.Object)",
                "io.undertow.server.HttpServerExchange$ReadDispatchChannel:void resumeReads()",
                "io.undertow.server.handlers.resource.PathResource$1TransferTask:void run()",
                "io.undertow.util.HttpString:void <init>(java.lang.String)",
                "io.undertow.protocols.http2.Http2StreamSourceChannel:java.lang.String toString()",
                "io.undertow.util.Transfer$TransferListener:java.lang.String toString()",
                "io.undertow.server.HttpServerExchange$1:void run()",
                "io.undertow.util.FlexBase64$DecoderInputStream:int read()",
                "io.undertow.io.DefaultIoCallback:void <init>()",
                "io.undertow.util.CopyOnWriteMap:boolean containsValue(java.lang.Object)",
                "io.undertow.websockets.spi.AsyncWebSocketHttpServerExchange$1:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.server.protocol.http.HttpReadListener:void run()",
                "io.undertow.util.PathTemplate:java.lang.String toString()",
                "io.undertow.io.BlockingSenderImpl:void send(java.nio.ByteBuffer,io.undertow.io.IoCallback)",
                "io.undertow.websockets.core.protocol.version07.Base64$InputStream:int read()",
                "io.undertow.conduits.ReadTimeoutStreamSourceConduit$1:void run()",
                "io.undertow.server.handlers.cache.ResponseCachingSender:void transferFrom(java.nio.channels.FileChannel,io.undertow.io.IoCallback)",
                "io.undertow.websockets.core.WebSockets:void sendText(java.lang.String,io.undertow.websockets.core.WebSocketChannel,io.undertow.websockets.core.WebSocketCallback)",
                "io.undertow.io.BlockingReceiverImpl:void <clinit>()",
                "io.undertow.util.FlexBase64$EncoderInputStream:int read(byte[],int,int)",
                "io.undertow.util.PathTemplate$Part:java.lang.String toString()",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object remove(java.lang.Object)",
                "io.undertow.server.HttpServerExchange:boolean isComplete()",
                "io.undertow.util.HeaderMap$2:boolean add(java.lang.Object)",
                "io.undertow.websockets.core.AbstractReceiveListener:void onClose(io.undertow.websockets.core.WebSocketChannel,io.undertow.websockets.core.StreamSourceFrameChannel)",
                "io.undertow.util.CopyOnWriteMap:void clear()",
                "io.undertow.server.handlers.HttpContinueAcceptingHandler$1:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.protocols.http2.HPackHuffman$HuffmanCode:java.lang.String toString()",
                "io.undertow.util.ETag:java.lang.String toString()",
                "io.undertow.server.HttpServerExchange:boolean isBlocking()",
                "io.undertow.util.DateUtils$2:void run()",
                "io.undertow.server.HttpServerExchange:java.lang.String toString()",
                "io.undertow.server.handlers.encoding.ContentEncodedResourceManager$LockKey:boolean equals(java.lang.Object)",
                "io.undertow.server.handlers.resource.CachedResource$DereferenceCallback:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.util.FlexBase64$EncoderOutputStream:void write(byte[],int,int)",
                "io.undertow.server.handlers.resource.CachedResource$DereferenceCallback:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.server.handlers.cache.ResponseCache$DereferenceCallback:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.util.HttpString:boolean equals(java.lang.Object)",
                "io.undertow.util.CopyOnWriteMap:int size()",
                "io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer:java.lang.String toString()",
                "io.undertow.server.DefaultByteBufferPool$DefaultPooledBuffer:java.lang.String toString()",
                "io.undertow.io.BlockingReceiverImpl:void <init>(io.undertow.server.HttpServerExchange,java.io.InputStream)",
                "io.undertow.io.BlockingSenderImpl:void transferFrom(java.nio.channels.FileChannel,io.undertow.io.IoCallback)",
                "io.undertow.server.HttpServerExchange:java.util.Map getRequestCookies()",
                "io.undertow.util.AbstractAttachable:java.lang.Object putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)",
                "io.undertow.conduits.EmptyStreamSourceConduit$1:void run()",
                "io.undertow.util.CopyOnWriteMap:boolean containsKey(java.lang.Object)",
                "io.undertow.io.BlockingSenderImpl:void <init>(io.undertow.server.HttpServerExchange,java.io.OutputStream)",
                "io.undertow.util.FlexBase64$DecoderOutputStream:void flush()",
                "io.undertow.server.handlers.resource.URLResource$1ServerTask:void run()",
                "io.undertow.server.handlers.CookieImpl:java.lang.String getDomain()",
                "io.undertow.util.CopyOnWriteMap:java.util.Collection values()",
                "io.undertow.server.HttpServerExchange:io.undertow.util.HeaderMap getResponseHeaders()",
                "io.undertow.util.HeaderValues:void addLast(java.lang.Object)",
                "io.undertow.util.CopyOnWriteMap:boolean isEmpty()",
                "io.undertow.server.HttpServerExchange:java.util.Map getPathParameters()",
                "io.undertow.util.FastConcurrentDirectDeque$AbstractItr:java.lang.Object next()",
                "io.undertow.util.HeaderValues:java.lang.String peekFirst()",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object get(java.lang.Object)",
                "io.undertow.server.HttpServerExchange:boolean isResponseStarted()",
                "io.undertow.protocols.ssl.UndertowXnioSsl:void <init>(org.xnio.Xnio,org.xnio.OptionMap,javax.net.ssl.SSLContext)",
                "io.undertow.server.handlers.sse.ServerSentEventConnection$3:void run()",
                "io.undertow.io.AsyncReceiverImpl:void receiveFullBytes(io.undertow.io.Receiver$FullBytesCallback)",
                "io.undertow.util.HttpString:void <clinit>()",
                "io.undertow.io.UndertowOutputStream:void write(byte[],int,int)",
                "io.undertow.protocols.ssl.SslConduit$3:void run()",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.undertow.util.HeaderValues$1:java.lang.String previous()",
                "io.undertow.io.UndertowInputStream:void close()",
                "io.undertow.io.UndertowInputStream:int available()",
                "io.undertow.server.handlers.encoding.EncodingMapping:boolean equals(java.lang.Object)",
                "io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler$1:void run()",
                "io.undertow.util.AttachmentKey:io.undertow.util.AttachmentKey create(java.lang.Class)",
                "io.undertow.Handlers:io.undertow.websockets.WebSocketProtocolHandshakeHandler websocket(io.undertow.websockets.WebSocketConnectionCallback)",
                "io.undertow.util.HeaderValues:boolean isEmpty()",
                "io.undertow.server.HttpServerExchange:java.io.OutputStream getOutputStream()",
                "io.undertow.util.HeaderValues:int indexOf(java.lang.Object)",
                "io.undertow.server.handlers.CookieSameSiteMode:java.lang.String toString()",
                "io.undertow.server.protocol.framed.AbstractFramedChannel$UpdateResumeState:void run()",
                "io.undertow.server.HttpServerExchange$WriteDispatchChannel$1:void run()",
                "io.undertow.server.handlers.cache.ResponseCachingSender:void send(java.lang.String)",
                "io.undertow.util.HeaderValues:boolean remove(java.lang.Object)",
                "io.undertow.util.ReferenceCountedPooled$1:java.lang.String toString()",
                "io.undertow.server.handlers.resource.PathResource$1TransferTask$1:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.websockets.core.protocol.version07.Base64$OutputStream:void write(int)",
                "io.undertow.server.handlers.resource.URLResource:void serve(io.undertow.io.Sender,io.undertow.server.HttpServerExchange,io.undertow.io.IoCallback)",
                "io.undertow.server.handlers.sse.ServerSentEventHandler$3:void run()",
                "io.undertow.io.AsyncSenderImpl:void send(java.lang.String)",
                "io.undertow.util.FlexBase64$EncoderOutputStream:void write(int)",
                "io.undertow.server.handlers.CookieImpl:java.lang.String getName()",
                "io.undertow.io.DefaultIoCallback:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.util.HttpString:int compareTo(java.lang.Object)",
                "io.undertow.io.UndertowInputStream:int read(byte[])",
                "io.undertow.websockets.core.AbstractReceiveListener:void <init>()",
                "io.undertow.server.HttpServerExchange:boolean isInIoThread()",
                "io.undertow.server.handlers.resource.PathResource$1ServerTask:void run()",
                "io.undertow.protocols.ssl.SslConduit$5$1:void run()",
                "io.undertow.server.protocol.http.HttpOpenListener:void setRootHandler(io.undertow.server.HttpHandler)",
                "io.undertow.util.SubstringMap$1:java.util.Iterator iterator()",
                "io.undertow.io.DefaultIoCallback:void <clinit>()",
                "io.undertow.util.SubstringMap$1$1:java.lang.String next()",
                "io.undertow.websockets.core.WebSocketChannel:void sendClose()",
                "io.undertow.server.HttpServerExchange:io.undertow.server.HttpServerExchange setResponseContentLength(long)",
                "io.undertow.websockets.core.protocol.version07.Base64$InputStream:int read(byte[],int,int)",
                "io.undertow.server.protocol.http.HttpOpenListener:void <init>(io.undertow.connector.ByteBufferPool,org.xnio.OptionMap)",
                "io.undertow.util.PathMatcher$1:int compare(java.lang.Object,java.lang.Object)",
                "io.undertow.util.FlexBase64$DecoderOutputStream:void write(int)",
                "io.undertow.server.handlers.proxy.ProxyHandler$1:void run()",
                "io.undertow.server.protocol.framed.AbstractFramedChannel:org.xnio.ChannelListener$Setter getReceiveSetter()",
                "io.undertow.server.HttpServerExchange:java.lang.String getRequestURI()",
                "io.undertow.util.HeaderMap:java.lang.String toString()",
                "io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask:void run()",
                "io.undertow.util.CopyOnWriteMap:java.util.Set entrySet()",
                "io.undertow.server.handlers.cache.ResponseCachingSender:void send(java.nio.ByteBuffer)",
                "io.undertow.io.AsyncSenderImpl:void close(io.undertow.io.IoCallback)",
                "io.undertow.util.HeaderValues:java.util.Iterator iterator()",
                "io.undertow.util.HeaderValues:java.lang.String get(int)",
                "io.undertow.websockets.spi.AsyncWebSocketHttpServerExchange$1:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.server.Connectors:void resetRequestChannel(io.undertow.server.HttpServerExchange)",
                "io.undertow.server.handlers.resource.PathResource$1ServerTask:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.io.UndertowOutputStream:void <init>(io.undertow.server.HttpServerExchange)",
                "io.undertow.util.HeaderValues:java.lang.String poll()",
                "io.undertow.attribute.ExchangeAttributeParser$1:int compare(java.lang.Object,java.lang.Object)",
                "io.undertow.server.handlers.cache.ResponseCachingSender:void send(java.nio.ByteBuffer,io.undertow.io.IoCallback)",
                "io.undertow.util.HeaderValues:void clear()",
                "io.undertow.protocols.http2.HPackHuffman$HuffmanCode:boolean equals(java.lang.Object)",
                "io.undertow.io.IoCallback:void <clinit>()",
                "io.undertow.protocols.ssl.SslConduit$4:void run()",
                "io.undertow.server.protocol.framed.AbstractFramedChannel$FrameCloseListener$2:void run()",
                "io.undertow.server.handlers.AccessControlListHandler$AclMatch:java.lang.String toString()",
                "io.undertow.util.HttpString:java.lang.String toString()",
                "io.undertow.util.PathTemplate:int compareTo(java.lang.Object)",
                "io.undertow.server.handlers.sse.ServerSentEventConnection$4:void run()",
                "io.undertow.util.HeaderValues:boolean addAll(java.util.Collection)",
                "io.undertow.util.HeaderValues:java.lang.String pop()",
                "io.undertow.server.handlers.IPAddressAccessControlHandler$PeerMatch:java.lang.String toString()",
                "io.undertow.server.DefaultByteBufferPool:void <clinit>()",
                "io.undertow.server.HttpServerExchange:io.undertow.io.Sender getResponseSender()",
                "io.undertow.util.HeaderValues:int size()",
                "io.undertow.util.PathTemplateMatcher$1:int compare(java.lang.Object,java.lang.Object)",
                "io.undertow.server.HttpServerExchange$ReadDispatchChannel$1:void run()",
                "io.undertow.util.HeaderValues:java.lang.String remove(int)",
                "io.undertow.server.HttpServerExchange:java.net.InetSocketAddress getSourceAddress()",
                "io.undertow.server.handlers.form.FormData:java.lang.String toString()",
                "io.undertow.util.HeaderMap$1:io.undertow.util.HeaderValues next()",
                "io.undertow.io.AsyncSenderImpl:void send(java.nio.ByteBuffer,io.undertow.io.IoCallback)",
                "io.undertow.server.handlers.sse.ServerSentEventConnection$2:void run()",
                "io.undertow.util.HeaderValues:void add(int,java.lang.Object)",
                "io.undertow.util.HeaderMap:java.util.Iterator iterator()",
                "io.undertow.server.handlers.cache.ResponseCachingSender:void close(io.undertow.io.IoCallback)",
                "io.undertow.server.protocol.framed.AbstractFramedChannel:void resumeReceives()",
                "io.undertow.server.handlers.cache.ResponseCache$DereferenceCallback:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.server.handlers.resource.URLResource$1ServerTask:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.protocols.ssl.SslConduit$2:void run()",
                "io.undertow.util.HeaderValues:java.util.List subList(int,int)",
                "io.undertow.server.handlers.cache.CachedHttpRequest:boolean equals(java.lang.Object)",
                "io.undertow.util.PathTemplateMatcher$PathTemplateHolder:boolean equals(java.lang.Object)",
                "io.undertow.protocols.ssl.UndertowXnioSsl:org.xnio.channels.AcceptingChannel createSslConnectionServer(org.xnio.XnioWorker,java.net.InetSocketAddress,org.xnio.ChannelListener,org.xnio.OptionMap)",
                "io.undertow.util.HeaderValues:boolean contains(java.lang.Object)",
                "io.undertow.server.handlers.resource.URLResource$1ServerTask:void onComplete(io.undertow.server.HttpServerExchange,io.undertow.io.Sender)",
                "io.undertow.util.HeaderValues$1:java.lang.String next()",
                "io.undertow.client.ClientRequest:java.lang.String toString()",
                "io.undertow.server.protocol.ParseTimeoutUpdater:void run()",
                "io.undertow.util.HeaderMap:java.lang.Iterable eachValue(io.undertow.util.HttpString)",
                "io.undertow.util.FastConcurrentDirectDeque$AbstractItr:boolean hasNext()",
                "io.undertow.server.HttpServerExchange:io.undertow.util.HeaderMap getRequestHeaders()",
                "io.undertow.server.protocol.http2.Http2ServerConnection$5:void run()",
                "io.undertow.io.BlockingReceiverImpl:void receiveFullBytes(io.undertow.io.Receiver$FullBytesCallback)",
                "io.undertow.io.DefaultIoCallback:void onException(io.undertow.server.HttpServerExchange,io.undertow.io.Sender,java.io.IOException)",
                "io.undertow.util.Headers:void <clinit>()",
                "io.undertow.server.protocol.ParseTimeoutUpdater$1:void run()",
                "io.undertow.protocols.ssl.UndertowSslConnection$HandshakeCallback:void run()",
                "io.undertow.server.handlers.proxy.ProxyHandler$ProxyAction:void run()",
                "io.undertow.server.HttpServerExchange:io.undertow.server.HttpServerExchange setResponseCookie(io.undertow.server.handlers.Cookie)",
                "io.undertow.util.HeaderMap$2$1:boolean hasNext()",
                "io.undertow.protocols.ssl.UndertowXnioSsl$5:void resumeAccepts()",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)",
                "io.undertow.util.HeaderMap$2:boolean contains(java.lang.Object)",
                "io.undertow.server.handlers.CookieImpl:java.lang.String getValue()",
                "io.undertow.websockets.WebSocketExtension:java.lang.String toString()",
                "io.undertow.io.BlockingSenderImpl:void send(java.nio.ByteBuffer)",
                "io.undertow.server.HttpServerExchange:java.util.Map getQueryParameters()",
                "io.undertow.server.handlers.proxy.ProxyHandler$ProxyClientHandler:void run()",
                "io.undertow.server.DefaultByteBufferPool:void <init>(boolean,int,int,int)",
                "io.undertow.util.AbstractAttachable:java.lang.Object getAttachment(io.undertow.util.AttachmentKey)",
                "io.undertow.io.BlockingSenderImpl:void send(java.lang.String)",
                "io.undertow.websockets.core.protocol.version07.Base64$OutputStream:void write(byte[],int,int)",
                "io.undertow.io.AsyncSenderImpl:void transferFrom(java.nio.channels.FileChannel,io.undertow.io.IoCallback)",
                "io.undertow.websockets.core.WebSockets$3:void run()"
            ]
        },
        "commons-fileupload:commons-fileupload:1.3.3": {
            "used-method num": 11,
            "used method": [
                "org.apache.commons.fileupload.ParameterParser:java.util.Map parse(java.lang.String,char)",
                "org.apache.commons.fileupload.FileUploadException:void <init>(java.lang.String)",
                "org.apache.commons.fileupload.util.LimitedInputStream:int read(byte[],int,int)",
                "org.apache.commons.fileupload.util.LimitedInputStream:void close()",
                "org.apache.commons.fileupload.util.LimitedInputStream:boolean isClosed()",
                "org.apache.commons.fileupload.util.LimitedInputStream:void <init>(java.io.InputStream,long)",
                "org.apache.commons.fileupload.ParameterParser:void setLowerCaseNames(boolean)",
                "org.apache.commons.fileupload.FileItemStream$ItemSkippedException:void <init>()",
                "org.apache.commons.fileupload.util.LimitedInputStream:int read()",
                "org.apache.commons.fileupload.ParameterParser:void <init>()",
                "org.apache.commons.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean)"
            ]
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
{
    "project name": "mulesoft-labs_quartz-mongodb",
    "vulnerable dependencies": {
        "org.quartz-scheduler:quartz:2.1.0": {
            "used-method num": 77,
            "used method": [
                "org.quartz.TriggerKey:void <init>(java.lang.String,java.lang.String)",
                "org.quartz.spi.TriggerFiredResult:void <init>(org.quartz.spi.TriggerFiredBundle)",
                "org.quartz.JobDataMap:void <init>()",
                "org.quartz.impl.triggers.AbstractTrigger:void setKey(org.quartz.TriggerKey)",
                "org.quartz.JobBuilder:org.quartz.JobDetail build()",
                "org.quartz.impl.triggers.CronTriggerImpl:java.util.Date getStartTime()",
                "org.quartz.impl.triggers.SimpleTriggerImpl:void setStartTime(java.util.Date)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:void setTimesTriggered(int)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:java.util.Date getFinalFireTime()",
                "org.quartz.JobBuilder:org.quartz.JobBuilder withDescription(java.lang.String)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:long getRepeatInterval()",
                "org.quartz.impl.triggers.SimpleTriggerImpl:void setRepeatCount(int)",
                "org.quartz.impl.triggers.AbstractTrigger:void setFireInstanceId(java.lang.String)",
                "org.quartz.JobBuilder:org.quartz.JobBuilder newJob(java.lang.Class)",
                "org.quartz.impl.JobDetailImpl:boolean isConcurrentExectionDisallowed()",
                "org.quartz.impl.triggers.SimpleTriggerImpl:int getRepeatCount()",
                "org.quartz.SchedulerConfigException:void <init>(java.lang.String)",
                "org.quartz.impl.triggers.AbstractTrigger:org.quartz.JobKey getJobKey()",
                "org.quartz.impl.triggers.AbstractTrigger:void setPriority(int)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:void updateAfterMisfire(org.quartz.Calendar)",
                "org.quartz.impl.triggers.CronTriggerImpl:void setNextFireTime(java.util.Date)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:void triggered(org.quartz.Calendar)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagCollection:java.util.Iterator iterator()",
                "org.quartz.ObjectAlreadyExistsException:void <init>(org.quartz.Trigger)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:void setEndTime(java.util.Date)",
                "org.quartz.impl.JobDetailImpl:org.quartz.JobDataMap getJobDataMap()",
                "org.quartz.impl.triggers.AbstractTrigger:org.quartz.TriggerKey getKey()",
                "org.quartz.impl.JobDetailImpl:java.lang.Class getJobClass()",
                "org.quartz.impl.triggers.CronTriggerImpl:void setCronExpression(java.lang.String)",
                "org.quartz.impl.triggers.CronTriggerImpl:java.lang.Object clone()",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.Object clone()",
                "org.quartz.JobPersistenceException:void <init>(java.lang.String)",
                "org.quartz.impl.triggers.CronTriggerImpl:java.util.Date getNextFireTime()",
                "org.quartz.spi.TriggerFiredBundle:org.quartz.JobDetail getJobDetail()",
                "org.quartz.impl.triggers.AbstractTrigger:int getMisfireInstruction()",
                "org.quartz.impl.triggers.AbstractTrigger:int getPriority()",
                "org.quartz.Trigger$CompletedExecutionInstruction:void <clinit>()",
                "org.quartz.utils.Key:java.lang.String getGroup()",
                "org.quartz.JobBuilder:org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:boolean hasNext()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntrySet:java.util.Iterator iterator()",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.String getCalendarName()",
                "org.quartz.impl.triggers.SimpleTriggerImpl:java.util.Date getNextFireTime()",
                "org.quartz.JobPersistenceException:void <init>(java.lang.String,java.lang.Throwable)",
                "org.quartz.impl.triggers.CronTriggerImpl:void updateAfterMisfire(org.quartz.Calendar)",
                "org.quartz.impl.triggers.CronTriggerImpl:void setEndTime(java.util.Date)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:void setPreviousFireTime(java.util.Date)",
                "org.quartz.spi.TriggerFiredBundle:void <init>(org.quartz.JobDetail,org.quartz.spi.OperableTrigger,org.quartz.Calendar,boolean,java.util.Date,java.util.Date,java.util.Date,java.util.Date)",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.String getDescription()",
                "org.quartz.impl.triggers.CronTriggerImpl:java.util.Date getFinalFireTime()",
                "org.quartz.impl.triggers.SimpleTriggerImpl:void setNextFireTime(java.util.Date)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:void setRepeatInterval(long)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:java.lang.Object next()",
                "org.quartz.utils.Key:java.lang.String getName()",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.String getFireInstanceId()",
                "org.quartz.impl.triggers.CronTriggerImpl:void setPreviousFireTime(java.util.Date)",
                "org.quartz.impl.triggers.CronTriggerImpl:void setStartTime(java.util.Date)",
                "org.quartz.impl.triggers.AbstractTrigger:void setCalendarName(java.lang.String)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:int getTimesTriggered()",
                "org.quartz.impl.triggers.CronTriggerImpl:java.util.Date getEndTime()",
                "org.quartz.impl.triggers.AbstractTrigger:void setMisfireInstruction(int)",
                "org.quartz.impl.triggers.CronTriggerImpl:void triggered(org.quartz.Calendar)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:java.util.Date getStartTime()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntryIterator:org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry next()",
                "org.quartz.impl.triggers.SimpleTriggerImpl:java.util.Date getEndTime()",
                "org.quartz.JobBuilder:org.quartz.JobBuilder usingJobData(org.quartz.JobDataMap)",
                "org.quartz.SchedulerConfigException:void <init>(java.lang.String,java.lang.Throwable)",
                "org.quartz.impl.triggers.AbstractTrigger:void setJobKey(org.quartz.JobKey)",
                "org.quartz.impl.triggers.CronTriggerImpl:java.util.Date getPreviousFireTime()",
                "org.quartz.JobKey:void <init>(java.lang.String,java.lang.String)",
                "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.Object put(java.lang.String,java.lang.Object)",
                "org.quartz.ObjectAlreadyExistsException:void <init>(java.lang.String)",
                "org.quartz.impl.triggers.AbstractTrigger:void setDescription(java.lang.String)",
                "org.quartz.impl.triggers.SimpleTriggerImpl:java.util.Date getPreviousFireTime()",
                "org.quartz.impl.JobDetailImpl:java.lang.String getDescription()",
                "org.quartz.impl.triggers.CronTriggerImpl:java.lang.String getCronExpression()",
                "org.quartz.impl.JobDetailImpl:org.quartz.JobKey getKey()"
            ]
        }
    }
}
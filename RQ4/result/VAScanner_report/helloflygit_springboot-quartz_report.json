{
    "project name": "helloflygit_springboot-quartz",
    "vulnerable dependencies": {
        "org.quartz-scheduler:quartz:2.2.3": {
            "used-method num": 64,
            "used method": [
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withIdentity(org.quartz.TriggerKey)",
                "org.quartz.impl.RemoteScheduler:void pauseTrigger(org.quartz.TriggerKey)",
                "org.quartz.JobBuilder:org.quartz.JobBuilder newJob(java.lang.Class)",
                "org.quartz.impl.RemoteScheduler:void pauseJob(org.quartz.JobKey)",
                "org.quartz.impl.JobDetailImpl:org.quartz.JobDataMap getJobDataMap()",
                "org.quartz.impl.triggers.CronTriggerImpl:java.lang.Object clone()",
                "org.quartz.utils.Key:java.lang.String getGroup()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry:java.lang.Object getValue()",
                "org.quartz.impl.JobExecutionContextImpl:java.lang.String toString()",
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder startNow()",
                "org.quartz.SchedulerMetaData:java.lang.String toString()",
                "org.quartz.JobKey:org.quartz.JobKey jobKey(java.lang.String,java.lang.String)",
                "org.quartz.utils.DirtyFlagMap:java.util.Set entrySet()",
                "org.quartz.impl.RemoteScheduler:void start()",
                "org.quartz.SchedulerException:java.lang.String toString()",
                "org.quartz.impl.RemoteScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                "org.quartz.impl.StdScheduler:void resumeJob(org.quartz.JobKey)",
                "org.quartz.impl.StdScheduler:void pauseTrigger(org.quartz.TriggerKey)",
                "org.quartz.utils.DirtyFlagMap:int size()",
                "org.quartz.CronExpression:void <clinit>()",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object get(java.lang.Object)",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.Object clone()",
                "org.quartz.impl.JobDetailImpl:java.lang.Object clone()",
                "org.quartz.JobBuilder:org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)",
                "org.quartz.impl.JobDetailImpl:java.lang.String toString()",
                "org.quartz.CronExpression:java.util.Date getNextValidTimeAfter(java.util.Date)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:java.lang.Object next()",
                "org.quartz.xml.ValidationException:java.lang.String getMessage()",
                "org.quartz.impl.RemoteScheduler:boolean deleteJob(org.quartz.JobKey)",
                "org.quartz.impl.StdScheduler:void start()",
                "org.quartz.utils.counter.sampled.TimeStampedCounterValue:java.lang.String toString()",
                "org.quartz.CronScheduleBuilder:org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)",
                "org.quartz.impl.StdScheduler:org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)",
                "org.quartz.utils.DirtyFlagMap:void putAll(java.util.Map)",
                "org.quartz.impl.JobDetailImpl:org.quartz.JobKey getKey()",
                "org.quartz.JobBuilder:org.quartz.JobDetail build()",
                "org.quartz.impl.RemoteScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                "org.quartz.impl.StdScheduler:void pauseJob(org.quartz.JobKey)",
                "org.quartz.impl.RemoteScheduler:void resumeJob(org.quartz.JobKey)",
                "org.quartz.impl.StdScheduler:boolean deleteJob(org.quartz.JobKey)",
                "org.quartz.utils.StringKeyDirtyFlagMap:void put(java.lang.String,java.lang.String)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntrySet:java.util.Iterator iterator()",
                "org.quartz.CronExpression:void <init>(java.lang.String)",
                "org.quartz.impl.StdScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                "org.quartz.utils.Key:java.lang.String getName()",
                "org.quartz.impl.StdScheduler:boolean isShutdown()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry:java.lang.Object getKey()",
                "org.quartz.utils.Key:java.lang.String toString()",
                "org.quartz.impl.RemoteScheduler:boolean isShutdown()",
                "org.quartz.CronExpression:java.lang.Object clone()",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object clone()",
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder newTrigger()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagCollection:java.util.Iterator iterator()",
                "org.quartz.impl.RemoteScheduler:org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:boolean hasNext()",
                "org.quartz.impl.StdScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                "org.quartz.impl.RemoteScheduler:boolean unscheduleJob(org.quartz.TriggerKey)",
                "org.quartz.TriggerBuilder:org.quartz.Trigger build()",
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)",
                "org.quartz.TriggerKey:org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntryIterator:org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry next()",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.String toString()",
                "org.quartz.impl.JobExecutionContextImpl:org.quartz.JobDetail getJobDetail()",
                "org.quartz.impl.StdScheduler:boolean unscheduleJob(org.quartz.TriggerKey)"
            ]
        },
        "org.apache.httpcomponents:httpclient:4.5.6": {
            "used-method num": 51,
            "used method": [
                "org.apache.http.client.entity.UrlEncodedFormEntity:void <init>(java.lang.Iterable,java.nio.charset.Charset)",
                "org.apache.http.impl.execchain.ResponseEntityProxy:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig$Builder custom()",
                "org.apache.http.client.utils.URIBuilder:java.net.URI build()",
                "org.apache.http.impl.auth.DigestScheme:java.lang.String toString()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.HttpEntity getEntity()",
                "org.apache.http.impl.client.BasicCookieStore:java.lang.String toString()",
                "org.apache.http.impl.execchain.HttpResponseProxy:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String toString()",
                "org.apache.http.auth.UsernamePasswordCredentials:java.lang.String toString()",
                "org.apache.http.client.utils.URIBuilder:org.apache.http.client.utils.URIBuilder setParameters(java.util.List)",
                "org.apache.http.client.utils.URIBuilder:void <init>(java.lang.String)",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:java.lang.Object clone()",
                "org.apache.http.client.methods.HttpPost:void <init>(java.lang.String)",
                "org.apache.http.impl.cookie.BasicClientCookie2:java.lang.Object clone()",
                "org.apache.http.client.utils.URIBuilder:java.lang.String toString()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.String toString()",
                "org.apache.http.cookie.CookieOrigin:java.lang.String toString()",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:void setEntity(org.apache.http.HttpEntity)",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:java.lang.String toString()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.Object clone()",
                "org.apache.http.client.methods.HttpGet:void <init>(java.net.URI)",
                "org.apache.http.impl.auth.BasicScheme:java.lang.String toString()",
                "org.apache.http.impl.client.BasicCredentialsProvider:java.lang.String toString()",
                "org.apache.http.conn.routing.RouteTracker:java.lang.Object clone()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.StatusLine getStatusLine()",
                "org.apache.http.auth.BasicUserPrincipal:java.lang.String toString()",
                "org.apache.http.auth.NTCredentials:java.lang.String toString()",
                "org.apache.http.auth.AuthState:java.lang.String toString()",
                "org.apache.http.conn.routing.RouteTracker:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig:java.lang.String toString()",
                "org.apache.http.impl.execchain.RequestEntityProxy:org.apache.http.Header getContentType()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.Object clone()",
                "org.apache.http.impl.client.RedirectLocations:int size()",
                "org.ietf.jgss.Oid:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig clone()",
                "org.apache.http.impl.auth.AuthSchemeBase:java.lang.String toString()",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
                "org.apache.http.client.methods.HttpRequestWrapper:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int)",
                "org.apache.http.auth.AuthScope:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:void setConfig(org.apache.http.client.config.RequestConfig)",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig:void <clinit>()",
                "org.apache.http.client.methods.AbstractExecutionAwareRequest:java.lang.Object clone()",
                "org.apache.http.impl.conn.CPoolProxy:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig build()",
                "org.apache.http.impl.client.HttpClients:org.apache.http.impl.client.CloseableHttpClient createDefault()"
            ],
            "CVE": [
                "CVE-2020-13956"
            ],
            "used vul-method": [
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
            ],
            "vul-called frequency": 3,
            "related vul root method": {
                "CVE-2020-13956": [
                    "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)"
                ]
            },
            "CVE-API": {
                "CVE-2020-13956": [
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
                ]
            }
        },
        "com.alibaba:fastjson:1.2.53": {
            "used-method num": 19,
            "used method": [
                "com.alibaba.fastjson.serializer.SerializeWriter:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.serializer.JSONSerializer:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:int size()",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.parser.ParseContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:java.util.Iterator iterator()",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.support.config.FastJsonConfig:void <init>()",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.serializer.SerializerFeature:void <clinit>()",
                "com.alibaba.fastjson.support.config.FastJsonConfig:void setSerializerFeatures(com.alibaba.fastjson.serializer.SerializerFeature[])",
                "com.alibaba.fastjson.JSONArray:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONObject:java.util.Set entrySet()",
                "com.alibaba.fastjson.serializer.SerialContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:int size()",
                "com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter:void <init>()"
            ],
            "CVE": [
                "CVE-2022-25845"
            ],
            "used vul-method": [
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)"
            ],
            "vul-called frequency": 11,
            "related vul root method": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.parser.ParserConfig:java.lang.Class checkAutoType(java.lang.String,java.lang.Class,int)"
                ]
            },
            "CVE-API": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                    "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                    "com.alibaba.fastjson.JSON:java.lang.String toString()",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)"
                ]
            }
        }
    }
}
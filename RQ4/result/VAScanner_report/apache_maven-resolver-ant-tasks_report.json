{
    "project name": "apache_maven-resolver-ant-tasks",
    "vulnerable dependencies": {
        "org.apache.ant:ant:1.9.16": {
            "used-method num": 79,
            "used method": [
                "org.apache.tools.ant.Task:void log(java.lang.String,java.lang.Throwable,int)",
                "org.apache.tools.ant.Task:void log(java.lang.String)",
                "org.apache.tools.ant.types.resources.Resources$MyCollection:java.util.Iterator iterator()",
                "org.apache.tools.ant.types.DataType:org.apache.tools.ant.BuildException tooManyAttributes()",
                "org.apache.tools.ant.ComponentHelper:java.lang.String getElementName(org.apache.tools.ant.Project,java.lang.Object,boolean)",
                "org.apache.tools.ant.types.Reference:void <init>(org.apache.tools.ant.Project,java.lang.String)",
                "org.apache.tools.ant.Project:void addReference(java.lang.String,java.lang.Object)",
                "org.apache.tools.ant.types.DataType:void setRefid(org.apache.tools.ant.types.Reference)",
                "org.apache.tools.ant.PropertyHelper:org.apache.tools.ant.PropertyHelper getNext()",
                "org.apache.tools.ant.types.resources.FileResource:void <clinit>()",
                "org.apache.tools.ant.types.DataType:org.apache.tools.ant.BuildException noChildrenAllowed()",
                "org.apache.tools.ant.taskdefs.condition.Os:void <clinit>()",
                "org.apache.tools.ant.types.Path:void <clinit>()",
                "org.apache.tools.ant.types.resources.FileResource:void setBaseDir(java.io.File)",
                "org.apache.tools.ant.Project:java.util.Hashtable getUserProperties()",
                "org.apache.tools.ant.types.resources.LazyResourceCollectionWrapper$FilteringIterator:boolean hasNext()",
                "org.apache.tools.ant.types.Reference:java.lang.String getRefId()",
                "org.apache.tools.ant.ProjectComponent:void <init>()",
                "org.apache.tools.ant.PropertyHelper:void setProject(org.apache.tools.ant.Project)",
                "org.apache.tools.ant.Task:void <init>()",
                "org.apache.tools.ant.types.resources.Resources:void add(org.apache.tools.ant.types.ResourceCollection)",
                "org.apache.tools.ant.Project:void setProperty(java.lang.String,java.lang.String)",
                "org.apache.tools.ant.types.resources.LazyResourceCollectionWrapper$CachedIterator:org.apache.tools.ant.types.Resource next()",
                "org.apache.tools.ant.types.resources.Resources$MyCollection$MyIterator:org.apache.tools.ant.types.Resource next()",
                "org.apache.tools.ant.PropertyHelper:void add(org.apache.tools.ant.PropertyHelper$Delegate)",
                "org.apache.tools.ant.types.resources.Resources:void <clinit>()",
                "org.apache.tools.ant.types.DataType:boolean isReference()",
                "org.apache.tools.ant.types.DataType:org.apache.tools.ant.BuildException circularReference()",
                "org.apache.tools.ant.types.DataType:void <init>()",
                "org.apache.tools.ant.PropertyHelper:void <init>()",
                "org.apache.tools.ant.ProjectComponent:org.apache.tools.ant.Project getProject()",
                "org.apache.tools.ant.PropertyHelper:org.apache.tools.ant.PropertyHelper getPropertyHelper(org.apache.tools.ant.Project)",
                "org.apache.tools.ant.Project:void log(java.lang.String,java.lang.Throwable,int)",
                "org.apache.tools.ant.BuildException:void <init>(java.lang.String,java.lang.Throwable)",
                "org.apache.tools.ant.BuildException:void <init>(java.lang.String)",
                "org.apache.tools.ant.types.DataType:java.lang.Object getCheckedRef()",
                "org.apache.tools.ant.Project:java.lang.Object getReference(java.lang.String)",
                "org.apache.tools.ant.Project:void log(java.lang.String,int)",
                "org.apache.tools.ant.types.Resource:void <clinit>()",
                "org.apache.tools.ant.types.Reference:java.lang.Object getReferencedObject(org.apache.tools.ant.Project)",
                "org.apache.tools.ant.types.FileSet:void <init>()",
                "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,boolean,boolean)",
                "org.apache.tools.ant.types.resources.FileResource:void <init>(java.io.File)",
                "org.apache.tools.ant.types.PropertySet$1:org.apache.tools.ant.types.Resource next()",
                "org.apache.tools.ant.types.resources.LazyResourceCollectionWrapper$FilteringIterator:org.apache.tools.ant.types.Resource next()",
                "org.apache.tools.ant.types.Resource$1:boolean hasNext()",
                "org.apache.tools.ant.PropertyHelper:void <clinit>()",
                "org.apache.tools.ant.types.resources.FileResourceIterator:boolean hasNext()",
                "org.apache.tools.ant.types.resources.FailFast:boolean hasNext()",
                "org.apache.tools.ant.util.FileUtils:org.apache.tools.ant.util.FileUtils getFileUtils()",
                "org.apache.tools.ant.types.PatternSet$NameEntry:void setName(java.lang.String)",
                "org.apache.tools.ant.types.DataType:void checkChildrenAllowed()",
                "org.apache.tools.ant.types.resources.LazyResourceCollectionWrapper$CachedIterator:boolean hasNext()",
                "org.apache.tools.ant.Project:java.lang.String getProperty(java.lang.String)",
                "org.apache.tools.ant.types.resources.FileResource:void <init>(java.io.File,java.lang.String)",
                "org.apache.tools.ant.Project$AntRefTable:java.lang.Object get(java.lang.Object)",
                "org.apache.tools.ant.property.NullReturn:void <clinit>()",
                "org.apache.tools.ant.types.Path:void <init>(org.apache.tools.ant.Project)",
                "org.apache.tools.ant.types.resources.Resources:void <init>()",
                "org.apache.tools.ant.Project:java.io.File resolveFile(java.lang.String)",
                "org.apache.tools.ant.PropertyHelper:java.lang.Object getPropertyHook(java.lang.String,java.lang.String,boolean)",
                "org.apache.tools.ant.types.resources.FailFast:org.apache.tools.ant.types.Resource next()",
                "org.apache.tools.ant.types.resources.Resources$MyCollection$MyIterator:boolean hasNext()",
                "org.apache.tools.ant.taskdefs.condition.Os:boolean isFamily(java.lang.String)",
                "org.apache.tools.ant.types.Path:void add(org.apache.tools.ant.types.ResourceCollection)",
                "org.apache.tools.ant.ProjectHelperRepository$ConstructingIterator:boolean hasNext()",
                "org.apache.tools.ant.util.VectorSet:boolean add(java.lang.Object)",
                "org.apache.tools.ant.util.FileUtils:void <clinit>()",
                "org.apache.tools.ant.types.DataType:void checkAttributesAllowed()",
                "org.apache.tools.ant.types.resources.FileResourceIterator:org.apache.tools.ant.types.Resource next()",
                "org.apache.tools.ant.types.AbstractFileSet:org.apache.tools.ant.types.PatternSet$NameEntry createInclude()",
                "org.apache.tools.ant.types.Resource$1:org.apache.tools.ant.types.Resource next()",
                "org.apache.tools.ant.Task:void log(java.lang.String,int)",
                "org.apache.tools.ant.types.AbstractFileSet:void setDir(java.io.File)",
                "org.apache.tools.ant.util.VectorSet:void clear()",
                "org.apache.tools.ant.ProjectComponent:void setProject(org.apache.tools.ant.Project)",
                "org.apache.tools.ant.Project:java.util.Hashtable getProperties()",
                "org.apache.tools.ant.types.resources.Resources$2:org.apache.tools.ant.types.Resource next()",
                "org.apache.tools.ant.ProjectHelperRepository$ConstructingIterator:org.apache.tools.ant.ProjectHelper next()"
            ]
        }
    }
}
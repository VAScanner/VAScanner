{
    "project name": "coldwalker_Sample",
    "vulnerable dependencies": {
        "com.alibaba:fastjson:1.2.59": {
            "used-method num": 15,
            "used method": [
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)",
                "com.alibaba.fastjson.JSON:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:void <init>()",
                "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.String,java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:java.lang.Long getLong(java.lang.String)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:boolean isEmpty()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object get(int)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                "com.alibaba.fastjson.JSONObject:int getIntValue(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:boolean add(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:boolean remove(java.lang.Object)"
            ],
            "CVE": [
                "CVE-2022-25845"
            ],
            "used vul-method": [
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()"
            ],
            "vul-called frequency": 14,
            "related vul root method": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.parser.ParserConfig:java.lang.Class checkAutoType(java.lang.String,java.lang.Class,int)"
                ]
            },
            "CVE-API": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                    "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                    "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString()"
                ]
            }
        },
        "io.netty:netty-all:4.1.39.Final": {
            "used-method num": 117,
            "used method": [
                "io.netty.channel.VoidChannelPromise:boolean isCancelled()",
                "io.netty.util.concurrent.DefaultPromise:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit)",
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.util.concurrent.FastThreadLocal:void removeAll()",
                "io.netty.bootstrap.ServerBootstrapConfig:io.netty.channel.EventLoopGroup childGroup()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.MessageAggregator:void <clinit>()",
                "io.netty.util.concurrent.CompleteFuture:boolean isCancelled()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                "io.netty.handler.logging.LoggingHandler:void <init>(io.netty.handler.logging.LogLevel)",
                "io.netty.util.concurrent.FailedFuture:boolean isSuccess()",
                "io.netty.util.concurrent.PromiseCombiner$1$1:void run()",
                "io.netty.util.concurrent.AbstractEventExecutorGroup:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                "io.netty.util.internal.StringUtil:void <clinit>()",
                "io.netty.util.concurrent.FastThreadLocal:void <clinit>()",
                "io.netty.channel.ChannelDuplexHandler:void <init>()",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.channel.CombinedChannelDuplexHandler:void <clinit>()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.util.concurrent.DefaultPromise:boolean isCancelled()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                "io.netty.buffer.PooledByteBufAllocator$1:void run()",
                "io.netty.bootstrap.AbstractBootstrapConfig:io.netty.channel.EventLoopGroup group()",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.handler.timeout.IdleStateEvent:io.netty.handler.timeout.IdleState state()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:java.lang.String text()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.util.concurrent.DefaultPromise$3:void run()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:void <init>(java.lang.String,java.lang.String,boolean)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)",
                "io.netty.util.concurrent.FastThreadLocalRunnable:void run()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.util.ThreadDeathWatcher$Watcher:void run()",
                "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.channel.VoidChannelPromise:boolean isSuccess()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.epoll.Epoll:void <clinit>()",
                "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                "io.netty.channel.AbstractChannelHandlerContext$Tasks$4:void run()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.handler.logging.LogLevel:void <clinit>()",
                "io.netty.channel.nio.NioEventLoop$5:void run()",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.util.concurrent.DefaultThreadFactory:void <clinit>()",
                "io.netty.util.internal.ThreadExecutorMap$2:void run()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrapConfig config()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.util.internal.StringUtil:java.lang.String simpleClassName(java.lang.Class)",
                "io.netty.channel.AbstractChannelHandlerContext$Tasks$1:void run()",
                "io.netty.handler.codec.http.HttpServerCodec:void <init>()",
                "io.netty.util.AttributeKey:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "io.netty.channel.nio.NioEventLoop$6:void run()",
                "io.netty.util.concurrent.DefaultThreadFactory:void <init>(java.lang.String,boolean)",
                "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.Throwable cause()",
                "io.netty.channel.DefaultChannelPipeline$5:void run()",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.channel.VoidChannelPromise:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit)",
                "io.netty.handler.timeout.IdleStateHandler:void <init>(int,int,int)",
                "io.netty.channel.VoidChannelPromise:java.lang.Throwable cause()",
                "io.netty.channel.AbstractChannelHandlerContext$Tasks$3:void run()",
                "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.SucceededChannelFuture:java.lang.Throwable cause()",
                "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:void <clinit>()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                "io.netty.channel.AbstractChannelHandlerContext$Tasks$2:void run()",
                "io.netty.util.concurrent.FailedFuture:java.lang.Throwable cause()",
                "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <clinit>()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.bootstrap.ServerBootstrap$1$1:void run()",
                "io.netty.handler.codec.HeadersUtils$1:java.lang.String get(int)",
                "io.netty.handler.timeout.IdleState:void <clinit>()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$2:void run()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.util.concurrent.DefaultPromise$4:void run()",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.util.concurrent.FastThreadLocalThread:void <init>(java.lang.Runnable,java.lang.String)"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                "io.netty.util.concurrent.PromiseCombiner$1$1:void run()",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.util.concurrent.FastThreadLocalRunnable:void run()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.AbstractChannelHandlerContext$Tasks$4:void run()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.util.internal.ThreadExecutorMap$2:void run()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.channel.AbstractChannelHandlerContext$Tasks$1:void run()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.channel.DefaultChannelPipeline$5:void run()",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.channel.AbstractChannelHandlerContext$Tasks$3:void run()",
                "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                "io.netty.channel.AbstractChannelHandlerContext$Tasks$2:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$2:void run()"
            ],
            "vul-called frequency": 48,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                    "io.netty.channel.DefaultChannelPipeline$6:void run()",
                    "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                    "io.netty.util.concurrent.PromiseCombiner$1$1:void run()",
                    "io.netty.util.concurrent.DefaultPromise$1:void run()",
                    "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                    "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                    "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                    "io.netty.util.concurrent.FastThreadLocalRunnable:void run()",
                    "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                    "io.netty.channel.DefaultChannelPipeline$4:void run()",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.AbstractChannelHandlerContext$Tasks$4:void run()",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                    "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                    "io.netty.util.concurrent.DefaultPromise$2:void run()",
                    "io.netty.util.internal.ThreadExecutorMap$2:void run()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.channel.AbstractChannelHandlerContext$Tasks$1:void run()",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                    "io.netty.channel.DefaultChannelPipeline$5:void run()",
                    "io.netty.channel.DefaultChannelPipeline$3:void run()",
                    "io.netty.channel.AbstractChannelHandlerContext$Tasks$3:void run()",
                    "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                    "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                    "io.netty.channel.AbstractChannelHandlerContext$Tasks$2:void run()",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                    "io.netty.channel.DefaultChannelPipeline$2:void run()"
                ]
            }
        }
    }
}
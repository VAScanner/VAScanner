{
    "project name": "ksfzhaohui_shadowsocks-netty-server",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.5.Final": {
            "used-method num": 103,
            "used method": [
                "io.netty.buffer.EmptyByteBuf:short getUnsignedByte(int)",
                "io.netty.handler.codec.socks.SocksAddressType:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:short readUnsignedByte()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf clear()",
                "io.netty.buffer.AbstractPooledDerivedByteBuf:boolean hasArray()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:short readShort()",
                "io.netty.buffer.PooledHeapByteBuf:boolean hasArray()",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.buffer.ReadOnlyByteBufferBuf:boolean hasArray()",
                "io.netty.handler.codec.socks.SocksAddressType:byte byteValue()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.buffer.UnpooledHeapByteBuf:boolean hasArray()",
                "io.netty.buffer.WrappedByteBuf:boolean hasArray()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()",
                "io.netty.buffer.PooledUnsafeDirectByteBuf:boolean hasArray()",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:short getUnsignedByte(int)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.buffer.AbstractByteBuf:short getUnsignedByte(int)",
                "io.netty.buffer.ReadOnlyByteBuf:boolean hasArray()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:boolean hasArray()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:short readUnsignedByte()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.InetAddress,int)",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf getBytes(int,byte[])",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf clear()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:void putAll(java.util.Map)",
                "io.netty.buffer.WrappedByteBuf:short readShort()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf clear()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.buffer.AbstractByteBuf:short readShort()",
                "io.netty.buffer.WrappedByteBuf:short readUnsignedByte()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[])",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.buffer.PooledDirectByteBuf:boolean hasArray()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.EmptyByteBuf:short readShort()",
                "io.netty.buffer.SwappedByteBuf:short readShort()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.util.concurrent.DefaultPromise:boolean cancel(boolean)",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.buffer.FixedCompositeByteBuf:boolean hasArray()",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:short getUnsignedByte(int)",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.UnpooledUnsafeDirectByteBuf:boolean hasArray()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                "io.netty.buffer.WrappedByteBuf:short getUnsignedByte(int)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf clear()",
                "io.netty.buffer.CompositeByteBuf:boolean hasArray()",
                "io.netty.buffer.EmptyByteBuf:short readUnsignedByte()",
                "io.netty.buffer.EmptyByteBuf:boolean hasArray()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf clear()",
                "io.netty.buffer.UnpooledDirectByteBuf:boolean hasArray()",
                "io.netty.buffer.SwappedByteBuf:short readUnsignedByte()"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.InetAddress,int)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.util.concurrent.DefaultPromise:boolean cancel(boolean)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)"
            ],
            "vul-called frequency": 21,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.InetAddress,int)",
                    "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                    "io.netty.util.concurrent.DefaultPromise:boolean cancel(boolean)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)"
                ]
            }
        },
        "org.apache.logging.log4j:log4j-core:2.6.2": {
            "used-method num": 0,
            "used method": []
        }
    }
}
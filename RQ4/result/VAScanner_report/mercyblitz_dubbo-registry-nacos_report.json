{
    "project name": "mercyblitz_dubbo-registry-nacos",
    "vulnerable dependencies": {
        "org.apache.dubbo:dubbo-common:2.7.7": {
            "used-method num": 45,
            "used method": [
                "org.apache.dubbo.common.logger.log4j.Log4jLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.logger.LoggerFactory:void <clinit>()",
                "org.apache.dubbo.common.function.ThrowableFunction:java.lang.Object execute(java.lang.Object,org.apache.dubbo.common.function.ThrowableFunction)",
                "org.apache.dubbo.common.URL:java.lang.String getParameter(java.lang.String)",
                "org.apache.dubbo.common.logger.slf4j.Slf4jLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.utils.ConcurrentHashSet:java.util.Iterator iterator()",
                "org.apache.dubbo.common.utils.LRUCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.dubbo.common.URL:java.lang.String getColonSeparatedKey()",
                "org.apache.dubbo.common.URL:java.lang.String getServiceInterface()",
                "org.apache.dubbo.common.utils.CollectionUtils:void <clinit>()",
                "org.apache.dubbo.common.function.ThrowableConsumer:void execute(java.lang.Object,org.apache.dubbo.common.function.ThrowableConsumer)",
                "org.apache.dubbo.common.logger.support.FailsafeLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.utils.StringUtils:boolean isEquals(java.lang.String,java.lang.String)",
                "org.apache.dubbo.common.URL:java.util.Map getParameters()",
                "org.apache.dubbo.common.logger.log4j2.Log4j2Logger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.URL:java.lang.String getHost()",
                "org.apache.dubbo.common.extension.ExtensionLoader:void replaceExtension(java.lang.String,java.lang.Class)",
                "org.apache.dubbo.common.logger.log4j.Log4jLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.extension.ExtensionLoader:org.apache.dubbo.common.extension.ExtensionLoader getExtensionLoader(java.lang.Class)",
                "org.apache.dubbo.common.extension.ExtensionLoader:void <clinit>()",
                "org.apache.dubbo.common.logger.jcl.JclLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.utils.StringUtils:boolean isNotEmpty(java.lang.String)",
                "org.apache.dubbo.common.logger.jdk.JdkLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.logger.support.FailsafeLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.URL:org.apache.dubbo.common.URL addParameter(java.lang.String,java.lang.String)",
                "org.apache.dubbo.common.logger.LoggerFactory:org.apache.dubbo.common.logger.Logger getLogger(java.lang.Class)",
                "org.apache.dubbo.common.URL:void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map)",
                "org.apache.dubbo.common.logger.jdk.JdkLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.URL:java.lang.String getPath()",
                "org.apache.dubbo.common.URLBuilder:org.apache.dubbo.common.URL build()",
                "org.apache.dubbo.common.utils.StringUtils:boolean isBlank(java.lang.CharSequence)",
                "org.apache.dubbo.common.utils.LRUCache:java.lang.Object get(java.lang.Object)",
                "org.apache.dubbo.common.URL:java.lang.String getProtocol()",
                "org.apache.dubbo.common.utils.LRUCache:boolean containsKey(java.lang.Object)",
                "org.apache.dubbo.common.logger.slf4j.Slf4jLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.utils.StringUtils:void <clinit>()",
                "org.apache.dubbo.common.URL:java.lang.String getParameter(java.lang.String,java.lang.String)",
                "org.apache.dubbo.common.utils.StringUtils:boolean isEmpty(java.lang.String)",
                "org.apache.dubbo.common.utils.UrlUtils:boolean isMatch(org.apache.dubbo.common.URL,org.apache.dubbo.common.URL)",
                "org.apache.dubbo.common.logger.jcl.JclLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.URL:int getPort()",
                "org.apache.dubbo.common.utils.CollectionUtils:boolean isNotEmpty(java.util.Collection)",
                "org.apache.dubbo.common.logger.log4j2.Log4j2Logger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.URLBuilder:org.apache.dubbo.common.URLBuilder addParameter(java.lang.String,java.lang.String)",
                "org.apache.dubbo.common.utils.ConcurrentHashSet:boolean isEmpty()"
            ]
        },
        "org.apache.dubbo:dubbo:2.7.7": {
            "used-method num": 60,
            "used method": [
                "org.apache.dubbo.common.logger.log4j.Log4jLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.registry.support.FailbackRegistry:void notify(org.apache.dubbo.common.URL,org.apache.dubbo.registry.NotifyListener,java.util.List)",
                "org.apache.dubbo.registry.support.FailbackRegistry:void <init>(org.apache.dubbo.common.URL)",
                "org.apache.dubbo.common.logger.LoggerFactory:void <clinit>()",
                "org.apache.dubbo.common.function.ThrowableFunction:java.lang.Object execute(java.lang.Object,org.apache.dubbo.common.function.ThrowableFunction)",
                "org.apache.dubbo.common.URL:java.lang.String getParameter(java.lang.String)",
                "org.apache.dubbo.common.logger.slf4j.Slf4jLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.utils.ConcurrentHashSet:java.util.Iterator iterator()",
                "org.apache.dubbo.common.utils.LRUCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.dubbo.common.URL:java.lang.String getColonSeparatedKey()",
                "org.apache.dubbo.common.URL:java.lang.String getServiceInterface()",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:java.util.Map getMetadata()",
                "org.apache.dubbo.common.utils.CollectionUtils:void <clinit>()",
                "org.apache.dubbo.common.function.ThrowableConsumer:void execute(java.lang.Object,org.apache.dubbo.common.function.ThrowableConsumer)",
                "org.apache.dubbo.common.logger.support.FailsafeLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.utils.StringUtils:boolean isEquals(java.lang.String,java.lang.String)",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:java.lang.String getServiceName()",
                "org.apache.dubbo.common.URL:java.util.Map getParameters()",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:void setEnabled(boolean)",
                "org.apache.dubbo.common.logger.log4j2.Log4j2Logger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.URL:java.lang.String getHost()",
                "org.apache.dubbo.common.extension.ExtensionLoader:void replaceExtension(java.lang.String,java.lang.Class)",
                "org.apache.dubbo.common.logger.log4j.Log4jLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.extension.ExtensionLoader:org.apache.dubbo.common.extension.ExtensionLoader getExtensionLoader(java.lang.Class)",
                "org.apache.dubbo.common.extension.ExtensionLoader:void <clinit>()",
                "org.apache.dubbo.common.logger.jcl.JclLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.utils.StringUtils:boolean isNotEmpty(java.lang.String)",
                "org.apache.dubbo.common.logger.jdk.JdkLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.logger.support.FailsafeLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)",
                "org.apache.dubbo.common.URL:org.apache.dubbo.common.URL addParameter(java.lang.String,java.lang.String)",
                "org.apache.dubbo.common.logger.LoggerFactory:org.apache.dubbo.common.logger.Logger getLogger(java.lang.Class)",
                "org.apache.dubbo.common.URL:void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map)",
                "org.apache.dubbo.common.logger.jdk.JdkLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:void setMetadata(java.util.Map)",
                "org.apache.dubbo.common.URL:java.lang.String getPath()",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:boolean isEnabled()",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:void setHealthy(boolean)",
                "org.apache.dubbo.common.URLBuilder:org.apache.dubbo.common.URL build()",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:java.lang.String getId()",
                "org.apache.dubbo.common.utils.StringUtils:boolean isBlank(java.lang.CharSequence)",
                "org.apache.dubbo.common.utils.LRUCache:java.lang.Object get(java.lang.Object)",
                "org.apache.dubbo.common.URL:java.lang.String getProtocol()",
                "org.apache.dubbo.common.utils.LRUCache:boolean containsKey(java.lang.Object)",
                "org.apache.dubbo.common.logger.slf4j.Slf4jLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.utils.StringUtils:void <clinit>()",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:java.lang.Integer getPort()",
                "org.apache.dubbo.common.URLBuilder:org.apache.dubbo.common.URLBuilder setProtocol(java.lang.String)",
                "org.apache.dubbo.common.URL:java.lang.String getParameter(java.lang.String,java.lang.String)",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:java.lang.String getHost()",
                "org.apache.dubbo.common.utils.StringUtils:boolean isEmpty(java.lang.String)",
                "org.apache.dubbo.common.utils.UrlUtils:boolean isMatch(org.apache.dubbo.common.URL,org.apache.dubbo.common.URL)",
                "org.apache.dubbo.common.logger.jcl.JclLogger:boolean isErrorEnabled()",
                "org.apache.dubbo.common.URL:int getPort()",
                "org.apache.dubbo.common.utils.CollectionUtils:boolean isNotEmpty(java.util.Collection)",
                "org.apache.dubbo.registry.support.AbstractRegistryFactory:void <init>()",
                "org.apache.dubbo.common.logger.log4j2.Log4j2Logger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.dubbo.common.URLBuilder:org.apache.dubbo.common.URLBuilder addParameter(java.lang.String,java.lang.String)",
                "org.apache.dubbo.registry.client.DefaultServiceInstance:boolean isHealthy()",
                "org.apache.dubbo.common.utils.ConcurrentHashSet:boolean isEmpty()"
            ]
        }
    }
}
{
    "project name": "EaseTech_easytest-core",
    "vulnerable dependencies": {
        "junit:junit:4.12": {
            "used-method num": 51,
            "used method": [
                "org.junit.internal.runners.model.EachTestNotifier:void <init>(org.junit.runner.notification.RunNotifier,org.junit.runner.Description)",
                "org.junit.rules.RunRules:void evaluate()",
                "org.junit.internal.runners.model.EachTestNotifier:void fireTestStarted()",
                "org.junit.runners.model.FrameworkMethod:java.lang.String getName()",
                "org.junit.internal.runners.statements.RunAfters:void evaluate()",
                "org.junit.experimental.theories.internal.ParameterizedAssertionError:boolean equals(java.lang.Object)",
                "org.junit.internal.runners.statements.Fail:void evaluate()",
                "org.junit.runners.BlockJUnit4ClassRunner:void <init>(java.lang.Class)",
                "org.junit.runners.model.MultipleFailureException:java.lang.String getMessage()",
                "org.junit.runner.Description:boolean equals(java.lang.Object)",
                "junit.framework.Assert:void fail(java.lang.String)",
                "org.junit.runners.Suite:void <init>(java.lang.Class,org.junit.runners.model.RunnerBuilder)",
                "org.junit.runners.model.FrameworkMethod:java.lang.String toString()",
                "org.junit.runner.notification.SynchronizedRunListener:boolean equals(java.lang.Object)",
                "org.junit.runners.model.MultipleFailureException:void assertEmpty(java.util.List)",
                "junit.framework.TestFailure:java.lang.String toString()",
                "org.junit.Assert:void fail(java.lang.String)",
                "org.junit.runners.model.FrameworkMethod:int hashCode()",
                "org.junit.runners.model.FrameworkMethod:java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])",
                "org.junit.runner.notification.Failure:java.lang.String toString()",
                "junit.framework.TestCase:java.lang.String toString()",
                "org.junit.internal.runners.model.EachTestNotifier:void addFailedAssumption(org.junit.internal.AssumptionViolatedException)",
                "org.junit.runner.notification.RunNotifier:void addListener(org.junit.runner.notification.RunListener)",
                "org.junit.internal.runners.model.EachTestNotifier:void addFailure(java.lang.Throwable)",
                "org.junit.runner.Description:java.lang.String toString()",
                "org.junit.runners.BlockJUnit4ClassRunner:org.junit.runners.model.Statement methodBlock(org.junit.runners.model.FrameworkMethod)",
                "org.junit.runners.model.FrameworkMethod:void <init>(java.lang.reflect.Method)",
                "org.junit.runner.notification.RunListener:void <init>()",
                "org.junit.internal.runners.statements.RunBefores:void evaluate()",
                "org.junit.runners.model.Statement:void <init>()",
                "org.junit.runners.model.FrameworkField:java.lang.String toString()",
                "org.junit.runner.manipulation.NoTestsRemainException:void <init>()",
                "org.junit.runner.Description:void <clinit>()",
                "org.junit.experimental.theories.internal.ParameterizedAssertionError:void <init>(java.lang.Throwable,java.lang.String,java.lang.Object[])",
                "org.junit.runners.ParentRunner:void setScheduler(org.junit.runners.model.RunnerScheduler)",
                "junit.framework.ComparisonFailure:java.lang.String getMessage()",
                "org.junit.experimental.theories.PotentialAssignment:org.junit.experimental.theories.PotentialAssignment forValue(java.lang.String,java.lang.Object)",
                "org.junit.runner.notification.SynchronizedRunListener:java.lang.String toString()",
                "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException:void <init>()",
                "org.junit.internal.runners.statements.ExpectException:void evaluate()",
                "org.junit.runner.notification.RunNotifier:void <init>()",
                "org.junit.internal.runners.statements.FailOnTimeout:void evaluate()",
                "org.junit.ComparisonFailure:java.lang.String getMessage()",
                "org.junit.Assert:void assertNotNull(java.lang.String,java.lang.Object)",
                "org.junit.internal.builders.AllDefaultPossibilitiesBuilder:void <init>(boolean)",
                "org.junit.runners.model.FrameworkMethod:java.lang.reflect.Method getMethod()",
                "org.junit.internal.runners.model.EachTestNotifier:void fireTestFinished()",
                "org.junit.internal.runners.statements.InvokeMethod:void evaluate()",
                "org.junit.runners.model.FrameworkMethod:boolean equals(java.lang.Object)",
                "junit.framework.TestSuite:java.lang.String toString()",
                "org.junit.runners.Suite:void <init>(java.lang.Class,java.util.List)"
            ]
        }
    }
}
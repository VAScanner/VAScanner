{
    "project name": "MageekChiu_CHKV",
    "modules": {
        "cn.mageek:CHKV": {
            "vulnerable dependencies": {
                "io.netty:netty-all:4.1.22.Final": {
                    "used-method num": 86,
                    "used method": [
                        "io.netty.buffer.ByteBufInputStream:void close()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                        "io.netty.handler.codec.serialization.ReferenceMap:int size()",
                        "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                        "io.netty.buffer.ByteBufUtil:void <clinit>()",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                        "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                        "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                        "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                        "io.netty.bootstrap.Bootstrap:void <clinit>()",
                        "io.netty.buffer.AbstractDerivedByteBuf:boolean release()",
                        "io.netty.channel.ChannelOption:void <clinit>()",
                        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                        "io.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                        "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean release()",
                        "io.netty.bootstrap.Bootstrap:void <init>()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                        "io.netty.handler.codec.serialization.ReferenceMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "io.netty.bootstrap.ServerBootstrap:void <init>()",
                        "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                        "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                        "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                        "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                        "io.netty.handler.codec.serialization.ReferenceMap:java.lang.Object get(java.lang.Object)",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:io.netty.util.internal.PriorityQueueNode next()",
                        "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.handler.timeout.ReadTimeoutHandler:void <clinit>()",
                        "io.netty.channel.ChannelInitializer:void <clinit>()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                        "io.netty.handler.codec.serialization.ReferenceMap:java.lang.Object remove(java.lang.Object)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                        "io.netty.buffer.UnreleasableByteBuf:boolean release()",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.util.concurrent.FailedFuture:io.netty.util.concurrent.Future sync()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                        "io.netty.handler.codec.serialization.ObjectDecoder:void <init>(int,io.netty.handler.codec.serialization.ClassResolver)",
                        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                        "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release()",
                        "io.netty.handler.codec.serialization.ReferenceMap:boolean containsKey(java.lang.Object)",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                        "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release()",
                        "io.netty.handler.codec.serialization.ReferenceMap:java.util.Set entrySet()",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                        "io.netty.channel.VoidChannelPromise:boolean isSuccess()",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                        "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise sync()",
                        "io.netty.channel.VoidChannelPromise:io.netty.channel.Channel channel()",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:void remove()",
                        "io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:void remove()",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                        "io.netty.buffer.EmptyByteBuf:boolean release()",
                        "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int)",
                        "io.netty.buffer.ByteBufUtil:java.lang.String hexDump(io.netty.buffer.ByteBuf)",
                        "io.netty.handler.codec.serialization.ObjectEncoder:void <init>()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                        "io.netty.util.concurrent.AbstractEventExecutorGroup:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                        "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                        "io.netty.handler.timeout.ReadTimeoutHandler:void <init>(int)",
                        "io.netty.channel.ChannelInitializer:void <init>()",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                        "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                        "io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:boolean hasNext()",
                        "io.netty.util.internal.ConcurrentSet:boolean contains(java.lang.Object)",
                        "io.netty.util.internal.ConcurrentSet:java.util.Iterator iterator()",
                        "io.netty.handler.codec.serialization.ClassResolvers:io.netty.handler.codec.serialization.ClassResolver cacheDisabled(java.lang.ClassLoader)",
                        "io.netty.channel.ChannelOutboundHandlerAdapter:void <init>()",
                        "io.netty.handler.codec.serialization.ReferenceMap:java.util.Set keySet()",
                        "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                        "io.netty.util.AbstractConstant:void <clinit>()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                        "io.netty.buffer.SwappedByteBuf:boolean release()",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()"
                    ],
                    "CVE": [
                        "CVE-2019-16869"
                    ],
                    "used vul-method": [
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)"
                    ],
                    "vul-called frequency": 30,
                    "related vul root method": {
                        "CVE-2019-16869": [
                            "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-16869": [
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                            "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect()",
                            "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                            "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                            "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                            "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                            "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                            "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                            "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int)",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                            "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                            "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)"
                        ]
                    }
                },
                "com.alibaba:fastjson:1.2.46": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        }
    }
}
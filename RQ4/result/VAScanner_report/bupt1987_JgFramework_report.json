{
    "project name": "bupt1987_JgFramework",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.0.33.Final": {
            "used-method num": 248,
            "used method": [
                "io.netty.channel.nio.SelectedSelectionKeySet:boolean add(java.lang.Object)",
                "io.netty.util.internal.ReadOnlyIterator:java.lang.Object next()",
                "io.netty.handler.codec.http.cors.CorsConfig:io.netty.handler.codec.http.cors.CorsConfig$Builder withAnyOrigin()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int compareTo(java.lang.Object)",
                "io.netty.handler.codec.http.HttpMethod:int compareTo(java.lang.Object)",
                "io.netty.handler.codec.http.HttpMethod:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.buffer.ByteBuf content()",
                "io.netty.buffer.SwappedByteBuf:int compareTo(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                "io.netty.channel.AdaptiveRecvByteBufAllocator:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                "io.netty.buffer.AbstractDerivedByteBuf:boolean release()",
                "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.util.UniqueName:void <clinit>()",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.internal.chmv8.LongAdderV8:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.DecoderResult getDecoderResult()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset)",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.handler.codec.MessageToMessageDecoder:void <init>()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderIterator:void remove()",
                "io.netty.buffer.AbstractByteBuf:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object nextElement()",
                "io.netty.util.ReferenceCountUtil:void <clinit>()",
                "io.netty.util.concurrent.ScheduledFutureTask:int compareTo(java.lang.Object)",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.handler.codec.http.QueryStringDecoder:void <init>(java.lang.String,java.nio.charset.Charset,boolean)",
                "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:java.lang.String text()",
                "io.netty.handler.codec.DecoderResult:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.Object getValue()",
                "io.netty.buffer.AbstractDerivedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.DecoderResult:boolean isSuccess()",
                "io.netty.util.UniqueName:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)",
                "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame)",
                "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)",
                "io.netty.util.internal.MpscLinkedQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.HttpResponseStatus:int code()",
                "io.netty.channel.group.CombinedIterator:java.lang.Object next()",
                "io.netty.handler.codec.http.websocketx.PongWebSocketFrame:void <init>(io.netty.buffer.ByteBuf)",
                "io.netty.util.UniqueName:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:int size()",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String getUri()",
                "io.netty.util.internal.ConcurrentSet:boolean add(java.lang.Object)",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String toString()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.util.internal.chmv8.LongAdderV8:int intValue()",
                "io.netty.handler.codec.http.HttpVersion:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.http.HttpMethod:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.buffer.ByteBuf content()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.SwappedByteBuf:boolean release()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry:java.lang.String getValue()",
                "io.netty.buffer.DefaultByteBufHolder:io.netty.buffer.ByteBuf content()",
                "io.netty.handler.codec.http.websocketx.WebSocketFrame:java.lang.String toString()",
                "io.netty.buffer.SwappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String toString()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.handler.timeout.IdleStateHandler:void <init>(long,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpVersion:int compareTo(java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.http.DefaultHttpContent:java.lang.String toString()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean release()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:io.netty.handler.codec.http.HttpResponseStatus getStatus()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:void clear()",
                "io.netty.handler.codec.http.cors.CorsConfig:java.lang.String toString()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpRequest:io.netty.handler.codec.http.HttpMethod getMethod()",
                "io.netty.util.UniqueName:int compareTo(java.lang.Object)",
                "io.netty.util.internal.chmv8.ForkJoinPool:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:int compareTo(java.lang.Object)",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpResponseStatus:void <clinit>()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release()",
                "io.netty.channel.group.DefaultChannelGroup:void <init>(java.lang.String,io.netty.util.concurrent.EventExecutor)",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean release()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.http.cors.CorsConfig$Builder:io.netty.handler.codec.http.cors.CorsConfig build()",
                "io.netty.handler.codec.http.HttpHeaders:void <clinit>()",
                "io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:void <init>(java.lang.String,java.lang.String,boolean)",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)",
                "io.netty.handler.codec.DelimiterBasedFrameDecoder:void <init>(int,io.netty.buffer.ByteBuf[])",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.PoolChunk:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpObjectDecoder:void <clinit>()",
                "io.netty.util.internal.chmv8.ForkJoinWorkerThread:void run()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.buffer.PoolArena:java.lang.String toString()",
                "io.netty.handler.codec.string.StringDecoder:void <init>()",
                "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)",
                "io.netty.util.internal.ConcurrentSet:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry:java.lang.String getKey()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:io.netty.handler.codec.http.HttpMethod getMethod()",
                "io.netty.handler.codec.string.StringEncoder:void <init>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.AbstractByteBuf:int compareTo(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean add(java.lang.Object)",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.handler.codec.http.HttpHeaderEntity:java.lang.String toString()",
                "io.netty.buffer.PooledByteBufAllocator:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpResponseStatus:int compareTo(java.lang.Object)",
                "io.netty.util.CharsetUtil:void <clinit>()",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.util.Set entrySet()",
                "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()",
                "io.netty.handler.codec.http.DefaultLastHttpContent:java.lang.String toString()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.handler.codec.http.cors.CorsHandler:void <clinit>()",
                "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                "io.netty.util.concurrent.GlobalEventExecutor:void <clinit>()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry:java.lang.String toString()",
                "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.channel.group.DefaultChannelGroup:void <clinit>()",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:java.lang.String toString()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean equals(java.lang.Object)",
                "io.netty.util.Signal:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean add(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:int compareTo(java.lang.Object)",
                "io.netty.handler.codec.MessageToMessageEncoder:void <init>()",
                "io.netty.handler.codec.http.HttpVersion:void <clinit>()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.string.StringDecoder:void <init>(java.nio.charset.Charset)",
                "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpRequest)",
                "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpObjectEncoder:void <clinit>()",
                "io.netty.util.internal.ReadOnlyIterator:void remove()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderIterator:boolean hasNext()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:java.lang.String get(java.lang.String)",
                "io.netty.handler.codec.http.HttpResponseStatus:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean contains(java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.http.cors.CorsHandler:void <init>(io.netty.handler.codec.http.cors.CorsConfig)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView keySet()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object remove(java.lang.Object)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)",
                "io.netty.handler.codec.http.DefaultHttpResponse:io.netty.handler.codec.http.HttpResponseStatus getStatus()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:void <clinit>()",
                "io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker newHandshaker(io.netty.handler.codec.http.HttpRequest)",
                "io.netty.handler.stream.ChunkedWriteHandler:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int readableBytes()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object nextElement()",
                "io.netty.buffer.EmptyByteBuf:boolean equals(java.lang.Object)",
                "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                "io.netty.handler.codec.http.QueryStringDecoder:java.util.Map parameters()",
                "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()",
                "io.netty.buffer.FixedCompositeByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(io.netty.channel.Channel)",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:java.lang.String toString()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.http.HttpHeaders:void setContentLength(io.netty.handler.codec.http.HttpMessage,long)",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpResponseStatus:boolean equals(java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:io.netty.buffer.ByteBuf content()",
                "io.netty.util.AttributeKey:void <clinit>()",
                "io.netty.util.internal.ConcurrentCircularArrayQueue:java.util.Iterator iterator()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture disconnect()",
                "io.netty.handler.codec.http.websocketx.PingWebSocketFrame:void <init>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean contains(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.http.HttpHeaders:boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)",
                "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpVersion:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpMethod:void <clinit>()",
                "io.netty.buffer.UnreleasableByteBuf:boolean release()",
                "io.netty.handler.codec.string.StringEncoder:void <init>(java.nio.charset.Charset)",
                "io.netty.channel.group.CombinedIterator:void remove()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderIterator:java.util.Map$Entry next()",
                "io.netty.buffer.DefaultByteBufHolder:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean isEmpty()",
                "io.netty.util.internal.AppendableCharSequence:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpObject:io.netty.handler.codec.DecoderResult getDecoderResult()",
                "io.netty.bootstrap.ServerBootstrap:java.lang.String toString()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release()",
                "io.netty.handler.codec.Delimiters:io.netty.buffer.ByteBuf[] lineDelimiter()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.util.Collection values()",
                "io.netty.util.ReferenceCountUtil:java.lang.Object retain(java.lang.Object)",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <clinit>()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:void remove()",
                "io.netty.handler.stream.ChunkedWriteHandler:void <init>()",
                "io.netty.util.internal.ReadOnlyIterator:boolean hasNext()",
                "io.netty.channel.group.CombinedIterator:boolean hasNext()",
                "io.netty.buffer.EmptyByteBuf:boolean release()",
                "io.netty.handler.timeout.IdleState:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:void remove()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.handler.codec.http.DefaultHttpContent:io.netty.buffer.ByteBuf content()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf retain()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String getUri()",
                "io.netty.util.internal.ConcurrentSet:boolean contains(java.lang.Object)",
                "io.netty.channel.ChannelFutureListener:void <clinit>()",
                "io.netty.buffer.WrappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.http.websocketx.CloseWebSocketFrame:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.http.DefaultHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture disconnect()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)"
            ],
            "vul-called frequency": 18,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture disconnect()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)"
                ]
            }
        },
        "dom4j:dom4j:1.6.1": {
            "used-method num": 46,
            "used method": [
                "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$EntrySet:java.util.Iterator iterator()",
                "org.dom4j.tree.AbstractText:java.lang.String toString()",
                "org.dom4j.tree.ContentListFacade:int size()",
                "org.dom4j.tree.ContentListFacade:boolean contains(java.lang.Object)",
                "org.dom4j.tree.AbstractDocument:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:java.lang.Object nextElement()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:void remove()",
                "org.dom4j.QName:java.lang.String toString()",
                "org.dom4j.tree.AbstractAttribute:java.lang.String toString()",
                "org.dom4j.DocumentException:java.lang.String getMessage()",
                "org.dom4j.Namespace:java.lang.String toString()",
                "org.dom4j.tree.AbstractCDATA:java.lang.String toString()",
                "org.dom4j.tree.NamespaceStack:java.lang.String toString()",
                "org.dom4j.Namespace:boolean equals(java.lang.Object)",
                "org.dom4j.tree.AbstractEntity:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$Entry:boolean equals(java.lang.Object)",
                "org.dom4j.xpath.XPathPattern:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$KeySet:java.util.Iterator iterator()",
                "org.dom4j.dtd.InternalEntityDecl:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:java.lang.String toString()",
                "org.dom4j.xpath.DefaultXPath:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:boolean hasMoreElements()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object get(java.lang.Object)",
                "org.dom4j.tree.ConcurrentReaderHashMap:int size()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object remove(java.lang.Object)",
                "org.dom4j.tree.AbstractComment:java.lang.String toString()",
                "org.dom4j.dtd.ExternalEntityDecl:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.util.Set keySet()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:java.lang.Object next()",
                "org.dom4j.tree.ConcurrentReaderHashMap$KeySet:boolean contains(java.lang.Object)",
                "org.dom4j.tree.ConcurrentReaderHashMap$Entry:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:boolean hasNext()",
                "org.dom4j.tree.ContentListFacade:java.lang.Object get(int)",
                "org.dom4j.dtd.AttributeDecl:java.lang.String toString()",
                "org.dom4j.dtd.ElementDecl:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$Values:java.util.Iterator iterator()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.util.Set entrySet()",
                "org.dom4j.tree.DefaultNamespace:boolean equals(java.lang.Object)",
                "org.dom4j.QName:boolean equals(java.lang.Object)",
                "org.dom4j.tree.ConcurrentReaderHashMap$EntrySet:boolean contains(java.lang.Object)",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.util.Collection values()",
                "org.dom4j.tree.ConcurrentReaderHashMap:void clear()",
                "org.dom4j.tree.ContentListFacade:boolean add(java.lang.Object)",
                "org.dom4j.tree.AbstractDocumentType:java.lang.String toString()"
            ]
        },
        "org.springframework:spring-core:3.1.1.RELEASE": {
            "used-method num": 42,
            "used method": [
                "org.springframework.core.convert.support.GenericConversionService$ConverterAdapter:java.lang.String toString()",
                "org.springframework.util.LinkedMultiValueMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.springframework.core.AttributeAccessorSupport:boolean equals(java.lang.Object)",
                "org.springframework.core.MethodParameter:boolean equals(java.lang.Object)",
                "org.springframework.core.NestedCheckedException:java.lang.String getMessage()",
                "org.springframework.util.LinkedMultiValueMap:void clear()",
                "org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey:boolean equals(java.lang.Object)",
                "org.springframework.core.NestedIOException:java.lang.String getMessage()",
                "org.springframework.util.LinkedMultiValueMap:boolean isEmpty()",
                "org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey:java.lang.String toString()",
                "org.springframework.core.env.PropertySource:boolean equals(java.lang.Object)",
                "org.springframework.core.convert.support.GenericConversionService$MatchableConverters:java.lang.String toString()",
                "org.springframework.core.NestedRuntimeException:java.lang.String getMessage()",
                "org.springframework.core.type.classreading.CachingMetadataReaderFactory:org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)",
                "org.springframework.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
                "org.springframework.core.io.support.PathMatchingResourcePatternResolver:org.springframework.core.io.Resource[] getResources(java.lang.String)",
                "org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor:java.lang.String toString()",
                "org.springframework.util.Assert:void notNull(java.lang.Object,java.lang.String)",
                "org.springframework.core.io.support.PathMatchingResourcePatternResolver:void <init>()",
                "org.springframework.util.LinkedMultiValueMap:boolean equals(java.lang.Object)",
                "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair:boolean equals(java.lang.Object)",
                "org.springframework.core.type.classreading.CachingMetadataReaderFactory:void <init>(org.springframework.core.io.ResourceLoader)",
                "org.springframework.core.convert.TypeDescriptor:boolean equals(java.lang.Object)",
                "org.springframework.util.LinkedMultiValueMap:int size()",
                "org.springframework.util.LinkedMultiValueMap:java.util.List remove(java.lang.Object)",
                "org.springframework.core.convert.support.GenericConversionService:java.lang.String toString()",
                "org.springframework.core.type.classreading.ClassMetadataReadingVisitor:java.lang.String getClassName()",
                "org.springframework.core.io.UrlResource:boolean equals(java.lang.Object)",
                "org.springframework.util.LinkedMultiValueMap:java.util.Set keySet()",
                "org.springframework.core.env.AbstractEnvironment:java.lang.String toString()",
                "org.springframework.util.LinkedMultiValueMap:java.util.Collection values()",
                "org.springframework.util.LinkedMultiValueMap:java.util.Set entrySet()",
                "org.springframework.core.io.VfsResource:boolean equals(java.lang.Object)",
                "org.springframework.core.io.support.PathMatchingResourcePatternResolver:void <clinit>()",
                "org.springframework.core.env.PropertySource:java.lang.String toString()",
                "org.springframework.util.LinkedMultiValueMap:java.lang.String toString()",
                "org.springframework.util.LinkedMultiValueMap:java.util.List get(java.lang.Object)",
                "org.springframework.core.convert.TypeDescriptor:java.lang.String toString()",
                "org.springframework.core.io.ClassPathResource:boolean equals(java.lang.Object)",
                "org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter:java.lang.String toString()",
                "org.springframework.core.io.support.EncodedResource:java.lang.String toString()",
                "org.springframework.core.io.support.EncodedResource:boolean equals(java.lang.Object)"
            ],
            "CVE": [
                "CVE-2014-3578"
            ],
            "used vul-method": [
                "org.springframework.core.io.support.PathMatchingResourcePatternResolver:org.springframework.core.io.Resource[] getResources(java.lang.String)"
            ],
            "vul-called frequency": 1,
            "related vul root method": {
                "CVE-2014-3578": [
                    "org.springframework.util.StringUtils:java.lang.String cleanPath(java.lang.String)"
                ]
            },
            "CVE-API": {
                "CVE-2014-3578": [
                    "org.springframework.core.io.support.PathMatchingResourcePatternResolver:org.springframework.core.io.Resource[] getResources(java.lang.String)"
                ]
            }
        },
        "org.springframework:spring-expression:3.1.1.RELEASE": {
            "used-method num": 10,
            "used method": [
                "org.springframework.expression.spel.ast.StringLiteral:java.lang.String toString()",
                "org.springframework.expression.spel.ast.NullLiteral:java.lang.String toString()",
                "org.springframework.expression.spel.ast.Literal:java.lang.String toString()",
                "org.springframework.expression.spel.standard.Token:java.lang.String toString()",
                "org.springframework.expression.spel.standard.TokenKind:java.lang.String toString()",
                "org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey:boolean equals(java.lang.Object)",
                "org.springframework.expression.spel.SpelParseException:java.lang.String getMessage()",
                "org.springframework.expression.TypedValue:java.lang.String toString()",
                "org.springframework.expression.spel.SpelEvaluationException:java.lang.String getMessage()",
                "org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo:java.lang.String toString()"
            ]
        }
    }
}
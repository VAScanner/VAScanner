{
    "project name": "dhfbk_tint",
    "modules": {
        "eu.fbk.dh:tint": {
            "vulnerable dependencies": {
                "edu.stanford.nlp:stanford-corenlp:4.2.0": {
                    "used-method num": 115,
                    "used method": [
                        "edu.stanford.nlp.io.IOUtils$EolPreservingLineReaderIterable$1:boolean hasNext()",
                        "edu.stanford.nlp.ling.CoreLabel:void setIsMWTFirst(boolean)",
                        "edu.stanford.nlp.trees.TransformingTreebank$TransformingTreebankIterator:edu.stanford.nlp.trees.Tree next()",
                        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:boolean hasNext()",
                        "edu.stanford.nlp.util.ConcatenationIterator:boolean hasNext()",
                        "edu.stanford.nlp.stats.Counters$3:java.lang.Double get(java.lang.Object)",
                        "edu.stanford.nlp.stats.IntCounter$1:java.util.Iterator iterator()",
                        "edu.stanford.nlp.util.ArrayCoreMap$1$1:java.lang.Class next()",
                        "edu.stanford.nlp.stats.ClassicCounter$1$1:java.lang.Double next()",
                        "edu.stanford.nlp.process.AbstractTokenizer:java.lang.Object next()",
                        "edu.stanford.nlp.io.IOUtils$EolPreservingLineReaderIterable$1:java.lang.String next()",
                        "edu.stanford.nlp.util.ArrayMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "edu.stanford.nlp.trees.DiskTreebank$DiskTreebankIterator:boolean hasNext()",
                        "edu.stanford.nlp.objectbank.LineIterator:java.lang.Object next()",
                        "edu.stanford.nlp.util.ArrayMap:java.lang.Object get(java.lang.Object)",
                        "edu.stanford.nlp.ling.CoreLabel:void setWord(java.lang.String)",
                        "edu.stanford.nlp.util.ArrayCoreMap:void <clinit>()",
                        "edu.stanford.nlp.util.ArrayCoreMap:boolean containsKey(java.lang.Class)",
                        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:java.lang.Object next()",
                        "edu.stanford.nlp.util.StringUtils:void <clinit>()",
                        "edu.stanford.nlp.stats.Counters$2$1:java.util.Iterator iterator()",
                        "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator:edu.stanford.nlp.trees.GrammaticalStructure next()",
                        "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapIterator:boolean hasNext()",
                        "edu.stanford.nlp.stats.IntCounter$1$1:java.util.Map$Entry next()",
                        "edu.stanford.nlp.trees.MemoryTreebank:boolean add(java.lang.Object)",
                        "edu.stanford.nlp.trees.CompositeTreebank$CompositeTreebankIterator:edu.stanford.nlp.trees.Tree next()",
                        "edu.stanford.nlp.util.ArraySet:void <init>(java.util.List)",
                        "edu.stanford.nlp.objectbank.ObjectBank$OBIterator:boolean hasNext()",
                        "edu.stanford.nlp.util.DeltaMap$1$1NullingIterator:java.util.Map$Entry next()",
                        "edu.stanford.nlp.util.DeltaMap:java.lang.Object get(java.lang.Object)",
                        "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator:boolean hasNext()",
                        "edu.stanford.nlp.io.IOUtils$LineReaderIterable$1:java.lang.String next()",
                        "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapValueIterator:boolean hasNext()",
                        "edu.stanford.nlp.stats.Counters$2$1$1:boolean hasNext()",
                        "edu.stanford.nlp.util.ArraySet:java.util.Iterator iterator()",
                        "edu.stanford.nlp.stats.IntCounter$1$1:boolean hasNext()",
                        "edu.stanford.nlp.trees.tregex.Relation$SearchNodeIterator:boolean hasNext()",
                        "edu.stanford.nlp.util.ArrayCoreMap$1$1:boolean hasNext()",
                        "edu.stanford.nlp.util.CollectionUtils$2:boolean hasNext()",
                        "edu.stanford.nlp.stats.Counters$2$3$1:java.lang.Object next()",
                        "edu.stanford.nlp.stats.Counters$2$4$1:java.lang.Double next()",
                        "edu.stanford.nlp.util.FilteredIterator:java.lang.Object next()",
                        "edu.stanford.nlp.io.IOUtils$1$1:boolean hasNext()",
                        "edu.stanford.nlp.stats.Counters$1$1:java.util.Iterator iterator()",
                        "edu.stanford.nlp.util.DeltaMap$1$1NullingIterator:boolean hasNext()",
                        "edu.stanford.nlp.trees.CompositeTreebank$CompositeTreebankIterator:boolean hasNext()",
                        "edu.stanford.nlp.util.logging.Redwood$Util$1:java.lang.Runnable next()",
                        "edu.stanford.nlp.ling.CoreLabel:void <init>(edu.stanford.nlp.ling.CoreLabel)",
                        "edu.stanford.nlp.util.IdentityHashSet:boolean add(java.lang.Object)",
                        "edu.stanford.nlp.semgraph.semgrex.GraphRelation$SearchNodeIterator:boolean hasNext()",
                        "edu.stanford.nlp.util.CollectionValuedMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "edu.stanford.nlp.stats.Counters$2$3:java.util.Iterator iterator()",
                        "edu.stanford.nlp.graph.DirectedMultiGraph$EdgeIterator:java.lang.Object next()",
                        "edu.stanford.nlp.objectbank.DelimitRegExIterator:java.lang.Object next()",
                        "edu.stanford.nlp.util.IterableIterator:boolean hasNext()",
                        "edu.stanford.nlp.ling.CoreLabel:void <clinit>()",
                        "edu.stanford.nlp.util.IntPair:void <init>(int,int)",
                        "edu.stanford.nlp.objectbank.LineIterator:boolean hasNext()",
                        "edu.stanford.nlp.io.IOUtils$GetLinesIterable$1:boolean hasNext()",
                        "edu.stanford.nlp.util.StringUtils:boolean isAllUpperCase(java.lang.String)",
                        "edu.stanford.nlp.util.ArrayCoreMap:java.lang.Object set(java.lang.Class,java.lang.Object)",
                        "edu.stanford.nlp.ling.CoreLabel:void setValue(java.lang.String)",
                        "edu.stanford.nlp.util.ConcatenationIterator:java.lang.Object next()",
                        "edu.stanford.nlp.util.ArraySet:boolean add(java.lang.Object)",
                        "edu.stanford.nlp.stats.ClassicCounter$2:java.util.Iterator iterator()",
                        "edu.stanford.nlp.io.IOUtils$GetLinesIterable$1:java.lang.String next()",
                        "edu.stanford.nlp.util.logging.Redwood$RecordHandlerTree$1:edu.stanford.nlp.util.logging.LogRecordHandler next()",
                        "edu.stanford.nlp.util.DeltaMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:java.util.Iterator iterator()",
                        "edu.stanford.nlp.util.CollectionUtils$1:java.lang.Object next()",
                        "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$LazyLoadTreesByParsing$1:boolean hasNext()",
                        "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapValueIterator:java.lang.Object next()",
                        "edu.stanford.nlp.graph.DirectedMultiGraph$EdgeIterator:boolean hasNext()",
                        "edu.stanford.nlp.util.ArrayCoreMap:java.lang.Object get(java.lang.Class)",
                        "edu.stanford.nlp.util.logging.Redwood$Util$1:boolean hasNext()",
                        "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapIterator:edu.stanford.nlp.util.TwoDimensionalMap$Entry next()",
                        "edu.stanford.nlp.util.DeltaMap$1:java.util.Iterator iterator()",
                        "edu.stanford.nlp.stats.ClassicCounter$2$1:boolean hasNext()",
                        "edu.stanford.nlp.util.logging.Redwood$RecordHandlerTree$1:boolean hasNext()",
                        "edu.stanford.nlp.stats.Counters$2$3$1:boolean hasNext()",
                        "edu.stanford.nlp.objectbank.ObjectBank$OBIterator:java.lang.Object next()",
                        "edu.stanford.nlp.stats.ClassicCounter$2$1:java.util.Map$Entry next()",
                        "edu.stanford.nlp.util.CollectionValuedMap:java.util.Collection get(java.lang.Object)",
                        "edu.stanford.nlp.util.FilteredIterator:boolean hasNext()",
                        "edu.stanford.nlp.objectbank.DelimitRegExIterator:boolean hasNext()",
                        "edu.stanford.nlp.stats.ClassicCounter$1$1:boolean hasNext()",
                        "edu.stanford.nlp.trees.TransformingTreebank$TransformingTreebankIterator:boolean hasNext()",
                        "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$LazyLoadTreesByParsing$1:edu.stanford.nlp.trees.Tree next()",
                        "edu.stanford.nlp.ling.CoreLabel:java.lang.String originalText()",
                        "edu.stanford.nlp.process.AbstractTokenizer:boolean hasNext()",
                        "edu.stanford.nlp.util.CollectionUtils$1:boolean hasNext()",
                        "edu.stanford.nlp.io.IOUtils$1$1:java.io.File next()",
                        "edu.stanford.nlp.util.ArrayCoreMap$1:java.util.Iterator iterator()",
                        "edu.stanford.nlp.io.IOUtils$LineReaderIterable$1:boolean hasNext()",
                        "edu.stanford.nlp.objectbank.ReaderIteratorFactory$ReaderIterator:java.io.Reader next()",
                        "edu.stanford.nlp.ling.CoreLabel:java.lang.String word()",
                        "edu.stanford.nlp.objectbank.ReaderIteratorFactory$ReaderIterator:boolean hasNext()",
                        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:boolean add(java.lang.Object)",
                        "edu.stanford.nlp.ling.CoreLabel:void setIsMWT(boolean)",
                        "edu.stanford.nlp.ling.CoreLabel:void setSentIndex(int)",
                        "edu.stanford.nlp.util.StringUtils:java.lang.String toTitleCase(java.lang.String)",
                        "edu.stanford.nlp.semgraph.semgrex.GraphRelation$SearchNodeIterator:edu.stanford.nlp.ling.IndexedWord next()",
                        "edu.stanford.nlp.trees.tregex.Relation$SearchNodeIterator:edu.stanford.nlp.trees.Tree next()",
                        "edu.stanford.nlp.ling.CoreLabel:int index()",
                        "edu.stanford.nlp.trees.DiskTreebank$DiskTreebankIterator:edu.stanford.nlp.trees.Tree next()",
                        "edu.stanford.nlp.trees.MemoryTreebank:java.util.Iterator iterator()",
                        "edu.stanford.nlp.stats.IntCounter$3$1:java.lang.Double next()",
                        "edu.stanford.nlp.stats.Counters$1$1$1:java.util.Map$Entry next()",
                        "edu.stanford.nlp.util.StringUtils:boolean isTitleCase(java.lang.String)",
                        "edu.stanford.nlp.util.IterableIterator:java.lang.Object next()",
                        "edu.stanford.nlp.ling.CoreLabel:void setIndex(int)",
                        "edu.stanford.nlp.util.CollectionUtils$2:java.lang.Object next()",
                        "edu.stanford.nlp.util.IdentityHashSet:java.util.Iterator iterator()",
                        "edu.stanford.nlp.stats.Counters$2$1$1:java.util.Map$Entry next()",
                        "edu.stanford.nlp.stats.Counters$3:java.lang.Object put(java.lang.Object,java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2021-3869"
                    ],
                    "used vul-method": [
                        "edu.stanford.nlp.trees.TransformingTreebank$TransformingTreebankIterator:edu.stanford.nlp.trees.Tree next()",
                        "edu.stanford.nlp.stats.Counters$3:java.lang.Double get(java.lang.Object)",
                        "edu.stanford.nlp.stats.IntCounter$1:java.util.Iterator iterator()",
                        "edu.stanford.nlp.process.AbstractTokenizer:java.lang.Object next()",
                        "edu.stanford.nlp.util.ArrayMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "edu.stanford.nlp.objectbank.LineIterator:java.lang.Object next()",
                        "edu.stanford.nlp.util.ArrayMap:java.lang.Object get(java.lang.Object)",
                        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:java.lang.Object next()",
                        "edu.stanford.nlp.stats.Counters$2$1:java.util.Iterator iterator()",
                        "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator:edu.stanford.nlp.trees.GrammaticalStructure next()",
                        "edu.stanford.nlp.stats.IntCounter$1$1:java.util.Map$Entry next()",
                        "edu.stanford.nlp.trees.CompositeTreebank$CompositeTreebankIterator:edu.stanford.nlp.trees.Tree next()",
                        "edu.stanford.nlp.util.DeltaMap$1$1NullingIterator:java.util.Map$Entry next()",
                        "edu.stanford.nlp.util.DeltaMap:java.lang.Object get(java.lang.Object)",
                        "edu.stanford.nlp.util.FilteredIterator:java.lang.Object next()",
                        "edu.stanford.nlp.util.CollectionValuedMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "edu.stanford.nlp.graph.DirectedMultiGraph$EdgeIterator:java.lang.Object next()",
                        "edu.stanford.nlp.objectbank.DelimitRegExIterator:java.lang.Object next()",
                        "edu.stanford.nlp.util.IterableIterator:boolean hasNext()",
                        "edu.stanford.nlp.util.ConcatenationIterator:java.lang.Object next()",
                        "edu.stanford.nlp.stats.ClassicCounter$2:java.util.Iterator iterator()",
                        "edu.stanford.nlp.util.DeltaMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:java.util.Iterator iterator()",
                        "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapValueIterator:java.lang.Object next()",
                        "edu.stanford.nlp.graph.DirectedMultiGraph$EdgeIterator:boolean hasNext()",
                        "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapIterator:edu.stanford.nlp.util.TwoDimensionalMap$Entry next()",
                        "edu.stanford.nlp.util.DeltaMap$1:java.util.Iterator iterator()",
                        "edu.stanford.nlp.objectbank.ObjectBank$OBIterator:java.lang.Object next()",
                        "edu.stanford.nlp.stats.ClassicCounter$2$1:java.util.Map$Entry next()",
                        "edu.stanford.nlp.util.CollectionValuedMap:java.util.Collection get(java.lang.Object)",
                        "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$LazyLoadTreesByParsing$1:edu.stanford.nlp.trees.Tree next()",
                        "edu.stanford.nlp.process.AbstractTokenizer:boolean hasNext()",
                        "edu.stanford.nlp.util.BinaryHeapPriorityQueue:boolean add(java.lang.Object)",
                        "edu.stanford.nlp.semgraph.semgrex.GraphRelation$SearchNodeIterator:edu.stanford.nlp.ling.IndexedWord next()",
                        "edu.stanford.nlp.trees.DiskTreebank$DiskTreebankIterator:edu.stanford.nlp.trees.Tree next()",
                        "edu.stanford.nlp.util.IterableIterator:java.lang.Object next()",
                        "edu.stanford.nlp.stats.Counters$2$1$1:java.util.Map$Entry next()",
                        "edu.stanford.nlp.stats.Counters$3:java.lang.Object put(java.lang.Object,java.lang.Object)"
                    ],
                    "vul-called frequency": 110,
                    "related vul root method": {
                        "CVE-2021-3869": [
                            "edu.stanford.nlp.util.XMLUtils:javax.xml.parsers.DocumentBuilder getXmlParser()"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2021-3869": [
                            "edu.stanford.nlp.trees.TransformingTreebank$TransformingTreebankIterator:edu.stanford.nlp.trees.Tree next()",
                            "edu.stanford.nlp.stats.Counters$3:java.lang.Double get(java.lang.Object)",
                            "edu.stanford.nlp.stats.IntCounter$1:java.util.Iterator iterator()",
                            "edu.stanford.nlp.process.AbstractTokenizer:java.lang.Object next()",
                            "edu.stanford.nlp.util.ArrayMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                            "edu.stanford.nlp.objectbank.LineIterator:java.lang.Object next()",
                            "edu.stanford.nlp.util.ArrayMap:java.lang.Object get(java.lang.Object)",
                            "edu.stanford.nlp.util.BinaryHeapPriorityQueue:java.lang.Object next()",
                            "edu.stanford.nlp.stats.Counters$2$1:java.util.Iterator iterator()",
                            "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator:edu.stanford.nlp.trees.GrammaticalStructure next()",
                            "edu.stanford.nlp.stats.IntCounter$1$1:java.util.Map$Entry next()",
                            "edu.stanford.nlp.trees.CompositeTreebank$CompositeTreebankIterator:edu.stanford.nlp.trees.Tree next()",
                            "edu.stanford.nlp.util.DeltaMap$1$1NullingIterator:java.util.Map$Entry next()",
                            "edu.stanford.nlp.util.DeltaMap:java.lang.Object get(java.lang.Object)",
                            "edu.stanford.nlp.util.FilteredIterator:java.lang.Object next()",
                            "edu.stanford.nlp.util.CollectionValuedMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                            "edu.stanford.nlp.graph.DirectedMultiGraph$EdgeIterator:java.lang.Object next()",
                            "edu.stanford.nlp.objectbank.DelimitRegExIterator:java.lang.Object next()",
                            "edu.stanford.nlp.util.IterableIterator:boolean hasNext()",
                            "edu.stanford.nlp.util.ConcatenationIterator:java.lang.Object next()",
                            "edu.stanford.nlp.stats.ClassicCounter$2:java.util.Iterator iterator()",
                            "edu.stanford.nlp.util.DeltaMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                            "edu.stanford.nlp.util.BinaryHeapPriorityQueue:java.util.Iterator iterator()",
                            "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapValueIterator:java.lang.Object next()",
                            "edu.stanford.nlp.graph.DirectedMultiGraph$EdgeIterator:boolean hasNext()",
                            "edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapIterator:edu.stanford.nlp.util.TwoDimensionalMap$Entry next()",
                            "edu.stanford.nlp.util.DeltaMap$1:java.util.Iterator iterator()",
                            "edu.stanford.nlp.objectbank.ObjectBank$OBIterator:java.lang.Object next()",
                            "edu.stanford.nlp.stats.ClassicCounter$2$1:java.util.Map$Entry next()",
                            "edu.stanford.nlp.util.CollectionValuedMap:java.util.Collection get(java.lang.Object)",
                            "edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$LazyLoadTreesByParsing$1:edu.stanford.nlp.trees.Tree next()",
                            "edu.stanford.nlp.process.AbstractTokenizer:boolean hasNext()",
                            "edu.stanford.nlp.util.BinaryHeapPriorityQueue:boolean add(java.lang.Object)",
                            "edu.stanford.nlp.semgraph.semgrex.GraphRelation$SearchNodeIterator:edu.stanford.nlp.ling.IndexedWord next()",
                            "edu.stanford.nlp.trees.DiskTreebank$DiskTreebankIterator:edu.stanford.nlp.trees.Tree next()",
                            "edu.stanford.nlp.util.IterableIterator:java.lang.Object next()",
                            "edu.stanford.nlp.stats.Counters$2$1$1:java.util.Map$Entry next()",
                            "edu.stanford.nlp.stats.Counters$3:java.lang.Object put(java.lang.Object,java.lang.Object)"
                        ]
                    }
                },
                "junit:junit:4.12": {
                    "used-method num": 0,
                    "used method": []
                },
                "org.apache.uima:uimaj-core:2.8.1": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        }
    }
}
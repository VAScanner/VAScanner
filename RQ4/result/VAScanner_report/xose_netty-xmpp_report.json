{
    "project name": "xose_netty-xmpp",
    "vulnerable dependencies": {
        "io.netty:netty:3.4.6.Final": {
            "used-method num": 71,
            "used method": [
                "org.jboss.netty.bootstrap.ClientBootstrap:org.jboss.netty.channel.ChannelFuture connect(java.net.SocketAddress)",
                "org.jboss.netty.channel.Channels:void fireMessageReceived(org.jboss.netty.channel.ChannelHandlerContext,java.lang.Object)",
                "org.jboss.netty.channel.Channels:org.jboss.netty.channel.ChannelPipeline pipeline()",
                "org.jboss.netty.channel.DefaultChannelPipeline:java.lang.String toString()",
                "org.jboss.netty.channel.Channels:org.jboss.netty.channel.ChannelFuture write(org.jboss.netty.channel.Channel,java.lang.Object)",
                "org.jboss.netty.channel.SimpleChannelHandler:void <init>()",
                "org.jboss.netty.util.CharsetUtil:void <clinit>()",
                "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap:java.lang.Object get(java.lang.Object)",
                "org.jboss.netty.channel.DefaultChannelPipeline:void addLast(java.lang.String,org.jboss.netty.channel.ChannelHandler)",
                "org.jboss.netty.channel.SimpleChannelUpstreamHandler:void <clinit>()",
                "org.jboss.netty.channel.FailedChannelFuture:boolean isSuccess()",
                "org.jboss.netty.channel.DefaultChannelPipeline:org.jboss.netty.channel.ChannelHandler get(java.lang.Class)",
                "org.jboss.netty.channel.DefaultChildChannelStateEvent:java.lang.String toString()",
                "org.jboss.netty.channel.DownstreamChannelStateEvent:java.lang.String toString()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$SimpleEntry:java.lang.String toString()",
                "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.jboss.netty.handler.execution.ExecutionHandler:void <init>(java.util.concurrent.Executor)",
                "org.jboss.netty.handler.execution.OrderedMemoryAwareThreadPoolExecutor:void <init>(int,long,long)",
                "org.jboss.netty.channel.DefaultChannelFuture:boolean isSuccess()",
                "org.jboss.netty.channel.CompleteChannelFuture:org.jboss.netty.channel.ChannelFuture await()",
                "org.jboss.netty.buffer.AbstractChannelBuffer:java.lang.String toString()",
                "org.jboss.netty.channel.SimpleChannelUpstreamHandler:void <init>()",
                "org.jboss.netty.channel.AbstractChannel:org.jboss.netty.channel.ChannelFuture getCloseFuture()",
                "org.jboss.netty.channel.socket.nio.NioSocketChannel:boolean isConnected()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap:java.lang.Object get(java.lang.Object)",
                "org.jboss.netty.handler.execution.ExecutionHandler:void releaseExternalResources()",
                "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor)",
                "org.jboss.netty.channel.DownstreamChannelStateEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                "org.jboss.netty.channel.DefaultExceptionEvent:java.lang.String toString()",
                "org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor:void <clinit>()",
                "org.jboss.netty.util.internal.ConcurrentHashMap$SimpleEntry:java.lang.String toString()",
                "org.jboss.netty.channel.FailedChannelFuture:org.jboss.netty.channel.ChannelFuture rethrowIfFailed()",
                "org.jboss.netty.channel.DefaultChannelFuture:org.jboss.netty.channel.ChannelFuture await()",
                "org.jboss.netty.channel.UpstreamChannelStateEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext:org.jboss.netty.channel.Channel getChannel()",
                "org.jboss.netty.channel.DownstreamMessageEvent:java.lang.Object getMessage()",
                "org.jboss.netty.buffer.AbstractChannelBuffer:void readBytes(byte[])",
                "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$SimpleEntry:java.lang.String toString()",
                "org.jboss.netty.channel.SimpleChannelHandler:void <clinit>()",
                "org.jboss.netty.bootstrap.Bootstrap:void setPipelineFactory(org.jboss.netty.channel.ChannelPipelineFactory)",
                "org.jboss.netty.channel.Channels:void write(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelFuture,java.lang.Object)",
                "org.jboss.netty.channel.DownstreamMessageEvent:java.lang.String toString()",
                "org.jboss.netty.channel.UpstreamMessageEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                "org.jboss.netty.channel.UpstreamChannelStateEvent:java.lang.String toString()",
                "org.jboss.netty.channel.UpstreamMessageEvent:java.lang.Object getMessage()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap:boolean containsKey(java.lang.Object)",
                "org.jboss.netty.channel.AbstractChannel:java.lang.String toString()",
                "org.jboss.netty.channel.DownstreamMessageEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                "org.jboss.netty.channel.UpstreamMessageEvent:java.lang.String toString()",
                "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap:boolean containsKey(java.lang.Object)",
                "org.jboss.netty.bootstrap.ClientBootstrap:void <init>(org.jboss.netty.channel.ChannelFactory)",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.jboss.netty.channel.Channels:org.jboss.netty.channel.ChannelFuture disconnect(org.jboss.netty.channel.Channel)",
                "org.jboss.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "org.jboss.netty.buffer.AbstractChannelBuffer:int readableBytes()",
                "org.jboss.netty.buffer.ChannelBuffers:void <clinit>()",
                "org.jboss.netty.channel.DefaultChannelFuture:org.jboss.netty.channel.ChannelFuture awaitUninterruptibly()",
                "org.jboss.netty.handler.codec.frame.FrameDecoder:void <init>(boolean)",
                "org.jboss.netty.buffer.ChannelBuffers:org.jboss.netty.buffer.ChannelBuffer copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset)",
                "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext:org.jboss.netty.channel.ChannelPipeline getPipeline()",
                "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext:void sendUpstream(org.jboss.netty.channel.ChannelEvent)",
                "org.jboss.netty.buffer.CompositeChannelBuffer:java.lang.String toString()",
                "org.jboss.netty.channel.DefaultChannelFuture:org.jboss.netty.channel.ChannelFuture rethrowIfFailed()",
                "org.jboss.netty.channel.DefaultWriteCompletionEvent:java.lang.String toString()",
                "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext:void sendDownstream(org.jboss.netty.channel.ChannelEvent)",
                "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap:java.lang.Object remove(java.lang.Object)",
                "org.jboss.netty.channel.DefaultChannelFuture:org.jboss.netty.channel.Channel getChannel()",
                "org.jboss.netty.channel.CompleteChannelFuture:org.jboss.netty.channel.Channel getChannel()",
                "org.jboss.netty.channel.CompleteChannelFuture:org.jboss.netty.channel.ChannelFuture awaitUninterruptibly()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap:java.lang.Object remove(java.lang.Object)",
                "org.jboss.netty.handler.codec.frame.FrameDecoder:void <clinit>()"
            ]
        }
    }
}
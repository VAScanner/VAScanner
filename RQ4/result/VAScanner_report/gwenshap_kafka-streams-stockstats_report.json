{
    "project name": "gwenshap_kafka-streams-stockstats",
    "vulnerable dependencies": {
        "org.apache.kafka:kafka-clients:2.8.0": {
            "used-method num": 22,
            "used method": [
                "org.apache.kafka.common.serialization.Deserializer:void close()",
                "org.apache.kafka.common.config.AbstractConfig$ResolvingMap:java.lang.Object get(java.lang.Object)",
                "org.apache.kafka.common.serialization.UUIDDeserializer:void configure(java.util.Map,boolean)",
                "org.apache.kafka.clients.producer.KafkaProducer:java.util.concurrent.Future send(org.apache.kafka.clients.producer.ProducerRecord,org.apache.kafka.clients.producer.Callback)",
                "org.apache.kafka.common.serialization.Deserializer:void configure(java.util.Map,boolean)",
                "org.apache.kafka.common.serialization.Serdes:org.apache.kafka.common.serialization.Serde String()",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                "org.apache.kafka.common.serialization.Serializer:void configure(java.util.Map,boolean)",
                "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get()",
                "org.apache.kafka.common.serialization.Serializer:void close()",
                "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)",
                "org.apache.kafka.common.serialization.UUIDSerializer:void configure(java.util.Map,boolean)",
                "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionListView:int size()",
                "org.apache.kafka.clients.producer.KafkaProducer:void close()",
                "org.apache.kafka.common.utils.CopyOnWriteMap:java.lang.Object get(java.lang.Object)",
                "org.apache.kafka.common.serialization.StringSerializer:void configure(java.util.Map,boolean)",
                "org.apache.kafka.common.serialization.StringDeserializer:void configure(java.util.Map,boolean)",
                "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.common.utils.ImplicitLinkedHashCollection:int size()",
                "org.apache.kafka.clients.admin.Admin:org.apache.kafka.clients.admin.DescribeClusterResult describeCluster()",
                "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:int size()",
                "org.apache.kafka.common.config.AbstractConfig$RecordingMap:java.lang.Object get(java.lang.Object)"
            ],
            "CVE": [
                "CVE-2023-25194"
            ],
            "used vul-method": [
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)"
            ],
            "vul-called frequency": 2,
            "related vul root method": {
                "CVE-2023-25194": [
                    "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
                    "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
                ]
            },
            "CVE-API": {
                "CVE-2023-25194": [
                    "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                    "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)"
                ]
            }
        }
    }
}
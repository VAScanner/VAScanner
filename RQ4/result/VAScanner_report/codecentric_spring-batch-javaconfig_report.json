{
    "project name": "codecentric_spring-batch-javaconfig",
    "vulnerable dependencies": {
        "org.springframework.batch:spring-batch-core:2.2.0.RELEASE": {
            "used-method num": 82,
            "used method": [
                "org.springframework.batch.core.ExitStatus:java.lang.String getExitCode()",
                "org.springframework.batch.core.step.builder.FaultTolerantStepBuilder:org.springframework.batch.core.step.builder.FaultTolerantStepBuilder listener(org.springframework.batch.core.ChunkListener)",
                "org.springframework.batch.core.step.builder.StepBuilderHelper:org.springframework.batch.core.step.builder.StepBuilderHelper transactionManager(org.springframework.transaction.PlatformTransactionManager)",
                "org.springframework.batch.core.repository.support.JobRepositoryFactoryBean:void afterPropertiesSet()",
                "org.springframework.batch.core.JobExecution:java.util.Date getEndTime()",
                "org.springframework.batch.core.repository.support.AbstractJobRepositoryFactoryBean:java.lang.Object getObject()",
                "org.springframework.batch.core.JobExecution:java.util.Collection getStepExecutions()",
                "org.springframework.batch.core.JobParameter:java.lang.String toString()",
                "org.springframework.batch.core.step.builder.FaultTolerantStepBuilder:org.springframework.batch.core.step.builder.FaultTolerantStepBuilder skip(java.lang.Class)",
                "org.springframework.batch.core.ExitStatus:java.lang.String toString()",
                "org.springframework.batch.core.scope.context.StepContext:java.lang.String toString()",
                "org.springframework.batch.core.step.builder.SimpleStepBuilder:org.springframework.batch.core.step.builder.SimpleStepBuilder listener(org.springframework.batch.core.ItemProcessListener)",
                "org.springframework.batch.core.step.builder.StepBuilder:org.springframework.batch.core.step.builder.SimpleStepBuilder chunk(org.springframework.batch.repeat.CompletionPolicy)",
                "org.springframework.batch.core.step.builder.PartitionStepBuilder:org.springframework.batch.core.step.builder.PartitionStepBuilder partitioner(java.lang.String,org.springframework.batch.core.partition.support.Partitioner)",
                "org.springframework.batch.core.step.builder.SimpleStepBuilder:org.springframework.batch.core.step.tasklet.TaskletStep build()",
                "org.springframework.batch.core.StepContribution:java.lang.String toString()",
                "org.springframework.batch.core.StepExecution:int getSkipCount()",
                "org.springframework.batch.core.repository.support.JobRepositoryFactoryBean:void <init>()",
                "org.springframework.batch.core.job.flow.FlowExecution:java.lang.String toString()",
                "org.springframework.batch.core.job.builder.JobBuilderHelper:org.springframework.batch.core.job.builder.JobBuilderHelper listener(org.springframework.batch.core.JobExecutionListener)",
                "org.springframework.batch.core.step.item.Chunk:java.lang.String toString()",
                "org.springframework.batch.core.job.builder.SimpleJobBuilder:org.springframework.batch.core.Job build()",
                "org.springframework.batch.core.repository.support.AbstractJobRepositoryFactoryBean:void setTransactionManager(org.springframework.transaction.PlatformTransactionManager)",
                "org.springframework.batch.core.step.builder.PartitionStepBuilder:org.springframework.batch.core.Step build()",
                "org.springframework.batch.core.JobParameters:java.lang.String toString()",
                "org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder:org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder throttleLimit(int)",
                "org.springframework.batch.core.JobExecution:org.springframework.batch.core.JobInstance getJobInstance()",
                "org.springframework.batch.core.JobInstance:java.lang.String toString()",
                "org.springframework.batch.core.step.builder.StepBuilder:void <init>(java.lang.String)",
                "org.springframework.batch.core.step.builder.SimpleStepBuilder:org.springframework.batch.core.step.builder.SimpleStepBuilder listener(org.springframework.batch.core.ItemWriteListener)",
                "org.springframework.batch.core.step.builder.StepBuilderHelper:org.springframework.batch.core.step.builder.StepBuilderHelper listener(org.springframework.batch.core.StepExecutionListener)",
                "org.springframework.batch.core.step.builder.FaultTolerantStepBuilder:org.springframework.batch.core.step.builder.FaultTolerantStepBuilder listener(org.springframework.batch.core.SkipListener)",
                "org.springframework.batch.core.configuration.support.AbstractApplicationContextFactory:java.lang.String toString()",
                "org.springframework.batch.core.partition.support.MultiResourcePartitioner:void <init>()",
                "org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder:org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder stream(org.springframework.batch.item.ItemStream)",
                "org.springframework.batch.core.StepExecution:int getCommitCount()",
                "org.springframework.batch.core.step.builder.StepBuilderHelper:org.springframework.batch.core.step.builder.StepBuilderHelper repository(org.springframework.batch.core.repository.JobRepository)",
                "org.springframework.batch.core.JobExecution:org.springframework.batch.core.ExitStatus getExitStatus()",
                "org.springframework.batch.core.step.builder.StepBuilder:org.springframework.batch.core.step.builder.PartitionStepBuilder partitioner(org.springframework.batch.core.Step)",
                "org.springframework.batch.core.JobParameters:java.util.Map getParameters()",
                "org.springframework.batch.core.StepExecution:int getRollbackCount()",
                "org.springframework.batch.core.step.builder.SimpleStepBuilder:org.springframework.batch.core.step.builder.SimpleStepBuilder listener(org.springframework.batch.core.ItemReadListener)",
                "org.springframework.batch.core.configuration.support.GenericApplicationContextFactory$ResourceXmlApplicationContext:java.lang.String toString()",
                "org.springframework.batch.core.job.AbstractJob:java.lang.String toString()",
                "org.springframework.batch.core.JobExecution:java.lang.String toString()",
                "org.springframework.batch.core.launch.support.SimpleJobLauncher:void afterPropertiesSet()",
                "org.springframework.batch.core.step.item.Chunk$ChunkIterator:java.lang.String toString()",
                "org.springframework.batch.core.step.builder.FaultTolerantStepBuilder:org.springframework.batch.core.step.builder.FaultTolerantStepBuilder skipLimit(int)",
                "org.springframework.batch.core.StepExecution:int getFilterCount()",
                "org.springframework.batch.core.step.item.SkipWrapper:java.lang.String toString()",
                "org.springframework.batch.core.configuration.support.GenericApplicationContextFactory:void <init>(java.lang.Object)",
                "org.springframework.batch.core.step.builder.SimpleStepBuilder:org.springframework.batch.core.step.builder.FaultTolerantStepBuilder faultTolerant()",
                "org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder:org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder listener(org.springframework.batch.core.ChunkListener)",
                "org.springframework.batch.core.configuration.support.GenericApplicationContextFactory$ResourceAnnotationApplicationContext:java.lang.String toString()",
                "org.springframework.batch.core.launch.support.SimpleJobLauncher:void <init>()",
                "org.springframework.batch.core.job.builder.JobBuilder:org.springframework.batch.core.job.builder.SimpleJobBuilder start(org.springframework.batch.core.Step)",
                "org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder:org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder taskExecutor(org.springframework.core.task.TaskExecutor)",
                "org.springframework.batch.core.configuration.annotation.JobBuilderFactory:void <init>(org.springframework.batch.core.repository.JobRepository)",
                "org.springframework.batch.core.JobExecution:org.springframework.batch.core.JobParameters getJobParameters()",
                "org.springframework.batch.core.StepExecution:java.lang.String getStepName()",
                "org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder:org.springframework.batch.core.step.tasklet.TaskletStep build()",
                "org.springframework.batch.core.JobExecution:org.springframework.batch.core.BatchStatus getStatus()",
                "org.springframework.batch.core.configuration.annotation.JobBuilderFactory:org.springframework.batch.core.job.builder.JobBuilder get(java.lang.String)",
                "org.springframework.batch.core.step.item.Chunk$ChunkIterator:java.lang.Object next()",
                "org.springframework.batch.core.JobExecution:java.util.Date getStartTime()",
                "org.springframework.batch.core.StepExecution:int getWriteCount()",
                "org.springframework.batch.core.step.builder.FaultTolerantStepBuilder:org.springframework.batch.core.step.builder.AbstractTaskletStepBuilder stream(org.springframework.batch.item.ItemStream)",
                "org.springframework.batch.core.step.item.Chunk$ChunkIterator:boolean hasNext()",
                "org.springframework.batch.core.step.builder.StepBuilder:org.springframework.batch.core.step.builder.SimpleStepBuilder chunk(int)",
                "org.springframework.batch.core.job.flow.support.StateTransition:java.lang.String toString()",
                "org.springframework.batch.core.job.flow.support.state.EndState:java.lang.String toString()",
                "org.springframework.batch.core.job.flow.support.state.AbstractState:java.lang.String toString()",
                "org.springframework.batch.core.launch.support.SimpleJobLauncher:void setJobRepository(org.springframework.batch.core.repository.JobRepository)",
                "org.springframework.batch.core.StepExecution:java.lang.String toString()",
                "org.springframework.batch.core.ExitStatus:java.lang.String getExitDescription()",
                "org.springframework.batch.core.step.builder.SimpleStepBuilder:org.springframework.batch.core.step.builder.SimpleStepBuilder writer(org.springframework.batch.item.ItemWriter)",
                "org.springframework.batch.core.repository.support.JobRepositoryFactoryBean:void setDataSource(javax.sql.DataSource)",
                "org.springframework.batch.core.step.builder.SimpleStepBuilder:org.springframework.batch.core.step.builder.SimpleStepBuilder reader(org.springframework.batch.item.ItemReader)",
                "org.springframework.batch.core.JobInstance:java.lang.String getJobName()",
                "org.springframework.batch.core.step.builder.SimpleStepBuilder:org.springframework.batch.core.step.builder.SimpleStepBuilder processor(org.springframework.batch.item.ItemProcessor)",
                "org.springframework.batch.core.step.builder.PartitionStepBuilder:org.springframework.batch.core.step.builder.PartitionStepBuilder taskExecutor(org.springframework.core.task.TaskExecutor)",
                "org.springframework.batch.core.step.AbstractStep:java.lang.String toString()"
            ],
            "CVE": [
                "CVE-2019-3774"
            ],
            "used vul-method": [
                "org.springframework.batch.core.repository.support.JobRepositoryFactoryBean:void afterPropertiesSet()",
                "org.springframework.batch.core.repository.support.AbstractJobRepositoryFactoryBean:java.lang.Object getObject()"
            ],
            "vul-called frequency": 2,
            "related vul root method": {
                "CVE-2019-3774": [
                    "org.springframework.batch.core.repository.dao.JdbcExecutionContextDao:void afterPropertiesSet()",
                    "org.springframework.batch.core.repository.dao.JdbcExecutionContextDao:void setSerializer(org.springframework.batch.core.repository.ExecutionContextSerializer)"
                ]
            },
            "CVE-API": {
                "CVE-2019-3774": [
                    "org.springframework.batch.core.repository.support.JobRepositoryFactoryBean:void afterPropertiesSet()",
                    "org.springframework.batch.core.repository.support.AbstractJobRepositoryFactoryBean:java.lang.Object getObject()"
                ]
            }
        },
        "org.apache.activemq:activemq-all:5.7.0": {
            "used-method num": 195,
            "used method": [
                "org.apache.activemq.command.LocalTransactionId:java.lang.String toString()",
                "org.apache.kahadb.page.Transaction$3:org.apache.kahadb.page.Page next()",
                "org.apache.kahadb.index.ListNode:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ContainerKeySetIterator:boolean hasNext()",
                "org.apache.activemq.store.kahadaptor.KahaPersistenceAdapter:java.lang.String toString()",
                "org.apache.activemq.broker.jmx.InactiveDurableSubscriptionView:java.lang.String toString()",
                "org.apache.kahadb.page.PageFile$1:org.apache.kahadb.page.PageFile$PageWrite getValue()",
                "org.apache.activemq.RedeliveryPolicy:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaCommitCommand:java.lang.String toString()",
                "org.apache.activemq.broker.region.DurableTopicSubscription:java.lang.String toString()",
                "org.apache.activemq.management.JMSSessionStatsImpl:java.lang.String toString()",
                "org.apache.activemq.management.JMSConnectionStatsImpl:java.lang.String toString()",
                "org.apache.activemq.broker.scheduler.JobSchedulerImpl:java.lang.String toString()",
                "org.apache.activemq.broker.BrokerService:void <clinit>()",
                "org.apache.activemq.command.BaseCommand:java.lang.String toString()",
                "org.apache.activemq.state.ProducerState:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ContainerEntrySetIterator:java.lang.Object next()",
                "org.apache.kahadb.page.PageFile$PageWrite:java.lang.String toString()",
                "org.apache.activemq.command.SubscriptionInfo:java.lang.String toString()",
                "org.apache.kahadb.index.ListNode$KeyValueEntry:java.lang.Object getKey()",
                "org.apache.activemq.store.ReferenceStore$ReferenceData:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaSubscriptionCommand:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaXATransactionId:java.lang.String toString()",
                "org.apache.activemq.SimplePriorityMessageDispatchChannel:java.lang.String toString()",
                "org.apache.activemq.broker.jmx.ProducerView:java.lang.String toString()",
                "org.apache.activemq.state.ConsumerState:java.lang.String toString()",
                "org.apache.activemq.command.JournalTransaction:java.lang.String toString()",
                "org.apache.activemq.command.BrokerId:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.index.hash.HashIndex:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.AbstractStoreCursor:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.async.DataFile:java.lang.String toString()",
                "org.apache.activemq.protobuf.UTF8Buffer:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.TopicStorePrefetch:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.plist.PList$PListIterator:boolean hasNext()",
                "org.apache.activemq.command.XATransactionId:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ContainerValueCollection:java.util.Iterator iterator()",
                "org.apache.activemq.broker.region.cursors.PendingNode:java.lang.String toString()",
                "org.apache.kahadb.util.SequenceSet$SequenceIterator:java.lang.Long next()",
                "org.apache.activemq.openwire.OpenWireFormat:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.MapContainerImpl:java.util.Set entrySet()",
                "org.apache.kahadb.index.ListNode$ListNodeIterator:boolean hasNext()",
                "org.apache.kahadb.journal.Location:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ContainerValueCollectionIterator:java.lang.Object next()",
                "org.apache.activemq.broker.region.TopicRegion:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.OrderedPendingList$1:boolean hasNext()",
                "org.apache.activemq.kaha.impl.container.ContainerEntrySet:java.util.Iterator iterator()",
                "org.apache.activemq.broker.jmx.DurableSubscriptionView:java.lang.String toString()",
                "org.apache.activemq.command.Message:java.lang.String toString()",
                "org.apache.activemq.command.MessageId:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderCursor:java.lang.String toString()",
                "org.apache.activemq.command.ActiveMQObjectMessage:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ListContainerImpl:java.util.Iterator iterator()",
                "org.apache.activemq.command.ActiveMQTextMessage:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.OrderedPendingList:java.lang.String toString()",
                "org.apache.activemq.transport.TransportLogger:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.index.hash.HashEntry:java.lang.String toString()",
                "org.apache.activemq.ActiveMQSession:java.lang.String toString()",
                "org.apache.activemq.transport.vm.VMTransportServer:java.lang.String toString()",
                "org.apache.activemq.state.ConnectionState:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ContainerKeySet:java.lang.String toString()",
                "org.apache.kahadb.page.PageFile:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.async.AsyncDataManager:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.data.DataManagerImpl:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator:boolean hasNext()",
                "org.apache.activemq.broker.region.Queue$6:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaLocalTransactionId:java.lang.String toString()",
                "org.apache.activemq.broker.TransportConnector:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.KahaDBStore$AsyncJobKey:java.lang.String toString()",
                "org.apache.activemq.filter.PropertyExpression:java.lang.String toString()",
                "org.apache.activemq.util.SubscriptionKey:java.lang.String toString()",
                "org.apache.activemq.broker.scheduler.JobLocation:java.lang.String toString()",
                "org.apache.activemq.store.kahadaptor.ConsumerMessageRef:java.lang.String toString()",
                "org.apache.activemq.FifoMessageDispatchChannel:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.plist.PListStore:java.lang.String toString()",
                "org.apache.activemq.command.ActiveMQDestination:void <clinit>()",
                "org.apache.activemq.broker.BrokerService:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaProducerAuditCommand:java.lang.String toString()",
                "org.apache.activemq.broker.region.Topic:java.lang.String toString()",
                "org.apache.kahadb.index.ListNode$ListIterator:java.util.Map$Entry next()",
                "org.apache.log4j.NameValue:java.lang.String toString()",
                "org.apache.kahadb.index.BTreeNode$BTreeIterator:java.util.Map$Entry next()",
                "org.apache.activemq.kaha.impl.container.ListContainerImpl:java.lang.String toString()",
                "org.apache.activemq.transport.TransportFilter:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.KahaDBStore:java.lang.String toString()",
                "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.TransportConnector addConnector(java.lang.String)",
                "org.apache.activemq.command.ActiveMQBytesMessage:java.lang.String toString()",
                "org.apache.kahadb.index.ListNode$1:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.PrioritizedPendingList$PrioritizedPendingListIterator:org.apache.activemq.broker.region.MessageReference next()",
                "org.apache.activemq.kaha.impl.index.hash.HashBin:java.lang.String toString()",
                "org.apache.activemq.broker.region.IndirectMessageReference:java.lang.String toString()",
                "org.apache.activemq.ActiveMQMessageProducer:java.lang.String toString()",
                "org.apache.activemq.command.JournalTopicAck:java.lang.String toString()",
                "org.apache.activemq.ActiveMQOutputStream:java.lang.String toString()",
                "org.apache.activemq.command.ConsumerId:java.lang.String toString()",
                "org.apache.activemq.transport.vm.VMTransport:java.lang.String toString()",
                "org.apache.activemq.broker.jmx.SubscriptionView:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator:boolean hasNext()",
                "org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand:java.lang.String toString()",
                "org.apache.activemq.command.ActiveMQDestination:java.lang.String toString()",
                "org.apache.activemq.broker.region.group.MessageGroupHashBucket:java.lang.String toString()",
                "org.apache.activemq.broker.region.TopicSubscription:java.lang.String toString()",
                "org.apache.activemq.broker.scheduler.JobSchedulerStore:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.index.IndexManager:java.lang.String toString()",
                "org.apache.activemq.ActiveMQTopicSession:java.lang.String toString()",
                "org.apache.activemq.state.SessionState:java.lang.String toString()",
                "org.apache.activemq.management.StatisticImpl:java.lang.String toString()",
                "org.apache.activemq.broker.region.Queue:java.lang.String toString()",
                "org.apache.activemq.command.ConnectionId:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaTraceCommand:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.plist.PList$PListIterator:org.apache.activemq.store.kahadb.plist.PListEntry next()",
                "org.apache.kahadb.index.BTreeNode$KeyValueEntry:java.lang.Object getValue()",
                "org.apache.kahadb.index.ListNode$KeyValueEntry:java.lang.String toString()",
                "org.apache.kahadb.util.LinkedNodeList:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.data.DataItem:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ContainerKeySetIterator:java.lang.Object next()",
                "org.apache.activemq.state.TransactionState:java.lang.String toString()",
                "org.apache.activemq.management.JMSConsumerStatsImpl:java.lang.String toString()",
                "org.apache.activemq.filter.ConstantExpression:java.lang.String toString()",
                "org.apache.kahadb.page.Page:java.lang.String toString()",
                "org.apache.kahadb.index.BTreeNode$BTreeIterator:boolean hasNext()",
                "org.apache.activemq.kaha.ContainerId:java.lang.String toString()",
                "org.apache.kahadb.index.ListNode$ListNodeIterator:org.apache.kahadb.index.ListNode next()",
                "org.apache.kahadb.journal.DataFile:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.PrioritizedPendingList$PrioritizedPendingListIterator:boolean hasNext()",
                "org.apache.activemq.management.JMSProducerStatsImpl:java.lang.String toString()",
                "org.apache.kahadb.page.PageFile$1:java.lang.Long getKey()",
                "org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator:java.util.Map$Entry next()",
                "org.apache.kahadb.index.BTreeNode:java.lang.String toString()",
                "org.apache.activemq.broker.BrokerService:void start()",
                "org.apache.activemq.kaha.impl.container.ContainerKeySet:java.util.Iterator iterator()",
                "org.apache.activemq.ActiveMQConnection:java.lang.String toString()",
                "org.apache.activemq.broker.region.QueueSubscription:java.lang.String toString()",
                "org.apache.activemq.ActiveMQConnectionConsumer:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.data.DataFile:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaDestination:java.lang.String toString()",
                "org.apache.activemq.command.JournalTrace:java.lang.String toString()",
                "org.apache.activemq.command.ActiveMQQueue:void <init>(java.lang.String)",
                "org.apache.activemq.store.kahadb.data.KahaPrepareCommand:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ContainerMapEntry:java.lang.Object getValue()",
                "org.apache.activemq.kaha.impl.index.IndexItem:java.lang.String toString()",
                "org.apache.activemq.command.SessionId:java.lang.String toString()",
                "org.apache.kahadb.index.ListNode$KeyValueEntry:java.lang.Object getValue()",
                "org.apache.activemq.broker.region.TempQueueRegion:java.lang.String toString()",
                "org.apache.activemq.ActiveMQQueueBrowser:java.lang.String toString()",
                "org.apache.activemq.broker.region.QueueRegion:java.lang.String toString()",
                "org.apache.activemq.command.JournalQueueAck:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.plist.PList:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.async.Location:java.lang.String toString()",
                "org.apache.activemq.broker.region.QueueBrowserSubscription:java.lang.String toString()",
                "org.apache.activemq.store.kahadaptor.ReferenceRecord:java.lang.String toString()",
                "org.apache.activemq.broker.region.TempTopicRegion:java.lang.String toString()",
                "org.apache.activemq.ActiveMQInputStream:java.lang.String toString()",
                "org.apache.kahadb.util.Sequence:java.lang.String toString()",
                "org.apache.activemq.broker.TransportConnection:java.lang.String toString()",
                "org.apache.kahadb.index.ListNode$ListIterator:boolean hasNext()",
                "org.apache.activemq.kaha.impl.container.MapContainerImpl:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator:org.apache.activemq.broker.region.MessageReference next()",
                "org.apache.activemq.kaha.impl.index.hash.HashPage:java.lang.String toString()",
                "org.apache.activemq.broker.scheduler.CronParser$CronEntry:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaRollbackCommand:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaRemoveDestinationCommand:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.OrderedPendingList$1:org.apache.activemq.broker.region.MessageReference next()",
                "org.apache.activemq.transport.failover.BackupTransport:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaTransactionInfo:java.lang.String toString()",
                "org.apache.activemq.TransactionContext:java.lang.String toString()",
                "org.apache.activemq.command.ProducerId:java.lang.String toString()",
                "org.apache.activemq.command.ActiveMQMapMessage:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ContainerEntrySetIterator:boolean hasNext()",
                "org.apache.kahadb.journal.Journal:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaLocation:java.lang.String toString()",
                "org.apache.activemq.transaction.Transaction:java.lang.String toString()",
                "org.apache.activemq.ActiveMQConnectionFactory:void <init>(java.lang.String)",
                "org.apache.kahadb.util.SequenceSet$SequenceIterator:boolean hasNext()",
                "org.apache.log4j.Priority:java.lang.String toString()",
                "org.apache.activemq.command.ActiveMQStreamMessage:java.lang.String toString()",
                "org.apache.activemq.ActiveMQMessageConsumer:java.lang.String toString()",
                "org.apache.activemq.usage.Usage:java.lang.String toString()",
                "org.apache.activemq.ActiveMQQueueSession:java.lang.String toString()",
                "org.apache.activemq.usage.SystemUsage:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.MessageDatabase$MessageKeys:java.lang.String toString()",
                "org.apache.activemq.broker.util.JMXAuditLogEntry:java.lang.String toString()",
                "org.apache.activemq.transport.ResponseCorrelator:java.lang.String toString()",
                "org.apache.kahadb.index.BTreeNode$KeyValueEntry:java.lang.Object getKey()",
                "org.apache.activemq.transport.MutexTransport:java.lang.String toString()",
                "org.apache.activemq.network.DiscoveryNetworkConnector:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.MessageDatabase$LastAck:java.lang.String toString()",
                "org.apache.activemq.kaha.impl.container.ContainerValueCollectionIterator:boolean hasNext()",
                "org.apache.activemq.broker.BrokerService:void <init>()",
                "org.apache.kahadb.page.Transaction$3:boolean hasNext()",
                "org.apache.activemq.kaha.impl.index.hash.HashPageInfo:java.lang.String toString()",
                "org.slf4j.helpers.MarkerIgnoringBase:java.lang.String toString()",
                "org.apache.activemq.broker.region.cursors.PrioritizedPendingList:java.lang.String toString()",
                "org.apache.activemq.store.kahadb.data.KahaAddMessageCommand:java.lang.String toString()"
            ]
        }
    }
}
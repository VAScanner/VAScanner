{
    "project name": "humingzhang_netstrap",
    "modules": {
        "io.netstrap:parent": {
            "vulnerable dependencies": {
                "commons-beanutils:commons-beanutils:1.9.3": {
                    "used-method num": 32,
                    "used method": [
                        "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)",
                        "org.apache.commons.beanutils.converters.ConverterFacade:java.lang.String toString()",
                        "org.apache.commons.beanutils.converters.DateTimeConverter:java.lang.String toString()",
                        "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object get(java.lang.Object)",
                        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsKey(java.lang.Object)",
                        "org.apache.commons.beanutils.ConvertUtils:java.lang.Object convert(java.lang.String,java.lang.Class)",
                        "org.apache.commons.beanutils.WeakFastHashMap:java.util.Set entrySet()",
                        "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:java.util.Iterator iterator()",
                        "org.apache.commons.beanutils.DynaProperty:int hashCode()",
                        "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:boolean equals(java.lang.Object)",
                        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set entrySet()",
                        "org.apache.commons.beanutils.ConvertUtils:java.lang.Object convert(java.lang.Object,java.lang.Class)",
                        "org.apache.commons.beanutils.BeanUtils:void copyProperties(java.lang.Object,java.lang.Object)",
                        "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:int hashCode()",
                        "org.apache.commons.beanutils.converters.AbstractConverter:java.lang.String toString()",
                        "org.apache.commons.beanutils.WeakFastHashMap:java.util.Set keySet()",
                        "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object clone()",
                        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set keySet()",
                        "org.apache.commons.beanutils.WrapDynaClass$2:int hashCode()",
                        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)",
                        "org.apache.commons.beanutils.MethodUtils$MethodDescriptor:boolean equals(java.lang.Object)",
                        "org.apache.commons.beanutils.WrapDynaClass$CacheKey:int hashCode()",
                        "org.apache.commons.beanutils.WeakFastHashMap:boolean containsKey(java.lang.Object)",
                        "org.apache.commons.beanutils.converters.NumberConverter:java.lang.String toString()",
                        "org.apache.commons.beanutils.DynaProperty:boolean equals(java.lang.Object)",
                        "org.apache.commons.beanutils.WeakFastHashMap:int hashCode()",
                        "org.apache.commons.beanutils.WeakFastHashMap:boolean equals(java.lang.Object)",
                        "org.apache.commons.beanutils.WrapDynaClass$CacheKey:boolean equals(java.lang.Object)",
                        "org.apache.commons.beanutils.DynaProperty:java.lang.String toString()",
                        "org.apache.commons.beanutils.converters.ArrayConverter:java.lang.String toString()"
                    ],
                    "CVE": [
                        "CVE-2019-10086"
                    ],
                    "used vul-method": [
                        "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)",
                        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsKey(java.lang.Object)",
                        "org.apache.commons.beanutils.ConvertUtils:java.lang.Object convert(java.lang.String,java.lang.Class)",
                        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set entrySet()",
                        "org.apache.commons.beanutils.ConvertUtils:java.lang.Object convert(java.lang.Object,java.lang.Class)",
                        "org.apache.commons.beanutils.BeanUtils:void copyProperties(java.lang.Object,java.lang.Object)",
                        "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set keySet()",
                        "org.apache.commons.beanutils.WrapDynaClass$2:int hashCode()",
                        "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)"
                    ],
                    "vul-called frequency": 60,
                    "related vul root method": {
                        "CVE-2019-10086": [
                            "org.apache.commons.beanutils.PropertyUtilsBean:void resetBeanIntrospectors()"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-10086": [
                            "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)",
                            "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)",
                            "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsKey(java.lang.Object)",
                            "org.apache.commons.beanutils.ConvertUtils:java.lang.Object convert(java.lang.String,java.lang.Class)",
                            "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set entrySet()",
                            "org.apache.commons.beanutils.ConvertUtils:java.lang.Object convert(java.lang.Object,java.lang.Class)",
                            "org.apache.commons.beanutils.BeanUtils:void copyProperties(java.lang.Object,java.lang.Object)",
                            "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set keySet()",
                            "org.apache.commons.beanutils.WrapDynaClass$2:int hashCode()",
                            "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)"
                        ]
                    }
                },
                "org.apache.logging.log4j:log4j-core:2.11.1": {
                    "used-method num": 0,
                    "used method": []
                },
                "io.netty:netty-all:4.1.6.Final": {
                    "used-method num": 378,
                    "used method": [
                        "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:boolean hasNext()",
                        "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                        "io.netty.handler.codec.http.multipart.DiskAttribute:boolean equals(java.lang.Object)",
                        "io.netty.util.ResourceLeakDetector:void <clinit>()",
                        "io.netty.util.AbstractConstant:int hashCode()",
                        "io.netty.util.concurrent.PromiseTask:int hashCode()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.DecoderResult decoderResult()",
                        "io.netty.handler.codec.http.HttpMethod:java.lang.String toString()",
                        "io.netty.channel.DefaultChannelId:java.lang.String asLongText()",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.buffer.ByteBuf content()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                        "io.netty.channel.unix.FileDescriptor:java.lang.String toString()",
                        "io.netty.handler.ssl.SslHandler$2:void run()",
                        "io.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask:void run()",
                        "io.netty.channel.unix.Socket:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                        "io.netty.handler.codec.http.multipart.DiskAttribute:int hashCode()",
                        "io.netty.buffer.AbstractDerivedByteBuf:boolean release()",
                        "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                        "io.netty.handler.codec.ReplayingDecoderByteBuf:int hashCode()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:int hashCode()",
                        "io.netty.channel.ChannelOption:void <clinit>()",
                        "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.Object getKey()",
                        "io.netty.util.AsciiString:int hashCode()",
                        "io.netty.util.internal.chmv8.LongAdderV8:java.lang.String toString()",
                        "io.netty.util.collection.IntObjectHashMap$MapEntry:java.lang.Integer getKey()",
                        "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String getValue()",
                        "io.netty.handler.codec.http.DefaultHttpObject:io.netty.handler.codec.DecoderResult decoderResult()",
                        "io.netty.util.collection.IntObjectHashMap:int hashCode()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap clone()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                        "io.netty.channel.CombinedChannelDuplexHandler:void <clinit>()",
                        "io.netty.handler.codec.http.DefaultFullHttpResponse:int hashCode()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                        "io.netty.bootstrap.ServerBootstrap:void <init>()",
                        "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                        "io.netty.buffer.AbstractByteBuf:boolean equals(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object nextElement()",
                        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                        "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String getKey()",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node:int hashCode()",
                        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>(int,int,int)",
                        "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:java.lang.String text()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                        "io.netty.handler.codec.DecoderResult:java.lang.String toString()",
                        "io.netty.buffer.AbstractByteBuf:int hashCode()",
                        "io.netty.util.concurrent.DefaultPromise$3:void run()",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.handler.ssl.SslHandler:void <clinit>()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.Object getValue()",
                        "io.netty.buffer.AbstractDerivedByteBuf:io.netty.buffer.ByteBuf retain()",
                        "io.netty.handler.codec.http.DefaultHttpMessage:io.netty.handler.codec.http.HttpVersion protocolVersion()",
                        "io.netty.handler.codec.DecoderResult:boolean isSuccess()",
                        "io.netty.util.Signal:boolean equals(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)",
                        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                        "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.util.Iterator iterator()",
                        "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame)",
                        "io.netty.util.collection.IntObjectHashMap$EntrySet:java.util.Iterator iterator()",
                        "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:java.util.Iterator iterator()",
                        "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                        "io.netty.channel.DefaultChannelPipeline$8:void run()",
                        "io.netty.handler.ssl.SslHandler:void <init>(javax.net.ssl.SSLEngine)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean containsKey(java.lang.Object)",
                        "io.netty.handler.codec.HeadersUtils$StringEntryIterator:java.util.Map$Entry next()",
                        "io.netty.handler.ssl.OpenSslX509Certificate:java.lang.String toString()",
                        "io.netty.handler.codec.http.websocketx.PongWebSocketFrame:void <init>(io.netty.buffer.ByteBuf)",
                        "io.netty.channel.DefaultChannelPipeline$4:void run()",
                        "io.netty.buffer.WrappedByteBuf:int hashCode()",
                        "io.netty.handler.codec.http.QueryStringDecoder:void <init>(java.lang.String)",
                        "io.netty.handler.codec.http.multipart.MemoryFileUpload:int hashCode()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:boolean equals(java.lang.Object)",
                        "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                        "io.netty.handler.codec.http.DefaultFullHttpRequest:int hashCode()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:int hashCode()",
                        "io.netty.util.collection.IntObjectHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "io.netty.handler.codec.http.DefaultFullHttpRequest:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.DefaultHeaders:int hashCode()",
                        "io.netty.handler.codec.http.HttpVersion:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.HttpMethod:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:int hashCode()",
                        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                        "io.netty.handler.codec.http.multipart.DiskFileUpload:int hashCode()",
                        "io.netty.handler.ssl.OpenSslJavaxX509Certificate:java.lang.String toString()",
                        "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                        "io.netty.buffer.SwappedByteBuf:boolean release()",
                        "io.netty.buffer.DefaultByteBufHolder:io.netty.buffer.ByteBuf content()",
                        "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable:void run()",
                        "io.netty.handler.codec.http.DefaultHttpRequest:io.netty.handler.codec.http.HttpMethod method()",
                        "io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retain()",
                        "io.netty.handler.codec.http.websocketx.WebSocketFrame:java.lang.String toString()",
                        "io.netty.buffer.SwappedByteBuf:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String toString()",
                        "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)",
                        "io.netty.util.AbstractConstant:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.multipart.MemoryAttribute:int hashCode()",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                        "io.netty.channel.DefaultChannelId:boolean equals(java.lang.Object)",
                        "io.netty.buffer.DefaultByteBufHolder:boolean equals(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:int hashCode()",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String getName()",
                        "io.netty.handler.timeout.IdleStateHandler:void <init>(long,long,long,java.util.concurrent.TimeUnit)",
                        "io.netty.util.ResourceLeakDetector:void setLevel(io.netty.util.ResourceLeakDetector$Level)",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                        "io.netty.handler.codec.http.multipart.MemoryFileUpload:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.String toString()",
                        "io.netty.handler.codec.http.HttpMethod:java.lang.String name()",
                        "io.netty.util.collection.IntObjectHashMap$MapEntry:java.lang.Object getValue()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                        "io.netty.handler.codec.http.DefaultHttpContent:java.lang.String toString()",
                        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.Channel channel()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "io.netty.handler.codec.http.EmptyHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)",
                        "io.netty.handler.codec.http.HttpResponseStatus:io.netty.handler.codec.http.HttpResponseStatus valueOf(int)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean release()",
                        "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf retain()",
                        "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:java.util.Iterator iterator()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:int refCnt()",
                        "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String uri()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)",
                        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>(int,int,int,boolean)",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                        "io.netty.channel.AbstractChannelHandlerContext:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                        "io.netty.util.collection.IntObjectHashMap:boolean equals(java.lang.Object)",
                        "io.netty.channel.DefaultAddressedEnvelope:java.lang.String toString()",
                        "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                        "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean equals(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node:java.lang.String toString()",
                        "io.netty.buffer.EmptyByteBuf:int hashCode()",
                        "io.netty.channel.DefaultChannelPipeline$3:void run()",
                        "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ForkJoinPool:java.lang.String toString()",
                        "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                        "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:io.netty.util.collection.IntObjectMap$PrimitiveEntry next()",
                        "io.netty.handler.codec.http.HttpResponseStatus:void <clinit>()",
                        "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release()",
                        "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean release()",
                        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:java.util.List getBodyHttpDatas()",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                        "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.Object getValue()",
                        "io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:void <init>(java.lang.String,java.lang.String,boolean)",
                        "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                        "io.netty.channel.DefaultChannelPipeline$9:void run()",
                        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                        "io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask:void run()",
                        "io.netty.handler.ssl.SslHandler$5:void run()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.Object getKey()",
                        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)",
                        "io.netty.handler.ssl.PemX509Certificate:int hashCode()",
                        "io.netty.bootstrap.ServerBootstrap$1$1:void run()",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:java.util.List entries()",
                        "io.netty.handler.codec.HeadersUtils$1:java.lang.String get(int)",
                        "io.netty.handler.ssl.PemX509Certificate:java.lang.String toString()",
                        "io.netty.buffer.AbstractReferenceCountedByteBuf:io.netty.buffer.ByteBuf retain()",
                        "io.netty.buffer.PoolChunk:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.MemoryFileUpload:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String getName()",
                        "io.netty.handler.codec.http.HttpObjectDecoder:void <clinit>()",
                        "io.netty.util.internal.chmv8.ForkJoinWorkerThread:void run()",
                        "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                        "io.netty.channel.unix.FileDescriptor:boolean equals(java.lang.Object)",
                        "io.netty.buffer.PoolArena:java.lang.String toString()",
                        "io.netty.util.ReferenceCountUtil$ReleasingTask:void run()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:java.lang.String toString()",
                        "io.netty.handler.codec.DefaultHeaders:boolean equals(java.lang.Object)",
                        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.http.HttpVersion protocolVersion()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                        "io.netty.util.concurrent.DefaultPromise$4:void run()",
                        "io.netty.util.AbstractConstant:void <clinit>()",
                        "io.netty.handler.codec.HeadersUtils$StringEntryIterator:boolean hasNext()",
                        "io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent:java.lang.String toString()",
                        "io.netty.buffer.DefaultByteBufHolder:boolean release()",
                        "io.netty.util.concurrent.DefaultThreadFactory:void <init>(java.lang.String)",
                        "io.netty.util.collection.IntObjectHashMap$2:java.util.Iterator iterator()",
                        "io.netty.buffer.Unpooled:void <clinit>()",
                        "io.netty.buffer.PooledByteBufAllocator:void <clinit>()",
                        "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                        "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retain()",
                        "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                        "io.netty.handler.codec.http.DefaultFullHttpRequest:int refCnt()",
                        "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.String toString()",
                        "io.netty.channel.DefaultChannelPipeline$6:void run()",
                        "io.netty.handler.stream.ChunkedWriteHandler$1:void run()",
                        "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:io.netty.handler.codec.http.websocketx.TextWebSocketFrame retain()",
                        "io.netty.handler.codec.http.DefaultHttpObject:int hashCode()",
                        "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.util.Set entrySet()",
                        "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()",
                        "io.netty.util.collection.IntObjectHashMap$KeySet$1:boolean hasNext()",
                        "io.netty.handler.codec.http.DefaultLastHttpContent:java.lang.String toString()",
                        "io.netty.buffer.SwappedByteBuf:int hashCode()",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:int hashCode()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String uri()",
                        "io.netty.buffer.PoolThreadCache$1:void run()",
                        "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                        "io.netty.util.AsciiString:java.lang.String toString()",
                        "io.netty.bootstrap.ServerBootstrapConfig:java.lang.String toString()",
                        "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                        "io.netty.util.concurrent.DefaultPromise$1:void run()",
                        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>(int,int,int,boolean,int)",
                        "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                        "io.netty.handler.codec.http.DefaultFullHttpRequest:java.lang.String toString()",
                        "io.netty.util.collection.IntObjectHashMap$MapIterator:java.util.Map$Entry next()",
                        "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf getBytes(int,byte[])",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:java.lang.String get(java.lang.CharSequence)",
                        "io.netty.handler.codec.http.websocketx.PongWebSocketFrame:io.netty.handler.codec.http.websocketx.PongWebSocketFrame retain()",
                        "io.netty.channel.DefaultChannelId:java.lang.String toString()",
                        "io.netty.handler.timeout.IdleStateEvent:io.netty.handler.timeout.IdleState state()",
                        "io.netty.handler.codec.http.HttpHeaderNames:void <clinit>()",
                        "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.util.internal.ThreadLocalRandom$3:void run()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:int hashCode()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf retain()",
                        "io.netty.handler.ssl.PemX509Certificate:boolean equals(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean equals(java.lang.Object)",
                        "io.netty.util.Signal:java.lang.String toString()",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                        "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf retain()",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                        "io.netty.util.ThreadDeathWatcher$Entry:int hashCode()",
                        "io.netty.handler.codec.http.HttpVersion:void <clinit>()",
                        "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean equals(java.lang.Object)",
                        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                        "io.netty.util.ThreadDeathWatcher$Watcher:void run()",
                        "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpRequest)",
                        "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                        "io.netty.handler.ssl.SslHandler$7:void run()",
                        "io.netty.handler.codec.http.HttpObjectEncoder:void <clinit>()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)",
                        "io.netty.util.ResourceLeakDetector$Level:void <clinit>()",
                        "io.netty.handler.codec.http.HttpResponseStatus:int hashCode()",
                        "io.netty.handler.codec.http.HttpResponseStatus:java.lang.String toString()",
                        "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                        "io.netty.util.collection.IntObjectHashMap$KeySet$1:java.lang.Integer next()",
                        "io.netty.handler.codec.http.DefaultFullHttpResponse:boolean equals(java.lang.Object)",
                        "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8:io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView keySet()",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                        "io.netty.channel.ChannelInitializer:void <init>()",
                        "io.netty.handler.codec.http.multipart.DiskFileUpload:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker newHandshaker(io.netty.handler.codec.http.HttpRequest)",
                        "io.netty.handler.stream.ChunkedWriteHandler:void <clinit>()",
                        "io.netty.handler.codec.http.multipart.MemoryAttribute:boolean equals(java.lang.Object)",
                        "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:java.util.Iterator iterator()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                        "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String toString()",
                        "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                        "io.netty.handler.codec.DefaultHeaders:java.lang.String toString()",
                        "io.netty.handler.codec.http.DefaultHttpRequest:int hashCode()",
                        "io.netty.handler.codec.ReplayingDecoderByteBuf:int readableBytes()",
                        "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf retain()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object nextElement()",
                        "io.netty.util.concurrent.DefaultPromise$2:void run()",
                        "io.netty.handler.codec.http.DefaultHttpRequest:boolean equals(java.lang.Object)",
                        "io.netty.buffer.EmptyByteBuf:boolean equals(java.lang.Object)",
                        "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                        "io.netty.util.concurrent.DefaultThreadFactory:void <clinit>()",
                        "io.netty.handler.codec.http.QueryStringDecoder:java.util.Map parameters()",
                        "io.netty.handler.codec.http.HttpHeaders:java.lang.String get(java.lang.CharSequence)",
                        "io.netty.channel.unix.FileDescriptor:int hashCode()",
                        "io.netty.handler.ssl.SslHandler$3:void run()",
                        "io.netty.util.collection.IntObjectHashMap$2$1:boolean hasNext()",
                        "io.netty.handler.codec.http.websocketx.PingWebSocketFrame:io.netty.handler.codec.http.websocketx.PingWebSocketFrame retain()",
                        "io.netty.handler.codec.http.DefaultFullHttpRequest:boolean release()",
                        "io.netty.util.collection.IntObjectHashMap$MapIterator:boolean hasNext()",
                        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()",
                        "io.netty.buffer.FixedCompositeByteBuf:java.lang.String toString()",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String getValue()",
                        "io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(io.netty.channel.Channel)",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:java.lang.String toString()",
                        "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                        "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                        "io.netty.handler.codec.http.HttpResponseStatus:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:boolean equals(java.lang.Object)",
                        "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable:void run()",
                        "io.netty.util.AbstractConstant:java.lang.String toString()",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.DefaultFullHttpRequest:io.netty.buffer.ByteBuf content()",
                        "io.netty.handler.codec.http.HttpServerCodec:void <init>()",
                        "io.netty.handler.codec.http.multipart.DiskFileUpload:java.lang.String toString()",
                        "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                        "io.netty.channel.DefaultChannelPipeline$7:void run()",
                        "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                        "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String toString()",
                        "io.netty.channel.nio.NioEventLoop$6:void run()",
                        "io.netty.util.collection.IntObjectHashMap$2$1:java.lang.Object next()",
                        "io.netty.handler.ssl.SslHandler$1:void run()",
                        "io.netty.handler.codec.DefaultHeaders$HeaderIterator:boolean hasNext()",
                        "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.String toString()",
                        "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                        "io.netty.util.collection.IntObjectHashMap:java.lang.String toString()",
                        "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction:void run()",
                        "io.netty.handler.codec.http.HttpVersion:java.lang.String toString()",
                        "io.netty.handler.codec.http.DefaultFullHttpResponse:java.lang.String toString()",
                        "io.netty.util.collection.IntObjectHashMap$KeySet:java.util.Iterator iterator()",
                        "io.netty.channel.WriteBufferWaterMark:java.lang.String toString()",
                        "io.netty.channel.DefaultChannelPipeline$5:void run()",
                        "io.netty.handler.codec.http.EmptyHttpHeaders:java.util.List entries()",
                        "io.netty.util.collection.IntObjectHashMap:boolean containsKey(java.lang.Object)",
                        "io.netty.buffer.UnreleasableByteBuf:boolean release()",
                        "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                        "io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask:void run()",
                        "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                        "io.netty.handler.codec.http.multipart.DiskAttribute:java.lang.String toString()",
                        "io.netty.buffer.DefaultByteBufHolder:java.lang.String toString()",
                        "io.netty.bootstrap.AbstractBootstrap:java.lang.String toString()",
                        "io.netty.util.internal.AppendableCharSequence:java.lang.String toString()",
                        "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf retain()",
                        "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release()",
                        "io.netty.handler.codec.http.multipart.DiskAttribute:java.lang.String getValue()",
                        "io.netty.handler.codec.DefaultHeaders$HeaderIterator:java.util.Map$Entry next()",
                        "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)",
                        "io.netty.util.Signal:int hashCode()",
                        "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                        "io.netty.handler.codec.http.multipart.MemoryAttribute:java.lang.String toString()",
                        "io.netty.handler.ssl.SslHandshakeCompletionEvent:java.lang.String toString()",
                        "io.netty.handler.codec.http.HttpObjectAggregator:void <clinit>()",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                        "io.netty.handler.stream.ChunkedWriteHandler:void <init>()",
                        "io.netty.handler.codec.http.HttpMethod:int hashCode()",
                        "io.netty.handler.codec.http.HttpVersion:int hashCode()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:boolean release()",
                        "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:int hashCode()",
                        "io.netty.buffer.EmptyByteBuf:boolean release()",
                        "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()",
                        "io.netty.handler.timeout.IdleState:void <clinit>()",
                        "io.netty.buffer.DefaultByteBufHolder:int hashCode()",
                        "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.util.Iterator iterator()",
                        "io.netty.util.AsciiString:boolean equals(java.lang.Object)",
                        "io.netty.util.collection.IntObjectHashMap:java.lang.Object get(java.lang.Object)",
                        "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf retain()",
                        "io.netty.handler.codec.CodecOutputList:int size()",
                        "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                        "io.netty.channel.ChannelFutureListener:void <clinit>()",
                        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                        "io.netty.buffer.WrappedByteBuf:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.multipart.AbstractHttpData:java.lang.String getName()",
                        "io.netty.handler.codec.http.websocketx.CloseWebSocketFrame:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain()",
                        "io.netty.handler.codec.HeadersUtils$1:int size()",
                        "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf retain()",
                        "io.netty.handler.codec.http.DefaultHttpObject:boolean equals(java.lang.Object)",
                        "io.netty.handler.codec.http.DefaultHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                        "io.netty.channel.DefaultChannelId:int hashCode()",
                        "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)",
                        "io.netty.util.concurrent.PromiseTask:boolean equals(java.lang.Object)",
                        "io.netty.channel.DefaultChannelPipeline$2:void run()",
                        "io.netty.channel.SimpleChannelInboundHandler:void <init>(boolean)",
                        "io.netty.handler.codec.http.multipart.MemoryAttribute:java.lang.String getValue()",
                        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()",
                        "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:io.netty.handler.codec.http.HttpMethod method()",
                        "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()"
                    ],
                    "CVE": [
                        "CVE-2019-16869"
                    ],
                    "used vul-method": [
                        "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                        "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                        "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                        "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                        "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.channel.DefaultChannelPipeline$8:void run()",
                        "io.netty.channel.DefaultChannelPipeline$4:void run()",
                        "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                        "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                        "io.netty.channel.DefaultChannelPipeline$3:void run()",
                        "io.netty.channel.DefaultChannelPipeline$9:void run()",
                        "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                        "io.netty.handler.ssl.SslHandler$5:void run()",
                        "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                        "io.netty.channel.DefaultChannelPipeline$6:void run()",
                        "io.netty.util.concurrent.DefaultPromise$1:void run()",
                        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                        "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                        "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                        "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)",
                        "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                        "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                        "io.netty.util.concurrent.DefaultPromise$2:void run()",
                        "io.netty.handler.ssl.SslHandler$3:void run()",
                        "io.netty.channel.DefaultChannelPipeline$7:void run()",
                        "io.netty.channel.nio.NioEventLoop$6:void run()",
                        "io.netty.handler.ssl.SslHandler$1:void run()",
                        "io.netty.channel.DefaultChannelPipeline$5:void run()",
                        "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()",
                        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                        "io.netty.channel.DefaultChannelPipeline$2:void run()",
                        "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
                    ],
                    "vul-called frequency": 62,
                    "related vul root method": {
                        "CVE-2019-16869": [
                            "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-16869": [
                            "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                            "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                            "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                            "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                            "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                            "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                            "io.netty.channel.DefaultChannelPipeline$8:void run()",
                            "io.netty.channel.DefaultChannelPipeline$4:void run()",
                            "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                            "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                            "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                            "io.netty.channel.DefaultChannelPipeline$3:void run()",
                            "io.netty.channel.DefaultChannelPipeline$9:void run()",
                            "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                            "io.netty.handler.ssl.SslHandler$5:void run()",
                            "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                            "io.netty.channel.DefaultChannelPipeline$6:void run()",
                            "io.netty.util.concurrent.DefaultPromise$1:void run()",
                            "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                            "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                            "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                            "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)",
                            "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                            "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                            "io.netty.util.concurrent.DefaultPromise$2:void run()",
                            "io.netty.handler.ssl.SslHandler$3:void run()",
                            "io.netty.channel.DefaultChannelPipeline$7:void run()",
                            "io.netty.channel.nio.NioEventLoop$6:void run()",
                            "io.netty.handler.ssl.SslHandler$1:void run()",
                            "io.netty.channel.DefaultChannelPipeline$5:void run()",
                            "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()",
                            "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                            "io.netty.channel.DefaultChannelPipeline$2:void run()",
                            "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
                        ]
                    }
                }
            }
        }
    }
}
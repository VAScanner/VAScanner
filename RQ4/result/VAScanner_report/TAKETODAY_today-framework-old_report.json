{
    "project name": "TAKETODAY_today-framework-old",
    "vulnerable dependencies": {
        "commons-fileupload:commons-fileupload:1.3.3": {
            "used-method num": 0,
            "used method": []
        },
        "com.alibaba:fastjson:1.2.70": {
            "used-method num": 0,
            "used method": []
        },
        "org.apache.tomcat.embed:tomcat-embed-core:9.0.43": {
            "used-method num": 174,
            "used method": [
                "org.apache.catalina.core.AprLifecycleListener:void setUseAprConnector(boolean)",
                "org.apache.catalina.connector.CoyoteOutputStream:java.lang.Object clone()",
                "org.apache.tomcat.util.log.SystemLogHandler:void write(byte[],int,int)",
                "org.apache.tomcat.util.log.SystemLogHandler:void close()",
                "org.apache.catalina.core.ContainerBase:void setName(java.lang.String)",
                "org.apache.catalina.util.ParameterMap:java.util.Collection values()",
                "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:void write(byte[],int,int)",
                "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
                "org.apache.catalina.core.StandardContext:void setSessionTimeout(int)",
                "org.apache.catalina.core.AprLifecycleListener:void setSSLEngine(java.lang.String)",
                "org.apache.catalina.core.StandardContext:void setLoader(org.apache.catalina.Loader)",
                "org.apache.catalina.startup.Tomcat:void <init>()",
                "org.apache.catalina.loader.WebappLoader:void setLoaderClass(java.lang.String)",
                "org.apache.tomcat.util.descriptor.web.ErrorPage:void <init>()",
                "org.apache.naming.ContextBindings:void unbindClassLoader(java.lang.Object,java.lang.Object,java.lang.ClassLoader)",
                "org.apache.catalina.util.StandardSessionIdGenerator:void <init>()",
                "org.apache.catalina.connector.Connector:void setURIEncoding(java.lang.String)",
                "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1:int size()",
                "org.apache.catalina.core.ContainerBase:org.apache.catalina.Pipeline getPipeline()",
                "org.apache.catalina.servlets.DefaultServlet:void <init>()",
                "org.apache.catalina.webresources.CachedResource$CachedResourceJarURLConnection:java.util.jar.JarFile getJarFile()",
                "org.apache.juli.ClassLoaderLogManager$Cleaner:void run()",
                "org.apache.catalina.core.StandardContext:void addWelcomeFile(java.lang.String)",
                "org.apache.catalina.core.StandardContext:java.lang.ClassLoader getParentClassLoader()",
                "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntrySet:java.util.Iterator iterator()",
                "org.apache.catalina.core.StandardService:org.apache.catalina.connector.Connector[] findConnectors()",
                "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryImpl:java.lang.String getKey()",
                "org.apache.catalina.util.SessionIdGeneratorBase:void <clinit>()",
                "org.apache.catalina.session.StandardManager:void <init>()",
                "org.apache.catalina.core.StandardContext:void setUseHttpOnly(boolean)",
                "org.apache.catalina.core.ApplicationSessionCookieConfig:void setName(java.lang.String)",
                "org.apache.catalina.core.StandardContext:void setDocBase(java.lang.String)",
                "org.apache.catalina.core.ApplicationSessionCookieConfig:void setSecure(boolean)",
                "org.apache.tomcat.util.log.SystemLogHandler:void write(byte[])",
                "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap:java.util.Collection values()",
                "org.apache.catalina.connector.CoyoteReader:java.lang.Object clone()",
                "org.apache.catalina.connector.CoyoteOutputStream:void close()",
                "org.apache.catalina.core.ApplicationSessionCookieConfig:void setPath(java.lang.String)",
                "org.apache.catalina.core.StandardHost:void addChild(org.apache.catalina.Container)",
                "org.apache.catalina.connector.CoyoteInputStream:void close()",
                "org.apache.catalina.connector.CoyoteInputStream:int available()",
                "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()",
                "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper:void close()",
                "org.apache.catalina.connector.Connector:boolean setProperty(java.lang.String,java.lang.String)",
                "org.apache.catalina.core.AprLifecycleListener:void setFIPSMode(java.lang.String)",
                "org.apache.catalina.startup.Tomcat:void destroy()",
                "org.apache.catalina.startup.Tomcat:void stop()",
                "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap:java.util.Set entrySet()",
                "org.apache.naming.ContextBindings:void bindClassLoader(java.lang.Object,java.lang.Object,java.lang.ClassLoader)",
                "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()",
                "org.apache.catalina.core.StandardContext:void <clinit>()",
                "org.apache.catalina.session.ManagerBase:void <clinit>()",
                "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.catalina.core.StandardContext:java.lang.Object getNamingToken()",
                "org.apache.catalina.core.ApplicationContext:void setSessionTrackingModes(java.util.Set)",
                "org.apache.catalina.core.ApplicationSessionCookieConfig:void setHttpOnly(boolean)",
                "org.apache.catalina.core.StandardContext:void setManager(org.apache.catalina.Manager)",
                "org.apache.tomcat.util.log.SystemLogHandler:void flush()",
                "org.apache.catalina.connector.CoyoteInputStream:int read()",
                "org.apache.catalina.util.URLEncoder:java.lang.Object clone()",
                "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read(byte[],int,int)",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.catalina.core.StandardContext:void addServletContainerInitializer(javax.servlet.ServletContainerInitializer,java.util.Set)",
                "org.apache.catalina.core.AprLifecycleListener:void setUseOpenSSL(boolean)",
                "org.apache.catalina.connector.ResponseFacade:java.lang.Object clone()",
                "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()",
                "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream:void close()",
                "org.apache.catalina.startup.Tomcat:void setConnector(org.apache.catalina.connector.Connector)",
                "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper:int available()",
                "org.apache.catalina.core.AprLifecycleListener:void <init>()",
                "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper:int read()",
                "org.apache.tomcat.util.buf.ByteChunk:java.lang.Object clone()",
                "org.apache.catalina.util.ParameterMap:java.util.Set entrySet()",
                "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap:java.util.Set entrySet()",
                "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[],int,int)",
                "org.apache.catalina.core.AprLifecycleListener:void setSSLRandomSeed(java.lang.String)",
                "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[])",
                "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])",
                "org.apache.catalina.core.StandardServer:void await()",
                "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper:long skip(long)",
                "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap:java.lang.Object get(java.lang.Object)",
                "org.apache.catalina.servlets.DefaultServlet:void <clinit>()",
                "org.apache.catalina.connector.Connector:void <clinit>()",
                "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()",
                "org.apache.catalina.core.ContainerBase:void setParentClassLoader(java.lang.ClassLoader)",
                "org.apache.catalina.connector.CoyoteInputStream:java.lang.Object clone()",
                "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream:int read(byte[],int,int)",
                "org.apache.catalina.util.ParameterMap:java.lang.Object remove(java.lang.Object)",
                "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryIterator:boolean hasNext()",
                "org.apache.catalina.util.ResourceSet:boolean add(java.lang.Object)",
                "org.apache.tomcat.util.scan.NonClosingJarInputStream:void close()",
                "org.apache.catalina.loader.WebappLoader:void setDelegate(boolean)",
                "org.apache.catalina.startup.Tomcat:void <clinit>()",
                "org.apache.catalina.core.AprLifecycleListener:void <clinit>()",
                "org.apache.coyote.http2.Http2Protocol:void <clinit>()",
                "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close()",
                "org.apache.catalina.core.ApplicationSessionCookieConfig:void setMaxAge(int)",
                "org.apache.catalina.startup.Catalina$CatalinaShutdownHook:void run()",
                "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read()",
                "org.apache.catalina.core.StandardContext:void setFailCtxIfServletStartFails(java.lang.Boolean)",
                "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:long skip(long)",
                "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap:java.lang.Object remove(java.lang.Object)",
                "org.apache.tomcat.util.descriptor.web.ErrorPage:void setExceptionType(java.lang.String)",
                "org.apache.catalina.core.ContainerBase:org.apache.catalina.Container[] findChildren()",
                "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void flush()",
                "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext:javax.servlet.SessionCookieConfig getSessionCookieConfig()",
                "org.apache.catalina.util.LifecycleMBeanBase:void <clinit>()",
                "org.apache.tomcat.util.log.SystemLogHandler:void println(java.lang.Object)",
                "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()",
                "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1:java.util.Map$Entry next()",
                "org.apache.tomcat.util.descriptor.web.ErrorPage:void setLocation(java.lang.String)",
                "org.apache.catalina.connector.CoyoteWriter:java.lang.Object clone()",
                "org.apache.tomcat.util.descriptor.web.ErrorPage:void setErrorCode(int)",
                "org.apache.naming.ContextBindings:void <clinit>()",
                "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])",
                "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:void close()",
                "org.apache.catalina.core.StandardContext:void addMimeMapping(java.lang.String,java.lang.String)",
                "org.apache.catalina.util.ParameterMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper:int read(byte[],int,int)",
                "org.apache.tomcat.util.buf.CharChunk:java.lang.Object clone()",
                "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryImpl:java.lang.Object getValue()",
                "org.apache.catalina.connector.RequestFacade:java.lang.Object clone()",
                "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream:int read()",
                "org.apache.catalina.core.StandardServer:org.apache.catalina.Service[] findServices()",
                "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState)",
                "org.apache.catalina.core.StandardContext:void addErrorPage(org.apache.tomcat.util.descriptor.web.ErrorPage)",
                "org.apache.catalina.startup.Tomcat:org.apache.catalina.Service getService()",
                "org.apache.coyote.http2.Http2Protocol:void <init>()",
                "org.apache.catalina.startup.Tomcat$FixContextListener:void <init>()",
                "org.apache.catalina.core.ApplicationContext:javax.servlet.SessionCookieConfig getSessionCookieConfig()",
                "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)",
                "org.apache.catalina.core.StandardContext:void addLocaleEncodingMappingParameter(java.lang.String,java.lang.String)",
                "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(byte[],int,int)",
                "org.apache.catalina.connector.Connector:void setPort(int)",
                "org.apache.tomcat.util.buf.MessageBytes:java.lang.Object clone()",
                "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)",
                "org.apache.catalina.LifecycleState:void <clinit>()",
                "org.apache.catalina.loader.WebappLoader:void <clinit>()",
                "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int available()",
                "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper:int read(byte[])",
                "org.apache.catalina.core.StandardContext:void <init>()",
                "org.apache.catalina.core.ApplicationSessionCookieConfig:void setDomain(java.lang.String)",
                "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1:java.util.Iterator iterator()",
                "org.apache.catalina.core.ApplicationContextFacade:void setSessionTrackingModes(java.util.Set)",
                "org.apache.catalina.core.StandardService:void removeConnector(org.apache.catalina.connector.Connector)",
                "org.apache.catalina.connector.Connector:void <init>(java.lang.String)",
                "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.SessionCookieConfig getSessionCookieConfig()",
                "org.apache.catalina.startup.Tomcat:void start()",
                "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryIterator:java.util.Map$Entry next()",
                "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read(byte[],int,int)",
                "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext:void setSessionTrackingModes(java.util.Set)",
                "org.apache.catalina.loader.WebappLoader:void <init>(java.lang.ClassLoader)",
                "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor:void execute(java.lang.Runnable)",
                "org.apache.catalina.util.LifecycleBase:void <clinit>()",
                "org.apache.catalina.core.StandardContext:void setPath(java.lang.String)",
                "org.apache.catalina.core.StandardService:void addConnector(org.apache.catalina.connector.Connector)",
                "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
                "org.apache.catalina.util.ParameterMap:java.lang.Object get(java.lang.Object)",
                "org.apache.catalina.core.StandardContext:void setDisplayName(java.lang.String)",
                "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream:void close()",
                "org.apache.catalina.core.ContainerBase:void <clinit>()",
                "org.apache.catalina.session.ManagerBase:void setSessionIdGenerator(org.apache.catalina.SessionIdGenerator)",
                "org.apache.catalina.core.StandardContext:org.apache.catalina.Manager getManager()",
                "org.apache.catalina.session.StandardManager:void setPathname(java.lang.String)",
                "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap:java.lang.Object get(java.lang.Object)",
                "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()",
                "org.apache.catalina.connector.Connector:org.apache.coyote.ProtocolHandler getProtocolHandler()",
                "org.apache.catalina.connector.CoyoteWriter:void flush()",
                "org.apache.catalina.core.ApplicationSessionCookieConfig:void setComment(java.lang.String)",
                "org.apache.catalina.util.LifecycleBase:void addLifecycleListener(org.apache.catalina.LifecycleListener)",
                "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:void run()",
                "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap:java.lang.Object remove(java.lang.Object)",
                "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:void close()"
            ],
            "CVE": [
                "CVE-2021-30640",
                "CVE-2021-33037",
                "CVE-2022-42252"
            ],
            "used vul-method": [
                "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
                "org.apache.catalina.connector.CoyoteOutputStream:void close()",
                "org.apache.catalina.connector.CoyoteInputStream:int available()",
                "org.apache.catalina.connector.CoyoteInputStream:int read()",
                "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()",
                "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])",
                "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()",
                "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])",
                "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)",
                "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(byte[],int,int)",
                "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)",
                "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read(byte[],int,int)",
                "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
                "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()",
                "org.apache.catalina.connector.CoyoteWriter:void flush()"
            ],
            "vul-called frequency": 58,
            "related vul root method": {
                "CVE-2021-30640": [
                    "org.apache.catalina.realm.JNDIRealm:java.util.List getRoles(org.apache.catalina.realm.JNDIRealm$JNDIConnection,org.apache.catalina.realm.JNDIRealm$User)",
                    "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserByPattern(org.apache.catalina.realm.JNDIRealm$JNDIConnection,java.lang.String,java.lang.String,java.lang.String[],int)",
                    "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserBySearch(org.apache.catalina.realm.JNDIRealm$JNDIConnection,java.lang.String,java.lang.String[])"
                ],
                "CVE-2021-33037": [
                    "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
                    "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
                ],
                "CVE-2022-42252": [
                    "org.apache.coyote.http11.Http11InputBuffer:org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus parseHeader()",
                    "org.apache.coyote.http11.Http11InputBuffer:org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus skipLine()"
                ]
            },
            "CVE-API": {
                "CVE-2021-30640": [
                    "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
                    "org.apache.catalina.connector.CoyoteOutputStream:void close()",
                    "org.apache.catalina.connector.CoyoteInputStream:int available()",
                    "org.apache.catalina.connector.CoyoteInputStream:int read()",
                    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()",
                    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])",
                    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()",
                    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])",
                    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)",
                    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(byte[],int,int)",
                    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)",
                    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read(byte[],int,int)",
                    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
                    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()",
                    "org.apache.catalina.connector.CoyoteWriter:void flush()"
                ],
                "CVE-2021-33037": [
                    "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
                    "org.apache.catalina.connector.CoyoteOutputStream:void close()",
                    "org.apache.catalina.connector.CoyoteInputStream:int available()",
                    "org.apache.catalina.connector.CoyoteInputStream:int read()",
                    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()",
                    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])",
                    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()",
                    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])",
                    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)",
                    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(byte[],int,int)",
                    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)",
                    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read(byte[],int,int)",
                    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
                    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()",
                    "org.apache.catalina.connector.CoyoteWriter:void flush()"
                ],
                "CVE-2022-42252": [
                    "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
                    "org.apache.catalina.connector.CoyoteOutputStream:void close()",
                    "org.apache.catalina.connector.CoyoteInputStream:int available()",
                    "org.apache.catalina.connector.CoyoteInputStream:int read()",
                    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()",
                    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])",
                    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()",
                    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])",
                    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)",
                    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(byte[],int,int)",
                    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)",
                    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read(byte[],int,int)",
                    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
                    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()",
                    "org.apache.catalina.connector.CoyoteWriter:void flush()"
                ]
            }
        },
        "io.undertow:undertow-core:2.2.8.Final": {
            "used-method num": 98,
            "used method": [
                "io.undertow.server.handlers.encoding.ContentEncodingRepository:void <init>()",
                "io.undertow.server.handlers.encoding.ContentEncodingRepository:io.undertow.server.handlers.encoding.ContentEncodingRepository addEncodingHandler(java.lang.String,io.undertow.server.handlers.encoding.ContentEncodingProvider,int,io.undertow.predicate.Predicate)",
                "io.undertow.server.HttpServerExchange:io.undertow.util.HttpString getRequestMethod()",
                "io.undertow.util.FlexBase64$DecoderInputStream:void close()",
                "io.undertow.util.AttachmentList:boolean add(java.lang.Object)",
                "io.undertow.util.HeaderValues:boolean contains(java.lang.Object)",
                "io.undertow.util.HeaderValues:java.util.Iterator iterator()",
                "io.undertow.util.HeaderValues:java.lang.String get(int)",
                "io.undertow.server.HttpServerExchange:java.lang.String getRequestPath()",
                "io.undertow.util.FlexBase64$EncoderOutputStream:void write(byte[],int,int)",
                "io.undertow.Undertow:io.undertow.Undertow$Builder builder()",
                "io.undertow.util.HeaderValues$1:boolean hasNext()",
                "io.undertow.util.HeaderValues$1:java.lang.String next()",
                "io.undertow.io.UndertowInputStream:int read(byte[])",
                "io.undertow.server.handlers.PathHandler:io.undertow.server.handlers.PathHandler addPrefixPath(java.lang.String,io.undertow.server.HttpHandler)",
                "io.undertow.websockets.core.protocol.version07.Base64$InputStream:int read()",
                "io.undertow.server.ReadOnlyIterator:boolean hasNext()",
                "io.undertow.io.UndertowOutputStream:void flush()",
                "io.undertow.io.UndertowOutputStream:void write(byte[],int,int)",
                "io.undertow.util.HeaderValues:boolean add(java.lang.Object)",
                "io.undertow.predicate.Predicates:io.undertow.predicate.Predicate and(io.undertow.predicate.Predicate[])",
                "io.undertow.io.UndertowOutputStream:void write(byte[])",
                "io.undertow.util.FastConcurrentDirectDeque$AbstractItr:boolean hasNext()",
                "io.undertow.util.HeaderMap$2:java.util.Iterator iterator()",
                "io.undertow.util.SameThreadExecutor:void execute(java.lang.Runnable)",
                "io.undertow.Undertow$Builder:io.undertow.Undertow build()",
                "io.undertow.server.HttpServerExchange:io.undertow.util.HeaderMap getRequestHeaders()",
                "io.undertow.server.handlers.resource.URLResource:java.lang.Long getContentLength()",
                "io.undertow.Undertow:void start()",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.undertow.util.SubstringMap$1:java.util.Iterator iterator()",
                "io.undertow.predicate.Predicates:io.undertow.predicate.Predicate maxContentSize(long)",
                "io.undertow.util.SubstringMap$1$1:java.lang.String next()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "io.undertow.server.DelegatingIterable:java.util.Iterator iterator()",
                "io.undertow.server.handlers.resource.FileResourceManager:void <init>(java.io.File)",
                "io.undertow.io.UndertowInputStream:void close()",
                "io.undertow.util.FlexBase64$EncoderInputStream:int read(byte[],int,int)",
                "io.undertow.util.Headers:void <clinit>()",
                "io.undertow.server.MapDelegatingToSet:java.util.Set entrySet()",
                "io.undertow.util.FlexBase64$EncoderOutputStream:void flush()",
                "io.undertow.io.UndertowInputStream:int available()",
                "io.undertow.websockets.core.protocol.version07.Base64$InputStream:int read(byte[],int,int)",
                "io.undertow.util.FlexBase64$EncoderInputStream:int read()",
                "io.undertow.util.HeaderMap$1:boolean hasNext()",
                "io.undertow.util.HeaderMap$2$1:boolean hasNext()",
                "io.undertow.Undertow$Builder:io.undertow.Undertow$Builder addHttpListener(int,java.lang.String)",
                "io.undertow.server.MapDelegatingToSet:io.undertow.server.handlers.Cookie get(java.lang.Object)",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object remove(java.lang.Object)",
                "io.undertow.util.FlexBase64$DecoderInputStream:int read(byte[],int,int)",
                "io.undertow.util.HeaderValues:boolean addAll(java.util.Collection)",
                "io.undertow.server.handlers.form.FormData:java.util.Iterator iterator()",
                "io.undertow.server.handlers.encoding.EncodingHandler:void <init>(io.undertow.server.handlers.encoding.ContentEncodingRepository)",
                "io.undertow.io.UndertowInputStream:int read(byte[],int,int)",
                "io.undertow.server.MapDelegatingToSet:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.undertow.Handlers:io.undertow.server.handlers.PathHandler path()",
                "io.undertow.util.HeaderValues:java.lang.Object[] toArray(java.lang.Object[])",
                "io.undertow.server.handlers.encoding.EncodingHandler:io.undertow.server.handlers.encoding.EncodingHandler setNext(io.undertow.server.HttpHandler)",
                "io.undertow.Undertow:void stop()",
                "io.undertow.server.handlers.proxy.RouteIteratorFactory$RouteIterator:java.lang.CharSequence next()",
                "io.undertow.util.FlexBase64$DecoderOutputStream:void flush()",
                "io.undertow.util.HeaderValues:boolean isEmpty()",
                "io.undertow.server.handlers.resource.PathResourceManager:void <clinit>()",
                "io.undertow.server.MapDelegatingToSet:java.util.Collection values()",
                "io.undertow.io.UndertowOutputStream:void close()",
                "io.undertow.server.handlers.encoding.ContentEncodingRepository:void <clinit>()",
                "io.undertow.util.HeaderValues:int size()",
                "io.undertow.util.HeaderMap$2$1:io.undertow.util.HttpString next()",
                "io.undertow.server.ReadOnlyIterator:java.lang.Object next()",
                "io.undertow.server.handlers.resource.URLResource:void <init>(java.net.URL,java.lang.String)",
                "io.undertow.util.CopyOnWriteMap:java.util.Collection values()",
                "io.undertow.server.OverridableTreeSet:boolean add(java.lang.Object)",
                "io.undertow.Handlers:io.undertow.server.handlers.SetHeaderHandler header(io.undertow.server.HttpHandler,java.lang.String,java.lang.String)",
                "io.undertow.util.FlexBase64$DecoderOutputStream:void close()",
                "io.undertow.server.HttpServerExchange:io.undertow.util.HeaderMap getResponseHeaders()",
                "io.undertow.server.MapDelegatingToSet$ReadOnlyEntry:java.lang.String getKey()",
                "io.undertow.server.handlers.encoding.GzipEncodingProvider:void <init>()",
                "io.undertow.util.HeaderMap$1:io.undertow.util.HeaderValues next()",
                "io.undertow.util.HeaderMap:java.lang.String getFirst(java.lang.String)",
                "io.undertow.io.UndertowInputStream:int read()",
                "io.undertow.predicate.Predicate:void <clinit>()",
                "io.undertow.server.MapDelegatingToSet:io.undertow.server.handlers.Cookie remove(java.lang.Object)",
                "io.undertow.util.HeaderMap:java.util.Iterator iterator()",
                "io.undertow.server.MapDelegatingToSet$ReadOnlyEntry:io.undertow.server.handlers.Cookie getValue()",
                "io.undertow.server.MapDelegatingToSet:void forEach(java.util.function.BiConsumer)",
                "io.undertow.util.CopyOnWriteMap:java.util.Set entrySet()",
                "io.undertow.util.FlexBase64$EncoderOutputStream:void close()",
                "io.undertow.util.FastConcurrentDirectDeque$AbstractItr:java.lang.Object next()",
                "io.undertow.util.FlexBase64$DecoderOutputStream:void write(byte[],int,int)",
                "io.undertow.util.FlexBase64$DecoderInputStream:int read()",
                "io.undertow.websockets.core.protocol.version07.Base64$OutputStream:void write(byte[],int,int)",
                "io.undertow.util.HeaderMap:java.lang.String getFirst(io.undertow.util.HttpString)",
                "io.undertow.server.handlers.proxy.RouteIteratorFactory$RouteIterator:boolean hasNext()",
                "io.undertow.util.HttpString:boolean equalToString(java.lang.String)",
                "io.undertow.websockets.core.protocol.version07.Base64$OutputStream:void close()",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object get(java.lang.Object)",
                "io.undertow.util.SubstringMap$1$1:boolean hasNext()",
                "io.undertow.Handlers:io.undertow.server.handlers.ProxyPeerAddressHandler proxyPeerAddress(io.undertow.server.HttpHandler)"
            ]
        }
    }
}
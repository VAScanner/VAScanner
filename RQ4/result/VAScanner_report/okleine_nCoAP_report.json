{
    "project name": "okleine_nCoAP",
    "modules": {
        "de.uzl.itm:ncoap-complete": {
            "vulnerable dependencies": {
                "io.netty:netty:3.9.0.Final": {
                    "used-method num": 122,
                    "used method": [
                        "org.jboss.netty.buffer.ReadOnlyChannelBuffer:org.jboss.netty.buffer.ChannelBuffer slice(int,int)",
                        "org.jboss.netty.channel.DownstreamMessageEvent:java.net.SocketAddress getRemoteAddress()",
                        "org.jboss.netty.channel.FixedReceiveBufferSizePredictor:void <init>(int)",
                        "org.jboss.netty.channel.DefaultChannelPipeline:void addLast(java.lang.String,org.jboss.netty.channel.ChannelHandler)",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet:boolean isEmpty()",
                        "org.jboss.netty.channel.DefaultChannelPipeline:org.jboss.netty.channel.ChannelHandler get(java.lang.Class)",
                        "org.jboss.netty.buffer.DuplicatedChannelBuffer:org.jboss.netty.buffer.ChannelBuffer slice(int,int)",
                        "org.jboss.netty.channel.DefaultChannelFuture:boolean isSuccess()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet:boolean remove(java.lang.Object)",
                        "org.jboss.netty.channel.DownstreamChannelStateEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet:boolean contains(java.lang.Object)",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:void readBytes(byte[])",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:void discardReadBytes()",
                        "org.jboss.netty.buffer.ChannelBuffers:org.jboss.netty.buffer.ChannelBuffer wrappedBuffer(org.jboss.netty.buffer.ChannelBuffer[])",
                        "org.jboss.netty.channel.Channels:void fireMessageReceived(org.jboss.netty.channel.ChannelHandlerContext,java.lang.Object,java.net.SocketAddress)",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:int hashCode()",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:int readableBytes()",
                        "org.jboss.netty.channel.DefaultChannelFuture:org.jboss.netty.channel.ChannelFuture awaitUninterruptibly()",
                        "org.jboss.netty.util.ThreadRenamingRunnable:void <clinit>()",
                        "org.jboss.netty.channel.AbstractChannel:boolean equals(java.lang.Object)",
                        "org.jboss.netty.channel.DefaultExceptionEvent:java.lang.Throwable getCause()",
                        "org.jboss.netty.buffer.HeapChannelBuffer:org.jboss.netty.buffer.ChannelBuffer slice(int,int)",
                        "org.jboss.netty.channel.Channels:void fireMessageReceived(org.jboss.netty.channel.Channel,java.lang.Object)",
                        "org.jboss.netty.buffer.TruncatedChannelBuffer:int getInt(int)",
                        "org.jboss.netty.channel.socket.nio.NioDatagramChannel:java.net.InetSocketAddress getLocalAddress()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet:boolean contains(java.lang.Object)",
                        "org.jboss.netty.buffer.ByteBufferBackedChannelBuffer:org.jboss.netty.buffer.ChannelBuffer slice(int,int)",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:void readBytes(byte[],int,int)",
                        "org.jboss.netty.channel.UpstreamMessageEvent:java.net.SocketAddress getRemoteAddress()",
                        "org.jboss.netty.buffer.ReadOnlyChannelBuffer:void discardReadBytes()",
                        "org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory:void <init>(java.util.concurrent.Executor,int)",
                        "org.jboss.netty.channel.Channels:org.jboss.netty.channel.ChannelFuture write(org.jboss.netty.channel.Channel,java.lang.Object,java.net.SocketAddress)",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$SimpleEntry:java.lang.Object getKey()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$Values:int size()",
                        "org.jboss.netty.channel.SimpleChannelHandler:void <clinit>()",
                        "org.jboss.netty.buffer.DynamicChannelBuffer:void writeByte(int)",
                        "org.jboss.netty.channel.CompleteChannelFuture:boolean setSuccess()",
                        "org.jboss.netty.channel.UpstreamMessageEvent:java.lang.Object getMessage()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet:java.util.Iterator iterator()",
                        "org.jboss.netty.channel.DefaultChannelFuture:java.lang.Throwable getCause()",
                        "org.jboss.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$HashIterator:boolean hasNext()",
                        "org.jboss.netty.channel.DefaultWriteCompletionEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                        "org.jboss.netty.buffer.DuplicatedChannelBuffer:int getInt(int)",
                        "org.jboss.netty.channel.DefaultExceptionEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                        "org.jboss.netty.buffer.CompositeChannelBuffer:int getInt(int)",
                        "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext:void sendDownstream(org.jboss.netty.channel.ChannelEvent)",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$EntryIterator:java.util.Map$Entry next()",
                        "org.jboss.netty.buffer.EmptyChannelBuffer:void readBytes(byte[])",
                        "org.jboss.netty.buffer.SlicedChannelBuffer:org.jboss.netty.buffer.ChannelBuffer slice(int,int)",
                        "org.jboss.netty.buffer.DynamicChannelBuffer:void writeInt(int)",
                        "org.jboss.netty.channel.AbstractChannel:org.jboss.netty.channel.ChannelPipeline getPipeline()",
                        "org.jboss.netty.channel.CompleteChannelFuture:boolean setFailure(java.lang.Throwable)",
                        "org.jboss.netty.channel.CompleteChannelFuture:org.jboss.netty.channel.ChannelFuture awaitUninterruptibly()",
                        "org.jboss.netty.buffer.CompositeChannelBuffer:void discardReadBytes()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$Values:java.util.Iterator iterator()",
                        "org.jboss.netty.channel.Channels:org.jboss.netty.channel.ChannelFuture future(org.jboss.netty.channel.Channel)",
                        "org.jboss.netty.channel.FailedChannelFuture:java.lang.Throwable getCause()",
                        "org.jboss.netty.buffer.LittleEndianHeapChannelBuffer:int getInt(int)",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet:int size()",
                        "org.jboss.netty.buffer.SlicedChannelBuffer:void getBytes(int,byte[],int,int)",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:java.lang.String toString(int,int,java.nio.charset.Charset)",
                        "org.jboss.netty.channel.SimpleChannelUpstreamHandler:void <clinit>()",
                        "org.jboss.netty.buffer.BigEndianHeapChannelBuffer:int getInt(int)",
                        "org.jboss.netty.channel.DefaultChildChannelStateEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                        "org.jboss.netty.channel.AbstractChannel:org.jboss.netty.channel.ChannelFuture close()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet:int size()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet:java.util.Iterator iterator()",
                        "org.jboss.netty.channel.SimpleChannelUpstreamHandler:void <init>()",
                        "org.jboss.netty.channel.DefaultChannelFuture:boolean setFailure(java.lang.Throwable)",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$KeyIterator:java.lang.Object next()",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:boolean equals(java.lang.Object)",
                        "org.jboss.netty.channel.DefaultChannelPipeline:org.jboss.netty.channel.ChannelHandlerContext getContext(java.lang.Class)",
                        "org.jboss.netty.buffer.CompositeChannelBuffer:org.jboss.netty.buffer.ChannelBuffer slice(int,int)",
                        "org.jboss.netty.channel.UpstreamChannelStateEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                        "org.jboss.netty.channel.DownstreamMessageEvent:java.lang.Object getMessage()",
                        "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext:org.jboss.netty.channel.Channel getChannel()",
                        "org.jboss.netty.buffer.TruncatedChannelBuffer:org.jboss.netty.buffer.ChannelBuffer slice(int,int)",
                        "org.jboss.netty.channel.SucceededChannelFuture:java.lang.Throwable getCause()",
                        "org.jboss.netty.channel.AbstractChannel:org.jboss.netty.channel.ChannelFactory getFactory()",
                        "org.jboss.netty.channel.UpstreamMessageEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                        "org.jboss.netty.util.ThreadRenamingRunnable:void setThreadNameDeterminer(org.jboss.netty.util.ThreadNameDeterminer)",
                        "org.jboss.netty.buffer.DynamicChannelBuffer:int getInt(int)",
                        "org.jboss.netty.channel.CompleteChannelFuture:boolean cancel()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$Values:boolean contains(java.lang.Object)",
                        "org.jboss.netty.buffer.ChannelBuffers:void <clinit>()",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$ValueIterator:java.lang.Object next()",
                        "org.jboss.netty.buffer.DynamicChannelBuffer:org.jboss.netty.buffer.ChannelBuffer slice(int,int)",
                        "org.jboss.netty.buffer.CompositeChannelBuffer:void getBytes(int,byte[],int,int)",
                        "org.jboss.netty.buffer.EmptyChannelBuffer:void discardReadBytes()",
                        "org.jboss.netty.channel.Channels:void fireMessageReceived(org.jboss.netty.channel.ChannelHandlerContext,java.lang.Object)",
                        "org.jboss.netty.channel.Channels:org.jboss.netty.channel.ChannelPipeline pipeline()",
                        "org.jboss.netty.channel.SimpleChannelHandler:void <init>()",
                        "org.jboss.netty.buffer.ChannelBuffers:org.jboss.netty.buffer.ChannelBuffer wrappedBuffer(byte[])",
                        "org.jboss.netty.channel.FailedChannelFuture:boolean isSuccess()",
                        "org.jboss.netty.buffer.ByteBufferBackedChannelBuffer:void getBytes(int,byte[],int,int)",
                        "org.jboss.netty.channel.CompleteChannelFuture:void addListener(org.jboss.netty.channel.ChannelFutureListener)",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet:boolean isEmpty()",
                        "org.jboss.netty.buffer.ByteBufferBackedChannelBuffer:int getInt(int)",
                        "org.jboss.netty.channel.DefaultChannelFuture:void addListener(org.jboss.netty.channel.ChannelFutureListener)",
                        "org.jboss.netty.handler.execution.ExecutionHandler:void <init>(java.util.concurrent.Executor)",
                        "org.jboss.netty.buffer.HeapChannelBuffer:void getBytes(int,byte[],int,int)",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:byte readByte()",
                        "org.jboss.netty.buffer.DynamicChannelBuffer:void getBytes(int,byte[],int,int)",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$SimpleEntry:boolean equals(java.lang.Object)",
                        "org.jboss.netty.buffer.ChannelBuffers:org.jboss.netty.buffer.ChannelBuffer dynamicBuffer(int)",
                        "org.jboss.netty.channel.DefaultChannelFuture:boolean cancel()",
                        "org.jboss.netty.buffer.TruncatedChannelBuffer:void getBytes(int,byte[],int,int)",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:void writeInt(int)",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:void writeByte(int)",
                        "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet:boolean remove(java.lang.Object)",
                        "org.jboss.netty.buffer.SlicedChannelBuffer:int getInt(int)",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:void writeBytes(byte[])",
                        "org.jboss.netty.buffer.EmptyChannelBuffer:void readBytes(byte[],int,int)",
                        "org.jboss.netty.buffer.AbstractChannelBuffer:int readInt()",
                        "org.jboss.netty.channel.DownstreamMessageEvent:org.jboss.netty.channel.ChannelFuture getFuture()",
                        "org.jboss.netty.bootstrap.ConnectionlessBootstrap:void <init>(org.jboss.netty.channel.ChannelFactory)",
                        "org.jboss.netty.buffer.DuplicatedChannelBuffer:void getBytes(int,byte[],int,int)",
                        "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext:void sendUpstream(org.jboss.netty.channel.ChannelEvent)",
                        "org.jboss.netty.channel.Channels:void write(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelFuture,java.lang.Object,java.net.SocketAddress)",
                        "org.jboss.netty.channel.DefaultChannelFuture:boolean setSuccess()",
                        "org.jboss.netty.channel.SimpleChannelDownstreamHandler:void <init>()"
                    ]
                },
                "junit:junit:4.11": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        }
    }
}
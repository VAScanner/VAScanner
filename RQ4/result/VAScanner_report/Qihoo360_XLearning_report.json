{
    "project name": "Qihoo360_XLearning",
    "vulnerable dependencies": {
        "org.apache.hadoop:hadoop-common:2.7.3": {
            "used-method num": 333,
            "used method": [
                "org.apache.hadoop.conf.Configuration:java.lang.String toString()",
                "org.apache.hadoop.fs.permission.AclStatus:java.lang.String toString()",
                "org.apache.hadoop.fs.FileSystem:org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.conf.Configuration:java.util.Iterator iterator()",
                "org.apache.hadoop.security.UserGroupInformation:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolVersionsRequestProto$Builder:org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolVersionsRequestProto$Builder clone()",
                "org.apache.hadoop.conf.Configuration:void setBoolean(java.lang.String,boolean)",
                "org.apache.hadoop.fs.FileStatus:long getLen()",
                "org.apache.hadoop.service.CompositeService:void serviceStart()",
                "org.apache.hadoop.metrics2.lib.MetricsRegistry:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$ProtocolSignatureProto$Builder:org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$ProtocolSignatureProto$Builder clone()",
                "org.apache.hadoop.io.Text:void <clinit>()",
                "org.apache.hadoop.security.UserGroupInformation:java.lang.Object doAs(java.security.PrivilegedExceptionAction)",
                "org.apache.hadoop.fs.ContentSummary:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.ProtobufRpcEngineProtos$RequestHeaderProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.util.ReflectionUtils:java.lang.Object newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.conf.Configuration:boolean getBoolean(java.lang.String,boolean)",
                "org.apache.hadoop.metrics2.util.SampleQuantiles:java.lang.String toString()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$GetServiceStatusRequestProto$Builder:org.apache.hadoop.ha.proto.HAServiceProtocolProtos$GetServiceStatusRequestProto$Builder clone()",
                "org.apache.hadoop.fs.Path:java.net.URI toUri()",
                "org.apache.hadoop.io.Text:java.lang.String toString()",
                "org.apache.hadoop.io.LongWritable:void <clinit>()",
                "org.apache.hadoop.security.token.Token:org.apache.hadoop.io.Text getKind()",
                "org.apache.hadoop.ipc.protobuf.ProtobufRpcEngineProtos$RequestHeaderProto$Builder:org.apache.hadoop.ipc.protobuf.ProtobufRpcEngineProtos$RequestHeaderProto$Builder clone()",
                "org.apache.hadoop.metrics2.impl.MetricsConfig$1:java.util.Iterator iterator()",
                "org.apache.hadoop.metrics2.impl.MsInfo:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolVersionsResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.RpcClientUtil$ProtoSigCacheKey:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.ProtocolSignature:void <clinit>()",
                "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker:void close()",
                "org.apache.hadoop.fs.FSDataOutputStream:void close()",
                "org.apache.hadoop.io.retry.RetryPolicies$MultipleLinearRandomRetry:java.lang.String toString()",
                "org.apache.hadoop.io.BooleanWritable:void <clinit>()",
                "org.apache.hadoop.security.proto.SecurityProtos$CancelDelegationTokenRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToStandbyResponseProto$Builder:org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToStandbyResponseProto$Builder clone()",
                "org.apache.hadoop.io.BooleanWritable:void <init>(boolean)",
                "org.apache.hadoop.util.Shell$ShellCommandExecutor:java.lang.String toString()",
                "org.apache.hadoop.security.authorize.AccessControlList:java.lang.String toString()",
                "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:void startThreads()",
                "org.apache.hadoop.fs.Options$ChecksumOpt:java.lang.String toString()",
                "org.apache.hadoop.util.ExitUtil:void <clinit>()",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.security.token.Token:void <clinit>()",
                "org.apache.hadoop.io.BooleanWritable:void write(java.io.DataOutput)",
                "org.apache.hadoop.fs.DF:java.lang.String toString()",
                "org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod:void <clinit>()",
                "org.apache.hadoop.ipc.RPC$Builder:org.apache.hadoop.ipc.RPC$Builder setPort(int)",
                "org.apache.hadoop.conf.Configuration:double getDouble(java.lang.String,double)",
                "org.apache.hadoop.ipc.RemoteException:java.lang.String toString()",
                "org.apache.hadoop.util.DataChecksum:java.lang.String toString()",
                "org.apache.hadoop.net.NetUtils:void <clinit>()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$MonitorHealthRequestProto$Builder:org.apache.hadoop.ha.proto.HAServiceProtocolProtos$MonitorHealthRequestProto$Builder clone()",
                "org.apache.hadoop.ipc.Server:void start()",
                "org.apache.hadoop.ipc.Client$Connection:void run()",
                "org.apache.hadoop.fs.FileSystem:void <clinit>()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$MonitorHealthResponseProto$Builder:org.apache.hadoop.ha.proto.HAServiceProtocolProtos$MonitorHealthResponseProto$Builder clone()",
                "org.apache.hadoop.ha.proto.ZKFCProtocolProtos$GracefulFailoverRequestProto$Builder:org.apache.hadoop.ha.proto.ZKFCProtocolProtos$GracefulFailoverRequestProto$Builder clone()",
                "org.apache.hadoop.fs.Path:boolean equals(java.lang.Object)",
                "org.apache.hadoop.security.proto.SecurityProtos$RenewDelegationTokenRequestProto$Builder:org.apache.hadoop.security.proto.SecurityProtos$RenewDelegationTokenRequestProto$Builder clone()",
                "org.apache.hadoop.security.SecurityUtil:void <clinit>()",
                "org.apache.hadoop.io.BooleanWritable:java.lang.String toString()",
                "org.apache.hadoop.conf.Configuration:java.lang.String get(java.lang.String)",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$ProtocolVersionProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolSignatureResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.IntWritable:java.lang.String toString()",
                "org.apache.hadoop.io.compress.DefaultCodec:java.lang.String getDefaultExtension()",
                "org.apache.hadoop.io.LongWritable:long get()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$GetServiceStatusResponseProto$Builder:org.apache.hadoop.ha.proto.HAServiceProtocolProtos$GetServiceStatusResponseProto$Builder clone()",
                "org.apache.hadoop.ipc.Server$Call:java.lang.String toString()",
                "org.apache.hadoop.security.token.Token:void <init>(org.apache.hadoop.security.token.TokenIdentifier,org.apache.hadoop.security.token.SecretManager)",
                "org.apache.hadoop.ipc.Server:int getPort()",
                "org.apache.hadoop.metrics2.impl.AbstractMetricsRecord:boolean equals(java.lang.Object)",
                "org.apache.hadoop.service.CompositeService:void <init>(java.lang.String)",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$GetServiceStatusResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.metrics2.util.Quantile:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolSignatureRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.security.token.Token:void <init>(byte[],byte[],org.apache.hadoop.io.Text,org.apache.hadoop.io.Text)",
                "org.apache.hadoop.security.token.Token:byte[] getPassword()",
                "org.apache.hadoop.security.authorize.PolicyProvider:void <clinit>()",
                "org.apache.hadoop.fs.LocatedFileStatus:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.BooleanWritable:void set(boolean)",
                "org.apache.hadoop.fs.RawLocalFileSystem:boolean rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.ha.proto.ZKFCProtocolProtos$GracefulFailoverResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.Server$Connection:java.lang.String toString()",
                "org.apache.hadoop.util.Shell$1:void run()",
                "org.apache.hadoop.service.Service$STATE:java.lang.String toString()",
                "org.apache.hadoop.fs.FileSystem:org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)",
                "org.apache.hadoop.ipc.ProtocolSignature:org.apache.hadoop.ipc.ProtocolSignature getProtocolSignature(org.apache.hadoop.ipc.VersionedProtocol,java.lang.String,long,int)",
                "org.apache.hadoop.security.token.Token:byte[] getIdentifier()",
                "org.apache.hadoop.service.AbstractService:void serviceStart()",
                "org.apache.hadoop.conf.Configuration:long getLong(java.lang.String,long)",
                "org.apache.hadoop.metrics2.impl.MetricsConfig:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth:boolean equals(java.lang.Object)",
                "org.apache.hadoop.http.HttpServer2:java.net.InetSocketAddress getConnectorAddress(int)",
                "org.apache.hadoop.conf.Configuration:java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)",
                "org.apache.hadoop.util.ExitUtil:void terminate(int,java.lang.String)",
                "org.apache.hadoop.conf.Configuration:void set(java.lang.String,java.lang.String)",
                "org.apache.hadoop.security.proto.SecurityProtos$TokenProto$Builder:org.apache.hadoop.security.proto.SecurityProtos$TokenProto$Builder clone()",
                "org.apache.hadoop.conf.Configuration:java.lang.String[] getStrings(java.lang.String,java.lang.String[])",
                "org.apache.hadoop.net.NetUtils:java.net.InetSocketAddress createSocketAddr(java.lang.String,int,java.lang.String)",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RPCTraceInfoProto$Builder:org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RPCTraceInfoProto$Builder clone()",
                "org.apache.hadoop.util.StringUtils:java.lang.String stringifyException(java.lang.Throwable)",
                "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream:void close()",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.fs.permission.AclStatus:boolean equals(java.lang.Object)",
                "org.apache.hadoop.security.UserGroupInformation$RealUser:boolean equals(java.lang.Object)",
                "org.apache.hadoop.fs.Path:void <clinit>()",
                "org.apache.hadoop.fs.Path:void <init>(java.lang.String)",
                "org.apache.hadoop.security.proto.SecurityProtos$RenewDelegationTokenResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.util.StopWatch:java.lang.String toString()",
                "org.apache.hadoop.fs.FileSystem:boolean exists(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.crypto.CryptoInputStream:void close()",
                "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:boolean equals(java.lang.Object)",
                "org.apache.hadoop.fs.FileSystem:boolean createNewFile(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.io.retry.RetryPolicies$RetryLimited:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.VersionMismatchException:java.lang.String toString()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToActiveRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.service.AbstractService:void <init>(java.lang.String)",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToStandbyResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:void shutdown()",
                "org.apache.hadoop.conf.Configuration:void writeXml(java.io.OutputStream)",
                "org.apache.hadoop.security.UserGroupInformation:org.apache.hadoop.security.UserGroupInformation createRemoteUser(java.lang.String)",
                "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier:java.lang.String toString()",
                "org.apache.hadoop.net.NetUtils:java.net.InetSocketAddress getConnectAddress(org.apache.hadoop.ipc.Server)",
                "org.apache.hadoop.security.proto.SecurityProtos$RenewDelegationTokenResponseProto$Builder:org.apache.hadoop.security.proto.SecurityProtos$RenewDelegationTokenResponseProto$Builder clone()",
                "org.apache.hadoop.security.UserGroupInformation:org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod getRealAuthenticationMethod()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$HAStateChangeRequestInfoProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.conf.Configuration:void setInt(java.lang.String,int)",
                "org.apache.hadoop.security.UserGroupInformation:void <clinit>()",
                "org.apache.hadoop.io.Text:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.IOUtils:void copyBytes(java.io.InputStream,java.io.OutputStream,org.apache.hadoop.conf.Configuration,boolean)",
                "org.apache.hadoop.security.User:java.lang.String toString()",
                "org.apache.hadoop.metrics2.source.JvmMetrics:org.apache.hadoop.metrics2.source.JvmMetrics initSingleton(java.lang.String,java.lang.String)",
                "org.apache.hadoop.fs.RawLocalFileSystem:org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.RawLocalFileSystem:boolean delete(org.apache.hadoop.fs.Path,boolean)",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolSignatureRequestProto$Builder:org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolSignatureRequestProto$Builder clone()",
                "org.apache.hadoop.io.WritableUtils:void writeEnum(java.io.DataOutput,java.lang.Enum)",
                "org.apache.hadoop.io.BooleanWritable:boolean get()",
                "org.apache.hadoop.util.ShutdownHookManager:void addShutdownHook(java.lang.Runnable,int)",
                "org.apache.hadoop.io.SequenceFile$Metadata:java.lang.String toString()",
                "org.apache.hadoop.io.SequenceFile$Sorter$LinkedSegmentsDescriptor:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.LongWritable:java.lang.String toString()",
                "org.apache.hadoop.fs.FileSystem:boolean isDirectory(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.security.UserGroupInformation:boolean isSecurityEnabled()",
                "org.apache.hadoop.service.CompositeService$CompositeServiceShutdownHook:void <init>(org.apache.hadoop.service.CompositeService)",
                "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:org.apache.hadoop.metrics2.MetricsSystem initialize(java.lang.String)",
                "org.apache.hadoop.io.LongWritable:void write(java.io.DataOutput)",
                "org.apache.hadoop.conf.Configuration:java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,java.lang.String,int)",
                "org.apache.hadoop.io.Text:int writeString(java.io.DataOutput,java.lang.String)",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$Builder:org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$Builder clone()",
                "org.apache.hadoop.conf.Configuration$IntegerRanges:java.lang.String toString()",
                "org.apache.hadoop.metrics2.util.SampleQuantiles$SampleItem:java.lang.String toString()",
                "org.apache.hadoop.security.UserGroupInformation:java.lang.String getUserName()",
                "org.apache.hadoop.fs.FileSystem:org.apache.hadoop.fs.LocalFileSystem getLocal(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.conf.Configuration:void addResource(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.util.ShutdownHookManager:org.apache.hadoop.util.ShutdownHookManager get()",
                "org.apache.hadoop.security.SecurityUtil:void login(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.lang.String)",
                "org.apache.hadoop.ipc.Server$Listener$Reader:void run()",
                "org.apache.hadoop.ipc.Client$ConnectionId:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RPCTraceInfoProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.Text:java.lang.String readString(java.io.DataInput)",
                "org.apache.hadoop.conf.Configuration:java.lang.Class getClass(java.lang.String,java.lang.Class,java.lang.Class)",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToActiveResponseProto$Builder:org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToActiveResponseProto$Builder clone()",
                "org.apache.hadoop.ha.proto.ZKFCProtocolProtos$GracefulFailoverResponseProto$Builder:org.apache.hadoop.ha.proto.ZKFCProtocolProtos$GracefulFailoverResponseProto$Builder clone()",
                "org.apache.hadoop.util.StringUtils:void startupShutdownMessage(java.lang.Class,java.lang.String[],org.apache.commons.logging.Log)",
                "org.apache.hadoop.fs.FileStatus:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToStandbyRequestProto$Builder:org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToStandbyRequestProto$Builder clone()",
                "org.apache.hadoop.fs.FileSystem$Cache$Key:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.protobuf.IpcConnectionContextProtos$IpcConnectionContextProto$Builder:org.apache.hadoop.ipc.protobuf.IpcConnectionContextProtos$IpcConnectionContextProto$Builder clone()",
                "org.apache.hadoop.net.NodeBase:java.lang.String toString()",
                "org.apache.hadoop.fs.FileSystem:org.apache.hadoop.fs.FileStatus[] globStatus(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.Path:java.lang.String getName()",
                "org.apache.hadoop.ipc.Server:java.net.InetSocketAddress getListenerAddress()",
                "org.apache.hadoop.fs.permission.FsPermission:void <clinit>()",
                "org.apache.hadoop.service.AbstractService:java.lang.String toString()",
                "org.apache.hadoop.io.LongWritable:void <init>(long)",
                "org.apache.hadoop.fs.permission.FsPermission:java.lang.String toString()",
                "org.apache.hadoop.http.HttpServer2:void defineFilter(org.mortbay.jetty.servlet.Context,java.lang.String,java.lang.String,java.util.Map,java.lang.String[])",
                "org.apache.hadoop.ipc.Client$ConnectionId:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$HAStateChangeRequestInfoProto$Builder:org.apache.hadoop.ha.proto.HAServiceProtocolProtos$HAStateChangeRequestInfoProto$Builder clone()",
                "org.apache.hadoop.ipc.Server$Listener:void run()",
                "org.apache.hadoop.fs.Path:org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.FileSystem)",
                "org.apache.hadoop.util.Shell:void <clinit>()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$GetServiceStatusRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.RPC$Builder:org.apache.hadoop.ipc.RPC$Builder setInstance(java.lang.Object)",
                "org.apache.hadoop.ha.proto.ZKFCProtocolProtos$CedeActiveRequestProto$Builder:org.apache.hadoop.ha.proto.ZKFCProtocolProtos$CedeActiveRequestProto$Builder clone()",
                "org.apache.hadoop.service.CompositeService:void addService(org.apache.hadoop.service.Service)",
                "org.apache.hadoop.ipc.Server:void refreshServiceAcl(org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.authorize.PolicyProvider)",
                "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:void <clinit>()",
                "org.apache.hadoop.ipc.Server$Responder:void run()",
                "org.apache.hadoop.io.UTF8:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.RPC:java.lang.Object getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.fs.FileSystem$Cache$Key:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$Builder:org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$Builder clone()",
                "org.apache.hadoop.http.HttpServer2$QuotingInputFilter$RequestQuoter$1:java.lang.String nextElement()",
                "org.apache.hadoop.http.HttpConfig$Policy:void <clinit>()",
                "org.apache.hadoop.service.CompositeService:void serviceStop()",
                "org.apache.hadoop.metrics2.impl.MetricsRecordFiltered$1:java.util.Iterator iterator()",
                "org.apache.hadoop.io.SequenceFile$Sorter$SegmentDescriptor:boolean equals(java.lang.Object)",
                "org.apache.hadoop.net.CachedDNSToSwitchMapping:java.lang.String toString()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToActiveRequestProto$Builder:org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToActiveRequestProto$Builder clone()",
                "org.apache.hadoop.metrics2.impl.MetricsBuffer:java.util.Iterator iterator()",
                "org.apache.hadoop.security.proto.SecurityProtos$TokenProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.fs.Path:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto$Builder:org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto$Builder clone()",
                "org.apache.hadoop.conf.Configuration:void setClass(java.lang.String,java.lang.Class,java.lang.Class)",
                "org.apache.hadoop.security.proto.SecurityProtos$GetDelegationTokenRequestProto$Builder:org.apache.hadoop.security.proto.SecurityProtos$GetDelegationTokenRequestProto$Builder clone()",
                "org.apache.hadoop.conf.Configuration:void <clinit>()",
                "org.apache.hadoop.service.AbstractService:void setConfig(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.service.AbstractService:void start()",
                "org.apache.hadoop.ipc.Server:void stop()",
                "org.apache.hadoop.conf.Configuration$IntegerRanges:java.util.Iterator iterator()",
                "org.apache.hadoop.io.compress.DefaultCodec:org.apache.hadoop.io.compress.CompressionOutputStream createOutputStream(java.io.OutputStream)",
                "org.apache.hadoop.io.SequenceFile$Metadata:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.NullWritable:java.lang.String toString()",
                "org.apache.hadoop.io.ReadaheadPool$ReadaheadRequestImpl:java.lang.String toString()",
                "org.apache.hadoop.fs.Path:void <init>(java.lang.String,org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.security.token.Token:java.lang.String toString()",
                "org.apache.hadoop.io.BooleanWritable:void readFields(java.io.DataInput)",
                "org.apache.hadoop.conf.Configuration$IntegerRanges$RangeNumberIterator:java.lang.Integer next()",
                "org.apache.hadoop.io.retry.RetryPolicies$MultipleLinearRandomRetry$Pair:java.lang.String toString()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToStandbyRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.security.proto.SecurityProtos$GetDelegationTokenResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.fs.FileSystem:org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.FileSystem:org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path,org.apache.hadoop.util.Progressable)",
                "org.apache.hadoop.security.proto.SecurityProtos$CancelDelegationTokenResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.util.ReflectionUtils:void <clinit>()",
                "org.apache.hadoop.ha.proto.ZKFCProtocolProtos$GracefulFailoverRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.util.ShutdownHookManager$1:void run()",
                "org.apache.hadoop.service.Service$STATE:void <clinit>()",
                "org.apache.hadoop.conf.Configuration$IntegerRanges$RangeNumberIterator:boolean hasNext()",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolSignatureResponseProto$Builder:org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolSignatureResponseProto$Builder clone()",
                "org.apache.hadoop.fs.FileUtil:org.apache.hadoop.fs.Path[] stat2Paths(org.apache.hadoop.fs.FileStatus[])",
                "org.apache.hadoop.io.retry.RetryPolicies$MultipleLinearRandomRetry:boolean equals(java.lang.Object)",
                "org.apache.hadoop.metrics2.util.Quantile:java.lang.String toString()",
                "org.apache.hadoop.ipc.Server$WrappedRpcServerException:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.IpcConnectionContextProtos$UserInformationProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$MonitorHealthRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.retry.RetryPolicy$RetryAction:java.lang.String toString()",
                "org.apache.hadoop.fs.FileSystem:void copyFromLocalFile(boolean,boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.FileStatus:org.apache.hadoop.fs.Path getPath()",
                "org.apache.hadoop.security.token.Token:org.apache.hadoop.io.Text getService()",
                "org.apache.hadoop.ha.proto.ZKFCProtocolProtos$CedeActiveRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.RPC$Builder:org.apache.hadoop.ipc.RPC$Builder setProtocol(java.lang.Class)",
                "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier cancelToken(org.apache.hadoop.security.token.Token,java.lang.String)",
                "org.apache.hadoop.ipc.RPC$Builder:org.apache.hadoop.ipc.RPC$Server build()",
                "org.apache.hadoop.fs.permission.FsPermission:void <init>(org.apache.hadoop.fs.permission.FsPermission)",
                "org.apache.hadoop.security.proto.SecurityProtos$CancelDelegationTokenRequestProto$Builder:org.apache.hadoop.security.proto.SecurityProtos$CancelDelegationTokenRequestProto$Builder clone()",
                "org.apache.hadoop.fs.permission.AclEntry:java.lang.String toString()",
                "org.apache.hadoop.security.UserGroupInformation:org.apache.hadoop.security.UserGroupInformation getRealUser()",
                "org.apache.hadoop.service.AbstractService:void serviceStop()",
                "org.apache.hadoop.io.UTF8:java.lang.String toString()",
                "org.apache.hadoop.fs.LocalDirAllocator$AllocatorPerContext$PathIterator:org.apache.hadoop.fs.Path next()",
                "org.apache.hadoop.metrics2.impl.MetricsCollectorImpl:java.util.Iterator iterator()",
                "org.apache.hadoop.service.AbstractService:void <clinit>()",
                "org.apache.hadoop.fs.FileStatus:java.lang.String toString()",
                "org.apache.hadoop.ipc.protobuf.IpcConnectionContextProtos$IpcConnectionContextProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolVersionsResponseProto$Builder:org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolVersionsResponseProto$Builder clone()",
                "org.apache.hadoop.security.UserGroupInformation:org.apache.hadoop.security.UserGroupInformation getCurrentUser()",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$TransitionToActiveResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$ProtocolSignatureProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.ProtobufRpcEngine$RpcRequestWrapper:java.lang.String toString()",
                "org.apache.hadoop.security.UserGroupInformation:boolean equals(java.lang.Object)",
                "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$ExpiredTokenRemover:void run()",
                "org.apache.hadoop.io.compress.DecompressorStream:void close()",
                "org.apache.hadoop.io.nativeio.NativeIOException:java.lang.String toString()",
                "org.apache.hadoop.security.proto.SecurityProtos$GetDelegationTokenResponseProto$Builder:org.apache.hadoop.security.proto.SecurityProtos$GetDelegationTokenResponseProto$Builder clone()",
                "org.apache.hadoop.net.SocketInputStream:void close()",
                "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter$1:void run()",
                "org.apache.hadoop.util.JvmPauseMonitor$GcTimes:java.lang.String toString()",
                "org.apache.hadoop.fs.Path:void <init>(java.lang.String,java.lang.String)",
                "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:void stopThreads()",
                "org.apache.hadoop.conf.Configuration:java.net.InetSocketAddress updateConnectAddr(java.lang.String,java.lang.String,java.lang.String,java.net.InetSocketAddress)",
                "org.apache.hadoop.security.proto.SecurityProtos$RenewDelegationTokenRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.LongWritable:void readFields(java.io.DataInput)",
                "org.apache.hadoop.service.CompositeService:void serviceInit(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder:org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth$Builder clone()",
                "org.apache.hadoop.fs.RawLocalFileSystem:void close()",
                "org.apache.hadoop.fs.permission.FsPermission:boolean equals(java.lang.Object)",
                "org.apache.hadoop.security.UserGroupInformation:org.apache.hadoop.security.UserGroupInformation getLoginUser()",
                "org.apache.hadoop.fs.RawLocalFileSystem:boolean mkdirs(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.ipc.RPC$Builder:org.apache.hadoop.ipc.RPC$Builder setBindAddress(java.lang.String)",
                "org.apache.hadoop.security.User:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ha.NodeFencer$FenceMethodWithArg:java.lang.String toString()",
                "org.apache.hadoop.fs.Path:org.apache.hadoop.fs.Path getParent()",
                "org.apache.hadoop.io.BytesWritable:java.lang.String toString()",
                "org.apache.hadoop.security.token.Token:boolean equals(java.lang.Object)",
                "org.apache.hadoop.crypto.CipherSuite:java.lang.String toString()",
                "org.apache.hadoop.fs.FileSystem:org.apache.hadoop.fs.FileSystem get(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.ipc.Server$Handler:void run()",
                "org.apache.hadoop.security.proto.SecurityProtos$CancelDelegationTokenResponseProto$Builder:org.apache.hadoop.security.proto.SecurityProtos$CancelDelegationTokenResponseProto$Builder clone()",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$ProtocolVersionProto$Builder:org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$ProtocolVersionProto$Builder clone()",
                "org.apache.hadoop.ha.proto.ZKFCProtocolProtos$CedeActiveResponseProto$Builder:org.apache.hadoop.ha.proto.ZKFCProtocolProtos$CedeActiveResponseProto$Builder clone()",
                "org.apache.hadoop.ipc.protobuf.ProtocolInfoProtos$GetProtocolVersionsRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.security.UserGroupInformation:java.lang.String getShortUserName()",
                "org.apache.hadoop.io.WritableUtils:java.lang.Enum readEnum(java.io.DataInput,java.lang.Class)",
                "org.apache.hadoop.ha.proto.HAServiceProtocolProtos$MonitorHealthResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.fs.FileStatus:long getModificationTime()",
                "org.apache.hadoop.security.UserGroupInformation$RealUser:java.lang.String toString()",
                "org.apache.hadoop.metrics2.MetricsTag:java.lang.String toString()",
                "org.apache.hadoop.http.HttpServer2:void start()",
                "org.apache.hadoop.fs.permission.FsPermission:org.apache.hadoop.fs.permission.FsPermission createImmutable(short)",
                "org.apache.hadoop.service.AbstractService:void init(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.fs.FileSystem:org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.util.GenericOptionsParser:void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])",
                "org.apache.hadoop.util.StringUtils:void <clinit>()",
                "org.apache.hadoop.metrics2.source.JvmMetricsInfo:java.lang.String toString()",
                "org.apache.hadoop.util.ApplicationClassLoader:java.net.URL getResource(java.lang.String)",
                "org.apache.hadoop.util.Progress:java.lang.String toString()",
                "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem:void <clinit>()",
                "org.apache.hadoop.conf.Configuration:java.lang.String get(java.lang.String,java.lang.String)",
                "org.apache.hadoop.conf.Configuration:int getInt(java.lang.String,int)",
                "org.apache.hadoop.util.ShutdownHookManager:void <clinit>()",
                "org.apache.hadoop.ipc.RPC$Builder:void <init>(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.security.token.SecretManager:void <clinit>()",
                "org.apache.hadoop.fs.permission.AclEntry:boolean equals(java.lang.Object)",
                "org.apache.hadoop.ipc.protobuf.IpcConnectionContextProtos$UserInformationProto$Builder:org.apache.hadoop.ipc.protobuf.IpcConnectionContextProtos$UserInformationProto$Builder clone()",
                "org.apache.hadoop.fs.RawLocalFileSystem:org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.net.NetUtils:java.lang.String getHostPortString(java.net.InetSocketAddress)",
                "org.apache.hadoop.ipc.RPC:void <clinit>()",
                "org.apache.hadoop.conf.Configuration:void addDefaultResource(java.lang.String)",
                "org.apache.hadoop.fs.Path:org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.ha.proto.ZKFCProtocolProtos$CedeActiveResponseProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.retry.RetryPolicies$RetryLimited:java.lang.String toString()",
                "org.apache.hadoop.io.BytesWritable:boolean equals(java.lang.Object)",
                "org.apache.hadoop.io.Text:void <init>(java.lang.String)",
                "org.apache.hadoop.http.HttpServer2:java.lang.String toString()",
                "org.apache.hadoop.fs.RawLocalFileSystem:void setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)",
                "org.apache.hadoop.security.proto.SecurityProtos$GetDelegationTokenRequestProto:boolean equals(java.lang.Object)",
                "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager:long renewToken(org.apache.hadoop.security.token.Token,java.lang.String)",
                "org.apache.hadoop.http.HttpServer2:void addContext(org.mortbay.jetty.servlet.Context,boolean)",
                "org.apache.hadoop.fs.FileSystem$Statistics$StatisticsData:java.lang.String toString()"
            ]
        },
        "junit:junit:4.11": {
            "used-method num": 0,
            "used method": []
        }
    }
}
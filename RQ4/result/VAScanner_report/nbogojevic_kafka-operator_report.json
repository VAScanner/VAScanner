{
    "project name": "nbogojevic_kafka-operator",
    "vulnerable dependencies": {
        "org.apache.kafka:kafka-clients:1.0.0": {
            "used-method num": 72,
            "used method": [
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.CreateTopicsResult createTopics(java.util.Collection)",
                "org.apache.kafka.common.config.ConfigResource$Type:void <clinit>()",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void warn(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.clients.admin.KafkaAdminClient:void close(long,java.util.concurrent.TimeUnit)",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                "org.apache.kafka.common.resource.ResourceFilter:void <init>(org.apache.kafka.common.resource.ResourceType,java.lang.String)",
                "org.apache.kafka.clients.admin.CreateAclsResult:org.apache.kafka.common.KafkaFuture all()",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.ListTopicsResult listTopics()",
                "org.apache.kafka.common.utils.AbstractIterator:java.lang.Object next()",
                "org.apache.kafka.common.acl.AccessControlEntry:org.apache.kafka.common.acl.AclPermissionType permissionType()",
                "org.apache.kafka.common.acl.AclBinding:void <init>(org.apache.kafka.common.resource.Resource,org.apache.kafka.common.acl.AccessControlEntry)",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.CreateAclsResult createAcls(java.util.Collection)",
                "org.apache.kafka.common.acl.AclBinding:org.apache.kafka.common.resource.Resource resource()",
                "org.apache.kafka.common.acl.AclBindingFilter:void <clinit>()",
                "org.apache.kafka.common.acl.AclPermissionType:void <clinit>()",
                "org.apache.kafka.common.KafkaFuture:org.apache.kafka.common.KafkaFuture allOf(org.apache.kafka.common.KafkaFuture[])",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.DescribeConfigsResult describeConfigs(java.util.Collection)",
                "org.apache.kafka.clients.admin.NewTopic:void <init>(java.lang.String,int,short)",
                "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get()",
                "org.apache.kafka.clients.admin.ConfigEntry:void <init>(java.lang.String,java.lang.String)",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void info(java.lang.String)",
                "org.apache.kafka.common.resource.ResourceFilter:void <clinit>()",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void error(java.lang.String)",
                "org.apache.kafka.common.acl.AccessControlEntry:void <init>(java.lang.String,java.lang.String,org.apache.kafka.common.acl.AclOperation,org.apache.kafka.common.acl.AclPermissionType)",
                "org.apache.kafka.clients.admin.CreateTopicsResult:org.apache.kafka.common.KafkaFuture all()",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AlterConfigsResult alterConfigs(java.util.Map)",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void debug(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.kafka.common.acl.AccessControlEntryFilter:void <clinit>()",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.DescribeAclsResult describeAcls(org.apache.kafka.common.acl.AclBindingFilter)",
                "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator:org.apache.kafka.common.record.Record next()",
                "org.apache.kafka.clients.admin.Config:void <init>(java.util.Collection)",
                "org.apache.kafka.common.acl.AclOperation:void <clinit>()",
                "org.apache.kafka.common.resource.Resource:void <init>(org.apache.kafka.common.resource.ResourceType,java.lang.String)",
                "org.apache.kafka.common.acl.AclBinding:org.apache.kafka.common.acl.AccessControlEntry entry()",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.DescribeClusterResult describeCluster()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.DeleteAclsResult deleteAcls(java.util.Collection)",
                "org.apache.kafka.clients.admin.CreatePartitionsResult:org.apache.kafka.common.KafkaFuture all()",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void error(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.DescribeTopicsResult describeTopics(java.util.Collection)",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.CreatePartitionsResult createPartitions(java.util.Map)",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void warn(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void debug(java.lang.String,java.lang.Object)",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void debug(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.common.acl.AccessControlEntry:org.apache.kafka.common.acl.AclOperation operation()",
                "org.apache.kafka.common.resource.Resource:org.apache.kafka.common.resource.ResourceType resourceType()",
                "org.apache.kafka.clients.admin.DeleteTopicsResult:org.apache.kafka.common.KafkaFuture all()",
                "org.apache.kafka.common.config.ConfigResource:void <init>(org.apache.kafka.common.config.ConfigResource$Type,java.lang.String)",
                "org.apache.kafka.clients.admin.AlterConfigsResult:org.apache.kafka.common.KafkaFuture all()",
                "org.apache.kafka.clients.admin.DescribeTopicsResult:org.apache.kafka.common.KafkaFuture all()",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void warn(java.lang.String,java.lang.Object)",
                "org.apache.kafka.clients.admin.NewPartitions:org.apache.kafka.clients.admin.NewPartitions increaseTo(int)",
                "org.apache.kafka.clients.admin.DeleteAclsResult:org.apache.kafka.common.KafkaFuture all()",
                "org.apache.kafka.common.resource.ResourceType:void <clinit>()",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void info(java.lang.String,java.lang.Object)",
                "org.apache.kafka.common.config.AbstractConfig$RecordingMap:java.lang.Object get(java.lang.Object)",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void debug(java.lang.String)",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void info(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.common.resource.Resource:void <clinit>()",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void error(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.clients.admin.ListTopicsResult:org.apache.kafka.common.KafkaFuture names()",
                "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.DeleteTopicsResult deleteTopics(java.util.Collection)",
                "org.apache.kafka.common.acl.AccessControlEntryFilter:void <init>(java.lang.String,java.lang.String,org.apache.kafka.common.acl.AclOperation,org.apache.kafka.common.acl.AclPermissionType)",
                "org.apache.kafka.common.acl.AccessControlEntry:java.lang.String host()",
                "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator:boolean hasNext()",
                "org.apache.kafka.common.acl.AclBindingFilter:void <init>(org.apache.kafka.common.resource.ResourceFilter,org.apache.kafka.common.acl.AccessControlEntryFilter)",
                "org.apache.kafka.common.utils.LogContext$KafkaLogger:void info(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.common.resource.Resource:java.lang.String name()",
                "org.apache.kafka.common.utils.AbstractIterator:boolean hasNext()",
                "org.apache.kafka.common.acl.AccessControlEntry:java.lang.String principal()",
                "org.apache.kafka.clients.admin.DescribeConfigsResult:org.apache.kafka.common.KafkaFuture all()"
            ]
        }
    }
}
{
    "project name": "simpligility_android-maven-plugin",
    "vulnerable dependencies": {
        "org.codehaus.plexus:plexus-archiver:3.0.1": {
            "used-method num": 37,
            "used method": [
                "org.codehaus.plexus.archiver.util.AbstractFileSet:void setExcludes(java.lang.String[])",
                "org.codehaus.plexus.archiver.util.AbstractFileSet:void setIncludingEmptyDirectories(boolean)",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipShort:java.lang.String toString()",
                "org.codehaus.plexus.archiver.jar.Manifest$ExistingAttribute:java.util.Iterator iterator()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipLong:java.lang.String toString()",
                "org.codehaus.plexus.archiver.zip.ZipUnArchiver:void <init>(java.io.File)",
                "org.codehaus.plexus.archiver.commonscompress.utils.BoundedInputStream:void close()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipArchiveEntry:java.lang.String getName()",
                "org.codehaus.plexus.archiver.commonscompress.compressors.lzw.LZWInputStream:void close()",
                "org.codehaus.plexus.archiver.AbstractArchiver:void addFile(java.io.File,java.lang.String)",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipFile$1:void close()",
                "org.codehaus.plexus.archiver.zip.AbstractZipArchiver:void <clinit>()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipArchiveEntry:boolean isDirectory()",
                "org.codehaus.plexus.archiver.AbstractArchiver:void createArchive()",
                "org.codehaus.plexus.archiver.AbstractArchiver:void setDestFile(java.io.File)",
                "org.codehaus.plexus.archiver.util.AbstractFileSet:void setPrefix(java.lang.String)",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipShort:java.lang.Object clone()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipLong:java.lang.Object clone()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipArchiveEntry:int getMethod()",
                "org.codehaus.plexus.archiver.util.DefaultFileSet:void <init>()",
                "org.codehaus.plexus.archiver.AbstractArchiver:void addFileSet(org.codehaus.plexus.archiver.FileSet)",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ScatterStatistics:java.lang.String toString()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipArchiveOutputStream:void write(byte[],int,int)",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipEightByteInteger:java.lang.String toString()",
                "org.codehaus.plexus.archiver.AbstractUnArchiver:void extract()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipArchiveOutputStream:void flush()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar:java.lang.String toString()",
                "org.codehaus.plexus.archiver.jar.Manifest$Section:java.util.Iterator iterator()",
                "org.codehaus.plexus.archiver.util.FilePermission:java.lang.String toString()",
                "org.codehaus.plexus.archiver.zip.ZipArchiver:void <init>()",
                "org.codehaus.plexus.archiver.jar.JarArchiver:void <init>()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.GeneralPurposeBit:java.lang.Object clone()",
                "org.codehaus.plexus.archiver.jar.Manifest:java.lang.String toString()",
                "org.codehaus.plexus.archiver.commonscompress.archivers.zip.ZipArchiveEntry:java.lang.Object clone()",
                "org.codehaus.plexus.archiver.jar.Manifest:java.util.Iterator iterator()",
                "org.codehaus.plexus.archiver.jar.Manifest$ExistingSection:java.util.Iterator iterator()",
                "org.codehaus.plexus.archiver.AbstractArchiver:void addDirectory(java.io.File,java.lang.String[],java.lang.String[])"
            ]
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
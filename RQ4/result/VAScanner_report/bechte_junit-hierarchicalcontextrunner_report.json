{
    "project name": "bechte_junit-hierarchicalcontextrunner",
    "vulnerable dependencies": {
        "junit:junit:4.12": {
            "used-method num": 38,
            "used method": [
                "org.junit.internal.runners.rules.RuleMemberValidator:void validate(org.junit.runners.model.TestClass,java.util.List)",
                "org.junit.internal.runners.statements.InvokeMethod:void evaluate()",
                "org.junit.internal.runners.statements.InvokeMethod:void <init>(org.junit.runners.model.FrameworkMethod,java.lang.Object)",
                "org.junit.runners.model.TestClass:java.lang.Class getJavaClass()",
                "org.junit.internal.runners.model.EachTestNotifier:void addFailedAssumption(org.junit.internal.AssumptionViolatedException)",
                "org.junit.internal.runners.model.EachTestNotifier:void <init>(org.junit.runner.notification.RunNotifier,org.junit.runner.Description)",
                "org.junit.internal.runners.statements.RunBefores:void evaluate()",
                "org.junit.internal.runners.statements.FailOnTimeout:void evaluate()",
                "org.junit.runners.model.FrameworkMethod:void validatePublicVoidNoArg(boolean,java.util.List)",
                "org.junit.runners.model.FrameworkMethod:java.lang.String getName()",
                "org.junit.rules.RunRules:void evaluate()",
                "org.junit.runner.Runner:void <init>()",
                "org.junit.internal.runners.model.EachTestNotifier:void addFailure(java.lang.Throwable)",
                "org.junit.runner.Description:void addChild(org.junit.runner.Description)",
                "org.junit.runners.model.TestClass:void <clinit>()",
                "org.junit.runners.model.TestClass:void <init>(java.lang.Class)",
                "org.junit.runner.Description:org.junit.runner.Description createSuiteDescription(java.lang.Class)",
                "org.junit.runners.model.TestClass:java.util.List getAnnotatedFieldValues(java.lang.Object,java.lang.Class,java.lang.Class)",
                "org.junit.internal.runners.statements.RunAfters:void evaluate()",
                "org.junit.internal.runners.statements.ExpectException:void <init>(org.junit.runners.model.Statement,java.lang.Class)",
                "org.junit.internal.runners.statements.Fail:void evaluate()",
                "org.junit.runner.Description:void <clinit>()",
                "org.junit.internal.runners.statements.RunAfters:void <init>(org.junit.runners.model.Statement,java.util.List,java.lang.Object)",
                "org.junit.runners.model.InitializationError:java.util.List getCauses()",
                "org.junit.runners.model.FrameworkMethod:java.lang.reflect.Method getMethod()",
                "org.junit.runners.model.Statement:void <init>()",
                "org.junit.runners.model.InitializationError:void <init>(java.util.List)",
                "org.junit.internal.runners.statements.Fail:void <init>(java.lang.Throwable)",
                "org.junit.runners.model.TestClass:java.util.List getAnnotatedMethods(java.lang.Class)",
                "org.junit.internal.runners.statements.FailOnTimeout:void <init>(org.junit.runners.model.Statement,long)",
                "org.junit.internal.runners.statements.ExpectException:void evaluate()",
                "org.junit.internal.runners.rules.RuleMemberValidator:void <clinit>()",
                "org.junit.internal.runners.model.EachTestNotifier:void fireTestFinished()",
                "org.junit.internal.runners.statements.RunBefores:void <init>(org.junit.runners.model.Statement,java.util.List,java.lang.Object)",
                "org.junit.rules.RunRules:void <init>(org.junit.runners.model.Statement,java.lang.Iterable,org.junit.runner.Description)",
                "org.junit.runners.model.TestClass:java.util.List getAnnotatedMethodValues(java.lang.Object,java.lang.Class,java.lang.Class)",
                "org.junit.runners.model.MultipleFailureException:void <init>(java.util.List)",
                "org.junit.internal.runners.model.EachTestNotifier:void fireTestStarted()"
            ]
        }
    }
}
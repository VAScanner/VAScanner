{
    "project name": "gluster_glusterfs-hadoop",
    "vulnerable dependencies": {
        "org.apache.hadoop:hadoop-common:2.3.0": {
            "used-method num": 79,
            "used method": [
                "org.apache.hadoop.fs.FileStatus:long getBlockSize()",
                "org.apache.hadoop.conf.Configuration:void setInt(java.lang.String,int)",
                "org.apache.hadoop.fs.BlockLocation:void <init>(java.lang.String[],java.lang.String[],long,long)",
                "org.apache.hadoop.fs.FilterFileSystem:void <init>(org.apache.hadoop.fs.FileSystem)",
                "org.apache.hadoop.conf.Configuration:long getLong(java.lang.String,long)",
                "org.apache.hadoop.fs.DelegateToFileSystem:void <init>(java.net.URI,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,java.lang.String,boolean)",
                "org.apache.hadoop.fs.FileUtil:boolean copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.fs.DelegateToFileSystem:org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.FileStatus:void setOwner(java.lang.String)",
                "org.apache.hadoop.fs.RawLocalFileSystem:void initialize(java.net.URI,org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.fs.FileStatus:long getModificationTime()",
                "org.apache.hadoop.fs.ChecksumFileSystem:void setConf(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.fs.RawLocalFileSystem:void <init>()",
                "org.apache.hadoop.fs.FileStatus:long getLen()",
                "org.apache.hadoop.fs.FileStatus:short getReplication()",
                "org.apache.hadoop.fs.permission.FsPermission:void <clinit>()",
                "org.apache.hadoop.fs.permission.FsPermission:org.apache.hadoop.fs.permission.FsPermission getDefault()",
                "org.apache.hadoop.fs.LocalFileSystem:void <clinit>()",
                "org.apache.hadoop.fs.FileUtil:java.lang.String makeShellPath(java.io.File,boolean)",
                "org.apache.hadoop.fs.FilterFs:void <init>(org.apache.hadoop.fs.AbstractFileSystem)",
                "org.apache.hadoop.fs.FileSystem:void <clinit>()",
                "org.apache.hadoop.util.StringUtils:java.lang.String stringifyException(java.lang.Throwable)",
                "org.apache.hadoop.util.StringUtils:void <clinit>()",
                "org.apache.hadoop.fs.Path:org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.FileSystem)",
                "org.apache.hadoop.fs.FileSystem:long getDefaultBlockSize()",
                "org.apache.hadoop.fs.FsConstants:void <clinit>()",
                "org.apache.hadoop.fs.LocatedFileStatus:int compareTo(java.lang.Object)",
                "org.apache.hadoop.conf.Configuration:boolean getBoolean(java.lang.String,boolean)",
                "org.apache.hadoop.fs.FileStatus:java.lang.String getOwner()",
                "org.apache.hadoop.fs.FileStatus:void write(java.io.DataOutput)",
                "org.apache.hadoop.util.Shell:java.lang.String execCommand(java.lang.String[])",
                "org.apache.hadoop.util.Shell:void <clinit>()",
                "org.apache.hadoop.conf.Configured:org.apache.hadoop.conf.Configuration getConf()",
                "org.apache.hadoop.fs.FileUtil:java.io.File[] listFiles(java.io.File)",
                "org.apache.hadoop.fs.Path:void <clinit>()",
                "org.apache.hadoop.fs.permission.FsPermission:org.apache.hadoop.fs.permission.FsPermission getDirDefault()",
                "org.apache.hadoop.conf.Configuration:java.lang.String get(java.lang.String,java.lang.String)",
                "org.apache.hadoop.conf.Configuration:int getInt(java.lang.String,int)",
                "org.apache.hadoop.fs.FileStatus:int compareTo(java.lang.Object)",
                "org.apache.hadoop.fs.ChecksumFileSystem:void <clinit>()",
                "org.apache.hadoop.fs.Path:void <init>(java.lang.String)",
                "org.apache.hadoop.fs.FileStatus:void <init>(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.Path:java.net.URI toUri()",
                "org.apache.hadoop.conf.Configured:void setConf(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.fs.FileSystem:boolean exists(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.permission.FsPermission:org.apache.hadoop.fs.permission.FsPermission valueOf(java.lang.String)",
                "org.apache.hadoop.fs.LocalFileSystem:void <init>(org.apache.hadoop.fs.FileSystem)",
                "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:java.lang.String getGroup()",
                "org.apache.hadoop.fs.FileStatus:org.apache.hadoop.fs.Path getPath()",
                "org.apache.hadoop.fs.permission.FsPermission:org.apache.hadoop.fs.permission.FsPermission getUMask(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.fs.Path:boolean isAbsolute()",
                "org.apache.hadoop.fs.FileStatus:void setPermission(org.apache.hadoop.fs.permission.FsPermission)",
                "org.apache.hadoop.fs.RawLocalFileSystem:boolean mkdirs(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.permission.FsPermission:org.apache.hadoop.fs.permission.FsPermission applyUMask(org.apache.hadoop.fs.permission.FsPermission)",
                "org.apache.hadoop.fs.RawLocalFileSystem:void <clinit>()",
                "org.apache.hadoop.fs.RawLocalFileSystem:void setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)",
                "org.apache.hadoop.fs.FileUtil:boolean fullyDelete(java.io.File)",
                "org.apache.hadoop.fs.FileStatus:org.apache.hadoop.fs.permission.FsPermission getPermission()",
                "org.apache.hadoop.fs.FileStatus:long getAccessTime()",
                "org.apache.hadoop.fs.ChecksumFs:void <init>(org.apache.hadoop.fs.AbstractFileSystem)",
                "org.apache.hadoop.fs.Path:org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.conf.Configuration)",
                "org.apache.hadoop.conf.Configuration:void addResource(java.lang.String)",
                "org.apache.hadoop.fs.RawLocalFileSystem:void setWorkingDirectory(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.FileStatus:void <init>(long,boolean,int,long,long,org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.local.LocalConfigKeys:org.apache.hadoop.fs.FsServerDefaults getServerDefaults()",
                "org.apache.hadoop.fs.DelegateToFileSystem:void mkdir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)",
                "org.apache.hadoop.fs.FileStatus:java.lang.String getGroup()",
                "org.apache.hadoop.fs.Path:java.lang.String toString()",
                "org.apache.hadoop.fs.Path:void <init>(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.Path:org.apache.hadoop.fs.Path getParent()",
                "org.apache.hadoop.fs.permission.FsPermission$ImmutableFsPermission:org.apache.hadoop.fs.permission.FsPermission applyUMask(org.apache.hadoop.fs.permission.FsPermission)",
                "org.apache.hadoop.fs.FileSystem:void checkPath(org.apache.hadoop.fs.Path)",
                "org.apache.hadoop.fs.FileStatus:void <clinit>()",
                "org.apache.hadoop.fs.RawLocalFileSystem:org.apache.hadoop.fs.Path getWorkingDirectory()",
                "org.apache.hadoop.fs.RawLocalFileSystem:void setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)",
                "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:java.lang.String getOwner()",
                "org.apache.hadoop.fs.FileStatus:void setGroup(java.lang.String)",
                "org.apache.hadoop.fs.AbstractFileSystem:void <clinit>()",
                "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus:org.apache.hadoop.fs.permission.FsPermission getPermission()"
            ]
        }
    }
}
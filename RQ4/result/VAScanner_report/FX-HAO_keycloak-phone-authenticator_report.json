{
    "project name": "FX-HAO_keycloak-phone-authenticator",
    "vulnerable dependencies": {
        "org.keycloak:keycloak-services:13.0.1": {
            "used-method num": 63,
            "used method": [
                "org.keycloak.authentication.AuthenticationProcessor$Result:org.keycloak.events.EventBuilder getEvent()",
                "org.keycloak.services.managers.AuthenticationManager$AuthResult:org.keycloak.models.UserModel getUser()",
                "org.keycloak.services.managers.AppAuthManager$BearerTokenAuthenticator:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticate()",
                "org.keycloak.services.ForbiddenException:void <init>()",
                "org.keycloak.userprofile.utils.UserUpdateHelper:void updateAccountOldConsole(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.userprofile.UserProfile)",
                "org.keycloak.authentication.AuthenticationProcessor$Result:void setUser(org.keycloak.models.UserModel)",
                "org.keycloak.authentication.authenticators.resetcred.ResetCredentialChooseUser:void <init>()",
                "org.keycloak.services.managers.AppAuthManager$BearerTokenAuthenticator:org.keycloak.services.managers.AppAuthManager$BearerTokenAuthenticator setConnection(org.keycloak.common.ClientConnection)",
                "org.keycloak.services.managers.AppAuthManager$BearerTokenAuthenticator:org.keycloak.services.managers.AppAuthManager$BearerTokenAuthenticator setRealm(org.keycloak.models.RealmModel)",
                "org.keycloak.services.resources.admin.permissions.AdminPermissions:org.keycloak.services.resources.admin.permissions.AdminPermissionEvaluator evaluator(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.services.resources.admin.AdminAuth)",
                "org.keycloak.authentication.authenticators.browser.AbstractUsernameFormAuthenticator:boolean enabledUser(org.keycloak.authentication.AuthenticationFlowContext,org.keycloak.models.UserModel)",
                "org.keycloak.services.managers.AppAuthManager:void <clinit>()",
                "org.keycloak.protocol.oidc.utils.RedirectUtils:java.lang.String verifyRedirectUri(org.keycloak.models.KeycloakSession,java.lang.String,org.keycloak.models.ClientModel)",
                "org.keycloak.services.validation.Validation:boolean isBlank(java.lang.String)",
                "org.keycloak.services.managers.AppAuthManager$BearerTokenAuthenticator:org.keycloak.services.managers.AppAuthManager$BearerTokenAuthenticator setHeaders(javax.ws.rs.core.HttpHeaders)",
                "org.keycloak.authentication.AuthenticationProcessor$Result:void clearUser()",
                "org.keycloak.userprofile.profile.UserProfileContextFactory:org.keycloak.userprofile.profile.DefaultUserProfileContext forOldAccount(org.keycloak.models.UserModel,javax.ws.rs.core.MultivaluedMap,org.keycloak.models.KeycloakSession)",
                "org.keycloak.userprofile.profile.DefaultUserProfileContext:org.keycloak.userprofile.validation.UserProfileValidationResult validate()",
                "org.keycloak.services.validation.Validation:java.util.List getFormErrorsFromValidation(org.keycloak.userprofile.validation.UserProfileValidationResult)",
                "org.keycloak.authentication.authenticators.browser.AbstractUsernameFormAuthenticator:boolean isDisabledByBruteForce(org.keycloak.authentication.AuthenticationFlowContext,org.keycloak.models.UserModel)",
                "org.keycloak.authentication.AuthenticationProcessor$Result:org.keycloak.models.RealmModel getRealm()",
                "org.keycloak.services.Urls:javax.ws.rs.core.UriBuilder accountBase(java.net.URI)",
                "org.keycloak.authentication.authenticators.resetcred.ResetCredentialEmail:void <init>()",
                "org.keycloak.services.managers.RealmManager:org.keycloak.models.RealmModel getRealmByName(java.lang.String)",
                "org.keycloak.authentication.authenticators.browser.AbstractUsernameFormAuthenticator:void testInvalidUser(org.keycloak.authentication.AuthenticationFlowContext,org.keycloak.models.UserModel)",
                "org.keycloak.authentication.AuthenticationProcessor$Result:org.keycloak.sessions.AuthenticationSessionModel getAuthenticationSession()",
                "org.keycloak.authentication.authenticators.browser.AbstractUsernameFormAuthenticator:java.lang.String getDefaultChallengeMessage(org.keycloak.authentication.AuthenticationFlowContext)",
                "org.keycloak.services.resources.AbstractSecuredLocalService:void <init>(org.keycloak.models.RealmModel,org.keycloak.models.ClientModel)",
                "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireManage()",
                "org.keycloak.services.managers.Auth:void require(java.lang.String)",
                "org.keycloak.authentication.AuthenticationProcessor$Result:org.keycloak.models.UserModel getUser()",
                "org.keycloak.authentication.authenticators.resetcred.ResetCredentialChooseUser:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)",
                "org.keycloak.authentication.authenticators.browser.AbstractUsernameFormAuthenticator:javax.ws.rs.core.Response setDuplicateUserChallenge(org.keycloak.authentication.AuthenticationFlowContext,java.lang.String,java.lang.String,org.keycloak.authentication.AuthenticationFlowError)",
                "org.keycloak.services.managers.AuthenticationManager:java.lang.String getRememberMeUsername(org.keycloak.models.RealmModel,javax.ws.rs.core.HttpHeaders)",
                "org.keycloak.authentication.AuthenticationProcessor$Result:org.jboss.resteasy.spi.HttpRequest getHttpRequest()",
                "org.keycloak.authentication.authenticators.browser.AbstractUsernameFormAuthenticator:boolean validateUserAndPassword(org.keycloak.authentication.AuthenticationFlowContext,javax.ws.rs.core.MultivaluedMap)",
                "org.keycloak.authentication.AuthenticationProcessor$Result:void cancelLogin()",
                "org.keycloak.services.managers.AppAuthManager:void <init>()",
                "org.keycloak.services.managers.Auth:org.keycloak.models.ClientModel getClient()",
                "org.keycloak.services.managers.Auth:org.keycloak.models.UserModel getUser()",
                "org.keycloak.services.managers.RealmManager:void <init>(org.keycloak.models.KeycloakSession)",
                "org.keycloak.services.resources.AbstractSecuredLocalService:javax.ws.rs.core.Response login(java.lang.String)",
                "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateIdentityCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel)",
                "org.keycloak.authentication.AuthenticationProcessor$Result:org.keycloak.models.AuthenticationExecutionModel getExecution()",
                "org.keycloak.services.managers.AppAuthManager$BearerTokenAuthenticator:void <init>(org.keycloak.models.KeycloakSession)",
                "org.keycloak.services.managers.Auth:void <init>(org.keycloak.models.RealmModel,org.keycloak.representations.AccessToken,org.keycloak.models.UserModel,org.keycloak.models.ClientModel,org.keycloak.models.UserSessionModel,boolean)",
                "org.keycloak.services.managers.Auth:void setClientSession(org.keycloak.models.AuthenticatedClientSessionModel)",
                "org.keycloak.services.managers.AuthenticationManager$AuthResult:org.keycloak.models.UserSessionModel getSession()",
                "org.keycloak.authentication.authenticators.resetcred.ResetCredentialEmail:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)",
                "org.keycloak.authentication.AuthenticationProcessor$Result:org.keycloak.forms.login.LoginFormsProvider form()",
                "org.keycloak.services.managers.AppAuthManager:java.lang.String extractAuthorizationHeaderToken(javax.ws.rs.core.HttpHeaders)",
                "org.keycloak.authentication.authenticators.console.ConsoleUsernamePasswordAuthenticator:void <clinit>()",
                "org.keycloak.authentication.authenticators.browser.AbstractUsernameFormAuthenticator:javax.ws.rs.core.Response challenge(org.keycloak.authentication.AuthenticationFlowContext,java.lang.String)",
                "org.keycloak.services.validation.Validation:void <clinit>()",
                "org.keycloak.authentication.AuthenticationProcessor$Result:org.keycloak.models.KeycloakSession getSession()",
                "org.keycloak.userprofile.profile.AbstractUserProfile:org.keycloak.userprofile.UserProfileAttributes getAttributes()",
                "org.keycloak.services.resources.admin.AdminAuth:void <init>(org.keycloak.models.RealmModel,org.keycloak.representations.AccessToken,org.keycloak.models.UserModel,org.keycloak.models.ClientModel)",
                "org.keycloak.services.managers.AuthenticationManager$AuthResult:org.keycloak.representations.AccessToken getToken()",
                "org.keycloak.forms.login.freemarker.model.LoginBean:void <init>(javax.ws.rs.core.MultivaluedMap)",
                "org.keycloak.services.util.ResolveRelative:java.lang.String resolveRelativeUri(org.keycloak.models.KeycloakSession,java.lang.String,java.lang.String)",
                "org.keycloak.authentication.authenticators.browser.UsernamePasswordForm:void <init>()",
                "org.keycloak.services.resources.admin.permissions.MgmtPermissions:org.keycloak.services.resources.admin.permissions.UserPermissions users()",
                "org.keycloak.authentication.AuthenticationProcessor$Result:void forceChallenge(javax.ws.rs.core.Response)"
            ]
        }
    }
}
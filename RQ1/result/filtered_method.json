{
    "CVE-2023-24998": {
        "java_org_apache_tomcat_util_http_Parameters": [
            "Parameters:size()"
        ],
        "java_org_apache_tomcat_util_http_fileupload_impl_FileCountLimitExceededException": [
            "FileCountLimitExceededException:getLimit()",
            "FileCountLimitExceededException:FileCountLimitExceededException(String,long)"
        ],
        "java_org_apache_tomcat_util_http_fileupload_FileUploadBase": [
            "FileUploadBase:setFileCountMax(long)",
            "FileUploadBase:getFileCountMax()"
        ],
        "src_main_java_org_apache_commons_fileupload_FileUploadBase": [
            "FileUploadBase:setFileCountMax(long)",
            "FileUploadBase:getFileCountMax()"
        ],
        "src_main_java_org_apache_commons_fileupload_FileCountLimitExceededException": [
            "FileCountLimitExceededException:getLimit()",
            "FileCountLimitExceededException:FileCountLimitExceededException(String,long)"
        ]
    },
    "CVE-2017-5664": {
        "java_org_apache_catalina_servlets_DefaultServlet": [
            "DefaultServlet$Range:validate()"
        ]
    },
    "CVE-2018-25068": {
        "globalpomutils-fileresources_src_main_java_com_anrisoftware_globalpom_fileresourcemanager_FileResourceManagerProvider": [
            "FileResourceManagerProvider:setStoreDir(String)",
            "FileResourceManagerProvider:setStoreDir(File)",
            "FileResourceManagerProvider:setDebug(boolean)"
        ]
    },
    "CVE-2014-0193": {
        "codec-http_src_main_java_io_netty_handler_codec_http_websocketx_UTF8Exception": [
            "UTF8Exception:UTF8Exception(String)"
        ],
        "codec-http_src_main_java_io_netty_handler_codec_http_websocketx_ContinuationWebSocketFrame": [
            "ContinuationWebSocketFrame:aggregatedText()",
            "ContinuationWebSocketFrame:ContinuationWebSocketFrame(boolean,int,ByteBuf,String)"
        ],
        "codec-http_src_main_java_io_netty_handler_codec_http_websocketx_UTF8Output": [
            "UTF8Output:toString()"
        ]
    },
    "CVE-2022-45143": {
        "java_org_apache_tomcat_util_json_JSONFilter": [
            "JSONFilter:JSONFilter()"
        ]
    },
    "CVE-2016-6816": {
        "java_org_apache_coyote_http11_InternalNioInputBuffer": [
            "InternalNioInputBuffer:recycle()",
            "InternalNioInputBuffer:nextRequest()"
        ],
        "java_org_apache_coyote_http11_InternalAprInputBuffer": [
            "InternalAprInputBuffer:recycle()"
        ]
    },
    "CVE-2018-1048": {
        "core_src_main_java_io_undertow_server_protocol_ajp_AjpRequestParser": [
            "AjpRequestParser:AjpRequestParser(String,boolean,int,int)"
        ]
    },
    "CVE-2017-1000487": {
        "src_main_java_org_codehaus_plexus_util_cli_shell_Shell": [
            "Shell:setUnconditionalQuoting(boolean)"
        ],
        "src_main_java_org_codehaus_plexus_util_cli_shell_BourneShell": [
            "BourneShell:getQuotingTriggerChars()"
        ],
        "src_main_java_org_codehaus_plexus_util_cli_Commandline": [
            "Commandline:getLiteralExecutable()",
            "Commandline$Marker:getPosition()",
            "Commandline:getShellCommandline()",
            "Commandline:getShell()",
            "Commandline:Commandline(String,Shell)",
            "Commandline:setShell(Shell)",
            "Commandline:Commandline(String)",
            "Commandline:getCommandline()",
            "Commandline:Commandline(Shell)",
            "Commandline:getExecutable()",
            "Commandline:Commandline()"
        ]
    },
    "CVE-2012-2379": {
        "rt_ws_security_src_main_java_org_apache_cxf_ws_security_wss4j_policyvalidators_AbstractSupportingTokenPolicyValidator": [
            "AbstractSupportingTokenPolicyValidator:setUtResults(List)",
            "AbstractSupportingTokenPolicyValidator:setEncryptedParts(SignedEncryptedParts)",
            "AbstractSupportingTokenPolicyValidator:setSignedParts(SignedEncryptedParts)",
            "AbstractSupportingTokenPolicyValidator:setValidateUsernameToken(boolean)",
            "AbstractSupportingTokenPolicyValidator:setEncryptedElements(SignedEncryptedElements)",
            "AbstractSupportingTokenPolicyValidator:setSignedElements(SignedEncryptedElements)",
            "AbstractSupportingTokenPolicyValidator:setTimestamp(Element)",
            "AbstractSupportingTokenPolicyValidator:checkTimestampIsSigned(List)",
            "AbstractSupportingTokenPolicyValidator:checkSignature(WSSecurityEngineResult,List)",
            "AbstractSupportingTokenPolicyValidator:checkSignatureIsSigned(List)"
        ]
    },
    "CVE-2012-3451": {
        "rt_bindings_soap_src_main_java_org_apache_cxf_binding_soap_interceptor_SoapActionInInterceptor": [
            "SoapActionInInterceptor$SoapActionInAttemptTwoInterceptor:SoapActionInAttemptTwoInterceptor()"
        ]
    },
    "CVE-2012-5633": {
        "api_src_main_java_org_apache_cxf_interceptor_URIMappingInterceptor": [
            "URIMappingInterceptor:URIMappingInterceptor()"
        ]
    },
    "CVE-2013-2160": {
        "wstx_branches_4.1_src_java_com_ctc_wstx_api_ReaderConfig": [
            "ReaderConfig:setMaxCharacters(long)",
            "ReaderConfig:setMaxChildrenPerElement(int)",
            "ReaderConfig:getMaxCharacters()",
            "ReaderConfig:getMaxAttributesPerElement()",
            "ReaderConfig:setMaxAttributesPerElement(int)",
            "ReaderConfig:setMaxElementDepth(int)",
            "ReaderConfig:getMaxElementDepth()",
            "ReaderConfig:getMaxElementCount()",
            "ReaderConfig:setMaxElementCount(long)",
            "ReaderConfig:getMaxChildrenPerElement()"
        ],
        "wstx_branches_4.1_src_java_com_ctc_wstx_sr_AttributeCollector": [
            "AttributeCollector:getMaxAttributesPerElement()",
            "AttributeCollector:setMaxAttributesPerElement(int)",
            "AttributeCollector:getDefaultNsBuilder()",
            "AttributeCollector:addDefaultAttribute(String,String,String,String)"
        ],
        "wstx_branches_4.1_src_java_com_ctc_wstx_sr_InputElementStack": [
            "InputElementStack:addDefaultAttribute(String,String,String,String)"
        ]
    },
    "CVE-2017-12624": {
        "rt_frontend_jaxrs_src_main_java_org_apache_cxf_jaxrs_ext_multipart_Attachment": [
            "Attachment:Attachment(MultivaluedMap,DataHandler,Object)"
        ],
        "core_src_main_java_org_apache_cxf_attachment_HeaderSizeExceededException": [
            "HeaderSizeExceededException:HeaderSizeExceededException(String)",
            "HeaderSizeExceededException:HeaderSizeExceededException()",
            "HeaderSizeExceededException:HeaderSizeExceededException(Throwable)",
            "HeaderSizeExceededException:HeaderSizeExceededException(String,Throwable)"
        ]
    },
    "CVE-2014-0225": {
        "spring-web_src_main_java_org_springframework_http_converter_xml_Jaxb2RootElementHttpMessageConverter": [
            "Jaxb2RootElementHttpMessageConverter:isProcessExternalEntities()"
        ]
    },
    "CVE-2013-6429": {
        "spring-web_src_main_java_org_springframework_http_converter_xml_SourceHttpMessageConverter": [
            "SourceHttpMessageConverter:setProcessExternalEntities(boolean)",
            "SourceHttpMessageConverter:SourceHttpMessageConverter()"
        ]
    },
    "CVE-2016-5018": {
        "java_org_apache_jasper_runtime_JspRuntimeLibrary": [
            "JspRuntimeLibrary$PrivilegedIntrospectHelper:PrivilegedIntrospectHelper(Object,String,String,ServletRequest,String,boolean)",
            "JspRuntimeLibrary:internalIntrospecthelper(Object,String,String,ServletRequest,String,boolean)"
        ]
    },
    "CVE-2021-21295": {
        "codec-http2_src_main_java_io_netty_handler_codec_http2_DefaultHttp2ConnectionDecoder": [
            "DefaultHttp2ConnectionDecoder$ContentLength:ContentLength(long)"
        ]
    },
    "CVE-2020-26282": {
        "browserup-proxy-rest_src_main_java_com_browserup_bup_rest_validation_util_MessageSanitizer": [
            "MessageSanitizer:MessageSanitizer()"
        ]
    },
    "CVE-2020-36634": {
        "varexport_src_main_java_com_indeed_util_varexport_Variable": [
            "Variable:getIndexableNames()"
        ]
    },
    "CVE-2021-25641": {
        "dubbo-rpc_dubbo-rpc-dubbo_src_main_java_org_apache_dubbo_rpc_protocol_dubbo_DecodeableRpcInvocation": [
            "DecodeableRpcInvocation:checkSerializationTypeFromRemote()"
        ],
        "dubbo-rpc_dubbo-rpc-dubbo_src_main_java_org_apache_dubbo_rpc_protocol_dubbo_DubboInvoker": [
            "DubboInvoker:DubboInvoker(Class,URL,ExchangeClient,Set)"
        ]
    },
    "CVE-2020-1729": {
        "implementation_src_main_java_io_smallrye_config_inject_SecuritySupport": [
            "SecuritySupport:SecuritySupport()"
        ]
    },
    "CVE-2020-27826": {
        "services_src_main_java_org_keycloak_userprofile_LegacyUserProfileProvider": [
            "LegacyUserProfileProvider:LegacyUserProfileProvider(KeycloakSession)"
        ],
        "services_src_main_java_org_keycloak_userprofile_validation_Validator": [
            "Validator:Validator(String,BiFunction)"
        ],
        "services_src_main_java_org_keycloak_userprofile_LegacyUserProfileProviderFactory": [
            "LegacyUserProfileProviderFactory:init(Config.Scope)"
        ],
        "services_src_main_java_org_keycloak_userprofile_validation_AttributeValidatorBuilder": [
            "AttributeValidatorBuilder:addValidationFunction(String,BiFunction)"
        ]
    },
    "CVE-2021-22114": {
        "spring-integration-zip_src_main_java_org_springframework_integration_zip_transformer_UnZipTransformer": [
            "UnZipTransformer:process(InputStream,ZipEntry)"
        ]
    },
    "CVE-2020-8929": {
        "java_src_src_main_java_com_google_crypto_tink_PrimitiveSet": [
            "PrimitiveSet$Prefix:Prefix(byte)",
            "PrimitiveSet$Prefix:toString()"
        ]
    },
    "CVE-2022-46166": {
        "spring-boot-admin-server_src_main_java_de_codecentric_boot_admin_server_notify_MicrosoftTeamsNotifier": [
            "MicrosoftTeamsNotifier:getStatusChangedMessage(Instance,StandardEvaluationContext)",
            "MicrosoftTeamsNotifier:getRegisteredMessage(Instance,StandardEvaluationContext)",
            "MicrosoftTeamsNotifier:createMessage(Instance,String,String,StandardEvaluationContext)",
            "MicrosoftTeamsNotifier:doNotify(InstanceEvent,Instance)",
            "MicrosoftTeamsNotifier:evaluateExpression(StandardEvaluationContext,Expression)",
            "MicrosoftTeamsNotifier:getDeregisteredMessage(Instance,StandardEvaluationContext)"
        ],
        "spring-boot-admin-server_src_main_java_de_codecentric_boot_admin_server_notify_HipchatNotifier": [
            "HipchatNotifier:buildUrl()"
        ],
        "spring-boot-admin-server_src_main_java_de_codecentric_boot_admin_server_notify_OpsGenieNotifier": [
            "OpsGenieNotifier:buildUrl(InstanceEvent,Instance)"
        ]
    },
    "CVE-2016-9879": {
        "web_src_main_java_org_springframework_security_web_firewall_DefaultHttpFirewall": [
            "DefaultHttpFirewall:setAllowUrlEncodedSlash(boolean)",
            "DefaultHttpFirewall:isNormalized(String)",
            "DefaultHttpFirewall:getFirewalledResponse(HttpServletResponse)"
        ]
    },
    "CVE-2020-1945": {
        "src_main_org_apache_tools_ant_util_FileUtils": [
            "FileUtils:createTempFile(String,String,File)",
            "FileUtils:createTempFile(String,String,File,boolean)",
            "FileUtils:createTempFile(String,String,File,boolean,boolean)"
        ]
    },
    "CVE-2016-0750": {
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_IterationEndOperation": [
            "IterationEndOperation:IterationEndOperation(Codec,int,ClientIntelligence,byte,AtomicInteger,String,TransportFactory,Transport)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_GetWithVersionOperation": [
            "GetWithVersionOperation:GetWithVersionOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_ReplaceOperation": [
            "ReplaceOperation:ReplaceOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence,byte,long,TimeUnit,long,TimeUnit)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_PutAllParallelOperation": [
            "PutAllParallelOperation:PutAllParallelOperation(Codec,TransportFactory,Map,byte,AtomicInteger,int,ClientIntelligence,long,TimeUnit,long,TimeUnit,ExecutorService)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_protocol_Codec10": [
            "Codec10:readEvent(Transport,byte,Marshaller)",
            "Codec10:readHeaderOrEvent(Transport,HeaderParams,byte,Marshaller)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_marshall_MarshallerUtil": [
            "MarshallerUtil$CheckedInputStream:CheckedInputStream(InputStream,List)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_ParallelHotRodOperation": [
            "ParallelHotRodOperation:ParallelHotRodOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence,ExecutorService)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_BulkGetKeysOperation": [
            "BulkGetKeysOperation:BulkGetKeysOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence,int)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_AuthOperation": [
            "AuthOperation:AuthOperation(Codec,AtomicInteger,ClientIntelligence,Transport,String,byte)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_HotRodOperation": [
            "HotRodOperation:HotRodOperation(Codec,int,ClientIntelligence,byte,AtomicInteger)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_PutOperation": [
            "PutOperation:PutOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence,byte,long,TimeUnit,long,TimeUnit)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_FaultTolerantPingOperation": [
            "FaultTolerantPingOperation:FaultTolerantPingOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_IterationStartOperation": [
            "IterationStartOperation:IterationStartOperation(Codec,int,ClientIntelligence,byte,AtomicInteger,String,byte,Set,int,TransportFactory,boolean)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_PutStreamOperation": [
            "PutStreamOperation:PutStreamOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence,long,long,TimeUnit,long,TimeUnit)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_RetryOnFailureOperation": [
            "RetryOnFailureOperation:RetryOnFailureOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_AbstractKeyValueOperation": [
            "AbstractKeyValueOperation:AbstractKeyValueOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence,byte,long,TimeUnit,long,TimeUnit)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_iteration_ReplKeyTracker": [
            "ReplKeyTracker:track(byte,short)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_RemoveOperation": [
            "RemoveOperation:RemoveOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_ReplaceIfUnmodifiedOperation": [
            "ReplaceIfUnmodifiedOperation:ReplaceIfUnmodifiedOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence,byte,long,TimeUnit,long,TimeUnit,long)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_RemoteCacheManager": [
            "RemoteCacheManager:start()"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_AbstractKeyOperation": [
            "AbstractKeyOperation:AbstractKeyOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_GetAllParallelOperation": [
            "GetAllParallelOperation:GetAllParallelOperation(Codec,TransportFactory,Set,byte,AtomicInteger,int,ClientIntelligence,ExecutorService)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_ContainsKeyOperation": [
            "ContainsKeyOperation:ContainsKeyOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_GetOperation": [
            "GetOperation:GetOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_iteration_NoOpSegmentKeyTracker": [
            "NoOpSegmentKeyTracker:track(byte,short)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_QueryOperation": [
            "QueryOperation:QueryOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence,RemoteQuery)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_GetAllOperation": [
            "GetAllOperation:GetAllOperation(Codec,TransportFactory,Set,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_AddClientListenerOperation": [
            "AddClientListenerOperation:AddClientListenerOperation(Codec,TransportFactory,String,AtomicInteger,int,ClientIntelligence,ClientListenerNotifier,Object,byte,byte)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_StatsOperation": [
            "StatsOperation:StatsOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_RemoveIfUnmodifiedOperation": [
            "RemoveIfUnmodifiedOperation:RemoveIfUnmodifiedOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence,long)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_configuration_Configuration": [
            "Configuration:serialWhitelist()",
            "Configuration:toString()",
            "Configuration:Configuration(ExecutorFactoryConfiguration,Class,FailoverRequestBalancingStrategy,ClassLoader,ClientIntelligence,ConnectionPoolConfiguration,int,Class,boolean,int,Marshaller,Class,ProtocolVersion,List,int,SecurityConfiguration,boolean,boolean,Class,int,int,NearCacheConfiguration,List)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_BulkGetOperation": [
            "BulkGetOperation:BulkGetOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence,int)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_ClearOperation": [
            "ClearOperation:ClearOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_IterationNextOperation": [
            "IterationNextOperation:IterationNextOperation(Codec,int,ClientIntelligence,byte,AtomicInteger,String,Transport,KeyTracker)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_GetStreamOperation": [
            "GetStreamOperation:GetStreamOperation(Codec,TransportFactory,Object,byte,int,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_event_ClientListenerNotifier": [
            "ClientListenerNotifier:ClientListenerNotifier(ExecutorService,Codec,Marshaller,TransportFactory)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_PutAllOperation": [
            "PutAllOperation:PutAllOperation(Codec,TransportFactory,Map,byte,AtomicInteger,int,ClientIntelligence,long,TimeUnit,long,TimeUnit)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_OperationsFactory": [
            "OperationsFactory:OperationsFactory(TransportFactory,Codec,ExecutorService,ClientIntelligence)",
            "OperationsFactory:OperationsFactory(TransportFactory,Codec,ExecutorService,Configuration)",
            "OperationsFactory:OperationsFactory(TransportFactory,String,boolean,Codec,ClientListenerNotifier,ExecutorService,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_SizeOperation": [
            "SizeOperation:SizeOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_PutIfAbsentOperation": [
            "PutIfAbsentOperation:PutIfAbsentOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence,byte,long,TimeUnit,long,TimeUnit)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_PingOperation": [
            "PingOperation:PingOperation(Codec,AtomicInteger,ClientIntelligence,Transport,byte)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_RemoveClientListenerOperation": [
            "RemoveClientListenerOperation:RemoveClientListenerOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence,ClientListenerNotifier,Object)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_AuthMechListOperation": [
            "AuthMechListOperation:AuthMechListOperation(Codec,AtomicInteger,ClientIntelligence,Transport)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_GetWithMetadataOperation": [
            "GetWithMetadataOperation:GetWithMetadataOperation(Codec,TransportFactory,Object,byte,byte,AtomicInteger,int,ClientIntelligence)"
        ],
        "client_hotrod-client_src_main_java_org_infinispan_client_hotrod_impl_operations_ExecuteOperation": [
            "ExecuteOperation:ExecuteOperation(Codec,TransportFactory,byte,AtomicInteger,int,ClientIntelligence,String,Map)"
        ]
    },
    "CVE-2016-3081": {
        "core_src_main_java_com_opensymphony_xwork2_ognl_OgnlUtil": [
            "OgnlUtil:checkEnableEvalExpression(Object,Map)",
            "OgnlUtil:execute(Object)"
        ]
    },
    "CVE-2016-6194": {
        "src_main_java_com_rabbitmq_jms_client_Completion": [
            "Completion:isComplete()"
        ],
        "src_main_java_com_rabbitmq_jms_admin_RMQConnectionFactory": [
            "RMQConnectionFactory:setTrustedPackages(List)",
            "RMQConnectionFactory:uriHostEscape(String)",
            "RMQConnectionFactory:uriUInfoEscape(String,String)",
            "RMQConnectionFactory:uriVirtualHostEscape(String)",
            "RMQConnectionFactory:setRabbitUri(Logger,RMQConnectionFactory,com.rabbitmq.client.ConnectionFactory,String)",
            "RMQConnectionFactory:addIntegerRefProperty(Reference,String,Integer)",
            "RMQConnectionFactory:addStringRefProperty(Reference,String,String)",
            "RMQConnectionFactory:setUri(String)",
            "RMQConnectionFactory:scheme(boolean)"
        ],
        "src_main_java_com_rabbitmq_jms_client_RMQSession": [
            "RMQSession:getTrustedPackages()",
            "RMQSession:setTrustedPackages(List)"
        ],
        "src_main_java_com_rabbitmq_jms_client_DeliveryExecutor": [
            "DeliveryExecutor:deliverMessageWithProtection(RMQMessage,MessageListener)"
        ],
        "src_main_java_com_rabbitmq_jms_client_RMQMessage": [
            "RMQMessage:generateInternalID()",
            "RMQMessage:writePrimitive(Object,ObjectOutput)",
            "RMQMessage:copyAttributes(RMQMessage,Message)",
            "RMQMessage:readPrimitive(ObjectInput)"
        ],
        "src_main_java_com_rabbitmq_jms_client_RMQConnection": [
            "RMQConnection:getTrustedPackages()",
            "RMQConnection:setTrustedPackages(List)"
        ],
        "src_main_java_com_rabbitmq_jms_admin_RMQDestination": [
            "RMQDestination:getAmqpRoutingKey()",
            "RMQDestination:isAmqp()",
            "RMQDestination:amqpExchangeType()",
            "RMQDestination:setDestinationName(String)",
            "RMQDestination:setAmqp(boolean)",
            "RMQDestination:setAmqpRoutingKey(String)",
            "RMQDestination:setAmqpQueueName(String)",
            "RMQDestination:setAmqpExchangeName(String)"
        ],
        "src_main_java_com_rabbitmq_jms_util_WhiteListObjectInputStream": [
            "WhiteListObjectInputStream:WhiteListObjectInputStream(InputStream,List)",
            "WhiteListObjectInputStream:getTrustedPackages()",
            "WhiteListObjectInputStream:setTrustedPackages(List)",
            "WhiteListObjectInputStream:WhiteListObjectInputStream(InputStream)"
        ],
        "src_main_java_com_rabbitmq_jms_client_RMQMessageProducer": [
            "RMQMessageProducer:RMQMessageProducer(RMQSession,RMQDestination)"
        ],
        "src_main_java_com_rabbitmq_jms_client_message_RMQObjectMessage": [
            "RMQObjectMessage:RMQObjectMessage(List)",
            "RMQObjectMessage:RMQObjectMessage()"
        ]
    },
    "CVE-2019-17572": {
        "client_src_main_java_org_apache_rocketmq_client_impl_MQClientAPIImpl": [
            "MQClientAPIImpl:createPlainAccessConfig(String,PlainAccessConfig,long)"
        ],
        "common_src_main_java_org_apache_rocketmq_common_UtilAll": [
            "UtilAll:String2List(String,String)",
            "UtilAll:List2String(List,String)"
        ],
        "client_src_main_java_org_apache_rocketmq_client_Validators": [
            "Validators:checkMessage(Message,DefaultMQProducer)",
            "Validators:checkTopic(String)"
        ],
        "broker_src_main_java_org_apache_rocketmq_broker_processor_AdminBrokerProcessor": [
            "AdminBrokerProcessor:updateGlobalWhiteAddrsConfig(ChannelHandlerContext,RemotingCommand)",
            "AdminBrokerProcessor:updateAndCreateAccessConfig(ChannelHandlerContext,RemotingCommand)"
        ]
    },
    "CVE-2015-2156": {
        "src_main_java_org_jboss_netty_handler_codec_http_DefaultCookie": [
            "DefaultCookie:getMaxAge()"
        ],
        "src_main_java_org_jboss_netty_handler_codec_http_cookie_DefaultCookie": [
            "DefaultCookie:setMaxAge(long)",
            "DefaultCookie:maxAge()"
        ]
    },
    "CVE-2020-1954": {
        "rt_management_src_main_java_org_apache_cxf_management_jmx_InstrumentationManagerImpl": [
            "InstrumentationManagerImpl:setEnvironment(Map)",
            "InstrumentationManagerImpl:setCreateMBServerConnectorFactory(boolean)",
            "InstrumentationManagerImpl:isEnabled()",
            "InstrumentationManagerImpl:setEnabled(boolean)"
        ],
        "rt_management_src_main_java_org_apache_cxf_management_jmx_MBServerConnectorFactory": [
            "MBServerConnectorFactory:setEnvironment(Map)",
            "MBServerConnectorFactory$JmxRegistry:JmxRegistry(int,String)",
            "MBServerConnectorFactory:setDaemon(boolean)",
            "MBServerConnectorFactory$JmxRegistry:bind(String,Remote)",
            "MBServerConnectorFactory:setThreaded(boolean)",
            "MBServerConnectorFactory:MBServerConnectorFactory()",
            "MBServerConnectorFactory$JmxRegistry:unbind(String)",
            "MBServerConnectorFactory:setServiceUrl(String)",
            "MBServerConnectorFactory$JmxRegistry:rebind(String,Remote)",
            "MBServerConnectorFactory:setMBeanServer(MBeanServer)"
        ]
    },
    "CVE-2021-21364": {
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_User": [
            "User:getId()",
            "User:lastName(String)",
            "User:getPassword()",
            "User:email(String)",
            "User:getEmail()",
            "User:phone(String)",
            "User:setPassword(String)",
            "User:password(String)",
            "User:firstName(String)",
            "User:setFirstName(String)",
            "User:getLastName()",
            "User:getFirstName()",
            "User:getUsername()",
            "User:toString()",
            "User:setId(Long)",
            "User:setPhone(String)",
            "User:userStatus(Integer)",
            "User:setLastName(String)",
            "User:getUserStatus()",
            "User:id(Long)",
            "User:username(String)",
            "User:setUserStatus(Integer)",
            "User:getPhone()",
            "User:setUsername(String)",
            "User:setEmail(String)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_Configuration": [
            "Configuration:getDefaultApiClient()",
            "Configuration:setDefaultApiClient(ApiClient)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_ArrayOfArrayOfNumberOnly": [
            "ArrayOfArrayOfNumberOnly:setArrayArrayNumber(List)",
            "ArrayOfArrayOfNumberOnly:getArrayArrayNumber()",
            "ArrayOfArrayOfNumberOnly:arrayArrayNumber(List)",
            "ArrayOfArrayOfNumberOnly:toString()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_ClassModel": [
            "ClassModel:propertyClass(String)",
            "ClassModel:getPropertyClass()",
            "ClassModel:setPropertyClass(String)",
            "ClassModel:toString()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_ModelList": [
            "ModelList:set123List(String)",
            "ModelList:toString()",
            "ModelList:get123List()",
            "ModelList:_123List(String)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_MixedPropertiesAndAdditionalPropertiesClass": [
            "MixedPropertiesAndAdditionalPropertiesClass:dateTime(OffsetDateTime)",
            "MixedPropertiesAndAdditionalPropertiesClass:toString()",
            "MixedPropertiesAndAdditionalPropertiesClass:map(Map)",
            "MixedPropertiesAndAdditionalPropertiesClass:getMap()",
            "MixedPropertiesAndAdditionalPropertiesClass:getUuid()",
            "MixedPropertiesAndAdditionalPropertiesClass:setDateTime(OffsetDateTime)",
            "MixedPropertiesAndAdditionalPropertiesClass:setUuid(UUID)",
            "MixedPropertiesAndAdditionalPropertiesClass:setMap(Map)",
            "MixedPropertiesAndAdditionalPropertiesClass:uuid(UUID)",
            "MixedPropertiesAndAdditionalPropertiesClass:getDateTime()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Model200Response": [
            "Model200Response:setPropertyClass(String)",
            "Model200Response:toString()",
            "Model200Response:getPropertyClass()",
            "Model200Response:setName(Integer)",
            "Model200Response:getName()",
            "Model200Response:propertyClass(String)",
            "Model200Response:name(Integer)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Animal": [
            "Animal:setClassName(String)",
            "Animal:getClassName()",
            "Animal:getColor()",
            "Animal:setColor(String)",
            "Animal:toString()",
            "Animal:color(String)",
            "Animal:className(String)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_ReadOnlyFirst": [
            "ReadOnlyFirst:toString()",
            "ReadOnlyFirst:baz(String)",
            "ReadOnlyFirst:getBar()",
            "ReadOnlyFirst:getBaz()",
            "ReadOnlyFirst:setBaz(String)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Cat": [
            "Cat:toString()",
            "Cat:isDeclawed()",
            "Cat:declawed(Boolean)",
            "Cat:setDeclawed(Boolean)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_NumberOnly": [
            "NumberOnly:setJustNumber(BigDecimal)",
            "NumberOnly:justNumber(BigDecimal)",
            "NumberOnly:toString()",
            "NumberOnly:getJustNumber()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_OuterComposite": [
            "OuterComposite:getMyString()",
            "OuterComposite:setMyString(String)",
            "OuterComposite:getMyBoolean()",
            "OuterComposite:getMyNumber()",
            "OuterComposite:myBoolean(Boolean)",
            "OuterComposite:setMyNumber(BigDecimal)",
            "OuterComposite:setMyBoolean(Boolean)",
            "OuterComposite:myNumber(BigDecimal)",
            "OuterComposite:myString(String)",
            "OuterComposite:toString()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_auth_HttpBasicAuth": [
            "HttpBasicAuth:getUsername()",
            "HttpBasicAuth:getPassword()",
            "HttpBasicAuth:setUsername(String)",
            "HttpBasicAuth:setPassword(String)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_api_AnotherFakeApi": [
            "AnotherFakeApi:setApiClient(ApiClient)",
            "AnotherFakeApi:AnotherFakeApi(ApiClient)",
            "AnotherFakeApi:AnotherFakeApi()",
            "AnotherFakeApi:getApiClient()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_CustomInstantDeserializer": [
            "CustomInstantDeserializer$FromIntegerArguments:FromIntegerArguments(long,ZoneId)",
            "CustomInstantDeserializer$FromDecimalArguments:FromDecimalArguments(long,int,ZoneId)",
            "CustomInstantDeserializer:CustomInstantDeserializer(CustomInstantDeserializer,DateTimeFormatter)",
            "CustomInstantDeserializer:CustomInstantDeserializer(Class,DateTimeFormatter,Function,Function,Function,BiFunction)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_JSON": [
            "JSON:getContext(Class)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_auth_OAuth": [
            "OAuth:setAccessToken(String)",
            "OAuth:getAccessToken()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Dog": [
            "Dog:getBreed()",
            "Dog:setBreed(String)",
            "Dog:toString()",
            "Dog:breed(String)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_AdditionalPropertiesClass": [
            "AdditionalPropertiesClass:getMapOfMapProperty()",
            "AdditionalPropertiesClass:setMapProperty(Map)",
            "AdditionalPropertiesClass:toString()",
            "AdditionalPropertiesClass:getMapProperty()",
            "AdditionalPropertiesClass:setMapOfMapProperty(Map)",
            "AdditionalPropertiesClass:mapOfMapProperty(Map)",
            "AdditionalPropertiesClass:mapProperty(Map)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_api_FakeApi": [
            "FakeApi:FakeApi(ApiClient)",
            "FakeApi:setApiClient(ApiClient)",
            "FakeApi:getApiClient()",
            "FakeApi:FakeApi()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_AnimalFarm": [
            "AnimalFarm:toString()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Client": [
            "Client:toString()",
            "Client:setClient(String)",
            "Client:getClient()",
            "Client:client(String)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_ApiClient": [
            "ApiClient:getDateFormat()",
            "ApiClient:getJSON()",
            "ApiClient:getConnectTimeout()",
            "ApiClient:setTempFolderPath(String)",
            "ApiClient:getAuthentications()",
            "ApiClient:performAdditionalClientConfiguration(ClientConfig)",
            "ApiClient:getBasePath()",
            "ApiClient:setDebugging(boolean)",
            "ApiClient:getTempFolderPath()",
            "ApiClient:setBasePath(String)",
            "ApiClient:isDebugging()",
            "ApiClient:setHttpClient(Client)",
            "ApiClient:getHttpClient()",
            "ApiClient:getReadTimeout()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_ModelApiResponse": [
            "ModelApiResponse:getMessage()",
            "ModelApiResponse:code(Integer)",
            "ModelApiResponse:getType()",
            "ModelApiResponse:setMessage(String)",
            "ModelApiResponse:toString()",
            "ModelApiResponse:message(String)",
            "ModelApiResponse:setCode(Integer)",
            "ModelApiResponse:type(String)",
            "ModelApiResponse:setType(String)",
            "ModelApiResponse:getCode()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Category": [
            "Category:getName()",
            "Category:toString()",
            "Category:setId(Long)",
            "Category:setName(String)",
            "Category:name(String)",
            "Category:getId()",
            "Category:id(Long)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Name": [
            "Name:name(Integer)",
            "Name:toString()",
            "Name:getName()",
            "Name:getProperty()",
            "Name:property(String)",
            "Name:getSnakeCase()",
            "Name:get123Number()",
            "Name:setProperty(String)",
            "Name:setName(Integer)"
        ],
        "samples_client_petstore_java_okhttp-gson-parcelableModel_src_main_java_io_swagger_client_ApiClient": [
            "ApiClient:buildRequest(String,String,List,List,Object,Map,Map,String,ProgressRequestBody.ProgressRequestListener)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_api_FakeClassnameTags123Api": [
            "FakeClassnameTags123Api:FakeClassnameTags123Api()",
            "FakeClassnameTags123Api:setApiClient(ApiClient)",
            "FakeClassnameTags123Api:FakeClassnameTags123Api(ApiClient)",
            "FakeClassnameTags123Api:getApiClient()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_ModelReturn": [
            "ModelReturn:setReturn(Integer)",
            "ModelReturn:getReturn()",
            "ModelReturn:_return(Integer)",
            "ModelReturn:toString()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_auth_ApiKeyAuth": [
            "ApiKeyAuth:getLocation()",
            "ApiKeyAuth:getParamName()",
            "ApiKeyAuth:setApiKeyPrefix(String)",
            "ApiKeyAuth:ApiKeyAuth(String,String)",
            "ApiKeyAuth:setApiKey(String)",
            "ApiKeyAuth:getApiKey()",
            "ApiKeyAuth:getApiKeyPrefix()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_api_StoreApi": [
            "StoreApi:StoreApi(ApiClient)",
            "StoreApi:setApiClient(ApiClient)",
            "StoreApi:getApiClient()",
            "StoreApi:StoreApi()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_ApiResponse": [
            "ApiResponse:getData()",
            "ApiResponse:ApiResponse(int,Map)",
            "ApiResponse:getStatusCode()",
            "ApiResponse:ApiResponse(int,Map,T)",
            "ApiResponse:getHeaders()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Order": [
            "Order:shipDate(OffsetDateTime)",
            "Order:id(Long)",
            "Order:StatusEnum(String)",
            "Order:complete(Boolean)",
            "Order:getId()",
            "Order:quantity(Integer)",
            "Order:status(StatusEnum)",
            "Order:toString()",
            "Order:getPetId()",
            "Order:setId(Long)",
            "Order:getQuantity()",
            "Order:setStatus(StatusEnum)",
            "Order:getStatus()",
            "Order:setComplete(Boolean)",
            "Order:setShipDate(OffsetDateTime)",
            "Order:setQuantity(Integer)",
            "Order:setPetId(Long)",
            "Order:getShipDate()",
            "Order:petId(Long)",
            "Order:isComplete()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Tag": [
            "Tag:getName()",
            "Tag:toString()",
            "Tag:name(String)",
            "Tag:id(Long)",
            "Tag:setId(Long)",
            "Tag:setName(String)",
            "Tag:getId()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_api_PetApi": [
            "PetApi:setApiClient(ApiClient)",
            "PetApi:getApiClient()",
            "PetApi:PetApi()",
            "PetApi:PetApi(ApiClient)"
        ],
        "samples_client_petstore_java_okhttp-gson_src_main_java_io_swagger_client_ApiClient": [
            "ApiClient:buildRequest(String,String,List,List,Object,Map,Map,String,ProgressRequestBody.ProgressRequestListener)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Pet": [
            "Pet:photoUrls(List)",
            "Pet:tags(List)",
            "Pet:getId()",
            "Pet:getCategory()",
            "Pet:toString()",
            "Pet:setTags(List)",
            "Pet:status(StatusEnum)",
            "Pet:setName(String)",
            "Pet:name(String)",
            "Pet:id(Long)",
            "Pet:getPhotoUrls()",
            "Pet:getTags()",
            "Pet:getName()",
            "Pet:getStatus()",
            "Pet:StatusEnum(String)",
            "Pet:setId(Long)",
            "Pet:category(Category)",
            "Pet:setCategory(Category)",
            "Pet:setStatus(StatusEnum)",
            "Pet:setPhotoUrls(List)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_api_UserApi": [
            "UserApi:UserApi()",
            "UserApi:setApiClient(ApiClient)",
            "UserApi:getApiClient()",
            "UserApi:UserApi(ApiClient)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_ApiException": [
            "ApiException:ApiException(int,Map,String)",
            "ApiException:ApiException(String,int,Map,String)",
            "ApiException:ApiException(String,Throwable,int,Map,String)",
            "ApiException:ApiException(Throwable)",
            "ApiException:getResponseBody()",
            "ApiException:getResponseHeaders()",
            "ApiException:ApiException(int,String)",
            "ApiException:ApiException(String)",
            "ApiException:getCode()",
            "ApiException:ApiException(String,Throwable,int,Map)",
            "ApiException:ApiException()",
            "ApiException:ApiException(int,String,Map,String)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_SpecialModelName": [
            "SpecialModelName:toString()",
            "SpecialModelName:getSpecialPropertyName()",
            "SpecialModelName:setSpecialPropertyName(Long)",
            "SpecialModelName:specialPropertyName(Long)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_Capitalization": [
            "Capitalization:setATTNAME(String)",
            "Capitalization:getSmallSnake()",
            "Capitalization:setScAETHFlowPoints(String)",
            "Capitalization:setCapitalSnake(String)",
            "Capitalization:ATT_NAME(String)",
            "Capitalization:setCapitalCamel(String)",
            "Capitalization:getCapitalSnake()",
            "Capitalization:getCapitalCamel()",
            "Capitalization:capitalCamel(String)",
            "Capitalization:scAETHFlowPoints(String)",
            "Capitalization:capitalSnake(String)",
            "Capitalization:smallCamel(String)",
            "Capitalization:getSmallCamel()",
            "Capitalization:toString()",
            "Capitalization:getScAETHFlowPoints()",
            "Capitalization:smallSnake(String)",
            "Capitalization:getATTNAME()",
            "Capitalization:setSmallCamel(String)",
            "Capitalization:setSmallSnake(String)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_Pair": [
            "Pair:getName()",
            "Pair:getValue()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_HasOnlyReadOnly": [
            "HasOnlyReadOnly:toString()",
            "HasOnlyReadOnly:getFoo()",
            "HasOnlyReadOnly:getBar()"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_EnumArrays": [
            "EnumArrays:getJustSymbol()",
            "EnumArrays:ArrayEnumEnum(String)",
            "EnumArrays:setArrayEnum(List)",
            "EnumArrays:toString()",
            "EnumArrays:getArrayEnum()",
            "EnumArrays:setJustSymbol(JustSymbolEnum)",
            "EnumArrays:justSymbol(JustSymbolEnum)",
            "EnumArrays:JustSymbolEnum(String)",
            "EnumArrays:arrayEnum(List)"
        ],
        "samples_client_petstore_java_jersey2-java6_src_main_java_io_swagger_client_model_ArrayOfNumberOnly": [
            "ArrayOfNumberOnly:arrayNumber(List)",
            "ArrayOfNumberOnly:getArrayNumber()",
            "ArrayOfNumberOnly:toString()",
            "ArrayOfNumberOnly:setArrayNumber(List)"
        ]
    },
    "CVE-2016-2141": {
        "src_org_jgroups_fork_ForkChannel": [
            "ForkChannel:send(Message)",
            "ForkChannel:ForkChannel(JChannel,String,String,boolean,int,Class,Protocol)",
            "ForkChannel:getFORK(JChannel,int,Class,boolean)",
            "ForkChannel:setHeader(Message)"
        ],
        "src_org_jgroups_Event": [
            "Event:type()",
            "Event:getType()"
        ],
        "src_org_jgroups_protocols_ENCRYPT": [
            "ENCRYPT:getAsymAlgorithm()",
            "ENCRYPT:getSymAlgorithm()",
            "ENCRYPT:setSymVersion(byte)",
            "ENCRYPT:getDesKey()",
            "ENCRYPT:getSymVersion()",
            "ENCRYPT:getSymInit()",
            "ENCRYPT$EncryptHeader:EncryptHeader()",
            "ENCRYPT:getKeyServerAddr()",
            "ENCRYPT$EncryptHeader:getVersion()",
            "ENCRYPT$EncryptHeader:toString()",
            "ENCRYPT:getSecretKey()",
            "ENCRYPT:setSecretKey(SecretKey)",
            "ENCRYPT:getAsymInit()",
            "ENCRYPT:getAsymCipher()",
            "ENCRYPT:getKpair()",
            "ENCRYPT:setKeyServerAddr(Address)",
            "Encrypt:symKeylength()",
            "Encrypt:asymAlgorithm()",
            "Encrypt:symAlgorithm()",
            "Encrypt:adler()",
            "Encrypt:signMessages(boolean)",
            "Encrypt:symVersion(byte)",
            "Encrypt:symKeylength(int)",
            "Encrypt:signMessages()",
            "Encrypt:asymAlgorithm(String)",
            "Encrypt:asymKeylength(int)",
            "Encrypt:handleUnknownVersion()",
            "Encrypt:encryptEntireMessage(boolean)",
            "Encrypt:secretKey()",
            "Encrypt:secretKey(SecretKey)",
            "Encrypt:asymKeylength()",
            "Encrypt:symVersion()",
            "Encrypt:symAlgorithm(String)",
            "Encrypt:adler(boolean)",
            "Encrypt:handleView(View)",
            "Encrypt$Decrypter:Decrypter(Cipher)",
            "ENCRYPT:setLocalAddress(Address)"
        ],
        "src_org_jgroups_protocols_TpHeader": [
            "TpHeader:toString()"
        ],
        "src_org_jgroups_util_MyReceiver": [
            "MyReceiver:rawMsgs(boolean)"
        ],
        "src_org_jgroups_protocols_pbcast_NAKACK2": [
            "NAKACK2:sendXmitRsp(Address,Message)",
            "NAKACK2:deliverBatch(MessageBatch)"
        ],
        "src_org_jgroups_protocols_SEQUENCER2": [
            "SEQUENCER2:deliverBatch(MessageBatch)"
        ],
        "src_org_jgroups_protocols_EncryptHeader": [
            "EncryptHeader:signature()",
            "EncryptHeader:type()",
            "EncryptHeader:EncryptHeader()",
            "EncryptHeader:signature(byte)",
            "EncryptHeader:EncryptHeader(byte,byte)",
            "EncryptHeader:version()",
            "EncryptHeader:toString()",
            "EncryptHeader:getVersion()",
            "EncryptHeader:getType()"
        ],
        "src_org_jgroups_View": [
            "View:leftMembers(View,View)"
        ],
        "src_org_jgroups_protocols_SEQUENCER": [
            "SEQUENCER:unwrapAndDeliver(Message,boolean)"
        ],
        "src_org_jgroups_protocols_AUTH": [
            "AUTH:register(UpHandler)",
            "AUTH:setAuthCoord(boolean)",
            "AUTH:setAuthToken(AuthToken)",
            "AUTH:up(MessageBatch)",
            "AUTH:up(Event)",
            "AUTH:setAuthClass(String)",
            "AUTH:unregister(UpHandler)",
            "AUTH:handleUpEvent(Event)",
            "AUTH:handleAuthHeader(GMS.GmsHeader,AuthHeader,Message)"
        ],
        "src_org_jgroups_util_Util": [
            "Util:writeByteBuffer(byte,int,int,DataOutput)"
        ],
        "src_org_jgroups_Message": [
            "Message:getHeader(short)"
        ],
        "src_org_jgroups_stack_Protocol": [
            "Protocol:getLog()"
        ],
        "src_org_jgroups_demos_KeyStoreGenerator": [
            "KeyStoreGenerator:help()"
        ],
        "src_org_jgroups_protocols_ASYM_ENCRYPT": [
            "ASYM_ENCRYPT:keyServerAddr(Address)",
            "ASYM_ENCRYPT:asymCipher()",
            "ASYM_ENCRYPT:keyPair()",
            "ASYM_ENCRYPT:keyServerAddr()"
        ],
        "src_org_jgroups_protocols_pbcast_GMS": [
            "GMS$GmsHeader:setMergeRejected(boolean)",
            "GMS:sendJoinResponses(JoinRsp,Collection)"
        ],
        "src_org_jgroups_protocols_UNICAST3": [
            "UNICAST3:deliverMessage(Event,Address,long)",
            "UNICAST3:deliverBatch(MessageBatch)",
            "UNICAST3:retransmit(Message)",
            "UNICAST3:up(Event)",
            "UNICAST3:handleResendingOfFirstMessage(Address,long)"
        ],
        "src_org_jgroups_blocks_RequestCorrelator": [
            "RequestCorrelator:receiveMessage(Message)",
            "RequestCorrelator:receiveMessageBatch(MessageBatch)"
        ],
        "src_org_jgroups_protocols_SYM_ENCRYPT": [
            "SYM_ENCRYPT:alias(String)",
            "SYM_ENCRYPT:storePassword()",
            "SYM_ENCRYPT:keystoreName(String)",
            "SYM_ENCRYPT:keystoreName()",
            "SYM_ENCRYPT:storePassword(String)",
            "SYM_ENCRYPT:alias()"
        ],
        "src_org_jgroups_Channel": [
            "Channel:setReceiver(Receiver)"
        ],
        "src_org_jgroups_protocols_EncryptBase": [
            "EncryptBase:symAlgorithm(String)",
            "EncryptBase:encryptEntireMessage(boolean)",
            "EncryptBase:symAlgorithm()",
            "EncryptBase:adler()",
            "EncryptBase:symVersion(byte)",
            "EncryptBase:asymKeylength()",
            "EncryptBase$Decrypter:Decrypter(Cipher)",
            "EncryptBase:encryptEntireMessage()",
            "EncryptBase:adler(boolean)",
            "EncryptBase:symVersion()",
            "EncryptBase:signMessages(boolean)",
            "EncryptBase:localAddress(Address)",
            "EncryptBase:symKeylength(int)",
            "EncryptBase:secretKey(SecretKey)",
            "EncryptBase:asymAlgorithm(String)",
            "EncryptBase:symKeylength()",
            "EncryptBase:asymAlgorithm()",
            "EncryptBase:handleUnknownVersion()",
            "EncryptBase:signMessages()",
            "EncryptBase:asymKeylength(int)",
            "EncryptBase:handleView(View)",
            "EncryptBase:secretKey()"
        ]
    },
    "CVE-2014-3625": {
        "spring-webmvc_src_main_java_org_springframework_web_servlet_resource_PathResourceResolver": [
            "PathResourceResolver:setAllowedLocations(Resource)",
            "PathResourceResolver:getAllowedLocations()"
        ]
    },
    "CVE-2017-4995": {
        "core_src_main_java_org_springframework_security_jackson2_SecurityJackson2Modules": [
            "SecurityJackson2Modules$WhitelistTypeIdResolver:WhitelistTypeIdResolver(TypeIdResolver)",
            "SecurityJackson2Modules$WhitelistTypeResolverBuilder:WhitelistTypeResolverBuilder(ObjectMapper.DefaultTyping)"
        ]
    },
    "CVE-2012-0881": {
        "src_org_apache_xerces_util_XMLAttributesImpl": [
            "XMLAttributesImpl:prepareAndPopulateTableView()"
        ]
    },
    "CVE-2019-11343": {
        "src_main_java_org_torpedoquery_jpa_internal_conditions_NotLikeCondition": [
            "NotLikeCondition:NotLikeCondition(Type,Selector,String)"
        ],
        "src_main_java_org_torpedoquery_jpa_internal_conditions_LikeCondition": [
            "LikeCondition:getLike()",
            "LikeCondition:getComparator()",
            "LikeCondition:LikeCondition(Type,Selector,String)"
        ]
    },
    "CVE-2019-17640": {
        "src_main_java_io_vertx_core_eventbus_impl_clustered_ClusteredMessage": [
            "ClusteredMessage:ClusteredMessage()",
            "ClusteredMessage:ClusteredMessage(EventBusImpl)"
        ],
        "src_main_java_io_vertx_core_eventbus_impl_MessageImpl": [
            "MessageImpl:MessageImpl()",
            "MessageImpl:setBus(EventBusImpl)"
        ]
    },
    "CVE-2020-1938": {
        "java_org_apache_coyote_ajp_AbstractAjpProtocol": [
            "AbstractAjpProtocol:setAllowedRequestAttributesPattern(String)",
            "AbstractAjpProtocol:getAllowedRequestAttributesPatternPattern()"
        ],
        "java_org_apache_coyote_ajp_AbstractAjpProcessor": [
            "AbstractAjpProcessor:setAllowedRequestAttributesPatternPattern(Pattern)"
        ]
    },
    "CVE-2017-12159": {
        "services_src_main_java_org_keycloak_forms_account_freemarker_model_AccountFederatedIdentityBean": [
            "AccountFederatedIdentityBean$FederatedIdentityEntry:getActionUrl()",
            "AccountFederatedIdentityBean$FederatedIdentityEntry:FederatedIdentityEntry(FederatedIdentityModel,String,String,String,String,String)"
        ],
        "services_src_main_java_org_keycloak_forms_account_freemarker_model_UrlBean": [
            "UrlBean:UrlBean(RealmModel,Theme,URI,URI,URI,String)"
        ]
    },
    "CVE-2020-13942": {
        "common_src_main_java_org_apache_unomi_common_SecureFilteringClassLoader": [
            "SecureFilteringClassLoader:SecureFilteringClassLoader(ClassLoader)",
            "SecureFilteringClassLoader:SecureFilteringClassLoader(Set,Set,ClassLoader)"
        ],
        "scripting_src_main_java_org_apache_unomi_scripting_MvelScriptExecutor": [
            "MvelScriptExecutor:setExpressionFilterFactory(ExpressionFilterFactory)"
        ],
        "scripting_src_main_java_org_apache_unomi_scripting_ExpressionFilter": [
            "ExpressionFilter:ExpressionFilter(Set,Set)"
        ],
        "services_src_main_java_org_apache_unomi_services_actions_ActionExecutorDispatcher": [
            "ActionExecutorDispatcher:setScriptExecutor(ScriptExecutor)"
        ],
        "plugins_baseplugin_src_main_java_org_apache_unomi_plugins_baseplugin_conditions_PastEventConditionESQueryBuilder": [
            "PastEventConditionESQueryBuilder:setScriptExecutor(ScriptExecutor)"
        ],
        "plugins_baseplugin_src_main_java_org_apache_unomi_plugins_baseplugin_conditions_PastEventConditionEvaluator": [
            "PastEventConditionEvaluator:setScriptExecutor(ScriptExecutor)"
        ],
        "plugins_baseplugin_src_main_java_org_apache_unomi_plugins_baseplugin_conditions_PropertyConditionEvaluator": [
            "PropertyConditionEvaluator:setExpressionFilterFactory(ExpressionFilterFactory)"
        ],
        "scripting_src_main_java_org_apache_unomi_scripting_internal_ExpressionFilterFactoryImpl": [
            "ExpressionFilterFactoryImpl:ExpressionFilterFactoryImpl()",
            "ExpressionFilterFactoryImpl:setBundleContext(BundleContext)"
        ],
        "persistence-elasticsearch_core_src_main_java_org_apache_unomi_persistence_elasticsearch_conditions_ConditionESQueryBuilderDispatcher": [
            "ConditionESQueryBuilderDispatcher:setScriptExecutor(ScriptExecutor)"
        ],
        "persistence-elasticsearch_core_src_main_java_org_apache_unomi_persistence_elasticsearch_conditions_ConditionEvaluatorDispatcher": [
            "ConditionEvaluatorDispatcher:setScriptExecutor(ScriptExecutor)"
        ]
    },
    "CVE-2020-13692": {
        "pgjdbc_src_main_java_org_postgresql_jdbc_PgSQLXML": [
            "PgSQLXML$NonPrintingErrorHandler:fatalError(SAXParseException)",
            "PgSQLXML$NonPrintingErrorHandler:error(SAXParseException)",
            "PgSQLXML$NonPrintingErrorHandler:warning(SAXParseException)"
        ],
        "pgjdbc_src_main_java_org_postgresql_xml_LegacyInsecurePGXmlFactoryFactory": [
            "LegacyInsecurePGXmlFactoryFactory:LegacyInsecurePGXmlFactoryFactory()"
        ],
        "pgjdbc_src_main_java_org_postgresql_xml_NullErrorHandler": [
            "NullErrorHandler:warning(SAXParseException)",
            "NullErrorHandler:fatalError(SAXParseException)",
            "NullErrorHandler:error(SAXParseException)"
        ],
        "pgjdbc_src_main_java_org_postgresql_xml_DefaultPGXmlFactoryFactory": [
            "DefaultPGXmlFactoryFactory:DefaultPGXmlFactoryFactory()"
        ]
    },
    "CVE-2022-41917": {
        "server_src_main_java_org_opensearch_index_analysis_MappingRule": [
            "MappingRule:getLeft()",
            "MappingRule:getRight()",
            "MappingRule:MappingRule(L,R)"
        ]
    },
    "CVE-2019-17573": {
        "rt_transports_http_src_main_java_org_apache_cxf_transport_commons_text_EntityArrays": [
            "EntityArrays:EntityArrays()"
        ],
        "rt_transports_http_src_main_java_org_apache_cxf_transport_commons_text_CharSequenceTranslator": [
            "CharSequenceTranslator:translate(CharSequence,int,Writer)"
        ],
        "rt_transports_http_src_main_java_org_apache_cxf_transport_commons_text_StringEscapeUtils": [
            "StringEscapeUtils:StringEscapeUtils()"
        ]
    },
    "CVE-2020-10683": {
        "src_main_java_org_dom4j_io_SAXHelper": [
            "SAXHelper:createXMLReader(boolean)"
        ],
        "src_main_java_org_dom4j_io_SAXReader": [
            "SAXReader:read(URL)",
            "SAXReader:addHandler(String,ElementHandler)",
            "SAXReader:setValidation(boolean)",
            "SAXReader:read(InputStream,String)",
            "SAXReader:getXMLReader()",
            "SAXReader:setMergeAdjacentText(boolean)",
            "SAXReader:setXMLReaderClassName(String)",
            "SAXReader:installXMLFilter(XMLReader)",
            "SAXReader:createXMLReader()",
            "SAXReader:SAXReader(DocumentFactory)",
            "SAXReader:setEncoding(String)",
            "SAXReader:setIncludeInternalDTDDeclarations(boolean)",
            "SAXReader:setIncludeExternalDTDDeclarations(boolean)",
            "SAXReader:createContentHandler(XMLReader)",
            "SAXReader:read(InputSource)",
            "SAXReader:setEntityResolver(EntityResolver)",
            "SAXReader:configureReader(XMLReader,DefaultHandler)",
            "SAXReader:setStripWhitespaceText(boolean)",
            "SAXReader:setErrorHandler(ErrorHandler)",
            "SAXReader:setFeature(String,boolean)",
            "SAXReader:setStringInternEnabled(boolean)",
            "SAXReader:read(String)",
            "SAXReader:setIgnoreComments(boolean)",
            "SAXReader:read(Reader)",
            "SAXReader:read(File)",
            "SAXReader:removeHandler(String)",
            "SAXReader:SAXReader(boolean)",
            "SAXReader:read(InputStream)",
            "SAXReader:setXMLReader(XMLReader)",
            "SAXReader:setDefaultHandler(ElementHandler)",
            "SAXReader:setProperty(String,Object)",
            "SAXReader:SAXReader(DocumentFactory,boolean)",
            "SAXReader:SAXReader()",
            "SAXReader:setXMLFilter(XMLFilter)",
            "SAXReader:setDocumentFactory(DocumentFactory)",
            "SAXReader:read(Reader,String)"
        ]
    },
    "CVE-2018-17197": {
        "tika-parsers_src_main_java_org_apache_tika_parser_jdbc_AbstractDBParser": [
            "AbstractDBParser:getTableReader(Connection,String,EmbeddedDocumentUtil)",
            "AbstractDBParser:getTableReader(Connection,String,ParseContext)"
        ],
        "tika-parsers_src_main_java_org_apache_tika_parser_jdbc_SQLite3TableReader": [
            "SQLite3TableReader:SQLite3TableReader(Connection,String,ParseContext)"
        ],
        "tika-core_src_main_java_org_apache_tika_parser_RecursiveParserWrapper": [
            "RecursiveParserWrapper:RecursiveParserWrapper(Parser,boolean)"
        ],
        "tika-core_src_main_java_org_apache_tika_exception_CorruptedFileException": [
            "CorruptedFileException:CorruptedFileException(String)",
            "CorruptedFileException:CorruptedFileException(String,Throwable)"
        ]
    },
    "CVE-2020-9488": {
        "log4j-core_src_main_java_org_apache_logging_log4j_core_net_SmtpManager": [
            "SmtpManager$FactoryData:FactoryData(String,String,String,String,String,Serializer,String,String,int,String,String,boolean,int)"
        ],
        "log4j-core_src_main_java_org_apache_logging_log4j_core_appender_SmtpAppender": [
            "SmtpAppender$Builder:setTo(String)",
            "SmtpAppender$Builder:setReplyTo(String)",
            "SmtpAppender$Builder:setSmtpDebug(boolean)",
            "SmtpAppender$Builder:setSmtpUsername(String)",
            "SmtpAppender$Builder:setBcc(String)",
            "SmtpAppender$Builder:setSmtpPassword(String)",
            "SmtpAppender$Builder:setSubject(String)",
            "SmtpAppender$Builder:setSmtpHost(String)",
            "SmtpAppender$Builder:setBufferSize(int)",
            "SmtpAppender$Builder:setSmtpProtocol(String)",
            "SmtpAppender$Builder:setSslConfiguration(SslConfiguration)",
            "SmtpAppender$Builder:setFrom(String)",
            "SmtpAppender$Builder:setCc(String)",
            "SmtpAppender$Builder:setSmtpPort(int)"
        ]
    },
    "CVE-2019-12423": {
        "rt_rs_security_sso_oidc_src_main_java_org_apache_cxf_rs_security_oidc_idp_OidcKeysService": [
            "OidcKeysService:setStripPrivateParameters(boolean)",
            "OidcKeysService:isStripPrivateParameters()"
        ],
        "rt_rs_security_jose-parent_jose_src_main_java_org_apache_cxf_rs_security_jose_jwk_JsonWebKeys": [
            "JsonWebKeys:JsonWebKeys(JsonWebKey)",
            "JsonWebKeys:setInitKey(JsonWebKey)"
        ]
    },
    "CVE-2018-1000873": {
        "datetime_src_main_java_com_fasterxml_jackson_datatype_jsr310_DecimalUtils": [
            "DecimalUtils:extractNanosecondDecimal(BigDecimal,long)"
        ]
    },
    "CVE-2020-7647": {
        "jooby_src_main_java_org_jooby_handlers_AssetHandler": [
            "AssetHandler:AssetHandler(String,ClassLoader)",
            "AssetHandler:init(String,Path,ClassLoader)",
            "AssetHandler:AssetHandler(String)",
            "AssetHandler:AssetHandler(Path)"
        ]
    },
    "CVE-2022-33683": {
        "pulsar-common_src_main_java_org_apache_pulsar_common_util_NettyClientSslContextRefresher": [
            "NettyClientSslContextRefresher:NettyClientSslContextRefresher(boolean,String,AuthenticationDataProvider,long)"
        ],
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_DirectProxyHandler": [
            "DirectProxyHandler:connect(String,InetSocketAddress,int,Supplier)"
        ],
        "pulsar-client_src_main_java_org_apache_pulsar_client_impl_PulsarChannelInitializer": [
            "PulsarChannelInitializer:PulsarChannelInitializer(ClientConfigurationData,Supplier)"
        ],
        "pulsar-client_src_main_java_org_apache_pulsar_client_impl_ClientCnx": [
            "ClientCnx:ClientCnx(ClientConfigurationData,EventLoopGroup,int)"
        ],
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_ProxyConnection": [
            "ProxyConnection:ProxyConnection(ProxyService,Supplier,DnsAddressResolverGroup)"
        ]
    },
    "CVE-2022-39368": {
        "element-connector_src_main_java_org_eclipse_californium_elements_util_SerialExecutor": [
            "SerialExecutor:shutdownNow(Collection)"
        ],
        "element-connector_src_main_java_org_eclipse_californium_elements_util_LimitedRunnable": [
            "LimitedRunnable:isOverflown()",
            "LimitedRunnable:LimitedRunnable(AtomicInteger)"
        ]
    },
    "CVE-2022-33682": {
        "pulsar-common_src_main_java_org_apache_pulsar_common_util_NettyClientSslContextRefresher": [
            "NettyClientSslContextRefresher:NettyClientSslContextRefresher(boolean,String,AuthenticationDataProvider,long)"
        ],
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_DirectProxyHandler": [
            "DirectProxyHandler:connect(String,InetSocketAddress,int,Supplier)"
        ],
        "pulsar-client_src_main_java_org_apache_pulsar_client_impl_PulsarChannelInitializer": [
            "PulsarChannelInitializer:PulsarChannelInitializer(ClientConfigurationData,Supplier)"
        ],
        "pulsar-client_src_main_java_org_apache_pulsar_client_impl_ClientCnx": [
            "ClientCnx:ClientCnx(ClientConfigurationData,EventLoopGroup,int)"
        ],
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_ProxyConnection": [
            "ProxyConnection:ProxyConnection(ProxyService,Supplier,DnsAddressResolverGroup)"
        ]
    },
    "CVE-2017-12972": {
        "src_main_java_com_nimbusds_jose_util_IntegerOverflowException": [
            "IntegerOverflowException:IntegerOverflowException()"
        ]
    },
    "CVE-2022-33681": {
        "pulsar-common_src_main_java_org_apache_pulsar_common_util_NettyClientSslContextRefresher": [
            "NettyClientSslContextRefresher:NettyClientSslContextRefresher(boolean,String,AuthenticationDataProvider,long)"
        ],
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_DirectProxyHandler": [
            "DirectProxyHandler:connect(String,InetSocketAddress,int,Supplier)"
        ],
        "pulsar-client_src_main_java_org_apache_pulsar_client_impl_PulsarChannelInitializer": [
            "PulsarChannelInitializer:PulsarChannelInitializer(ClientConfigurationData,Supplier)"
        ],
        "pulsar-client_src_main_java_org_apache_pulsar_client_impl_ClientCnx": [
            "ClientCnx:ClientCnx(ClientConfigurationData,EventLoopGroup,int)"
        ],
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_ProxyConnection": [
            "ProxyConnection:ProxyConnection(ProxyService,Supplier,DnsAddressResolverGroup)"
        ]
    },
    "CVE-2019-14888": {
        "core_src_main_java_io_undertow_protocols_ajp_AjpClientChannel": [
            "AjpClientChannel:lastDataRead()"
        ],
        "core_src_main_java_io_undertow_server_protocol_framed_AbstractFramedStreamSinkChannel": [
            "AbstractFramedStreamSinkChannel:close()"
        ],
        "core_src_main_java_io_undertow_websockets_core_WebSocketChannel": [
            "WebSocketChannel:lastDataRead()"
        ],
        "core_src_main_java_io_undertow_server_protocol_framed_AbstractFramedStreamSourceChannel": [
            "AbstractFramedStreamSourceChannel:close()"
        ]
    },
    "CVE-2022-24280": {
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_ServiceChannelInitializer": [
            "ServiceChannelInitializer:ServiceChannelInitializer(ProxyService,ProxyConfiguration,boolean)"
        ],
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_DirectProxyHandler": [
            "DirectProxyHandler$ProxyBackendHandler:operationComplete(Future)"
        ],
        "pulsar-common_src_main_java_org_apache_pulsar_common_protocol_PulsarHandler": [
            "PulsarHandler:cancelKeepAliveTask()"
        ],
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_TargetAddressDeniedException": [
            "TargetAddressDeniedException:TargetAddressDeniedException(String)"
        ],
        "pulsar-proxy_src_main_java_org_apache_pulsar_proxy_server_ProxyConnection": [
            "ProxyConnection:operationComplete(Future)",
            "ProxyConnection:ProxyConnection(ProxyService,Supplier)"
        ]
    },
    "CVE-2017-2589": {
        "hawtio-system_src_main_java_io_hawt_web_ProxyDetails": [
            "ProxyDetails:getPassword()",
            "ProxyDetails:getFullProxyUrl()",
            "ProxyDetails:getUserName()"
        ],
        "hawtio-system_src_main_java_io_hawt_web_ProxyServlet": [
            "ProxyServlet:destroy()",
            "ProxyServlet:parseProxyAddress(HttpServletRequest)"
        ]
    },
    "CVE-2018-15801": {
        "oauth2_oauth2-jose_src_main_java_org_springframework_security_oauth2_jwt_JwtIssuerValidator": [
            "JwtIssuerValidator:JwtIssuerValidator(String)"
        ]
    },
    "CVE-2020-11002": {
        "dropwizard-validation_src_main_java_io_dropwizard_validation_InterpolationHelper": [
            "InterpolationHelper:InterpolationHelper()"
        ],
        "dropwizard-validation_src_main_java_io_dropwizard_validation_selfvalidating_ViolationCollector": [
            "ViolationCollector:ViolationCollector(ConstraintValidatorContext)",
            "ViolationCollector:getContext()"
        ]
    },
    "CVE-2018-11799": {
        "core_src_main_java_org_apache_oozie_command_wf_SubmitHttpXCommand": [
            "SubmitHttpXCommand:addArchiveSection(Element,Configuration,Namespace)",
            "SubmitHttpXCommand:addFileSection(Element,Configuration,Namespace)"
        ],
        "core_src_main_java_org_apache_oozie_action_hadoop_LauncherConfigurationInjector": [
            "LauncherConfigurationInjector:inject(Configuration)"
        ]
    },
    "CVE-2019-19135": {
        "opc-ua-stack_stack-core_src_main_java_org_eclipse_milo_opcua_stack_core_util_NonceUtil": [
            "NonceUtil:getNonceLength(SecurityPolicy)",
            "NonceUtil:generateNonce(SecurityPolicy)"
        ]
    },
    "CVE-2020-13920": {
        "activemq-broker_src_main_java_org_apache_activemq_broker_jmx_ManagementContext": [
            "ManagementContext$JmxRegistry:unbind(String)",
            "ManagementContext$JmxRegistry:bind(String,Remote)",
            "ManagementContext$JmxRegistry:JmxRegistry(int)",
            "ManagementContext$JmxRegistry:rebind(String,Remote)"
        ]
    },
    "CVE-2019-10158": {
        "spring_spring5_spring5-common_src_main_java_org_infinispan_spring_common_session_AbstractInfinispanSessionRepository": [
            "AbstractInfinispanSessionRepository:removeFromCacheWithoutNotifications(String)"
        ],
        "spring_spring5_spring5-common_src_main_java_org_infinispan_spring_common_provider_SpringCache": [
            "SpringCache:getWriteTimeout()"
        ]
    },
    "CVE-2017-5645": {
        "log4j-core_src_main_java_org_apache_logging_log4j_core_net_server_ObjectInputStreamLogEventBridge": [
            "ObjectInputStreamLogEventBridge:ObjectInputStreamLogEventBridge(List)",
            "ObjectInputStreamLogEventBridge:ObjectInputStreamLogEventBridge()"
        ],
        "log4j-core_src_main_java_org_apache_logging_log4j_core_net_server_AbstractSocketServer": [
            "AbstractSocketServer$CommandLineArguments:setAllowedClasses(List)"
        ],
        "log4j-core_src_main_java_org_apache_logging_log4j_core_util_FilteredObjectInputStream": [
            "FilteredObjectInputStream:FilteredObjectInputStream(InputStream,Collection)"
        ]
    },
    "CVE-2019-12418": {
        "java_org_apache_catalina_mbeans_JmxRemoteLifecycleListener": [
            "JmxRemoteLifecycleListener$JmxRegistry:unbind(String)",
            "JmxRemoteLifecycleListener$JmxRegistry:JmxRegistry(int,RMIClientSocketFactory,RMIServerSocketFactory,String,Remote)",
            "JmxRemoteLifecycleListener$JmxRegistry:rebind(String,Remote)",
            "JmxRemoteLifecycleListener$JmxRegistry:bind(String,Remote)"
        ]
    },
    "CVE-2019-17563": {
        "java_org_apache_catalina_authenticator_AuthenticatorBase": [
            "AuthenticatorBase:register(Request,HttpServletResponse,Principal,String,String,String,boolean,boolean)"
        ]
    },
    "CVE-2020-10748": {
        "server-spi-private_src_main_java_org_keycloak_validation_ValidationUtil": [
            "ValidationUtil:onError(ValidationResult)"
        ],
        "server-spi-private_src_main_java_org_keycloak_validation_ValidationResult": [
            "ValidationResult:ValidationResult(Set)",
            "ValidationResult:getErrors()",
            "ValidationResult:isValid()"
        ],
        "services_src_main_java_org_keycloak_services_validation_ValidationMessage": [
            "ValidationMessage:getFieldId()",
            "ValidationMessage:setFieldId(String)",
            "ValidationMessage:setLocalizedMessageParameters(Object)",
            "ValidationMessage:setLocalizedMessageKey(String)",
            "ValidationMessage:ValidationMessage(String,String,Object)",
            "ValidationMessage:ValidationMessage(String)",
            "ValidationMessage:getMessage()",
            "ValidationMessage:getLocalizedMessageKey()",
            "ValidationMessage:getLocalizedMessageParameters()"
        ],
        "services_src_main_java_org_keycloak_validation_DefaultClientValidationProvider": [
            "DefaultClientValidationProvider$ValidationException:ValidationException(String)",
            "DefaultClientValidationProvider:FieldMessages(String,String,String,String,String,String,String)"
        ],
        "services_src_main_java_org_keycloak_services_validation_ValidationMessages": [
            "ValidationMessages:ValidationMessages()"
        ],
        "server-spi-private_src_main_java_org_keycloak_validation_ClientValidationUtil": [
            "ClientValidationUtil:onError(ClientValidationContext)",
            "ClientValidationUtil$DefaultClientValidationContext:getError()",
            "ClientValidationUtil$DefaultClientValidationContext:DefaultClientValidationContext(Event,KeycloakSession,ClientModel)",
            "ClientValidationUtil$DefaultClientValidationContext:getEvent()",
            "ClientValidationUtil$DefaultClientValidationContext:getClient()",
            "ClientValidationUtil$DefaultClientValidationContext:invalid(String)",
            "ClientValidationUtil$DefaultClientValidationContext:getSession()"
        ],
        "server-spi-private_src_main_java_org_keycloak_validation_DefaultValidationContext": [
            "DefaultValidationContext:getEvent()",
            "DefaultValidationContext:getSession()",
            "DefaultValidationContext:getObjectToValidate()",
            "DefaultValidationContext:DefaultValidationContext(Event,KeycloakSession,T)"
        ],
        "server-spi-private_src_main_java_org_keycloak_validation_ClientValidationContext": [
            "ClientValidationContext$OIDCContext:getOIDCClient()",
            "ClientValidationContext:ClientValidationContext(Event,KeycloakSession,ClientModel)",
            "ClientValidationContext$OIDCContext:invalid(String)"
        ],
        "server-spi-private_src_main_java_org_keycloak_validation_ValidationError": [
            "ValidationError:getLocalizedMessageKey()",
            "ValidationError:getFieldId()",
            "ValidationError:getLocalizedMessageParams()",
            "ValidationError:getMessage()"
        ]
    },
    "CVE-2018-10936": {
        "pgjdbc_src_main_java_org_postgresql_ssl_jdbc4_LazyKeyManager": [
            "LazyKeyManager:LazyKeyManager(String,String,CallbackHandler,boolean)"
        ],
        "pgjdbc_src_main_java_org_postgresql_util_ObjectFactory": [
            "ObjectFactory:instantiate(String,Properties,boolean,String)"
        ]
    },
    "CVE-2017-14063": {
        "client_src_main_java_org_asynchttpclient_uri_UriParser": [
            "UriParser:isValidProtocolChars(String)",
            "UriParser:computePath(boolean)",
            "UriParser:trimLeft(String)",
            "UriParser:removeTailing2Dots()",
            "UriParser:parseAuthority()",
            "UriParser:removeEmbedded2Dots()",
            "UriParser:computeUserInfo()",
            "UriParser:inheritContextQuery(Uri,boolean)",
            "UriParser:overrideWithContext(Uri,String)",
            "UriParser:isFragmentOnly(String)",
            "UriParser:trimRight(String)",
            "UriParser:removeTrailingDot()",
            "UriParser:computeIPV6()",
            "UriParser:removeStartingDot()"
        ]
    },
    "CVE-2018-11775": {
        "activemq-client_src_main_java_org_apache_activemq_transport_tcp_SslTransportServer": [
            "SslTransportServer:createTransport(Socket,WireFormat)",
            "SslTransportServer:bind()"
        ],
        "activemq-client_src_main_java_org_apache_activemq_transport_nio_NIOSSLTransport": [
            "NIOSSLTransport:setVerifyHostName(boolean)",
            "NIOSSLTransport:isVerifyHostName()"
        ],
        "activemq-client_src_main_java_org_apache_activemq_transport_tcp_TcpTransport": [
            "TcpTransport:getWireFormat()"
        ],
        "activemq-client_src_main_java_org_apache_activemq_transport_tcp_SslTransport": [
            "SslTransport:setVerifyHostName(Boolean)"
        ]
    },
    "CVE-2017-7656": {
        "jetty-http_src_main_java_org_eclipse_jetty_http_HttpParser": [
            "HttpParser$BadMessageException:BadMessageException(int,String)"
        ]
    },
    "CVE-2018-12536": {
        "jetty-util_src_main_java_org_eclipse_jetty_util_resource_PathResource": [
            "PathResource:PathResource(PathResource,String)",
            "PathResource:addPath(String)"
        ]
    },
    "CVE-2017-2617": {
        "hawtio-system_src_main_java_io_hawt_web_GlobalFileUploadFilter": [
            "GlobalFileUploadFilter$MagicNumberFileFilter:getMagicNumbers()",
            "GlobalFileUploadFilter$MagicNumberFileFilter:setExceptions(List)",
            "GlobalFileUploadFilter$MagicNumberFileFilter:MagicNumberFileFilter()",
            "GlobalFileUploadFilter$MagicNumberFileFilter:getByteOffset()",
            "GlobalFileUploadFilter$MagicNumberFileFilter:getMaxSize()",
            "GlobalFileUploadFilter$MagicNumberFileFilter:getExceptions()"
        ]
    },
    "CVE-2016-4977": {
        "spring-security-oauth2_src_main_java_org_springframework_security_oauth2_provider_endpoint_SpelView": [
            "SpelView:SpelView(String)"
        ]
    },
    "CVE-2017-4973": {
        "server_src_main_java_org_cloudfoundry_identity_uaa_scim_endpoints_ScimGroupEndpoints": [
            "ScimGroupEndpoints:patchGroup(ScimGroup,String,String,HttpServletResponse)"
        ]
    },
    "CVE-2017-4974": {
        "server_src_main_java_org_cloudfoundry_identity_uaa_resources_jdbc_SimpleSearchQueryConverter": [
            "SimpleSearchQueryConverter:SimpleSearchQueryConverter()"
        ],
        "common_src_main_java_org_cloudfoundry_identity_uaa_rest_jdbc_SimpleSearchQueryConverter": [
            "SimpleSearchQueryConverter:SimpleSearchQueryConverter()"
        ]
    },
    "CVE-2019-10088": {
        "tika-core_src_main_java_org_apache_tika_parser_RecursiveParserWrapper": [
            "RecursiveParserWrapper$RecursivelySecureContentHandler:RecursivelySecureContentHandler(ContentHandler,TikaInputStream)"
        ]
    },
    "CVE-2019-10093": {
        "tika-core_src_main_java_org_apache_tika_utils_XMLReaderUtils": [
            "XMLReaderUtils:acquireSAXParser()",
            "XMLReaderUtils:acquireDOMBuilder()"
        ]
    },
    "CVE-2019-10094": {
        "tika-core_src_main_java_org_apache_tika_parser_RecursiveParserWrapper": [
            "RecursiveParserWrapper$RecursivelySecureContentHandler:RecursivelySecureContentHandler(ContentHandler,TikaInputStream)"
        ]
    },
    "CVE-2022-31679": {
        "spring-data-rest-webmvc_src_main_java_org_springframework_data_rest_webmvc_json_patch_PatchOperation": [
            "PatchOperation:perform(Object,Class)"
        ],
        "spring-data-rest-webmvc_src_main_java_org_springframework_data_rest_webmvc_config_PersistentEntityResourceHandlerMethodArgumentResolver": [
            "PersistentEntityResourceHandlerMethodArgumentResolver:PersistentEntityResourceHandlerMethodArgumentResolver(List,RootResourceInformationHandlerMethodArgumentResolver,BackendIdHandlerMethodArgumentResolver,DomainObjectReader,PluginRegistry)"
        ],
        "spring-data-rest-webmvc_src_main_java_org_springframework_data_rest_webmvc_json_patch_JsonPatchPatchConverter": [
            "JsonPatchPatchConverter:JsonPatchPatchConverter(ObjectMapper)"
        ],
        "spring-data-rest-webmvc_src_main_java_org_springframework_data_rest_webmvc_json_MappedProperties": [
            "MappedProperties:isWritableProperty(String)",
            "MappedProperties:getPersistentProperty(String)"
        ],
        "spring-data-rest-webmvc_src_main_java_org_springframework_data_rest_webmvc_json_patch_JsonPointerMapping": [
            "JsonPointerMapping:JsonPointerMapping(BindContext)"
        ],
        "spring-data-rest-webmvc_src_main_java_org_springframework_data_rest_webmvc_config_JsonPatchHandler": [
            "JsonPatchHandler:applyMergePatch(InputStream,T)",
            "JsonPatchHandler:applyPut(ObjectNode,T)"
        ],
        "spring-data-rest-webmvc_src_main_java_org_springframework_data_rest_webmvc_json_patch_Patch": [
            "Patch:Patch(List)"
        ],
        "spring-data-rest-webmvc_src_main_java_org_springframework_data_rest_webmvc_json_patch_SpelPath": [
            "SpelPath:getPath()",
            "SpelPath$TypedSpelPath$CacheKey:toString()",
            "SpelPath:removeFrom(Object)",
            "SpelPath:getValue(Object)",
            "SpelPath:getLeafType()",
            "SpelPath:setValue(Object,Object)",
            "SpelPath:getExpressionString()",
            "SpelPath:getType(Object)",
            "SpelPath:copyFrom(UntypedSpelPath,Object,BindContext)",
            "SpelPath:moveFrom(UntypedSpelPath,Object,BindContext)",
            "SpelPath:addValue(Object,Object)",
            "SpelPath$TypedSpelPath:TypedSpelPath(UntypedSpelPath,Class)",
            "SpelPath$TypedSpelPath$CacheKey:CacheKey(Class,UntypedSpelPath)",
            "SpelPath$TypedSpelPath:removeFrom(Object)"
        ]
    },
    "CVE-2020-10686": {
        "services_src_main_java_org_keycloak_services_resources_admin_UserResource": [
            "UserResource:setCredentialUserLabel(String,String)",
            "UserResource:moveCredentialAfter(String,String)"
        ]
    },
    "CVE-2019-10072": {
        "java_org_apache_coyote_http2_Stream": [
            "Stream:doWriteTimeout()",
            "Stream:reserveWindowSize(int,boolean)"
        ]
    },
    "CVE-2017-5641": {
        "core_src_main_java_flex_messaging_validators_ClassDeserializationValidator": [
            "ClassDeserializationValidator:ClassDeserializationValidator()",
            "ClassDeserializationValidator:validateAssignment(Object,int,Object)",
            "ClassDeserializationValidator:validateAssignment(Object,String,Object)",
            "ClassDeserializationValidator:initialize(String,ConfigMap)"
        ]
    },
    "CVE-2020-1727": {
        "services_src_main_java_org_keycloak_social_google_GoogleIdentityProviderConfig": [
            "GoogleIdentityProviderConfig:GoogleIdentityProviderConfig()"
        ],
        "services_src_main_java_org_keycloak_broker_oidc_OIDCIdentityProviderConfig": [
            "OIDCIdentityProviderConfig:OIDCIdentityProviderConfig()"
        ],
        "services_src_main_java_org_keycloak_social_openshift_OpenshiftV4IdentityProviderConfig": [
            "OpenshiftV4IdentityProviderConfig:OpenshiftV4IdentityProviderConfig()"
        ],
        "services_src_main_java_org_keycloak_broker_oidc_OAuth2IdentityProviderConfig": [
            "OAuth2IdentityProviderConfig:OAuth2IdentityProviderConfig()"
        ],
        "server-spi_src_main_java_org_keycloak_models_IdentityProviderModel": [
            "IdentityProviderModel:validate(RealmModel)"
        ],
        "services_src_main_java_org_keycloak_social_openshift_OpenshiftV3IdentityProviderConfig": [
            "OpenshiftV3IdentityProviderConfig:OpenshiftV3IdentityProviderConfig()"
        ],
        "services_src_main_java_org_keycloak_social_stackoverflow_StackOverflowIdentityProviderConfig": [
            "StackOverflowIdentityProviderConfig:StackOverflowIdentityProviderConfig()"
        ],
        "services_src_main_java_org_keycloak_social_paypal_PayPalIdentityProviderConfig": [
            "PayPalIdentityProviderConfig:PayPalIdentityProviderConfig()"
        ]
    },
    "CVE-2017-9796": {
        "geode-core_src_main_java_org_apache_geode_internal_cache_xmlcache_CacheCreation": [
            "CacheCreation:getQueryService()"
        ],
        "geode-core_src_main_java_org_apache_geode_cache_query_internal_CompiledSelect": [
            "CompiledSelect:getFieldTypeOfProjAttrib(ExecutionContext,CompiledValue)"
        ],
        "geode-core_src_main_java_org_apache_geode_cache_query_internal_DefaultQueryService": [
            "DefaultQueryService:getMethodInvocationAuthorizer()"
        ]
    },
    "CVE-2016-5007": {
        "spring-webmvc_src_main_java_org_springframework_web_servlet_handler_AbstractHandlerMapping": [
            "AbstractHandlerMapping$PreFlightHandler:getCorsConfiguration(HttpServletRequest)",
            "AbstractHandlerMapping$CorsInterceptor:getCorsConfiguration(HttpServletRequest)"
        ],
        "spring-webmvc_src_main_java_org_springframework_web_servlet_support_HandlerMappingIntrospector": [
            "HandlerMappingIntrospector$RequestAttributeChangeIgnoringWrapper:setAttribute(String,Object)",
            "HandlerMappingIntrospector:HandlerMappingIntrospector(ApplicationContext)",
            "HandlerMappingIntrospector:getHandlerMappings()",
            "HandlerMappingIntrospector$RequestAttributeChangeIgnoringWrapper:RequestAttributeChangeIgnoringWrapper(HttpServletRequest)"
        ],
        "config_src_main_java_org_springframework_security_config_annotation_web_configurers_ChannelSecurityConfigurer": [
            "ChannelSecurityConfigurer$ChannelRequestMatcherRegistry:ChannelRequestMatcherRegistry()",
            "ChannelSecurityConfigurer:ChannelSecurityConfigurer()"
        ],
        "config_src_main_java_org_springframework_security_config_annotation_web_builders_WebSecurity": [
            "WebSecurity$IgnoredRequestConfigurer:IgnoredRequestConfigurer()"
        ],
        "config_src_main_java_org_springframework_security_config_annotation_web_configuration_WebSecurityConfigurerAdapter": [
            "WebSecurityConfigurerAdapter:getApplicationContext()"
        ],
        "config_src_main_java_org_springframework_security_config_annotation_web_configurers_ExpressionUrlAuthorizationConfigurer": [
            "ExpressionUrlAuthorizationConfigurer:ExpressionUrlAuthorizationConfigurer()",
            "ExpressionUrlAuthorizationConfigurer:ExpressionUrlAuthorizationConfigurer(ApplicationContext)"
        ],
        "web_src_main_java_org_springframework_security_web_access_expression_ExpressionBasedFilterInvocationSecurityMetadataSource": [
            "ExpressionBasedFilterInvocationSecurityMetadataSource$RequestVariablesExtractorEvaluationContextPostProcessor:RequestVariablesExtractorEvaluationContextPostProcessor(RequestVariablesExtractor)"
        ],
        "config_src_main_java_org_springframework_security_config_annotation_web_AbstractRequestMatcherRegistry": [
            "AbstractRequestMatcherRegistry:setApplicationContext(ApplicationContext)"
        ],
        "config_src_main_java_org_springframework_security_config_annotation_web_builders_HttpSecurity": [
            "HttpSecurity$RequestMatcherConfigurer:RequestMatcherConfigurer()"
        ],
        "config_src_main_java_org_springframework_security_config_annotation_web_configurers_UrlAuthorizationConfigurer": [
            "UrlAuthorizationConfigurer:UrlAuthorizationConfigurer(ApplicationContext)"
        ],
        "config_src_main_java_org_springframework_security_config_annotation_AbstractConfiguredSecurityBuilder": [
            "AbstractConfiguredSecurityBuilder:getSharedObjects()"
        ],
        "config_src_main_java_org_springframework_security_config_http_HandlerMappingIntrospectorFactoryBean": [
            "HandlerMappingIntrospectorFactoryBean:setApplicationContext(ApplicationContext)"
        ],
        "config_src_main_java_org_springframework_security_config_annotation_web_configurers_CsrfConfigurer": [
            "CsrfConfigurer:CsrfConfigurer()"
        ],
        "web_src_main_java_org_springframework_security_web_servlet_util_matcher_MvcRequestMatcher": [
            "MvcRequestMatcher:setMethod(HttpMethod)",
            "MvcRequestMatcher:MvcRequestMatcher(HandlerMappingIntrospector,String)"
        ]
    },
    "CVE-2021-36162": {
        "dubbo-registry_dubbo-registry-kubernetes_src_main_java_org_apache_dubbo_registry_kubernetes_KubernetesMeshEnvListener": [
            "KubernetesMeshEnvListener:onClose(WatcherException)",
            "KubernetesMeshEnvListener:isEnable()"
        ]
    },
    "CVE-2022-31692": {
        "web_src_main_java_org_springframework_security_web_access_intercept_AuthorizationFilter": [
            "AuthorizationFilter:setObserveOncePerRequest(boolean)",
            "AuthorizationFilter:setFilterAsyncDispatch(boolean)",
            "AuthorizationFilter:isObserveOncePerRequest()",
            "AuthorizationFilter:setFilterErrorDispatch(boolean)"
        ]
    },
    "CVE-2022-37021": {
        "geode-core_src_main_java_org_apache_geode_management_internal_JmxRmiOpenTypesSerialFilter": [
            "JmxRmiOpenTypesSerialFilter:JmxRmiOpenTypesSerialFilter(Consumer,Supplier)",
            "JmxRmiOpenTypesSerialFilter:JmxRmiOpenTypesSerialFilter()"
        ],
        "geode-core_src_main_java_org_apache_geode_internal_serialization_filter_DistributedSerializableObjectConfig": [
            "DistributedSerializableObjectConfig:DistributedSerializableObjectConfig(Properties)"
        ],
        "geode-core_src_main_java_org_apache_geode_internal_EmptyInputStreamFilter": [
            "EmptyInputStreamFilter:setFilterOn(ObjectInputStream)"
        ],
        "geode-core_src_main_java_org_apache_geode_management_internal_ManagementAgent": [
            "ManagementAgent:ManagementAgent(DistributionConfig,InternalCache,JmxRmiSerialFilter)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_DelegatingGlobalSerialFilterFactory": [
            "DelegatingGlobalSerialFilterFactory:DelegatingGlobalSerialFilterFactory()",
            "DelegatingGlobalSerialFilterFactory:DelegatingGlobalSerialFilterFactory(ObjectInputFilterApiFactory)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_ReflectionObjectInputFilterApi": [
            "ReflectionObjectInputFilterApi:toString()",
            "ReflectionObjectInputFilterApi:getApiPackage()",
            "ReflectionObjectInputFilterApi:getObjectInputFilterClass()"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_GlobalSerialFilterConfiguration": [
            "GlobalSerialFilterConfiguration:GlobalSerialFilterConfiguration(GlobalSerialFilter,Consumer)",
            "GlobalSerialFilterConfiguration$SetSerialFilter:SetSerialFilter(GlobalSerialFilter,Consumer)",
            "GlobalSerialFilterConfiguration:GlobalSerialFilterConfiguration(GlobalSerialFilter)",
            "GlobalSerialFilterConfiguration:GlobalSerialFilterConfiguration(SerializableObjectConfig,Consumer,GlobalSerialFilterFactory)",
            "GlobalSerialFilterConfiguration:create(String)",
            "GlobalSerialFilterConfiguration:GlobalSerialFilterConfiguration(SerializableObjectConfig)",
            "GlobalSerialFilterConfiguration:GlobalSerialFilterConfiguration(SerializableObjectConfig,FilterPatternFactory,Supplier,Consumer,GlobalSerialFilterFactory)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_SystemPropertyConfiguration": [
            "SystemPropertyConfiguration:SystemPropertyConfiguration(String,String,Consumer)",
            "SystemPropertyConfiguration:SystemPropertyConfiguration(String,String)",
            "SystemPropertyConfiguration$SetSystemProperty:SetSystemProperty(String,String,Consumer)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_DelegatingObjectInputFilter": [
            "DelegatingObjectInputFilter:DelegatingObjectInputFilter(ObjectInputFilterApi,String,Collection)",
            "DelegatingObjectInputFilter:getObjectInputFilterApi()"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_DelegatingGlobalSerialFilter": [
            "DelegatingGlobalSerialFilter:toString()",
            "DelegatingGlobalSerialFilter:DelegatingGlobalSerialFilter(ObjectInputFilterApi,String,Collection)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_DelegatingObjectInputFilterFactory": [
            "DelegatingObjectInputFilterFactory:DelegatingObjectInputFilterFactory()",
            "DelegatingObjectInputFilterFactory:DelegatingObjectInputFilterFactory(ObjectInputFilterApiFactory)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_SystemPropertyJmxSerialFilterConfigurationFactory": [
            "SystemPropertyJmxSerialFilterConfigurationFactory:SystemPropertyJmxSerialFilterConfigurationFactory()",
            "SystemPropertyJmxSerialFilterConfigurationFactory:SystemPropertyJmxSerialFilterConfigurationFactory(boolean,String)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_ReflectiveFacadeObjectInputFilterFactory": [
            "ReflectiveFacadeObjectInputFilterFactory:ReflectiveFacadeObjectInputFilterFactory()",
            "ReflectiveFacadeObjectInputFilterFactory:ReflectiveFacadeObjectInputFilterFactory(ObjectInputFilterApi)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_ObjectInputFilterUtils": [
            "ObjectInputFilterUtils:ObjectInputFilterUtils()"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_ReflectiveObjectInputFilterApi": [
            "ReflectiveObjectInputFilterApi:getApiPackage()",
            "ReflectiveObjectInputFilterApi:getObjectInputFilterClass()",
            "ReflectiveObjectInputFilterApi:toString()"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_SystemPropertyGlobalSerialFilterConfigurationFactory": [
            "SystemPropertyGlobalSerialFilterConfigurationFactory:SystemPropertyGlobalSerialFilterConfigurationFactory(boolean)",
            "SystemPropertyGlobalSerialFilterConfigurationFactory:SystemPropertyGlobalSerialFilterConfigurationFactory()"
        ],
        "geode-core_src_main_java_org_apache_geode_internal_DistributedSerializableObjectConfig": [
            "DistributedSerializableObjectConfig:DistributedSerializableObjectConfig(Properties)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_ReflectiveFacadeGlobalSerialFilter": [
            "ReflectiveFacadeGlobalSerialFilter:toString()",
            "ReflectiveFacadeGlobalSerialFilter:ReflectiveFacadeGlobalSerialFilter(ObjectInputFilterApi,String,Collection)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_JmxSerialFilterConfiguration": [
            "JmxSerialFilterConfiguration:JmxSerialFilterConfiguration(String,String,Consumer)",
            "JmxSerialFilterConfiguration:JmxSerialFilterConfiguration(String,String)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_ReflectiveFacadeGlobalSerialFilterFactory": [
            "ReflectiveFacadeGlobalSerialFilterFactory:ReflectiveFacadeGlobalSerialFilterFactory(ObjectInputFilterApi)",
            "ReflectiveFacadeGlobalSerialFilterFactory:ReflectiveFacadeGlobalSerialFilterFactory()"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_ReflectiveFacadeObjectInputFilter": [
            "ReflectiveFacadeObjectInputFilter:toString()",
            "ReflectiveFacadeObjectInputFilter:getObjectInputFilterApi()",
            "ReflectiveFacadeObjectInputFilter:ReflectiveFacadeObjectInputFilter(ObjectInputFilterApi,String,Collection)"
        ],
        "geode-serialization_src_main_java_org_apache_geode_internal_serialization_filter_SanctionedSerializables": [
            "SanctionedSerializables:loadClassNames(URL)"
        ]
    },
    "CVE-2015-5211": {
        "spring-web_src_main_java_org_springframework_web_accept_PathExtensionContentNegotiationStrategy": [
            "PathExtensionContentNegotiationStrategy:setUseJaf(boolean)"
        ],
        "spring-web_src_main_java_org_springframework_web_accept_ContentNegotiationManager": [
            "ContentNegotiationManager:getAllFileExtensions()"
        ],
        "spring-webmvc_src_main_java_org_springframework_web_servlet_mvc_method_annotation_AbstractMessageConverterMethodProcessor": [
            "AbstractMessageConverterMethodProcessor:AbstractMessageConverterMethodProcessor(List)",
            "AbstractMessageConverterMethodProcessor:getProducibleMediaTypes(HttpServletRequest,Class)"
        ]
    },
    "CVE-2022-43766": {
        "server_src_main_java_org_apache_iotdb_db_conf_IoTDBConfig": [
            "IoTDBConfig:getPatternMatchingThreshold()",
            "IoTDBConfig:setPatternMatchingThreshold(int)"
        ],
        "tsfile_src_main_java_org_apache_iotdb_tsfile_read_filter_operator_Regexp": [
            "Regexp$MatcherInput:toString()",
            "Regexp$MatcherInput:MatcherInput(CharSequence,AccessCount)"
        ],
        "tsfile_src_main_java_org_apache_iotdb_tsfile_common_conf_TSFileConfig": [
            "TSFileConfig:setPatternMatchingThreshold(int)",
            "TSFileConfig:getPatternMatchingThreshold()"
        ]
    },
    "CVE-2015-3192": {
        "spring-web_src_main_java_org_springframework_http_converter_xml_Jaxb2RootElementHttpMessageConverter": [
            "Jaxb2RootElementHttpMessageConverter:setSupportDtd(boolean)",
            "Jaxb2RootElementHttpMessageConverter:isSupportDtd()"
        ],
        "spring-oxm_src_main_java_org_springframework_oxm_jaxb_Jaxb2Marshaller": [
            "Jaxb2Marshaller:isSupportDtd()",
            "Jaxb2Marshaller:setSupportDtd(boolean)"
        ],
        "spring-oxm_src_main_java_org_springframework_oxm_support_AbstractMarshaller": [
            "AbstractMarshaller:setSupportDtd(boolean)",
            "AbstractMarshaller:isSupportDtd()"
        ],
        "spring-web_src_main_java_org_springframework_http_converter_xml_SourceHttpMessageConverter": [
            "SourceHttpMessageConverter:setSupportDtd(boolean)",
            "SourceHttpMessageConverter:isSupportDtd()"
        ]
    },
    "CVE-2019-17566": {
        "batik-svgrasterizer_src_main_java_org_apache_batik_apps_rasterizer_Main": [
            "Main:getOptionDescription()"
        ]
    },
    "CVE-2022-21724": {
        "pgjdbc_src_main_java_org_postgresql_core_v3_AuthenticationPluginManager": [
            "AuthenticationPluginManager:withEncodedPassword(AuthenticationRequestType,Properties,PasswordAction)"
        ]
    },
    "CVE-2021-43859": {
        "xstream_src_java_com_thoughtworks_xstream_XStream": [
            "XStream:setCollectionUpdateLimit(int)"
        ],
        "xstream_src_java_com_thoughtworks_xstream_security_InputManipulationException": [
            "InputManipulationException:InputManipulationException(String)"
        ],
        "xstream_src_java_com_thoughtworks_xstream_security_AbstractSecurityException": [
            "AbstractSecurityException:AbstractSecurityException(String)"
        ]
    },
    "CVE-2018-1199": {
        "config_src_main_java_org_springframework_security_config_annotation_web_builders_WebSecurity": [
            "WebSecurity:httpFirewall(HttpFirewall)"
        ],
        "web_src_main_java_org_springframework_security_web_firewall_StrictHttpFirewall": [
            "StrictHttpFirewall:reset()"
        ]
    },
    "CVE-2021-26920,CVE-2021-36749": {
        "core_src_main_java_org_apache_druid_data_input_impl_HttpInputSourceConfig": [
            "HttpInputSourceConfig:getAllowedProtocols()",
            "HttpInputSourceConfig:toString()",
            "HttpInputSourceConfig:HttpInputSourceConfig(Set)"
        ],
        "extensions-core_hdfs-storage_src_main_java_org_apache_druid_inputsource_hdfs_HdfsInputSourceConfig": [
            "HdfsInputSourceConfig:HdfsInputSourceConfig(Set)",
            "HdfsInputSourceConfig:getAllowedProtocols()"
        ],
        "extensions-core_hdfs-storage_src_main_java_org_apache_druid_firehose_hdfs_HdfsFirehoseFactory": [
            "HdfsFirehoseFactory:toString()"
        ],
        "extensions-core_hdfs-storage_src_main_java_org_apache_druid_inputsource_hdfs_HdfsInputSource": [
            "HdfsInputSource$Builder:inputSourceConfig(HdfsInputSourceConfig)",
            "HdfsInputSource:builder()"
        ]
    },
    "CVE-2021-32769": {
        "inject_src_main_java_io_micronaut_context_env_DefaultEnvironment": [
            "DefaultEnvironment:readPropertySourceListFromFiles(String)"
        ],
        "core_src_main_java_io_micronaut_core_io_file_DefaultFileSystemResourceLoader": [
            "DefaultFileSystemResourceLoader:DefaultFileSystemResourceLoader()"
        ],
        "core_src_main_java_io_micronaut_core_io_scan_DefaultClassPathResourceLoader": [
            "DefaultClassPathResourceLoader:DefaultClassPathResourceLoader(ClassLoader,String)"
        ]
    },
    "CVE-2021-29479": {
        "ratpack-core_src_main_java_ratpack_server_internal_ServerBindPublicAddress": [
            "ServerBindPublicAddress:ServerBindPublicAddress(RatpackServer)"
        ],
        "ratpack-core_src_main_java_ratpack_http_client_internal_RequestActionSupport": [
            "RequestActionSupport:createSslHandler()",
            "RequestActionSupport:channelInactive(ChannelHandlerContext)"
        ]
    },
    "CVE-2021-29480": {
        "ratpack-session_src_main_java_ratpack_session_clientside_ClientSideSessionConfig": [
            "ClientSideSessionConfig:getSecretToken()",
            "ClientSideSessionConfig:setSecretKey(String)",
            "ClientSideSessionConfig:getCipherAlgorithm()",
            "ClientSideSessionConfig:setCipherAlgorithm(String)",
            "ClientSideSessionConfig:getSecretKey()"
        ]
    },
    "CVE-2021-29481": {
        "ratpack-session_src_main_java_ratpack_session_clientside_ClientSideSessionConfig": [
            "ClientSideSessionConfig:getSecretToken()",
            "ClientSideSessionConfig:setSecretKey(String)",
            "ClientSideSessionConfig:getCipherAlgorithm()",
            "ClientSideSessionConfig:setCipherAlgorithm(String)",
            "ClientSideSessionConfig:getSecretKey()"
        ]
    },
    "CVE-2021-29485": {
        "ratpack-session_src_main_java_ratpack_session_internal_InsecureSessionSerializerWarning": [
            "InsecureSessionSerializerWarning:InsecureSessionSerializerWarning()"
        ],
        "ratpack-session_src_main_java_ratpack_session_internal_CompositeSessionTypeFilter": [
            "CompositeSessionTypeFilter:CompositeSessionTypeFilter(Iterable)"
        ],
        "ratpack-session_src_main_java_ratpack_session_internal_DefaultSession": [
            "DefaultSession:DefaultSession(SessionId,ByteBufAllocator,SessionStore,Response,SessionSerializer,JavaSessionSerializer)"
        ],
        "ratpack-session_src_main_java_ratpack_session_internal_JdkSessionTypeFilterPlugin": [
            "JdkSessionTypeFilterPlugin:JdkSessionTypeFilterPlugin()"
        ],
        "ratpack-pac4j_src_main_java_ratpack_pac4j_RatpackPac4j": [
            "RatpackPac4j:login(Context,Class)",
            "RatpackPac4j:userProfile(Context)",
            "RatpackPac4j:logout(Context)",
            "RatpackPac4j:requireAuth(Class,Authorizer)"
        ],
        "ratpack-session_src_main_java_ratpack_session_internal_JavaBuiltinSessionSerializer": [
            "JavaBuiltinSessionSerializer$TypeFilteringObjectOutputStream:TypeFilteringObjectOutputStream(OutputStream,SessionTypeFilter)",
            "JavaBuiltinSessionSerializer$TypeFilteringObjectInputStream:TypeFilteringObjectInputStream(InputStream,SessionTypeFilter)"
        ],
        "ratpack-session_src_main_java_ratpack_session_internal_RatpackSessionTypeFilterPlugin": [
            "RatpackSessionTypeFilterPlugin:RatpackSessionTypeFilterPlugin()"
        ],
        "ratpack-session_src_main_java_ratpack_session_NonAllowedSessionTypeException": [
            "NonAllowedSessionTypeException:NonAllowedSessionTypeException(String)"
        ],
        "ratpack-session_src_main_java_ratpack_session_SessionModule": [
            "SessionModule:memoryStore(Consumer)"
        ],
        "ratpack-session_src_main_java_ratpack_session_internal_DefaultSessionKey": [
            "DefaultSessionKey:toString()",
            "DefaultSessionKey:getType()"
        ]
    },
    "CVE-2020-9491": {
        "nifi-commons_nifi-socket-utils_src_main_java_org_apache_nifi_io_socket_ServerSocketConfiguration": [
            "ServerSocketConfiguration:setSSLContextFactory(SSLContextFactory)"
        ],
        "nifi-nar-bundles_nifi-framework-bundle_nifi-framework_nifi-security_src_main_java_org_apache_nifi_framework_security_util_SslException": [
            "SslException:SslException(Throwable)",
            "SslException:SslException()",
            "SslException:SslException(String)",
            "SslException:SslException(String,Throwable)"
        ],
        "nifi-nar-bundles_nifi-framework-bundle_nifi-framework_nifi-security_src_main_java_org_apache_nifi_framework_security_util_SslServerSocketFactoryCreationException": [
            "SslServerSocketFactoryCreationException:SslServerSocketFactoryCreationException(Throwable)",
            "SslServerSocketFactoryCreationException:SslServerSocketFactoryCreationException(String,Throwable)",
            "SslServerSocketFactoryCreationException:SslServerSocketFactoryCreationException()",
            "SslServerSocketFactoryCreationException:SslServerSocketFactoryCreationException(String)"
        ],
        "nifi-commons_nifi-socket-utils_src_main_java_org_apache_nifi_io_socket_SocketConfiguration": [
            "SocketConfiguration:setSSLContextFactory(SSLContextFactory)"
        ],
        "nifi-commons_nifi-security-utils_src_main_java_org_apache_nifi_security_util_SslContextFactory": [
            "SslContextFactory:ClientAuth(String,String)",
            "SslContextFactory:toString()"
        ],
        "nifi-nar-bundles_nifi-site-to-site-reporting-bundle_nifi-site-to-site-reporting-task_src_main_java_org_apache_nifi_reporting_AbstractSiteToSiteReportingTask": [
            "AbstractSiteToSiteReportingTask$JsonRecordReader:getNextJsonNode()"
        ],
        "nifi-nar-bundles_nifi-framework-bundle_nifi-framework_nifi-framework-core_src_main_java_org_apache_nifi_controller_queue_clustered_server_ConnectionLoadBalanceServer": [
            "ConnectionLoadBalanceServer$CommunicateAction:CommunicateAction(LoadBalanceProtocol,Socket)"
        ],
        "nifi-nar-bundles_nifi-framework-bundle_nifi-framework_nifi-security_src_main_java_org_apache_nifi_framework_security_util_SslSocketFactoryCreationException": [
            "SslSocketFactoryCreationException:SslSocketFactoryCreationException(Throwable)",
            "SslSocketFactoryCreationException:SslSocketFactoryCreationException()",
            "SslSocketFactoryCreationException:SslSocketFactoryCreationException(String,Throwable)",
            "SslSocketFactoryCreationException:SslSocketFactoryCreationException(String)"
        ],
        "nifi-commons_nifi-security-utils_src_main_java_org_apache_nifi_security_util_TlsConfiguration": [
            "TlsConfiguration:TlsConfiguration(String,String,String,KeystoreType,String,String,KeystoreType)",
            "TlsConfiguration:getTruststoreType()",
            "TlsConfiguration:getKeyPassword()",
            "TlsConfiguration:TlsConfiguration(TlsConfiguration)",
            "TlsConfiguration:getTruststorePath()",
            "TlsConfiguration:toString()",
            "TlsConfiguration:getKeystorePassword()",
            "TlsConfiguration:getKeystoreType()",
            "TlsConfiguration:TlsConfiguration(String,String,String,String,String,String,String,String)",
            "TlsConfiguration:TlsConfiguration(String,String,String,String,String,String,String)",
            "TlsConfiguration:TlsConfiguration()",
            "TlsConfiguration:getProtocol()",
            "TlsConfiguration:TlsConfiguration(String,String,KeystoreType,String,String,KeystoreType)",
            "TlsConfiguration:TlsConfiguration(String,String,String,KeystoreType,String,String,KeystoreType,String)",
            "TlsConfiguration:getKeystorePath()",
            "TlsConfiguration:getTruststorePassword()"
        ],
        "nifi-commons_nifi-security-utils_src_main_java_org_apache_nifi_security_util_CertificateUtils": [
            "CertificateUtils:toString()",
            "CertificateUtils:ClientAuth(int,String)",
            "CertificateUtils:convertLegacyX509Certificate(javax.security.cert.X509Certificate)",
            "CertificateUtils:extractPeerDNFromSSLSocket(Socket)"
        ],
        "nifi-nar-bundles_nifi-framework-bundle_nifi-framework_nifi-site-to-site_src_main_java_org_apache_nifi_remote_SocketRemoteSiteListener": [
            "SocketRemoteSiteListener:start()"
        ],
        "nifi-nar-bundles_nifi-framework-bundle_nifi-framework_nifi-security_src_main_java_org_apache_nifi_framework_security_util_SslContextCreationException": [
            "SslContextCreationException:SslContextCreationException(String)",
            "SslContextCreationException:SslContextCreationException(Throwable)",
            "SslContextCreationException:SslContextCreationException(String,Throwable)",
            "SslContextCreationException:SslContextCreationException()"
        ]
    },
    "CVE-2020-9487": {
        "nifi-nar-bundles_nifi-framework-bundle_nifi-framework_nifi-web_nifi-web-security_src_main_java_org_apache_nifi_web_security_otp_TokenCache": [
            "TokenCache:toString()"
        ]
    },
    "CVE-2021-32623": {
        "modules_oaipmh_src_main_java_org_opencastproject_oaipmh_harvester_OaiPmhRepositoryClient": [
            "OaiPmhRepositoryClient:OaiPmhRepositoryClient(String)"
        ],
        "modules_common_src_main_java_org_opencastproject_util_XmlSafeParser": [
            "XmlSafeParser:XmlSafeParser()"
        ]
    },
    "CVE-2020-13940": {
        "nifi-nar-bundles_nifi-standard-bundle_nifi-standard-processors_src_main_java_org_apache_nifi_processors_standard_util_DocumentReaderCallback": [
            "DocumentReaderCallback:DocumentReaderCallback(boolean)"
        ],
        "nifi-nar-bundles_nifi-standard-bundle_nifi-standard-processors_src_main_java_org_apache_nifi_processors_standard_EvaluateXQuery": [
            "EvaluateXQuery:onTrigger(ProcessContext,ProcessSession)"
        ]
    },
    "CVE-2018-1305": {
        "java_org_apache_catalina_core_StandardWrapper": [
            "StandardWrapper:setServletSecurityAnnotationScanRequired(boolean)"
        ],
        "java_org_apache_catalina_core_ApplicationServletRegistration": [
            "ApplicationServletRegistration:setServletSecurity(ServletSecurityElement)"
        ],
        "java_org_apache_catalina_core_StandardContext": [
            "StandardContext:dynamicServletCreated(Servlet)"
        ]
    },
    "CVE-2021-44145": {
        "nifi-nar-bundles_nifi-standard-bundle_nifi-standard-processors_src_main_java_org_apache_nifi_processors_standard_TransformXml": [
            "TransformXml:onScheduled(ProcessContext)",
            "TransformXml:load(String)"
        ]
    },
    "CVE-2021-44832": {
        "log4j-core_src_main_java_org_apache_logging_log4j_core_appender_db_jdbc_DataSourceConnectionSource": [
            "DataSourceConnectionSource:DataSourceConnectionSource(String,DataSource)"
        ],
        "log4j-core_src_main_java_org_apache_logging_log4j_core_net_JndiManager": [
            "JndiManager:isJndiJdbcEnabled()"
        ]
    },
    "CVE-2013-7285": {
        "xstream_src_java_com_thoughtworks_xstream_security_RegExpTypePermission": [
            "RegExpTypePermission:RegExpTypePermission(String)",
            "RegExpTypePermission:RegExpTypePermission(Pattern)"
        ],
        "xstream_src_java_com_thoughtworks_xstream_security_ForbiddenClassException": [
            "ForbiddenClassException:ForbiddenClassException(Class)"
        ],
        "xstream_src_java_com_thoughtworks_xstream_security_NoPermission": [
            "NoPermission:NoPermission(TypePermission)"
        ],
        "xstream_src_java_com_thoughtworks_xstream_mapper_SecurityMapper": [
            "SecurityMapper:SecurityMapper(Mapper,TypePermission)",
            "SecurityMapper:SecurityMapper(Mapper)"
        ],
        "xstream_src_java_com_thoughtworks_xstream_security_WildcardTypePermission": [
            "WildcardTypePermission:WildcardTypePermission(String)"
        ],
        "xstream_src_java_com_thoughtworks_xstream_security_ExplicitTypePermission": [
            "ExplicitTypePermission:ExplicitTypePermission(String)"
        ]
    },
    "CVE-2019-11808": {
        "ratpack-session_src_main_java_ratpack_session_SessionModule": [
            "SessionModule:sessionIdGenerator()"
        ]
    },
    "CVE-2019-0194": {
        "camel-core_src_main_java_org_apache_camel_component_file_GenericFileEndpoint": [
            "GenericFileEndpoint:setJailStartingDirectory(boolean)",
            "GenericFileEndpoint:isJailStartingDirectory()"
        ]
    },
    "CVE-2018-11761": {
        "tika-core_src_main_java_org_apache_tika_utils_XMLReaderUtils": [
            "XMLReaderUtils:tryToSetStaxProperty(XMLInputFactory,String,boolean)",
            "XMLReaderUtils:setMaxEntityExpansions(int)"
        ]
    },
    "CVE-2021-33668": {
        "scimono-server_src_main_java_com_sap_scimono_entity_User": [
            "User:getPassword()"
        ]
    },
    "CVE-2022-26850": {
        "nifi-commons_nifi-single-user-utils_src_main_java_org_apache_nifi_authentication_single_user_writer_StandardLoginCredentialsWriter": [
            "StandardLoginCredentialsWriter:processProperty(XMLEventReader,XMLEventWriter,String)"
        ]
    },
    "CVE-2022-32532": {
        "core_src_main_java_org_apache_shiro_util_RegExPatternMatcher": [
            "RegExPatternMatcher:isCaseInsensitive()",
            "RegExPatternMatcher:setCaseInsensitive(boolean)"
        ]
    },
    "CVE-2019-9658": {
        "src_main_java_com_puppycrawl_tools_checkstyle_XmlLoader": [
            "XmlLoader$FeaturesForVerySecureJavaInstallations:FeaturesForVerySecureJavaInstallations()"
        ]
    },
    "CVE-2021-43113": {
        "io_src_main_java_com_itextpdf_io_util_GhostscriptHelper": [
            "GhostscriptHelper:runGhostScriptImageGeneration(String,String,String)"
        ]
    },
    "CVE-2016-8749": {
        "components_camel-jackson_src_main_java_org_apache_camel_component_jackson_JacksonDataFormat": [
            "JacksonDataFormat:isAllowJacksonUnmarshallType()",
            "JacksonDataFormat:setAllowJacksonUnmarshallType(boolean)",
            "JacksonDataFormat:setAllowUnmarshallType(boolean)",
            "JacksonDataFormat:isAllowUnmarshallType()"
        ],
        "components-starter_camel-gson-starter_src_main_java_org_apache_camel_component_gson_springboot_GsonDataFormatConfiguration": [
            "GsonDataFormatConfiguration:setAllowUnmarshallType(Boolean)",
            "GsonDataFormatConfiguration:getAllowUnmarshallType()"
        ],
        "components-starter_camel-jackson-starter_src_main_java_org_apache_camel_component_jackson_springboot_JacksonDataFormatConfiguration": [
            "JacksonDataFormatConfiguration:setAllowUnmarshallType(Boolean)",
            "JacksonDataFormatConfiguration:getAllowUnmarshallType()"
        ],
        "components-starter_camel-xstream-starter_src_main_java_org_apache_camel_dataformat_xstream_springboot_JsonDataFormatConfiguration": [
            "JsonDataFormatConfiguration:getAllowUnmarshallType()",
            "JsonDataFormatConfiguration:setAllowUnmarshallType(Boolean)"
        ],
        "components-starter_camel-johnzon-starter_src_main_java_org_apache_camel_component_johnzon_springboot_JohnzonDataFormatConfiguration": [
            "JohnzonDataFormatConfiguration:setAllowUnmarshallType(Boolean)",
            "JohnzonDataFormatConfiguration:getAllowUnmarshallType()"
        ],
        "components_camel-jacksonxml_src_main_java_org_apache_camel_component_jacksonxml_JacksonXMLDataFormat": [
            "JacksonXMLDataFormat:setAllowUnmarshallType(boolean)",
            "JacksonXMLDataFormat:isAllowUnmarshallType()"
        ],
        "camel-core_src_main_java_org_apache_camel_model_dataformat_JacksonXMLDataFormat": [
            "JacksonXMLDataFormat:getAllowUnmarshallType()",
            "JacksonXMLDataFormat:setAllowUnmarshallType(Boolean)"
        ],
        "components-starter_camel-jacksonxml-starter_src_main_java_org_apache_camel_component_jacksonxml_springboot_JacksonXMLDataFormatConfiguration": [
            "JacksonXMLDataFormatConfiguration:getAllowUnmarshallType()",
            "JacksonXMLDataFormatConfiguration:setAllowUnmarshallType(Boolean)"
        ],
        "camel-core_src_main_java_org_apache_camel_model_dataformat_JsonDataFormat": [
            "JsonDataFormat:setAllowUnmarshallType(Boolean)",
            "JsonDataFormat:getAllowUnmarshallType()"
        ]
    },
    "CVE-2020-5411": {
        "spring-batch-core_src_main_java_org_springframework_batch_core_repository_dao_Jackson2ExecutionContextStringSerializer": [
            "Jackson2ExecutionContextStringSerializer$TrustedTypeResolverBuilder:TrustedTypeResolverBuilder(ObjectMapper.DefaultTyping)",
            "Jackson2ExecutionContextStringSerializer$TrustedTypeIdResolver:TrustedTypeIdResolver(TypeIdResolver)"
        ]
    },
    "CVE-2015-5344": {
        "camel-core_src_main_java_org_apache_camel_model_dataformat_XStreamDataFormat": [
            "XStreamDataFormat:getPermissions()",
            "XStreamDataFormat:setPermissions(String)"
        ],
        "components_camel-xstream_src_main_java_org_apache_camel_dataformat_xstream_AbstractXStreamWrapper": [
            "AbstractXStreamWrapper:getPermissions()",
            "AbstractXStreamWrapper:setPermissions(String)"
        ],
        "camel-core_src_main_java_org_apache_camel_model_dataformat_JsonDataFormat": [
            "JsonDataFormat:getPermissions()",
            "JsonDataFormat:setPermissions(String)"
        ],
        "camel-core_src_main_java_org_apache_camel_builder_DataFormatClause": [
            "DataFormatClause:xstream()"
        ]
    },
    "CVE-2020-1745": {
        "core_src_main_java_io_undertow_server_protocol_ajp_SecurityActions": [
            "SecurityActions:SecurityActions()"
        ]
    },
    "CVE-2020-36282": {
        "src_main_java_com_rabbitmq_jms_client_message_RMQStreamMessage": [
            "RMQStreamMessage:RMQStreamMessage(List)",
            "RMQStreamMessage:readBody(ObjectInput,ByteArrayInputStream)",
            "RMQStreamMessage:RMQStreamMessage(boolean)"
        ]
    },
    "CVE-2018-8027": {
        "camel-core_src_main_java_org_apache_camel_processor_validation_SchemaReader": [
            "SchemaReader:createSchemaFactory()"
        ]
    },
    "CVE-2019-3772": {
        "spring-integration-xml_src_main_java_org_springframework_integration_xml_transformer_ResultToStringTransformer": [
            "ResultToStringTransformer:ResultToStringTransformer()"
        ],
        "spring-integration-xml_src_main_java_org_springframework_integration_xml_transformer_XsltPayloadTransformer": [
            "XsltPayloadTransformer:XsltPayloadTransformer(Templates,ResultTransformer)"
        ],
        "spring-integration-xml_src_main_java_org_springframework_integration_xml_splitter_XPathMessageSplitter": [
            "XPathMessageSplitter:XPathMessageSplitter(String,TransformerFactory)"
        ],
        "spring-integration-xml_src_main_java_org_springframework_integration_xml_transformer_support_XPathExpressionEvaluatingHeaderValueMessageProcessor": [
            "XPathExpressionEvaluatingHeaderValueMessageProcessor:XPathExpressionEvaluatingHeaderValueMessageProcessor(String,XmlPayloadConverter)"
        ]
    },
    "CVE-2019-10174": {
        "commons_src_main_java_org_infinispan_commons_util_ReflectionUtil": [
            "ReflectionUtil:setAccessibly(Object,Field,Object)",
            "ReflectionUtil:getAnnotation(Class,Class)"
        ]
    },
    "CVE-2018-11039": {
        "spring-web_src_main_java_org_springframework_web_filter_HiddenHttpMethodFilter": [
            "HiddenHttpMethodFilter$HttpMethodRequestWrapper:HttpMethodRequestWrapper(HttpServletRequest,String)"
        ]
    },
    "CVE-2020-28491": {
        "cbor_src_main_java_com_fasterxml_jackson_dataformat_cbor_CBORParser": [
            "CBORParser:loadMoreGuaranteed()",
            "CBORParser:loadMore()"
        ]
    },
    "CVE-2017-3159": {
        "components-starter_camel-snakeyaml-starter_src_main_java_org_apache_camel_component_snakeyaml_springboot_SnakeYAMLDataFormatConfiguration": [
            "SnakeYAMLDataFormatConfiguration:setTypeFilter(List)",
            "SnakeYAMLDataFormatConfiguration:setAllowAnyType(Boolean)",
            "SnakeYAMLDataFormatConfiguration:getTypeFilter()",
            "SnakeYAMLDataFormatConfiguration:getAllowAnyType()"
        ],
        "camel-core_src_main_java_org_apache_camel_model_dataformat_YAMLDataFormat": [
            "YAMLDataFormat:setTypeFilters(List)",
            "YAMLDataFormat:getTypeFilters()",
            "YAMLDataFormat:isAllowAnyType()",
            "YAMLDataFormat:setAllowAnyType(boolean)"
        ],
        "camel-core_src_main_java_org_apache_camel_model_dataformat_YAMLTypeFilterDefinition": [
            "YAMLTypeFilterDefinition:getValue()",
            "YAMLTypeFilterDefinition:getType()",
            "YAMLTypeFilterDefinition:setType(YAMLTypeFilterType)",
            "YAMLTypeFilterDefinition:setValue(String)"
        ],
        "components_camel-snakeyaml_src_main_java_org_apache_camel_component_snakeyaml_SnakeYAMLDataFormat": [
            "SnakeYAMLDataFormat:setAllowAnyType(boolean)",
            "SnakeYAMLDataFormat:isAllowAnyType()",
            "SnakeYAMLDataFormat:setTypeFilters(List)",
            "SnakeYAMLDataFormat:getTypeFilters()",
            "SnakeYAMLDataFormat:setTypeDescriptions(List)",
            "SnakeYAMLDataFormat:addTypeDescription(Class,Tag)",
            "SnakeYAMLDataFormat:addClassTags(Class,Tag)"
        ],
        "components_camel-snakeyaml_src_main_java_org_apache_camel_component_snakeyaml_TypeFilters": [
            "TypeFilters$RegExp:RegExp(Collection)",
            "TypeFilters$TypeName:TypeName(Collection)",
            "TypeFilters$TypeName:TypeName(String)",
            "TypeFilters$RegExp:RegExp(String)",
            "TypeFilters:TypeFilters()"
        ]
    },
    "CVE-2021-22095": {
        "spring-amqp_src_main_java_org_springframework_amqp_core_Message": [
            "Message:setMaxBodyLength(int)"
        ]
    },
    "CVE-2015-5174": {
        "java_org_apache_tomcat_util_http_RequestUtil": [
            "RequestUtil:normalize(String)"
        ]
    },
    "CVE-2011-4905": {
        "activemq-core_src_main_java_org_apache_activemq_broker_TransportConnection": [
            "TransportConnection:setBlocked(boolean)",
            "TransportConnection:serviceExceptionAsync(IOException)",
            "TransportConnection:setConnected(boolean)",
            "TransportConnection:setActive(boolean)",
            "TransportConnection:setBlockedCandidate(boolean)",
            "TransportConnection:setSlow(boolean)",
            "TransportConnection:TransportConnection(TransportConnector,Transport,Broker,TaskRunnerFactory)",
            "TransportConnection:setMarkedCandidate(boolean)"
        ]
    },
    "CVE-2011-2732": {
        "web_src_main_java_org_springframework_security_web_firewall_FirewalledResponse": [
            "FirewalledResponse:FirewalledResponse(HttpServletResponse)"
        ]
    },
    "CVE-2012-5055": {
        "core_src_main_java_org_springframework_security_authentication_dao_DaoAuthenticationProvider": [
            "DaoAuthenticationProvider:additionalAuthenticationChecks(UserDetails,UsernamePasswordAuthenticationToken)"
        ]
    },
    "CVE-2012-6612": {
        "solr_core_src_java_org_apache_solr_util_EmptyEntityResolver": [
            "EmptyEntityResolver:EmptyEntityResolver()"
        ]
    },
    "CVE-2017-12616": {
        "java_org_apache_naming_resources_VirtualDirContext": [
            "VirtualDirContext:setExtraResourcePaths(String)"
        ]
    },
    "CVE-2015-1776": {
        "hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-app_src_main_java_org_apache_hadoop_mapred_TaskAttemptListenerImpl": [
            "TaskAttemptListenerImpl:TaskAttemptListenerImpl(AppContext,JobTokenSecretManager,RMHeartbeatHandler,AMPreemptionPolicy)"
        ],
        "hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core_src_main_java_org_apache_hadoop_mapreduce_CryptoUtils": [
            "CryptoUtils:isShuffleEncrypted(Configuration)",
            "CryptoUtils:wrapIfNecessary(Configuration,FSDataOutputStream)",
            "CryptoUtils:cryptoPadding(Configuration)",
            "CryptoUtils:wrapIfNecessary(Configuration,InputStream,long)",
            "CryptoUtils:createIV(Configuration)",
            "CryptoUtils:wrapIfNecessary(Configuration,FSDataInputStream)"
        ],
        "hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core_src_main_java_org_apache_hadoop_mapred_Task": [
            "Task:getEncryptedSpillKey()"
        ]
    },
    "CVE-2011-3923": {
        "xwork-core_src_main_java_com_opensymphony_xwork2_interceptor_ParametersInterceptor": [
            "ParametersInterceptor:setParameters(Object,ValueStack,Map)"
        ],
        "xwork-core_src_main_java_com_opensymphony_xwork2_ognl_OgnlValueStack": [
            "OgnlValueStack:setParameter(String,Object)",
            "OgnlValueStack:setValue(String,Object)"
        ]
    },
    "CVE-2014-0229": {
        "hadoop-hdfs-project_hadoop-hdfs_src_main_java_org_apache_hadoop_hdfs_server_datanode_DataNode": [
            "DataNode:DataNode(Configuration,AbstractList,SecureResources)"
        ]
    },
    "CVE-2012-4387": {
        "xwork-core_src_main_java_com_opensymphony_xwork2_interceptor_ParametersInterceptor": [
            "ParametersInterceptor:setParamNameMaxLength(int)",
            "ParametersInterceptor:setAcceptParamNames(String)"
        ]
    },
    "CVE-2016-6652": {
        "src_main_java_org_springframework_data_jpa_domain_JpaSort": [
            "JpaSort$JpaOrder:JpaOrder(Direction,String,NullHandling)",
            "JpaSort$JpaOrder:JpaOrder(Direction,String)",
            "JpaSort$JpaOrder:isUnsafe()",
            "JpaSort:JpaSort(List)",
            "JpaSort$JpaOrder:JpaOrder(Direction,String,NullHandling,boolean,boolean)"
        ]
    },
    "CVE-2013-1966": {
        "xwork-core_src_main_java_com_opensymphony_xwork2_ognl_OgnlUtil": [
            "OgnlUtil:setEnableExpressionCache(String)"
        ]
    },
    "CVE-2012-0818": {
        "resteasy-jaxrs_src_main_java_org_jboss_resteasy_plugins_server_tjws_TJWSServletServer": [
            "TJWSServletServer$FileMappingServe:getInitParams()",
            "TJWSServletServer$FileMappingServe:setInitParams(Hashtable)"
        ],
        "resteasy-jaxrs_src_main_java_org_jboss_resteasy_plugins_server_tjws_TJWSEmbeddedJaxrsServer": [
            "TJWSEmbeddedJaxrsServer:setContextParameters(Hashtable)",
            "TJWSEmbeddedJaxrsServer:setInitParameters(Hashtable)"
        ]
    },
    "CVE-2013-2135": {
        "core_src_main_java_org_apache_struts2_dispatcher_mapper_DefaultActionMapper": [
            "DefaultActionMapper:setAllowedActionNames(String)"
        ]
    },
    "CVE-2013-4322": {
        "java_org_apache_coyote_http11_filters_ChunkedInputFilter": [
            "ChunkedInputFilter:ChunkedInputFilter(int,int)",
            "ChunkedInputFilter:ChunkedInputFilter(int)"
        ],
        "java_org_apache_coyote_http11_AbstractHttp11Protocol": [
            "AbstractHttp11Protocol:setMaxExtensionSize(int)",
            "AbstractHttp11Protocol:getMaxExtensionSize()"
        ]
    },
    "CVE-2011-4461": {
        "jetty-server_src_main_java_org_eclipse_jetty_server_handler_ContextHandler": [
            "ContextHandler:setMaxFormKeys(int)",
            "ContextHandler:getMaxFormKeys()",
            "ContextHandler:setMaxFormContentSize(int)"
        ]
    },
    "CVE-2014-1904": {
        "spring-webmvc_src_main_java_org_springframework_web_servlet_tags_form_FormTag": [
            "FormTag:processAction(String)"
        ],
        "spring-webmvc_src_main_java_org_springframework_web_servlet_mvc_method_annotation_ServletRequestMethodArgumentResolver": [
            "ServletRequestMethodArgumentResolver:resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory)"
        ]
    },
    "CVE-2020-1961": {
        "core_provisioning-java_src_main_java_org_apache_syncope_core_provisioning_java_jexl_ClassFreeUberspect": [
            "ClassFreeUberspect:ClassFreeUberspect()"
        ],
        "core_provisioning-java_src_main_java_org_apache_syncope_core_provisioning_java_jexl_SandboxUberspect": [
            "SandboxUberspect:SandboxUberspect()"
        ]
    },
    "CVE-2014-0227": {
        "java_org_apache_coyote_http11_filters_ChunkedInputFilter": [
            "ChunkedInputFilter:available()"
        ]
    },
    "CVE-2019-19899": {
        "pebble_src_main_java_com_mitchellbosecke_pebble_template_EvaluationOptions": [
            "EvaluationOptions:isGreedyMatchMethod()",
            "EvaluationOptions:setAllowGetClass(boolean)",
            "EvaluationOptions:isAllowGetClass()"
        ],
        "pebble_src_main_java_com_mitchellbosecke_pebble_attributes_UnsafeMethods": [
            "UnsafeMethods:UnsafeMethods()"
        ],
        "pebble_src_main_java_com_mitchellbosecke_pebble_PebbleEngine": [
            "PebbleEngine$Builder:allowGetClass(boolean)"
        ]
    },
    "CVE-2017-5929": {
        "logback-classic_src_main_java_ch_qos_logback_classic_net_server_HardenedLoggingEventInputStream": [
            "HardenedLoggingEventInputStream:HardenedLoggingEventInputStream(InputStream)"
        ],
        "logback-classic_src_main_java_ch_qos_logback_classic_net_server_RemoteAppenderStreamClient": [
            "RemoteAppenderStreamClient:run()"
        ]
    },
    "CVE-2020-25633": {
        "resteasy-core-spi_src_main_java_org_jboss_resteasy_spi_ResteasyProviderFactory": [
            "ResteasyProviderFactory:isOnServer()"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyNotFoundException": [
            "ResteasyNotFoundException:unwrap()",
            "ResteasyNotFoundException:ResteasyNotFoundException(NotFoundException)"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyRedirectionException": [
            "ResteasyRedirectionException:unwrap()",
            "ResteasyRedirectionException:ResteasyRedirectionException(RedirectionException)"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyNotAuthorizedException": [
            "ResteasyNotAuthorizedException:unwrap()",
            "ResteasyNotAuthorizedException:ResteasyNotAuthorizedException(NotAuthorizedException)"
        ],
        "resteasy-core_src_main_java_org_jboss_resteasy_core_providerfactory_ResteasyProviderFactoryDelegate": [
            "ResteasyProviderFactoryDelegate:ResteasyProviderFactoryDelegate(ResteasyProviderFactory)"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyWebApplicationException": [
            "ResteasyWebApplicationException:unwrap()",
            "ResteasyWebApplicationException:ResteasyWebApplicationException(WebApplicationException)"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyNotAcceptableException": [
            "ResteasyNotAcceptableException:ResteasyNotAcceptableException(NotAcceptableException)",
            "ResteasyNotAcceptableException:unwrap()"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyNotSupportedException": [
            "ResteasyNotSupportedException:ResteasyNotSupportedException(NotSupportedException)",
            "ResteasyNotSupportedException:unwrap()"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyInternalServerErrorException": [
            "ResteasyInternalServerErrorException:unwrap()",
            "ResteasyInternalServerErrorException:ResteasyInternalServerErrorException(InternalServerErrorException)"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyServiceUnavailableException": [
            "ResteasyServiceUnavailableException:unwrap()",
            "ResteasyServiceUnavailableException:ResteasyServiceUnavailableException(ServiceUnavailableException)"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyBadRequestException": [
            "ResteasyBadRequestException:ResteasyBadRequestException(BadRequestException)",
            "ResteasyBadRequestException:unwrap()"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyServerErrorException": [
            "ResteasyServerErrorException:unwrap()",
            "ResteasyServerErrorException:ResteasyServerErrorException(ServerErrorException)"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyClientErrorException": [
            "ResteasyClientErrorException:ResteasyClientErrorException(ClientErrorException)",
            "ResteasyClientErrorException:unwrap()"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyNotAllowedException": [
            "ResteasyNotAllowedException:unwrap()",
            "ResteasyNotAllowedException:ResteasyNotAllowedException(NotAllowedException)"
        ],
        "resteasy-client-api_src_main_java_org_jboss_resteasy_client_exception_ResteasyForbiddenException": [
            "ResteasyForbiddenException:ResteasyForbiddenException(ForbiddenException)",
            "ResteasyForbiddenException:unwrap()"
        ]
    },
    "CVE-2013-1965": {
        "xwork-core_src_main_java_com_opensymphony_xwork2_ognl_OgnlUtil": [
            "OgnlUtil:setEnableExpressionCache(String)"
        ]
    },
    "CVE-2020-9489": {
        "tika-parsers_src_main_java_org_apache_tika_parser_pdf_PDFParserConfig": [
            "PDFParserConfig:setDropThreshold(float)",
            "PDFParserConfig:getDropThreshold()",
            "PDFParserConfig:toString()"
        ]
    },
    "CVE-2021-29451": {
        "dispatcher_src_main_java_com_manydesigns_portofino_dispatcher_security_jwt_JWTRealm": [
            "JWTRealm:getPrincipal(Jwt)"
        ],
        "portofino-core_src_main_java_com_manydesigns_portofino_shiro_AbstractPortofinoRealm": [
            "AbstractPortofinoRealm:extractPrincipalFromWebToken(Jwt)"
        ]
    },
    "CVE-2021-37578": {
        "juddi-core_src_main_java_org_apache_juddi_rmi_UDDISubscriptionListenerService": [
            "UDDISubscriptionListenerService:UDDISubscriptionListenerService(int)"
        ],
        "juddi-core_src_main_java_org_apache_juddi_rmi_UDDISubscriptionService": [
            "UDDISubscriptionService:UDDISubscriptionService(int)"
        ],
        "juddi-core_src_main_java_org_apache_juddi_rmi_UDDISecurityService": [
            "UDDISecurityService:UDDISecurityService(int)"
        ],
        "juddi-core_src_main_java_org_apache_juddi_rmi_UDDICustodyTransferService": [
            "UDDICustodyTransferService:UDDICustodyTransferService(int)"
        ],
        "juddi-core_src_main_java_org_apache_juddi_rmi_UDDIInquiryService": [
            "UDDIInquiryService:UDDIInquiryService(int)"
        ],
        "juddi-core_src_main_java_org_apache_juddi_rmi_UDDIPublicationService": [
            "UDDIPublicationService:UDDIPublicationService(int)"
        ],
        "juddi-core_src_main_java_org_apache_juddi_rmi_JUDDIApiService": [
            "JUDDIApiService:JUDDIApiService(int)"
        ],
        "juddi-client_src_main_java_org_apache_juddi_v3_client_transport_RMITransport": [
            "RMITransport:RMITransport()"
        ]
    },
    "CVE-2021-30129": {
        "sshd-core_src_main_java_org_apache_sshd_common_channel_exception_SshChannelBufferedOutputException": [
            "SshChannelBufferedOutputException:SshChannelBufferedOutputException(int,String)",
            "SshChannelBufferedOutputException:SshChannelBufferedOutputException(int,Throwable)",
            "SshChannelBufferedOutputException:SshChannelBufferedOutputException(int,String,Throwable)"
        ],
        "sshd-core_src_main_java_org_apache_sshd_common_channel_BufferedIoOutputStream": [
            "BufferedIoOutputStream:BufferedIoOutputStream(Object,int,IoOutputStream,PropertyResolver)",
            "BufferedIoOutputStream:toString()"
        ]
    },
    "CVE-2018-8025": {
        "hbase-thrift_src_main_java_org_apache_hadoop_hbase_thrift_ThriftHttpServlet": [
            "ThriftHttpServlet$RemoteUserIdentity:RemoteUserIdentity(String,String)"
        ]
    },
    "CVE-2021-26118": {
        "artemis-protocols_artemis-openwire-protocol_src_main_java_org_apache_activemq_artemis_core_protocol_openwire_amq_AMQSession": [
            "AMQSession:AMQSession(ConnectionInfo,SessionInfo,ActiveMQServer,OpenWireConnection,OpenWireProtocolManager)"
        ],
        "artemis-protocols_artemis-openwire-protocol_src_main_java_org_apache_activemq_artemis_core_protocol_openwire_OpenWireConnection": [
            "OpenWireConnection:getAdvisorySession()",
            "OpenWireConnection:setAdvisorySession(AMQSession)",
            "OpenWireConnection:getCoreMessageObjectPools()"
        ]
    },
    "CVE-2021-34433": {
        "scandium-core_src_main_java_org_eclipse_californium_scandium_dtls_EcdhEcdsaServerKeyExchange": [
            "EcdhEcdsaServerKeyExchange:updateSignature(Signature,Random,Random)",
            "EcdhEcdsaServerKeyExchange:EcdhEcdsaServerKeyExchange(SignatureAndHashAlgorithm,XECDHECryptography,PrivateKey,Random,Random)",
            "EcdhEcdsaServerKeyExchange:toString()"
        ]
    },
    "CVE-2018-17297": {
        "hutool-core_src_main_java_cn_hutool_core_util_ZipUtil": [
            "ZipUtil:zip(File,String,ZipOutputStream)",
            "ZipUtil:zip(File,boolean,File)"
        ]
    },
    "CVE-2021-29262": {
        "solr_solrj_src_java_org_apache_solr_common_cloud_SecurityAwareZkACLProvider": [
            "SecurityAwareZkACLProvider:getACLsToAdd(String)"
        ]
    },
    "CVE-2020-13946": {
        "src_java_org_apache_cassandra_service_CassandraDaemon": [
            "CassandraDaemon$JmxRegistry:rebind(String,Remote)",
            "CassandraDaemon$JmxRegistry:unbind(String)",
            "CassandraDaemon$JmxRegistry:JmxRegistry(int,RMIClientSocketFactory,RMIServerSocketFactory,String)",
            "CassandraDaemon$JmxRegistry:bind(String,Remote)",
            "CassandraDaemon$JmxRegistry:setRemoteServerStub(Remote)"
        ]
    },
    "CVE-2016-3093": {
        "src_java_ognl_OgnlRuntime": [
            "OgnlRuntime$CacheKey:CacheKey(Class,String)",
            "OgnlRuntime$ClassPropertyMethodCache:ClassPropertyMethodCache()"
        ]
    },
    "CVE-2010-2245": {
        "wink-client-apache-httpclient_src_main_java_org_apache_wink_client_internal_handlers_ApacheHttpClientConnectionHandler": [
            "ApacheHttpClientConnectionHandler:openConnection(ClientRequest)"
        ],
        "wink-server_src_main_java_org_apache_wink_server_internal_handlers_ServerMessageContext": [
            "ServerMessageContext:getDeploymentConfiguration()"
        ],
        "wink-server_src_main_java_org_apache_wink_server_internal_contexts_HttpHeadersImpl": [
            "HttpHeadersImpl:getAcceptHeader()"
        ],
        "wink-server_src_main_java_org_apache_wink_server_internal_contexts_ServerMediaTypeCharsetAdjuster": [
            "ServerMediaTypeCharsetAdjuster:setDefaultCharsetOnMediaTypeHeader(MultivaluedMap,MediaType)"
        ],
        "wink-server_src_main_java_org_apache_wink_server_internal_servlet_RestServlet": [
            "RestServlet:getProperties()",
            "RestServlet:loadProperties(String,Properties)"
        ],
        "wink-client_src_main_java_org_apache_wink_client_internal_handlers_HttpURLConnectionHandler": [
            "HttpURLConnectionHandler:openConnection(ClientRequest)"
        ],
        "wink-common_src_main_java_org_apache_wink_common_internal_providers_entity_SourceProvider": [
            "SourceProvider:asIOExcpetion(Exception)",
            "SourceProvider:writeTo(Source,Class,Type,Annotation,MediaType,MultivaluedMap,OutputStream)"
        ]
    },
    "CVE-2020-36319": {
        "flow-server_src_main_java_com_vaadin_flow_server_connect_VaadinConnectController": [
            "VaadinConnectController:VaadinConnectController(ObjectMapper,VaadinConnectAccessChecker,EndpointNameChecker,ExplicitNullableTypeChecker,ApplicationContext)"
        ]
    },
    "CVE-2011-1184": {
        "container_catalina_src_share_org_apache_catalina_authenticator_DigestAuthenticator": [
            "DigestAuthenticator:setKey(String)",
            "DigestAuthenticator$NonceInfo:getCount()",
            "DigestAuthenticator$NonceInfo:getTimestamp()",
            "DigestAuthenticator$DigestInfo:DigestInfo(String,long,String,Map,boolean)",
            "DigestAuthenticator:getNonceValidity()",
            "DigestAuthenticator:getKey()",
            "DigestAuthenticator:setNonceValidity(long)",
            "DigestAuthenticator$DigestInfo:isNonceStale()",
            "DigestAuthenticator:isValidateUri()",
            "DigestAuthenticator:getCnonceCacheSize()",
            "DigestAuthenticator:getOpaque()",
            "DigestAuthenticator$NonceInfo:setCount(long)",
            "DigestAuthenticator:setCnonceCacheSize(int)",
            "DigestAuthenticator:setValidateUri(boolean)",
            "DigestAuthenticator$NonceInfo:setTimestamp(long)",
            "DigestAuthenticator:setOpaque(String)"
        ]
    },
    "CVE-2018-8016": {
        "src_java_org_apache_cassandra_utils_JMXServerUtils": [
            "JMXServerUtils$Registry:Registry(int,Remote)",
            "JMXServerUtils$Registry:Registry(int,RMIClientSocketFactory,RMIServerSocketFactory,Remote)"
        ]
    },
    "CVE-2022-25867": {
        "src_main_java_io_socket_parser_DecodingException": [
            "DecodingException:DecodingException(String)"
        ]
    },
    "CVE-2019-12415": {
        "src_ooxml_java_org_apache_poi_xssf_streaming_SXSSFCell": [
            "SXSSFCell$RichTextStringFormulaValue:setPreEvaluatedValue(RichTextString)",
            "SXSSFCell$RichTextStringFormulaValue:getPreEvaluatedValue()"
        ]
    },
    "CVE-2019-16530": {
        "plugins_restlet1x_nexus-restlet1x-plugin_src_main_java_org_sonatype_nexus_rest_repositories_AbstractRepositoryPlexusResource": [
            "AbstractRepositoryPlexusResource:setStorageWhitelist(StorageWhitelist)"
        ],
        "components_nexus-core_src_main_java_org_sonatype_nexus_proxy_storage_StorageWhitelist": [
            "StorageWhitelist:StorageWhitelist(String)"
        ],
        "components_nexus-core_src_main_java_org_sonatype_nexus_proxy_storage_StorageWhitelistUpgradeEvent": [
            "StorageWhitelistUpgradeEvent:StorageWhitelistUpgradeEvent(ApplicationStatusSource,ApplicationDirectories,RepositoryRegistry,StorageWhitelist)"
        ]
    },
    "CVE-2019-0231": {
        "mina-transport-serial_src_main_java_org_apache_mina_transport_serial_SerialConnector": [
            "SerialConnector:SerialConnector(Executor)"
        ],
        "mina-core_src_main_java_org_apache_mina_filter_logging_LoggingFilter": [
            "LoggingFilter:exceptionCaught(NextFilter,IoSession,Throwable)",
            "LoggingFilter:sessionCreated(NextFilter,IoSession)",
            "LoggingFilter:sessionOpened(NextFilter,IoSession)",
            "LoggingFilter:sessionIdle(NextFilter,IoSession,IdleStatus)",
            "LoggingFilter:messageReceived(NextFilter,IoSession,Object)",
            "LoggingFilter:sessionClosed(NextFilter,IoSession)",
            "LoggingFilter:messageSent(NextFilter,IoSession,WriteRequest)"
        ],
        "mina-core_src_main_java_org_apache_mina_filter_firewall_BlacklistFilter": [
            "BlacklistFilter:sessionClosed(NextFilter,IoSession)",
            "BlacklistFilter:messageReceived(NextFilter,IoSession,Object)",
            "BlacklistFilter:messageSent(NextFilter,IoSession,WriteRequest)",
            "BlacklistFilter:sessionOpened(NextFilter,IoSession)",
            "BlacklistFilter:sessionIdle(NextFilter,IoSession,IdleStatus)",
            "BlacklistFilter:sessionCreated(NextFilter,IoSession)"
        ]
    },
    "CVE-2018-10899": {
        "agent_core_src_main_java_org_jolokia_restrictor_AbstractConstantRestrictor": [
            "AbstractConstantRestrictor:isOriginAllowed(String,boolean)"
        ]
    },
    "CVE-2014-0168": {
        "agent_core_src_main_java_org_jolokia_restrictor_AbstractConstantRestrictor": [
            "AbstractConstantRestrictor:isCorsAccessAllowed(String)"
        ]
    },
    "CVE-2018-1000130": {
        "agent_core_src_main_java_org_jolokia_http_Jsr160ProxyNotEnabledByDefaultAnymoreDispatcher": [
            "Jsr160ProxyNotEnabledByDefaultAnymoreDispatcher:Jsr160ProxyNotEnabledByDefaultAnymoreDispatcher(Converters,ServerHandle,Restrictor,Configuration)"
        ]
    },
    "CVE-2021-33330": {
        "modules_apps_portal-remote_portal-remote-cors-impl_src_main_java_com_liferay_portal_remote_cors_internal_servlet_filter_CORSServletFilter": [
            "CORSServletFilter:destroy()",
            "CORSServletFilter:init(FilterConfig)",
            "CORSServletFilter:getLog()"
        ]
    }
}
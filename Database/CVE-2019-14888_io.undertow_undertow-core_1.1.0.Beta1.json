{
    "io.undertow.server.protocol.framed.AbstractFramedChannel:io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel receive()": {
        "isVulRoot": true,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel receive()"
        ],
        "vulCaller": [
            "io.undertow.websockets.core.AbstractReceiveListener:void handleEvent(io.undertow.websockets.core.WebSocketChannel)",
            "io.undertow.server.protocol.spdy.SpdyReceiveListener:void handleEvent(io.undertow.spdy.SpdyChannel)",
            "io.undertow.client.spdy.SpdyClientConnection$SpdyRecieveListener:void handleEvent(io.undertow.spdy.SpdyChannel)"
        ]
    },
    "io.undertow.websockets.core.AbstractReceiveListener:void handleEvent(io.undertow.websockets.core.WebSocketChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel receive()"
        ],
        "vulCaller": [
            "io.undertow.websockets.core.AbstractReceiveListener:void handleEvent(java.nio.channels.Channel)"
        ]
    },
    "io.undertow.server.protocol.spdy.SpdyReceiveListener:void handleEvent(io.undertow.spdy.SpdyChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel receive()"
        ],
        "vulCaller": [
            "io.undertow.server.protocol.spdy.SpdyReceiveListener:void handleEvent(java.nio.channels.Channel)"
        ]
    },
    "io.undertow.client.spdy.SpdyClientConnection$SpdyRecieveListener:void handleEvent(io.undertow.spdy.SpdyChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel receive()"
        ],
        "vulCaller": [
            "io.undertow.client.spdy.SpdyClientConnection$SpdyRecieveListener:void handleEvent(java.nio.channels.Channel)"
        ]
    },
    "io.undertow.server.protocol.framed.AbstractFramedChannel:void close()": {
        "isVulRoot": true,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:void close()"
        ],
        "vulCaller": [
            "io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel:void close()",
            "io.undertow.server.protocol.spdy.SpdyServerConnection:void close()",
            "io.undertow.client.spdy.SpdyClientConnection:void close()"
        ]
    },
    "io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:void close()"
        ],
        "vulCaller": []
    },
    "io.undertow.server.protocol.spdy.SpdyServerConnection:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:void close()"
        ],
        "vulCaller": []
    },
    "io.undertow.client.spdy.SpdyClientConnection:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:void close()"
        ],
        "vulCaller": []
    },
    "io.undertow.websockets.core.AbstractReceiveListener:void handleEvent(java.nio.channels.Channel)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel receive()"
        ],
        "vulCaller": []
    },
    "io.undertow.server.protocol.spdy.SpdyReceiveListener:void handleEvent(java.nio.channels.Channel)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel receive()"
        ],
        "vulCaller": []
    },
    "io.undertow.client.spdy.SpdyClientConnection$SpdyRecieveListener:void handleEvent(java.nio.channels.Channel)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.undertow.server.protocol.framed.AbstractFramedChannel:io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel receive()"
        ],
        "vulCaller": []
    }
}
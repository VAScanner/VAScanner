{
    "com.browserup.bup.rest.validation.PortWithExistingProxyConstraint$PortWithExistingProxyConstraintValidator:boolean isValid(java.lang.Integer,javax.validation.ConstraintValidatorContext)": {
        "isVulRoot": true,
        "srcRoot": [
            "com.browserup.bup.rest.validation.PortWithExistingProxyConstraint$PortWithExistingProxyConstraintValidator:boolean isValid(java.lang.Integer,javax.validation.ConstraintValidatorContext)"
        ],
        "vulCaller": [
            "com.browserup.bup.rest.validation.PortWithExistingProxyConstraint$PortWithExistingProxyConstraintValidator:boolean isValid(java.lang.Object,javax.validation.ConstraintValidatorContext)"
        ]
    },
    "com.browserup.bup.rest.validation.PortWithExistingProxyConstraint$PortWithExistingProxyConstraintValidator:boolean isValid(java.lang.Object,javax.validation.ConstraintValidatorContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.browserup.bup.rest.validation.PortWithExistingProxyConstraint$PortWithExistingProxyConstraintValidator:boolean isValid(java.lang.Integer,javax.validation.ConstraintValidatorContext)"
        ],
        "vulCaller": []
    },
    "com.browserup.bup.rest.validation.NotBlankConstraint$NotBlankValidator:boolean isValid(java.lang.Object,javax.validation.ConstraintValidatorContext)": {
        "isVulRoot": true,
        "srcRoot": [
            "com.browserup.bup.rest.validation.NotBlankConstraint$NotBlankValidator:boolean isValid(java.lang.Object,javax.validation.ConstraintValidatorContext)"
        ],
        "vulCaller": []
    },
    "com.browserup.bup.rest.validation.PatternConstraint$PatternValidator:boolean isValid(java.lang.String,javax.validation.ConstraintValidatorContext)": {
        "isVulRoot": true,
        "srcRoot": [
            "com.browserup.bup.rest.validation.PatternConstraint$PatternValidator:boolean isValid(java.lang.String,javax.validation.ConstraintValidatorContext)"
        ],
        "vulCaller": [
            "com.browserup.bup.rest.validation.PatternConstraint$PatternValidator:boolean isValid(java.lang.Object,javax.validation.ConstraintValidatorContext)"
        ]
    },
    "com.browserup.bup.rest.validation.PatternConstraint$PatternValidator:boolean isValid(java.lang.Object,javax.validation.ConstraintValidatorContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.browserup.bup.rest.validation.PatternConstraint$PatternValidator:boolean isValid(java.lang.String,javax.validation.ConstraintValidatorContext)"
        ],
        "vulCaller": []
    },
    "com.browserup.bup.rest.validation.LongPositiveConstraint$LongPositiveValidator:boolean isValid(java.lang.String,javax.validation.ConstraintValidatorContext)": {
        "isVulRoot": true,
        "srcRoot": [
            "com.browserup.bup.rest.validation.LongPositiveConstraint$LongPositiveValidator:boolean isValid(java.lang.String,javax.validation.ConstraintValidatorContext)"
        ],
        "vulCaller": [
            "com.browserup.bup.rest.validation.LongPositiveConstraint$LongPositiveValidator:boolean isValid(java.lang.Object,javax.validation.ConstraintValidatorContext)"
        ]
    },
    "com.browserup.bup.rest.validation.LongPositiveConstraint$LongPositiveValidator:boolean isValid(java.lang.Object,javax.validation.ConstraintValidatorContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.browserup.bup.rest.validation.LongPositiveConstraint$LongPositiveValidator:boolean isValid(java.lang.String,javax.validation.ConstraintValidatorContext)"
        ],
        "vulCaller": []
    }
}
{
    "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)"
        ],
        "vulCaller": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)"
        ],
        "vulCaller": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:long skip(long)"
        ]
    },
    "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:long skip(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)"
        ],
        "vulCaller": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:void closeEntry()"
        ]
    },
    "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:void closeEntry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)"
        ],
        "vulCaller": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.zip.ZipArchiveEntry getNextZipEntry()"
        ]
    },
    "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.zip.ZipArchiveEntry getNextZipEntry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)"
        ],
        "vulCaller": [
            "org.apache.commons.compress.archivers.jar.JarArchiveInputStream:org.apache.commons.compress.archivers.jar.JarArchiveEntry getNextJarEntry()",
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()"
        ]
    },
    "org.apache.commons.compress.archivers.jar.JarArchiveInputStream:org.apache.commons.compress.archivers.jar.JarArchiveEntry getNextJarEntry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)"
        ],
        "vulCaller": [
            "org.apache.commons.compress.archivers.jar.JarArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()"
        ]
    },
    "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)"
        ],
        "vulCaller": [
            "org.apache.commons.compress.archivers.Lister:void main(java.lang.String[])"
        ]
    },
    "org.apache.commons.compress.archivers.jar.JarArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)"
        ],
        "vulCaller": [
            "org.apache.commons.compress.archivers.Lister:void main(java.lang.String[])"
        ]
    },
    "org.apache.commons.compress.archivers.Lister:void main(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:int readStored(byte[],int,int)"
        ],
        "vulCaller": []
    }
}
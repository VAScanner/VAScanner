{
    "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ]
    },
    "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext loadClientContext(java.util.Map)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext loadServerContext(org.apache.kafka.common.network.ListenerName,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext loadClientContext(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.common.network.ChannelBuilders:org.apache.kafka.common.network.ChannelBuilder create(org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.network.Mode,org.apache.kafka.common.security.JaasContext$Type,org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.network.ListenerName,boolean,java.lang.String,boolean,org.apache.kafka.common.security.authenticator.CredentialCache,org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache,org.apache.kafka.common.utils.Time,org.apache.kafka.common.utils.LogContext,java.util.function.Supplier)"
        ]
    },
    "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext loadServerContext(org.apache.kafka.common.network.ListenerName,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.common.network.ChannelBuilders:org.apache.kafka.common.network.ChannelBuilder create(org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.network.Mode,org.apache.kafka.common.security.JaasContext$Type,org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.network.ListenerName,boolean,java.lang.String,boolean,org.apache.kafka.common.security.authenticator.CredentialCache,org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache,org.apache.kafka.common.utils.Time,org.apache.kafka.common.utils.LogContext,java.util.function.Supplier)"
        ]
    },
    "org.apache.kafka.common.network.ChannelBuilders:org.apache.kafka.common.network.ChannelBuilder create(org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.network.Mode,org.apache.kafka.common.security.JaasContext$Type,org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.network.ListenerName,boolean,java.lang.String,boolean,org.apache.kafka.common.security.authenticator.CredentialCache,org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache,org.apache.kafka.common.utils.Time,org.apache.kafka.common.utils.LogContext,java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.common.network.ChannelBuilders:org.apache.kafka.common.network.ChannelBuilder serverChannelBuilder(org.apache.kafka.common.network.ListenerName,boolean,org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.security.authenticator.CredentialCache,org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache,org.apache.kafka.common.utils.Time,org.apache.kafka.common.utils.LogContext,java.util.function.Supplier)",
            "org.apache.kafka.common.network.ChannelBuilders:org.apache.kafka.common.network.ChannelBuilder clientChannelBuilder(org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.security.JaasContext$Type,org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.network.ListenerName,java.lang.String,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.common.utils.LogContext)"
        ]
    },
    "org.apache.kafka.common.network.ChannelBuilders:org.apache.kafka.common.network.ChannelBuilder serverChannelBuilder(org.apache.kafka.common.network.ListenerName,boolean,org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.security.authenticator.CredentialCache,org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache,org.apache.kafka.common.utils.Time,org.apache.kafka.common.utils.LogContext,java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": []
    },
    "org.apache.kafka.common.network.ChannelBuilders:org.apache.kafka.common.network.ChannelBuilder clientChannelBuilder(org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.security.JaasContext$Type,org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.network.ListenerName,java.lang.String,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.common.utils.LogContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.ClientUtils:org.apache.kafka.common.network.ChannelBuilder createChannelBuilder(org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.utils.Time,org.apache.kafka.common.utils.LogContext)"
        ]
    },
    "org.apache.kafka.clients.ClientUtils:org.apache.kafka.common.network.ChannelBuilder createChannelBuilder(org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.utils.Time,org.apache.kafka.common.utils.LogContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.producer.KafkaProducer:org.apache.kafka.clients.producer.internals.Sender newSender(org.apache.kafka.common.utils.LogContext,org.apache.kafka.clients.KafkaClient,org.apache.kafka.clients.producer.internals.ProducerMetadata)",
            "org.apache.kafka.clients.admin.KafkaAdminClient:org.apache.kafka.clients.admin.KafkaAdminClient createInternal(org.apache.kafka.clients.admin.AdminClientConfig,org.apache.kafka.clients.admin.KafkaAdminClient$TimeoutProcessorFactory)",
            "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(org.apache.kafka.clients.consumer.ConsumerConfig,org.apache.kafka.common.serialization.Deserializer,org.apache.kafka.common.serialization.Deserializer)"
        ]
    },
    "org.apache.kafka.clients.producer.KafkaProducer:org.apache.kafka.clients.producer.internals.Sender newSender(org.apache.kafka.common.utils.LogContext,org.apache.kafka.clients.KafkaClient,org.apache.kafka.clients.producer.internals.ProducerMetadata)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.producer.KafkaProducer:void <init>(org.apache.kafka.clients.producer.ProducerConfig,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.clients.producer.internals.ProducerMetadata,org.apache.kafka.clients.KafkaClient,org.apache.kafka.clients.producer.internals.ProducerInterceptors,org.apache.kafka.common.utils.Time)"
        ]
    },
    "org.apache.kafka.clients.admin.KafkaAdminClient:org.apache.kafka.clients.admin.KafkaAdminClient createInternal(org.apache.kafka.clients.admin.AdminClientConfig,org.apache.kafka.clients.admin.KafkaAdminClient$TimeoutProcessorFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.admin.Admin:org.apache.kafka.clients.admin.Admin create(java.util.Properties)",
            "org.apache.kafka.clients.admin.Admin:org.apache.kafka.clients.admin.Admin create(java.util.Map)"
        ]
    },
    "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(org.apache.kafka.clients.consumer.ConsumerConfig,org.apache.kafka.common.serialization.Deserializer,org.apache.kafka.common.serialization.Deserializer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Map,org.apache.kafka.common.serialization.Deserializer,org.apache.kafka.common.serialization.Deserializer)"
        ]
    },
    "org.apache.kafka.clients.producer.KafkaProducer:void <init>(org.apache.kafka.clients.producer.ProducerConfig,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.clients.producer.internals.ProducerMetadata,org.apache.kafka.clients.KafkaClient,org.apache.kafka.clients.producer.internals.ProducerInterceptors,org.apache.kafka.common.utils.Time)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Map,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)"
        ]
    },
    "org.apache.kafka.clients.admin.Admin:org.apache.kafka.clients.admin.Admin create(java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)"
        ]
    },
    "org.apache.kafka.clients.admin.Admin:org.apache.kafka.clients.admin.Admin create(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Map)"
        ]
    },
    "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Map,org.apache.kafka.common.serialization.Deserializer,org.apache.kafka.common.serialization.Deserializer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Map)",
            "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties,org.apache.kafka.common.serialization.Deserializer,org.apache.kafka.common.serialization.Deserializer)"
        ]
    },
    "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Map,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)",
            "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Map)"
        ]
    },
    "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": []
    },
    "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": []
    },
    "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": []
    },
    "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties,org.apache.kafka.common.serialization.Deserializer,org.apache.kafka.common.serialization.Deserializer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)"
        ]
    },
    "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": [
            "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)"
        ]
    },
    "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": []
    },
    "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": []
    },
    "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
        ],
        "vulCaller": []
    }
}
{
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection$1:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection$1:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:void onControlCommand(org.apache.activemq.command.ControlCommand)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:void onControlCommand(org.apache.activemq.command.ControlCommand)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:void onControlCommand(org.apache.activemq.command.ControlCommand)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.ActiveMQConnectionConsumer:void <init>(org.apache.activemq.ActiveMQConnection,javax.jms.ServerSessionPool,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.TransactionContext:void commit(javax.transaction.xa.Xid,boolean)",
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.ActiveMQTempDestination createTempDestination(boolean)",
            "org.apache.activemq.ActiveMQConnection:void destroyDestination(org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.ActiveMQConnection:void deleteTempDestination(org.apache.activemq.command.ActiveMQTempDestination)",
            "org.apache.activemq.ActiveMQInputStream:void <init>(org.apache.activemq.ActiveMQConnection,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,boolean,java.lang.String,int)",
            "org.apache.activemq.TransactionContext:int prepare(javax.transaction.xa.Xid)",
            "org.apache.activemq.ActiveMQConnection:void unsubscribe(java.lang.String)",
            "org.apache.activemq.TransactionContext:void setXid(javax.transaction.xa.Xid)",
            "org.apache.activemq.TransactionContext:void forget(javax.transaction.xa.Xid)",
            "org.apache.activemq.ActiveMQConnection:void send(org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQMessage,org.apache.activemq.command.MessageId,int,int,long,boolean)",
            "org.apache.activemq.ActiveMQSession:void send(org.apache.activemq.ActiveMQMessageProducer,org.apache.activemq.command.ActiveMQDestination,javax.jms.Message,int,int,long)",
            "org.apache.activemq.ActiveMQInputStream:void close()",
            "org.apache.activemq.AdvisoryConsumer:void <init>(org.apache.activemq.ActiveMQConnection,org.apache.activemq.command.ConsumerId)",
            "org.apache.activemq.ActiveMQConnection:void ensureConnectionInfoSent()",
            "org.apache.activemq.TransactionContext:void commit()",
            "org.apache.activemq.TransactionContext:void rollback(javax.transaction.xa.Xid)",
            "org.apache.activemq.TransactionContext:javax.transaction.xa.Xid[] recover(int)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageConsumer:void <init>(org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,java.lang.String,int,int,boolean,boolean,boolean)",
            "org.apache.activemq.ActiveMQMessageConsumer:void close()"
        ]
    },
    "org.apache.activemq.ActiveMQConnectionConsumer:void <init>(org.apache.activemq.ActiveMQConnection,javax.jms.ServerSessionPool,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic,java.lang.String,java.lang.String,javax.jms.ServerSessionPool,int,boolean)",
            "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination,java.lang.String,javax.jms.ServerSessionPool,int,boolean)"
        ]
    },
    "org.apache.activemq.TransactionContext:void commit(javax.transaction.xa.Xid,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.ActiveMQTempDestination createTempDestination(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:javax.jms.TemporaryQueue createTemporaryQueue()",
            "org.apache.activemq.ActiveMQSession:javax.jms.TemporaryTopic createTemporaryTopic()"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:void destroyDestination(org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:void deleteTempDestination(org.apache.activemq.command.ActiveMQTempDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.ActiveMQTempDestination:void delete()"
        ]
    },
    "org.apache.activemq.ActiveMQInputStream:void <init>(org.apache.activemq.ActiveMQConnection,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,boolean,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:java.io.InputStream doCreateInputStream(javax.jms.Destination,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.activemq.TransactionContext:int prepare(javax.transaction.xa.Xid)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:void unsubscribe(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:void unsubscribe(java.lang.String)"
        ]
    },
    "org.apache.activemq.TransactionContext:void setXid(javax.transaction.xa.Xid)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.TransactionContext:void start(javax.transaction.xa.Xid,int)",
            "org.apache.activemq.TransactionContext:void end(javax.transaction.xa.Xid,int)"
        ]
    },
    "org.apache.activemq.TransactionContext:void forget(javax.transaction.xa.Xid)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:void send(org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQMessage,org.apache.activemq.command.MessageId,int,int,long,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQOutputStream:void send(org.apache.activemq.command.ActiveMQMessage,boolean)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:void send(org.apache.activemq.ActiveMQMessageProducer,org.apache.activemq.command.ActiveMQDestination,javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageProducer:void send(javax.jms.Destination,javax.jms.Message,int,int,long)"
        ]
    },
    "org.apache.activemq.ActiveMQInputStream:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.AdvisoryConsumer:void <init>(org.apache.activemq.ActiveMQConnection,org.apache.activemq.command.ConsumerId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:void ensureConnectionInfoSent()"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:void ensureConnectionInfoSent()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.TransactionContext:void begin()",
            "org.apache.activemq.ActiveMQConnection:java.io.InputStream doCreateInputStream(javax.jms.Destination,java.lang.String,boolean,java.lang.String)",
            "org.apache.activemq.ActiveMQConnection:java.io.OutputStream createOutputStream(javax.jms.Destination,java.util.Map,int,int,long)",
            "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic,java.lang.String,java.lang.String,javax.jms.ServerSessionPool,int,boolean)",
            "org.apache.activemq.ActiveMQConnection:void start()",
            "org.apache.activemq.TransactionContext:void commit(javax.transaction.xa.Xid,boolean)",
            "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination,java.lang.String,javax.jms.ServerSessionPool,int,boolean)",
            "org.apache.activemq.ActiveMQConnection:void destroyDestination(org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.ActiveMQXAConnection:javax.jms.Session createSession(boolean,int)",
            "org.apache.activemq.ActiveMQConnection:java.lang.String getInitializedClientID()",
            "org.apache.activemq.TransactionContext:void setXid(javax.transaction.xa.Xid)",
            "org.apache.activemq.ActiveMQConnection:void setClientID(java.lang.String)",
            "org.apache.activemq.ActiveMQConnection:javax.jms.Session createSession(boolean,int)",
            "org.apache.activemq.TransactionContext:void rollback(javax.transaction.xa.Xid)",
            "org.apache.activemq.TransactionContext:javax.transaction.xa.Xid[] recover(int)"
        ]
    },
    "org.apache.activemq.TransactionContext:void commit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:void commit()"
        ]
    },
    "org.apache.activemq.TransactionContext:void rollback(javax.transaction.xa.Xid)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.TransactionContext:javax.transaction.xa.Xid[] recover(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.reliable.ReliableTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.udp.ResponseRedirectInterceptor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void sendToActiveMQ(org.apache.activemq.command.Command,org.apache.activemq.transport.stomp.ResponseHandler)",
            "org.apache.activemq.transport.stomp.StompSubscription:void onMessageDispatch(org.apache.activemq.command.MessageDispatch)"
        ]
    },
    "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:void <init>(org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,java.lang.String,int,int,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueReceiver:void <init>(org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,int,int,boolean)",
            "org.apache.activemq.ActiveMQTopicSubscriber:void <init>(org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,java.lang.String,int,int,boolean,boolean,boolean)",
            "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String,boolean)",
            "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String)",
            "org.apache.activemq.ActiveMQQueueBrowser$1:void <init>(org.apache.activemq.ActiveMQQueueBrowser,org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,java.lang.String,int,int,boolean,boolean,boolean)"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueBrowser:void destroyConsumer()",
            "org.apache.activemq.broker.util.CommandAgent:void stop()"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic,java.lang.String,java.lang.String,javax.jms.ServerSessionPool,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic,java.lang.String,java.lang.String,javax.jms.ServerSessionPool,int)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination,java.lang.String,javax.jms.ServerSessionPool,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Topic,java.lang.String,javax.jms.ServerSessionPool,int)",
            "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Queue,java.lang.String,javax.jms.ServerSessionPool,int)",
            "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination,java.lang.String,javax.jms.ServerSessionPool,int)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.TemporaryQueue createTemporaryQueue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueSession:javax.jms.TemporaryQueue createTemporaryQueue()",
            "org.apache.activemq.pool.PooledSession:javax.jms.TemporaryQueue createTemporaryQueue()"
        ]
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.TemporaryTopic createTemporaryTopic()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQTopicSession:javax.jms.TemporaryTopic createTemporaryTopic()",
            "org.apache.activemq.pool.PooledSession:javax.jms.TemporaryTopic createTemporaryTopic()"
        ]
    },
    "org.apache.activemq.command.ActiveMQTempDestination:void delete()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:java.io.InputStream doCreateInputStream(javax.jms.Destination,java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:java.io.InputStream createDurableInputStream(javax.jms.Topic,java.lang.String,java.lang.String,boolean)",
            "org.apache.activemq.ActiveMQConnection:java.io.InputStream createInputStream(javax.jms.Destination,java.lang.String,boolean)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:void unsubscribe(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledSession:void unsubscribe(java.lang.String)",
            "org.apache.activemq.ActiveMQTopicSession:void unsubscribe(java.lang.String)"
        ]
    },
    "org.apache.activemq.TransactionContext:void start(javax.transaction.xa.Xid,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.TransactionContext:void end(javax.transaction.xa.Xid,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQOutputStream:void send(org.apache.activemq.command.ActiveMQMessage,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQOutputStream:void flushBuffer()",
            "org.apache.activemq.ActiveMQOutputStream:void close()"
        ]
    },
    "org.apache.activemq.ActiveMQMessageProducer:void send(javax.jms.Destination,javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageProducer:void send(javax.jms.Message)",
            "org.apache.activemq.pool.PooledProducer:void send(javax.jms.Destination,javax.jms.Message,int,int,long)",
            "org.apache.activemq.ActiveMQQueueSender:void send(javax.jms.Queue,javax.jms.Message,int,int,long)",
            "org.apache.activemq.ActiveMQTopicPublisher:void publish(javax.jms.Topic,javax.jms.Message,int,int,long)",
            "org.apache.activemq.ActiveMQMessageProducer:void send(javax.jms.Destination,javax.jms.Message)",
            "org.apache.activemq.ActiveMQMessageProducer:void send(javax.jms.Message,int,int,long)"
        ]
    },
    "org.apache.activemq.TransactionContext:void begin()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:void doStartTransaction()"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:java.io.OutputStream createOutputStream(javax.jms.Destination,java.util.Map,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:java.io.OutputStream createOutputStream(javax.jms.Destination)",
            "org.apache.activemq.ActiveMQConnection:java.io.OutputStream createNonPersistentOutputStream(javax.jms.Destination)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.ConnectionPool:void start()"
        ]
    },
    "org.apache.activemq.ActiveMQXAConnection:javax.jms.Session createSession(boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQXAConnection:javax.jms.XATopicSession createXATopicSession()",
            "org.apache.activemq.broker.jmx.DestinationView:java.lang.String sendTextMessage(java.util.Map,java.lang.String)",
            "org.apache.activemq.broker.util.CommandAgent:void start()",
            "org.apache.activemq.ActiveMQXAConnection:javax.jms.XASession createXASession()",
            "org.apache.activemq.pool.PooledConnection:org.apache.activemq.ActiveMQSession createSession(org.apache.activemq.pool.SessionKey)",
            "org.apache.activemq.ActiveMQXAConnection:javax.jms.XAQueueSession createXAQueueSession()",
            "org.apache.activemq.pool.SessionPool:org.apache.activemq.ActiveMQSession createSession()"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:java.lang.String getInitializedClientID()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:void setClientID(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnection:void setClientID(java.lang.String)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:javax.jms.Session createSession(boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.DestinationView:java.lang.String sendTextMessage(java.util.Map,java.lang.String)",
            "org.apache.activemq.broker.util.CommandAgent:void start()",
            "org.apache.activemq.ActiveMQConnection:javax.jms.TopicSession createTopicSession(boolean,int)",
            "org.apache.activemq.pool.PooledConnection:org.apache.activemq.ActiveMQSession createSession(org.apache.activemq.pool.SessionKey)",
            "org.apache.activemq.ActiveMQConnection:javax.jms.QueueSession createQueueSession(boolean,int)",
            "org.apache.activemq.pool.SessionPool:org.apache.activemq.ActiveMQSession createSession()"
        ]
    },
    "org.apache.activemq.ActiveMQSession:void commit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQTopicSession:void commit()",
            "org.apache.activemq.pool.PooledSession:void commit()",
            "org.apache.activemq.ActiveMQQueueSession:void commit()"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.vm.VMTransport:void oneway(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransport:boolean iterate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.thread.PooledTaskRunner:void runTask()",
            "org.apache.activemq.thread.DedicatedTaskRunner:void runTask()"
        ]
    },
    "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.reliable.ReliableTransport:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.udp.UdpTransportServer$2:void start()",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.tcp.SslTransport:void doConsume(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.udp.UdpTransport:void run()",
            "org.apache.activemq.transport.tcp.TcpTransport:void run()"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransport:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportFilter:void start()"
        ]
    },
    "org.apache.activemq.transport.udp.ResponseRedirectInterceptor:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void sendToActiveMQ(org.apache.activemq.command.Command,org.apache.activemq.transport.stomp.ResponseHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompSubscribe(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.stomp.ProtocolConverter$2:void onResponse(org.apache.activemq.transport.stomp.ProtocolConverter,org.apache.activemq.command.Response)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompBegin(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompConnect(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompUnsubscribe(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompAbort(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompSend(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompDisconnect(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommit(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompAck(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.StompSubscription:void onMessageDispatch(org.apache.activemq.command.MessageDispatch)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueReceiver:void <init>(org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,int,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue,java.lang.String)"
        ]
    },
    "org.apache.activemq.ActiveMQTopicSubscriber:void <init>(org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,java.lang.String,int,int,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic,java.lang.String,boolean)",
            "org.apache.activemq.ActiveMQSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String,boolean)",
            "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String,boolean)",
            "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String,boolean)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String)",
            "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String)",
            "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)",
            "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String)"
        ]
    },
    "org.apache.activemq.ActiveMQQueueBrowser$1:void <init>(org.apache.activemq.ActiveMQQueueBrowser,org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,java.lang.String,int,int,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueBrowser:org.apache.activemq.ActiveMQMessageConsumer createConsumer()"
        ]
    },
    "org.apache.activemq.ActiveMQQueueBrowser:void destroyConsumer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueBrowser:java.lang.Object nextElement()",
            "org.apache.activemq.ActiveMQQueueBrowser:void close()",
            "org.apache.activemq.ActiveMQQueueBrowser:boolean hasMoreElements()"
        ]
    },
    "org.apache.activemq.broker.util.CommandAgent:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic,java.lang.String,java.lang.String,javax.jms.ServerSessionPool,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnection:javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic,java.lang.String,java.lang.String,javax.jms.ServerSessionPool,int)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Topic,java.lang.String,javax.jms.ServerSessionPool,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Topic,java.lang.String,javax.jms.ServerSessionPool,int)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Queue,java.lang.String,javax.jms.ServerSessionPool,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Queue,java.lang.String,javax.jms.ServerSessionPool,int)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination,java.lang.String,javax.jms.ServerSessionPool,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination,java.lang.String,javax.jms.ServerSessionPool,int)"
        ]
    },
    "org.apache.activemq.ActiveMQQueueSession:javax.jms.TemporaryQueue createTemporaryQueue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.TemporaryQueue createTemporaryQueue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicSession:javax.jms.TemporaryTopic createTemporaryTopic()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.TemporaryTopic createTemporaryTopic()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:java.io.InputStream createDurableInputStream(javax.jms.Topic,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:java.io.InputStream createDurableInputStream(javax.jms.Topic,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:java.io.InputStream createInputStream(javax.jms.Destination,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:java.io.InputStream createInputStream(javax.jms.Destination,java.lang.String)",
            "org.apache.activemq.ActiveMQConnection:java.io.InputStream createDurableInputStream(javax.jms.Topic,java.lang.String)"
        ]
    },
    "org.apache.activemq.pool.PooledSession:void unsubscribe(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicSession:void unsubscribe(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQOutputStream:void flushBuffer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQOutputStream:void write(int)",
            "org.apache.activemq.ActiveMQOutputStream:void close()",
            "org.apache.activemq.ActiveMQOutputStream:void write(byte[],int,int)",
            "org.apache.activemq.ActiveMQOutputStream:void flush()"
        ]
    },
    "org.apache.activemq.ActiveMQOutputStream:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQMessageProducer:void send(javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.DestinationView:java.lang.String sendTextMessage(java.util.Map,java.lang.String)",
            "org.apache.activemq.ActiveMQTopicPublisher:void publish(javax.jms.Message)"
        ]
    },
    "org.apache.activemq.pool.PooledProducer:void send(javax.jms.Destination,javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledProducer:void send(javax.jms.Message)",
            "org.apache.activemq.pool.PooledProducer:void send(javax.jms.Destination,javax.jms.Message)",
            "org.apache.activemq.pool.PooledProducer:void send(javax.jms.Message,int,int,long)"
        ]
    },
    "org.apache.activemq.ActiveMQQueueSender:void send(javax.jms.Queue,javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledQueueSender:void send(javax.jms.Queue,javax.jms.Message,int,int,long)"
        ]
    },
    "org.apache.activemq.ActiveMQTopicPublisher:void publish(javax.jms.Topic,javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledTopicPublisher:void publish(javax.jms.Topic,javax.jms.Message,int,int,long)"
        ]
    },
    "org.apache.activemq.ActiveMQMessageProducer:void send(javax.jms.Destination,javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQTopicPublisher:void publish(javax.jms.Topic,javax.jms.Message)",
            "org.apache.activemq.ActiveMQQueueSender:void send(javax.jms.Queue,javax.jms.Message)"
        ]
    },
    "org.apache.activemq.ActiveMQMessageProducer:void send(javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQTopicPublisher:void publish(javax.jms.Message,int,int,long)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:void doStartTransaction()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:void run()",
            "org.apache.activemq.ActiveMQMessageConsumer:void acknowledge()",
            "org.apache.activemq.ActiveMQSession:void send(org.apache.activemq.ActiveMQMessageProducer,org.apache.activemq.command.ActiveMQDestination,javax.jms.Message,int,int,long)",
            "org.apache.activemq.ActiveMQMessageConsumer:void ackLater(org.apache.activemq.command.MessageDispatch,byte)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:java.io.OutputStream createOutputStream(javax.jms.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:java.io.OutputStream createNonPersistentOutputStream(javax.jms.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.ConnectionPool:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnection:void start()"
        ]
    },
    "org.apache.activemq.ActiveMQXAConnection:javax.jms.XATopicSession createXATopicSession()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.DestinationView:java.lang.String sendTextMessage(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.DestinationView:java.lang.String sendTextMessage(java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.util.CommandAgent:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQXAConnection:javax.jms.XASession createXASession()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledConnection:org.apache.activemq.ActiveMQSession createSession(org.apache.activemq.pool.SessionKey)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQXAConnection:javax.jms.XAQueueSession createXAQueueSession()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.SessionPool:org.apache.activemq.ActiveMQSession createSession()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.SessionPool:java.lang.Object makeObject()"
        ]
    },
    "org.apache.activemq.pool.PooledConnection:void setClientID(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:javax.jms.TopicSession createTopicSession(boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:javax.jms.QueueSession createQueueSession(boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicSession:void commit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:void commit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueSession:void commit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.vm.VMTransport:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.thread.PooledTaskRunner:void runTask()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.thread.PooledTaskRunner:void access$100(org.apache.activemq.thread.PooledTaskRunner)"
        ]
    },
    "org.apache.activemq.thread.DedicatedTaskRunner:void runTask()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.thread.DedicatedTaskRunner:void access$000(org.apache.activemq.thread.DedicatedTaskRunner)"
        ]
    },
    "org.apache.activemq.transport.udp.UdpTransportServer$2:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportFilter:void start()"
        ]
    },
    "org.apache.activemq.transport.tcp.SslTransport:void doConsume(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.udp.UdpTransport:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.tcp.TcpTransport:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.TransportFilter:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.udp.UdpTransportServer$2:void start()",
            "org.apache.activemq.proxy.ProxyConnection:void start()",
            "org.apache.activemq.transport.TransportFilter:void start()",
            "org.apache.activemq.transport.udp.UdpTransportServer:void doStart()",
            "org.apache.activemq.transport.WireFormatNegotiator:void start()",
            "org.apache.activemq.transport.mock.MockTransport:void start()",
            "org.apache.activemq.transport.reliable.ReliableTransport:void start()",
            "org.apache.activemq.broker.TransportConnection:void start()"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompSubscribe(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter$2:void onResponse(org.apache.activemq.transport.stomp.ProtocolConverter,org.apache.activemq.command.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompBegin(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompConnect(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompUnsubscribe(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompAbort(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompSend(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompDisconnect(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommit(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompAck(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue,java.lang.String)",
            "org.apache.activemq.pool.PooledSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue,java.lang.String)",
            "org.apache.activemq.ActiveMQSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic,java.lang.String,boolean)",
            "org.apache.activemq.ActiveMQSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic)",
            "org.apache.activemq.ActiveMQTopicSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic,java.lang.String,boolean)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String)",
            "org.apache.activemq.pool.PooledSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String,java.lang.String,boolean)",
            "org.apache.activemq.ActiveMQTopicSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)",
            "org.apache.activemq.broker.util.CommandAgent:void start()",
            "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)",
            "org.apache.activemq.pool.PooledSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)"
        ]
    },
    "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueBrowser:org.apache.activemq.ActiveMQMessageConsumer createConsumer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueBrowser:void <init>(org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,boolean)",
            "org.apache.activemq.ActiveMQQueueBrowser:java.util.Enumeration getEnumeration()"
        ]
    },
    "org.apache.activemq.ActiveMQQueueBrowser:java.lang.Object nextElement()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueBrowser:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueBrowser:boolean hasMoreElements()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledConnection:javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic,java.lang.String,java.lang.String,javax.jms.ServerSessionPool,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Topic,java.lang.String,javax.jms.ServerSessionPool,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Queue,java.lang.String,javax.jms.ServerSessionPool,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledConnection:javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination,java.lang.String,javax.jms.ServerSessionPool,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:java.io.InputStream createDurableInputStream(javax.jms.Topic,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:java.io.InputStream createInputStream(javax.jms.Destination,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnection:java.io.InputStream createInputStream(javax.jms.Destination)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:java.io.InputStream createDurableInputStream(javax.jms.Topic,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQOutputStream:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQOutputStream:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicPublisher:void publish(javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledTopicPublisher:void publish(javax.jms.Message)"
        ]
    },
    "org.apache.activemq.pool.PooledProducer:void send(javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledProducer:void send(javax.jms.Destination,javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledProducer:void send(javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledQueueSender:void send(javax.jms.Queue,javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledTopicPublisher:void publish(javax.jms.Topic,javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicPublisher:void publish(javax.jms.Topic,javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledTopicPublisher:void publish(javax.jms.Topic,javax.jms.Message)"
        ]
    },
    "org.apache.activemq.ActiveMQQueueSender:void send(javax.jms.Queue,javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledQueueSender:void send(javax.jms.Queue,javax.jms.Message)"
        ]
    },
    "org.apache.activemq.ActiveMQTopicPublisher:void publish(javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledTopicPublisher:void publish(javax.jms.Message,int,int,long)"
        ]
    },
    "org.apache.activemq.ActiveMQSession:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledSession:void run()",
            "org.apache.activemq.ActiveMQTopicSession:void run()",
            "org.apache.activemq.ActiveMQQueueSession:void run()"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:void acknowledge()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageConsumer$3:void beforeEnd()",
            "org.apache.activemq.ActiveMQMessageConsumer:void dispose()"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:void ackLater(org.apache.activemq.command.MessageDispatch,byte)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageConsumer:void beforeMessageIsConsumed(org.apache.activemq.command.MessageDispatch)",
            "org.apache.activemq.ActiveMQMessageConsumer:void afterMessageIsConsumed(org.apache.activemq.command.MessageDispatch,boolean)"
        ]
    },
    "org.apache.activemq.pool.PooledConnection:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.DestinationView:java.lang.String sendTextMessage(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.SessionPool:java.lang.Object makeObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.InactivityMonitor:void writeCheck()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void access$100(org.apache.activemq.transport.InactivityMonitor)"
        ]
    },
    "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.WireFormatNegotiator:void start()"
        ]
    },
    "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.ResponseCorrelator:java.lang.Object request(java.lang.Object,int)",
            "org.apache.activemq.transport.ResponseCorrelator:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.transport.TransportLogger:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.reliable.ReliableTransport:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.transport.reliable.ReliableTransport:java.lang.Object request(java.lang.Object,int)",
            "org.apache.activemq.transport.MutexTransport:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.TransportFilter:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)"
        ]
    },
    "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.broker.TransportConnection:void dispatch(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.broker.ft.MasterBroker:void sendAsyncToSlave(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void dispatch(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.broker.ft.MasterBroker:void sendAsyncToSlave(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)",
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.broker.TransportConnection:void dispatch(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.broker.ft.MasterBroker:void sendAsyncToSlave(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.proxy.ProxyConnection$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.mock.MockTransport:void oneway(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter$1:void onResponse(org.apache.activemq.transport.stomp.ProtocolConverter,org.apache.activemq.command.Response)",
            "org.apache.activemq.transport.stomp.StompSubscription:void onMessageDispatch(org.apache.activemq.command.MessageDispatch)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.thread.PooledTaskRunner:void access$100(org.apache.activemq.thread.PooledTaskRunner)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.thread.PooledTaskRunner$1:void run()"
        ]
    },
    "org.apache.activemq.thread.DedicatedTaskRunner:void access$000(org.apache.activemq.thread.DedicatedTaskRunner)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.thread.DedicatedTaskRunner$1:void run()"
        ]
    },
    "org.apache.activemq.proxy.ProxyConnection:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.proxy.ProxyConnector$1:void onAccept(org.apache.activemq.transport.Transport)"
        ]
    },
    "org.apache.activemq.transport.udp.UdpTransportServer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.WireFormatNegotiator:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportFilter:void start()"
        ]
    },
    "org.apache.activemq.transport.mock.MockTransport:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportFilter:void start()"
        ]
    },
    "org.apache.activemq.transport.reliable.ReliableTransport:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportFilter:void start()"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ConnectionView:void start()",
            "org.apache.activemq.broker.TransportConnector$1:void onAccept(org.apache.activemq.transport.Transport)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.StompTransportFilter:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.ActiveMQQueueSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue)",
            "org.apache.activemq.pool.PooledSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue)"
        ]
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQTopicSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic)",
            "org.apache.activemq.pool.PooledSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic)"
        ]
    },
    "org.apache.activemq.ActiveMQTopicSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQTopicSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String)",
            "org.apache.activemq.pool.PooledSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String)"
        ]
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.MessageConsumer createConsumer(javax.jms.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueBrowser:void <init>(org.apache.activemq.ActiveMQSession,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQDestination,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue,java.lang.String)"
        ]
    },
    "org.apache.activemq.ActiveMQQueueBrowser:java.util.Enumeration getEnumeration()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:java.io.InputStream createInputStream(javax.jms.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledTopicPublisher:void publish(javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledTopicPublisher:void publish(javax.jms.Topic,javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledQueueSender:void send(javax.jms.Queue,javax.jms.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledTopicPublisher:void publish(javax.jms.Message,int,int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicSession:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueSession:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQMessageConsumer$3:void beforeEnd()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQMessageConsumer:void dispose()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageConsumer:void close()"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:void beforeMessageIsConsumed(org.apache.activemq.command.MessageDispatch)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive()",
            "org.apache.activemq.ActiveMQMessageConsumer:void dispatch(org.apache.activemq.command.MessageDispatch)",
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receiveNoWait()",
            "org.apache.activemq.ActiveMQMessageConsumer:org.apache.activemq.command.MessageDispatch dequeue(long)",
            "org.apache.activemq.ActiveMQMessageConsumer:boolean iterate()",
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive(long)"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:void afterMessageIsConsumed(org.apache.activemq.command.MessageDispatch,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive()",
            "org.apache.activemq.ActiveMQMessageConsumer:void dispatch(org.apache.activemq.command.MessageDispatch)",
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receiveNoWait()",
            "org.apache.activemq.ActiveMQMessageConsumer:org.apache.activemq.command.MessageDispatch dequeue(long)",
            "org.apache.activemq.ActiveMQMessageConsumer:boolean iterate()",
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive(long)"
        ]
    },
    "org.apache.activemq.transport.InactivityMonitor:void access$100(org.apache.activemq.transport.InactivityMonitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor$2:void run()"
        ]
    },
    "org.apache.activemq.transport.ResponseCorrelator:java.lang.Object request(java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.ResponseCorrelator:java.lang.Object request(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void sendSyncToSlave(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.transport.TransportLogger:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.MutexTransport:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.TransportFilter:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)"
        ]
    },
    "org.apache.activemq.transport.reliable.ReliableTransport:java.lang.Object request(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.reliable.ReliableTransport:java.lang.Object request(java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object,int)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object,int)"
        ]
    },
    "org.apache.activemq.transport.MutexTransport:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.MutexTransport:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.TransportFilter:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)"
        ]
    },
    "org.apache.activemq.transport.TransportFilter:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.mock.MockTransport:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.MutexTransport:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.TransportFilter:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:void dispatch(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void processDispatch(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:boolean iterate()"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void sendAsyncToSlave(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void rollbackTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.ft.MasterBroker:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.ft.MasterBroker:void forgetTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.ft.MasterBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void removeSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void addSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void sendToSlave(org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.ft.MasterBroker:void sendToSlave(org.apache.activemq.command.MessageAck)",
            "org.apache.activemq.broker.ft.MasterBroker:void beginTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.ft.MasterBroker:void processDispatch(org.apache.activemq.command.MessageDispatch)",
            "org.apache.activemq.broker.ft.MasterBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:int prepareTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)"
        ]
    },
    "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.DefaultReplayStrategy:boolean onDroppedPackets(org.apache.activemq.transport.reliable.ReliableTransport,int,int,int)",
            "org.apache.activemq.transport.reliable.ReliableTransport:void onMissingResponse(org.apache.activemq.command.Command,org.apache.activemq.transport.FutureResponse)"
        ]
    },
    "org.apache.activemq.proxy.ProxyConnection$1:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.WireFormatNegotiator:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.mock.MockTransport:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter$1:void onResponse(org.apache.activemq.transport.stomp.ProtocolConverter,org.apache.activemq.command.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.stomp.ProtocolConverter$2$1:void onResponse(org.apache.activemq.transport.stomp.ProtocolConverter,org.apache.activemq.command.Response)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.thread.PooledTaskRunner$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.thread.DedicatedTaskRunner$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.proxy.ProxyConnector$1:void onAccept(org.apache.activemq.transport.Transport)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.ConnectionView:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnector$1:void onAccept(org.apache.activemq.transport.Transport)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.tcp.TcpTransportServer:void run()",
            "org.apache.activemq.transport.udp.UdpTransportServer:org.apache.activemq.transport.Transport configureTransport(org.apache.activemq.transport.Transport)",
            "org.apache.activemq.transport.vm.VMTransportServer:org.apache.activemq.transport.vm.VMTransport connect()"
        ]
    },
    "org.apache.activemq.transport.stomp.StompTransportFilter:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void syncOneWay(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:boolean iterate()",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportSupport:void doConsume(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.vm.VMTransport:void start()"
        ]
    },
    "org.apache.activemq.ActiveMQQueueSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.QueueReceiver createReceiver(javax.jms.Queue)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQTopicSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue,java.lang.String)",
            "org.apache.activemq.ActiveMQSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue)",
            "org.apache.activemq.pool.PooledSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue,java.lang.String)"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive(long)"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:void dispatch(org.apache.activemq.command.MessageDispatch)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueBrowser$1:void dispatch(org.apache.activemq.command.MessageDispatch)"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receiveNoWait()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQQueueBrowser:java.lang.Object nextElement()"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:org.apache.activemq.command.MessageDispatch dequeue(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive()",
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receiveNoWait()",
            "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive(long)"
        ]
    },
    "org.apache.activemq.ActiveMQMessageConsumer:boolean iterate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQMessageConsumer:javax.jms.Message receive(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.InactivityMonitor$2:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.ft.MasterBroker:void sendSyncToSlave(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void commitTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId,boolean)",
            "org.apache.activemq.broker.ft.MasterBroker:void sendToSlave(org.apache.activemq.command.MessageAck)",
            "org.apache.activemq.broker.ft.MasterBroker:void sendToSlave(org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.broker.ft.MasterBroker:void sendSyncToSlave(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.broker.ft.MasterBroker:void sendSyncToSlave(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.transport.TransportLogger:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.transport.mock.MockTransport:java.lang.Object request(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object,int)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object,int)"
        ]
    },
    "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object,int)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object,int)",
            "org.apache.activemq.transport.TransportLogger:java.lang.Object request(java.lang.Object,int)",
            "org.apache.activemq.transport.mock.MockTransport:java.lang.Object request(java.lang.Object,int)"
        ]
    },
    "org.apache.activemq.transport.mock.MockTransport:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLogger:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.MutexTransport:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.TransportFilter:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:void processDispatch(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void dispatchSync(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:void start()",
            "org.apache.activemq.broker.TransportConnection:boolean iterate()"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:boolean iterate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.thread.PooledTaskRunner:void runTask()",
            "org.apache.activemq.thread.DedicatedTaskRunner:void runTask()"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void rollbackTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void rollbackTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void forgetTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void forgetTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void removeSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void removeSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void addSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void addSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void sendToSlave(org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void sendToSlave(org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void beginTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void beginTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void processDispatch(org.apache.activemq.command.MessageDispatch)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void processDispatch(org.apache.activemq.command.MessageDispatch)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:int prepareTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:int prepareTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)"
        ]
    },
    "org.apache.activemq.transport.reliable.DefaultReplayStrategy:boolean onDroppedPackets(org.apache.activemq.transport.reliable.ReliableTransport,int,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.ReliableTransport:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.reliable.ReliableTransport:void onMissingResponse(org.apache.activemq.command.Command,org.apache.activemq.transport.FutureResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.ReliableTransport:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.transport.reliable.ReliableTransport:java.lang.Object request(java.lang.Object,int)"
        ]
    },
    "org.apache.activemq.transport.stomp.ProtocolConverter$2$1:void onResponse(org.apache.activemq.transport.stomp.ProtocolConverter,org.apache.activemq.command.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.tcp.TcpTransportServer:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.udp.UdpTransportServer:org.apache.activemq.transport.Transport configureTransport(org.apache.activemq.transport.Transport)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.udp.UdpTransportServer:void processInboundConnection(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransportServer:org.apache.activemq.transport.vm.VMTransport connect()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.ActiveMQQueueSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue)",
            "org.apache.activemq.ActiveMQQueueSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue)"
        ]
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueBrowser$1:void dispatch(org.apache.activemq.command.MessageDispatch)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.ft.MasterBroker:void commitTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void commitTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId,boolean)"
        ]
    },
    "org.apache.activemq.transport.TransportLogger:java.lang.Object request(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.mock.MockTransport:java.lang.Object request(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.TransportLogger:java.lang.Object request(java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object,int)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object,int)"
        ]
    },
    "org.apache.activemq.transport.mock.MockTransport:java.lang.Object request(java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.MutexTransport:java.lang.Object request(java.lang.Object,int)",
            "org.apache.activemq.transport.TransportFilter:java.lang.Object request(java.lang.Object,int)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:void dispatchSync(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:void dispatch(org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.TransportConnection$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.broker.TransportConnection:void dispatchAsync(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:void serviceException(java.lang.Throwable)",
            "org.apache.activemq.broker.region.PrefetchSubscription:boolean dispatch(org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void rollbackTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void rollbackTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.MutableBrokerFilter:void rollbackTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRollbackTransaction(org.apache.activemq.command.TransactionInfo)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void rollbackTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveSubscription(org.apache.activemq.command.RemoveSubscriptionInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddProducer(org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveConnection(org.apache.activemq.command.ConnectionId)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void forgetTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processForgetTransaction(org.apache.activemq.command.TransactionInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void forgetTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.MutableBrokerFilter:void forgetTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void forgetTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddConsumer(org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void removeSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void removeSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddSession(org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveSession(org.apache.activemq.command.SessionId)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void addSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void addSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void addSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void addSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddSession(org.apache.activemq.command.SessionInfo)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void beginTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void beginTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processBeginTransaction(org.apache.activemq.command.TransactionInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void beginTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void beginTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void processDispatch(org.apache.activemq.command.MessageDispatch)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void stop()",
            "org.apache.activemq.broker.TransportConnection:void dispatchAsync(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:void processDispatch(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.ft.MasterBroker:void processDispatch(org.apache.activemq.command.MessageDispatch)",
            "org.apache.activemq.broker.MutableBrokerFilter:void processDispatch(org.apache.activemq.command.MessageDispatch)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void processDispatch(org.apache.activemq.command.MessageDispatch)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.ft.MasterBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveProducer(org.apache.activemq.command.ProducerId)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddProducer(org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:int prepareTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:int prepareTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processPrepareTransaction(org.apache.activemq.command.TransactionInfo)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:int prepareTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)",
            "org.apache.activemq.broker.ft.MasterBroker:int prepareTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)"
        ]
    },
    "org.apache.activemq.transport.udp.UdpTransportServer:void processInboundConnection(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.udp.UdpTransportServer$1:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.peer.PeerTransportFactory$1:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)",
            "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.pool.PooledSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQQueueSession:javax.jms.QueueBrowser createBrowser(javax.jms.Queue)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void commitTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void commitTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId,boolean)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processCommitTransactionTwoPhase(org.apache.activemq.command.TransactionInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void commitTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId,boolean)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processCommitTransactionOnePhase(org.apache.activemq.command.TransactionInfo)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void commitTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId,boolean)"
        ]
    },
    "org.apache.activemq.broker.region.TopicSubscription:void dispatch(org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:void add(org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.region.TopicSubscription:void dispatchMatched()"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:void dispatchAsync(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:void dispatch(org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.region.Queue$2$1:void run()",
            "org.apache.activemq.broker.region.PrefetchSubscription:void updateConsumerPrefetch(int)",
            "org.apache.activemq.broker.TransportConnection:void serviceException(java.lang.Throwable)",
            "org.apache.activemq.broker.region.TopicSubscription:void updateConsumerPrefetch(int)",
            "org.apache.activemq.broker.region.PrefetchSubscription:boolean dispatch(org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:void serviceException(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.region.PrefetchSubscription:void pullTimeout(long)",
            "org.apache.activemq.broker.TransportConnection$2:void run()"
        ]
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:boolean dispatch(org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription:void add(org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.region.QueueSubscription:boolean dispatch(org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.region.PrefetchSubscription:void dispatchMatched()"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRollbackTransaction(org.apache.activemq.command.TransactionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.TransactionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void rollbackTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveSubscription(org.apache.activemq.command.RemoveSubscriptionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.RemoveSubscriptionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddProducer(org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.ProducerInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveConnection(org.apache.activemq.command.ConnectionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void stop()",
            "org.apache.activemq.command.RemoveInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processForgetTransaction(org.apache.activemq.command.TransactionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.TransactionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void forgetTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddConsumer(org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.ConsumerInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddSession(org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.SessionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveSession(org.apache.activemq.command.SessionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveConnection(org.apache.activemq.command.ConnectionId)",
            "org.apache.activemq.command.RemoveInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void addSession(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedTransportConnection:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.command.ConnectionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.util.TimeStampingBrokerPlugin:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processMessage(org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.Topic:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.util.BrokerSupport:void resend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.util.LoggingBrokerPlugin:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.MutableBrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processMessageAck(org.apache.activemq.command.MessageAck)",
            "org.apache.activemq.broker.ft.MasterBroker:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)",
            "org.apache.activemq.broker.util.LoggingBrokerPlugin:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)",
            "org.apache.activemq.broker.MutableBrokerFilter:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processBeginTransaction(org.apache.activemq.command.TransactionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.TransactionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void beginTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportStatusDetector:void doCollection(org.apache.activemq.broker.TransportConnection)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processShutdown(org.apache.activemq.command.ShutdownInfo)",
            "org.apache.activemq.util.ServiceSupport:void dispose(org.apache.activemq.Service)",
            "org.apache.activemq.broker.jmx.ManagedTransportConnection:void stop()",
            "org.apache.activemq.broker.TransportConnection:void start()"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void processDispatch(org.apache.activemq.command.MessageDispatch)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveProducer(org.apache.activemq.command.ProducerId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveSession(org.apache.activemq.command.SessionId)",
            "org.apache.activemq.command.RemoveInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processPrepareTransaction(org.apache.activemq.command.TransactionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.TransactionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:int prepareTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.udp.UdpTransportServer$1:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.peer.PeerTransportFactory$1:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.peer.PeerTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)",
            "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.peer.PeerTransportFactory$1:org.apache.activemq.transport.Transport doConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processCommitTransactionTwoPhase(org.apache.activemq.command.TransactionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.TransactionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processCommitTransactionOnePhase(org.apache.activemq.command.TransactionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.TransactionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void commitTransaction(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.TransactionId,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicSubscription:void add(org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicSubscription:void dispatchMatched()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)"
        ]
    },
    "org.apache.activemq.broker.region.Queue$2$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void updateConsumerPrefetch(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicSubscription:void updateConsumerPrefetch(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void pullTimeout(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription:void access$000(org.apache.activemq.broker.region.PrefetchSubscription,long)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection$2:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void add(org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription:void pullTimeout(long)",
            "org.apache.activemq.broker.region.PrefetchSubscription:org.apache.activemq.command.Response pullMessage(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessagePull)",
            "org.apache.activemq.broker.region.QueueBrowserSubscription:void browseDone()",
            "org.apache.activemq.broker.region.DurableTopicSubscription:void add(org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.broker.region.QueueSubscription:boolean dispatch(org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription:void add(org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.region.PrefetchSubscription:void dispatchMatched()"
        ]
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void dispatchMatched()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.DurableTopicSubscription:void activate(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.region.PrefetchSubscription:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)",
            "org.apache.activemq.broker.region.PrefetchSubscription:void pullTimeout(long)",
            "org.apache.activemq.broker.region.DurableTopicSubscription:void add(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination)",
            "org.apache.activemq.broker.region.PrefetchSubscription:void onDispatch(org.apache.activemq.broker.region.MessageReference,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.PrefetchSubscription:org.apache.activemq.command.Response pullMessage(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessagePull)"
        ]
    },
    "org.apache.activemq.command.TransactionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.command.RemoveSubscriptionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.command.ProducerInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.command.RemoveInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.command.ConsumerInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.command.SessionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTransportConnection:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.ConnectionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.command.ConnectionInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.broker.util.TimeStampingBrokerPlugin:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processMessage(org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.ActiveMQMessage:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.region.Topic:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic:void dispatch(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.util.BrokerSupport:void resend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription:void sendToDLQ(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReferenceFilter,org.apache.activemq.command.ActiveMQDestination,int)",
            "org.apache.activemq.broker.region.Queue:int copyMatchingMessages(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReferenceFilter,org.apache.activemq.command.ActiveMQDestination,int)"
        ]
    },
    "org.apache.activemq.broker.util.LoggingBrokerPlugin:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processMessageAck(org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.MessageAck:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.util.LoggingBrokerPlugin:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportStatusDetector:void doCollection(org.apache.activemq.broker.TransportConnection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportStatusDetector:void doCollection()"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processShutdown(org.apache.activemq.command.ShutdownInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.command.ShutdownInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.util.ServiceSupport:void dispose(org.apache.activemq.Service)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.fanout.FanoutTransport:void remove(java.net.URI[])",
            "org.apache.activemq.network.DemandForwardingBridge:void serviceLocalBrokerInfo(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.ft.MasterConnector:void serviceLocalException(java.lang.Throwable)",
            "org.apache.activemq.broker.ft.MasterConnector:void shutDown()",
            "org.apache.activemq.network.DemandForwardingBridgeSupport$5:void run()",
            "org.apache.activemq.network.DemandForwardingBridgeSupport$6:void run()",
            "org.apache.activemq.ActiveMQConnection:void close()",
            "org.apache.activemq.network.CompositeDemandForwardingBridge:void serviceRemoteBrokerInfo(org.apache.activemq.command.Command)",
            "org.apache.activemq.network.DiscoveryNetworkConnector:void onServiceAdd(org.apache.activemq.command.DiscoveryEvent)",
            "org.apache.activemq.transport.vm.VMTransportFactory:void stopped(java.lang.String)",
            "org.apache.activemq.network.DemandForwardingBridge:void serviceRemoteBrokerInfo(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onException(java.io.IOException)",
            "org.apache.activemq.transport.failover.FailoverTransport:void handleTransportFailure(java.io.IOException)",
            "org.apache.activemq.ActiveMQConnection$5:void run()",
            "org.apache.activemq.network.ForwardingBridge:void serviceLocalCommand(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:void serviceTransportException(java.io.IOException)",
            "org.apache.activemq.broker.TransportConnection:void serviceException(java.lang.Throwable)",
            "org.apache.activemq.network.ForwardingBridge:void serviceRemoteCommand(org.apache.activemq.command.Command)",
            "org.apache.activemq.network.DiscoveryNetworkConnector:void onServiceRemove(org.apache.activemq.command.DiscoveryEvent)",
            "org.apache.activemq.broker.TransportConnector$1:void onAccept(org.apache.activemq.transport.Transport)",
            "org.apache.activemq.transport.vm.VMTransportFactory:void stopped(org.apache.activemq.transport.vm.VMTransportServer)",
            "org.apache.activemq.transport.vm.VMTransportFactory:boolean validateBroker(java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTransportConnection:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processShutdown(org.apache.activemq.command.ShutdownInfo)",
            "org.apache.activemq.util.ServiceSupport:void dispose(org.apache.activemq.Service)",
            "org.apache.activemq.broker.TransportConnection:void start()",
            "org.apache.activemq.broker.jmx.ConnectionView:void stop()"
        ]
    },
    "org.apache.activemq.transport.peer.PeerTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.peer.PeerTransportFactory$1:org.apache.activemq.transport.Transport doConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.peer.PeerTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.broker.region.TopicSubscription:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void access$000(org.apache.activemq.broker.region.PrefetchSubscription,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription$1:void run()"
        ]
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:org.apache.activemq.command.Response pullMessage(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessagePull)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.QueueBrowserSubscription:void browseDone()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.DurableTopicSubscription:void add(org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.policy.FixedCountSubscriptionRecoveryPolicy:void recover(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Topic,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.broker.region.Topic$1:void recoverMessage(org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.region.DurableTopicSubscription:void activate(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.DurableTopicSubscription:void add(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic:void addSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void onDispatch(org.apache.activemq.broker.region.MessageReference,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription$3:void run()",
            "org.apache.activemq.broker.region.QueueSubscription:void onDispatch(org.apache.activemq.broker.region.MessageReference,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.PrefetchSubscription:boolean dispatch(org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.failover.FailoverTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.fanout.FanoutTransport:void oneway(java.lang.Object)"
        ]
    },
    "org.apache.activemq.command.ActiveMQMessage:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.broker.region.Topic:void dispatch(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.Topic$2:void afterCommit()"
        ]
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void sendToDLQ(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.QueueSubscription:void sendToDLQ(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.region.PrefetchSubscription:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReferenceFilter,org.apache.activemq.command.ActiveMQDestination,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination,int)",
            "org.apache.activemq.broker.region.Queue:boolean moveMessageTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:int copyMatchingMessages(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReferenceFilter,org.apache.activemq.command.ActiveMQDestination,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:int copyMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination,int)",
            "org.apache.activemq.broker.region.Queue:boolean copyMessageTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.command.MessageAck:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.broker.TransportStatusDetector:void doCollection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportStatusDetector:void run()"
        ]
    },
    "org.apache.activemq.command.ShutdownInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.state.ConnectionStateTracker:org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.transport.fanout.FanoutTransport:void remove(java.net.URI[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.discovery.DiscoveryTransport:void onServiceRemove(org.apache.activemq.command.DiscoveryEvent)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridge:void serviceLocalBrokerInfo(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalCommand(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterConnector:void serviceLocalException(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterConnector$1:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterConnector:void shutDown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterConnector:void serviceRemoteCommand(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.ft.MasterConnector:void serviceRemoteException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$5:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$6:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.ConnectionPool:void close()",
            "org.apache.activemq.broker.jmx.DestinationView:java.lang.String sendTextMessage(java.util.Map,java.lang.String)",
            "org.apache.activemq.broker.util.CommandAgent:void stop()",
            "org.apache.activemq.ActiveMQConnectionFactory:org.apache.activemq.ActiveMQConnection createActiveMQConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.network.CompositeDemandForwardingBridge:void serviceRemoteBrokerInfo(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceRemoteCommand(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.network.DiscoveryNetworkConnector:void onServiceAdd(org.apache.activemq.command.DiscoveryEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.vm.VMTransportFactory:void stopped(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void stop()"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridge:void serviceRemoteBrokerInfo(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceRemoteCommand(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.fanout.FanoutTransport:void oneway(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.failover.FailoverTransport:void handleTransportFailure(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.failover.FailoverTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.failover.FailoverTransport:void access$300(org.apache.activemq.transport.failover.FailoverTransport,java.io.IOException)"
        ]
    },
    "org.apache.activemq.ActiveMQConnection$5:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.ForwardingBridge:void serviceLocalCommand(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.ForwardingBridge$1:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:void serviceTransportException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void serviceException(java.lang.Throwable)",
            "org.apache.activemq.broker.TransportConnection$1:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.network.ForwardingBridge:void serviceRemoteCommand(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.ForwardingBridge$2:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.network.DiscoveryNetworkConnector:void onServiceRemove(org.apache.activemq.command.DiscoveryEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.vm.VMTransportFactory:void stopped(org.apache.activemq.transport.vm.VMTransportServer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.vm.VMTransportServer:void stop()"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransportFactory:boolean validateBroker(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.broker.jmx.ConnectionView:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.peer.PeerTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.PrefetchSubscription$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.policy.FixedCountSubscriptionRecoveryPolicy:void recover(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Topic,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic:void addSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.broker.region.Topic:void activate(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.DurableTopicSubscription)"
        ]
    },
    "org.apache.activemq.broker.region.Topic$1:void recoverMessage(org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.jdbc.JDBCTopicMessageStore$1:void recoverMessage(long,byte[])",
            "org.apache.activemq.store.journal.QuickJournalTopicMessageStore$1:void recoverMessageReference(java.lang.String)",
            "org.apache.activemq.store.kahadaptor.KahaTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)",
            "org.apache.activemq.store.memory.MemoryTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)"
        ]
    },
    "org.apache.activemq.broker.region.Topic:void addSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicRegion:void recoverDurableSubscriptions(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Topic)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.DestinationFactoryImpl$2:void addSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.broker.region.DestinationFilter:void addSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.broker.region.PrefetchSubscription$3:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void dispatchAsync(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.TransportConnection:void processDispatch(org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.broker.region.QueueSubscription:void onDispatch(org.apache.activemq.broker.region.MessageReference,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription$3:void run()",
            "org.apache.activemq.broker.region.PrefetchSubscription:boolean dispatch(org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.transport.failover.FailoverTransport:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.transport.fanout.FanoutTransport:void oneway(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.TransportLogger:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void sendWireFormat(org.apache.activemq.command.WireFormatInfo)",
            "org.apache.activemq.transport.ResponseCorrelator:org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object,org.apache.activemq.transport.ResponseCallback)",
            "org.apache.activemq.transport.InactivityMonitor:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.MutexTransport:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void oneway(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToStomp(org.apache.activemq.transport.stomp.StompFrame)"
        ]
    },
    "org.apache.activemq.broker.region.Topic:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.DestinationFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.region.Topic$2:void afterCommit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.QueueSubscription:void sendToDLQ(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.jmx.QueueView:int moveMatchingMessagesTo(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:boolean moveMessageTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:boolean moveMessageTo(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:int copyMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:int copyMatchingMessagesTo(java.lang.String,java.lang.String,int)",
            "org.apache.activemq.broker.region.Queue:int copyMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:boolean copyMessageTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:boolean copyMessageTo(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.TransportStatusDetector:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.discovery.DiscoveryTransport:void onServiceRemove(org.apache.activemq.command.DiscoveryEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalCommand(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport$1:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterConnector$1:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.ft.MasterConnector:void serviceRemoteCommand(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterConnector$2:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterConnector:void serviceRemoteException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterConnector:void serviceRemoteCommand(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.ft.MasterConnector$2:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.pool.ConnectionPool:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.ConnectionPool:boolean expiredCheck()"
        ]
    },
    "org.apache.activemq.ActiveMQConnectionFactory:org.apache.activemq.ActiveMQConnection createActiveMQConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.TopicConnection createTopicConnection(java.lang.String,java.lang.String)",
            "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.Connection createConnection(java.lang.String,java.lang.String)",
            "org.apache.activemq.ActiveMQConnectionFactory:org.apache.activemq.ActiveMQConnection createActiveMQConnection()",
            "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XATopicConnection createXATopicConnection(java.lang.String,java.lang.String)",
            "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XAQueueConnection createXAQueueConnection(java.lang.String,java.lang.String)",
            "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.QueueConnection createQueueConnection(java.lang.String,java.lang.String)",
            "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XAConnection createXAConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceRemoteCommand(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport$2:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.jdbc.JDBCPersistenceAdapter:void stopBroker()",
            "org.apache.activemq.xbean.XBeanBrokerService:void destroy()",
            "org.apache.activemq.broker.BrokerService:void masterFailed()",
            "org.apache.activemq.broker.jmx.BrokerView:void stop()",
            "org.apache.activemq.broker.BrokerService:void containerShutdown()"
        ]
    },
    "org.apache.activemq.transport.failover.FailoverTransport:void access$300(org.apache.activemq.transport.failover.FailoverTransport,java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.network.ForwardingBridge$1:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection$1:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)",
            "org.apache.activemq.transport.InactivityMonitor:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportLogger:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportFilter:void onException(java.io.IOException)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.network.ForwardingBridge$2:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.vm.VMTransportServer:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.util.ServiceStopper:void stop(org.apache.activemq.Service)",
            "org.apache.activemq.transport.vm.VMTransportServer$1:void stop()"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.BrokerView:javax.management.ObjectName createDurableSubscriber(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.Topic:void activate(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.DurableTopicSubscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.DurableTopicSubscription:void add(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination)"
        ]
    },
    "org.apache.activemq.store.jdbc.JDBCTopicMessageStore$1:void recoverMessage(long,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter:void doRecoverSubscription(org.apache.activemq.store.jdbc.TransactionContext,org.apache.activemq.command.ActiveMQDestination,java.lang.String,java.lang.String,org.apache.activemq.store.jdbc.JDBCMessageRecoveryListener)"
        ]
    },
    "org.apache.activemq.store.journal.QuickJournalTopicMessageStore$1:void recoverMessageReference(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.kahadaptor.KahaTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)",
            "org.apache.activemq.store.jdbc.JDBCTopicMessageStore$1:void recoverMessageReference(java.lang.String)",
            "org.apache.activemq.store.memory.MemoryTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)"
        ]
    },
    "org.apache.activemq.store.kahadaptor.KahaTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.ProxyTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)"
        ]
    },
    "org.apache.activemq.store.memory.MemoryTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic:void activate(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.DurableTopicSubscription)",
            "org.apache.activemq.store.ProxyTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)"
        ]
    },
    "org.apache.activemq.broker.region.TopicRegion:void recoverDurableSubscriptions(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Topic)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.DestinationFactoryImpl$2:void addSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicRegion:void recoverDurableSubscriptions(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Topic)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.DestinationFilter:void addSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.broker.region.DestinationFilter:void addSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.DestinationFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.virtual.CompositeDestinationInterceptor:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:int moveMatchingMessagesTo(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.jmx.QueueView:int moveMatchingMessagesTo(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.QueueView:boolean moveMessageTo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.QueueView:int copyMatchingMessagesTo(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Queue:int copyMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:int copyMatchingMessagesTo(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.jmx.QueueView:boolean copyMessageTo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$1:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.ft.MasterConnector$2:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.ft.MasterConnector$2:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.ConnectionPool:boolean expiredCheck()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.ConnectionPool:void decrementReferenceCount()",
            "org.apache.activemq.pool.PooledConnectionFactory:javax.jms.Connection createConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.TopicConnection createTopicConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.Connection createConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnectionFactory:org.apache.activemq.ActiveMQConnection createConnection(org.apache.activemq.pool.ConnectionKey)"
        ]
    },
    "org.apache.activemq.ActiveMQConnectionFactory:org.apache.activemq.ActiveMQConnection createActiveMQConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XAQueueConnection createXAQueueConnection()",
            "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XATopicConnection createXATopicConnection()",
            "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.Connection createConnection()",
            "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.TopicConnection createTopicConnection()",
            "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.QueueConnection createQueueConnection()",
            "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XAConnection createXAConnection()"
        ]
    },
    "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XATopicConnection createXATopicConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XAQueueConnection createXAQueueConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.QueueConnection createQueueConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XAConnection createXAConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$2:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.store.jdbc.JDBCPersistenceAdapter:void stopBroker()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.jdbc.JDBCPersistenceAdapter:void databaseLockKeepAlive()"
        ]
    },
    "org.apache.activemq.xbean.XBeanBrokerService:void destroy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void masterFailed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.ft.MasterConnector:void shutDown()"
        ]
    },
    "org.apache.activemq.broker.jmx.BrokerView:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void containerShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService$3:void run()"
        ]
    },
    "org.apache.activemq.transport.failover.FailoverTransport$1:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.InactivityMonitor:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void onException(java.io.IOException)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.InactivityMonitor:void readCheck()",
            "org.apache.activemq.transport.mock.MockTransport:void onException(java.io.IOException)",
            "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)",
            "org.apache.activemq.transport.TransportSupport:void onException(java.io.IOException)",
            "org.apache.activemq.transport.InactivityMonitor:void writeCheck()",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportLogger:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportFilter:void onException(java.io.IOException)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.transport.TransportLogger:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)",
            "org.apache.activemq.transport.TransportSupport:void onException(java.io.IOException)",
            "org.apache.activemq.transport.InactivityMonitor:void onException(java.io.IOException)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportLogger:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportFilter:void onException(java.io.IOException)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onException(java.io.IOException)",
            "org.apache.activemq.transport.mock.MockTransport:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.transport.TransportFilter:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void onException(java.io.IOException)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.ProtocolConverter:void onStompCommad(org.apache.activemq.transport.stomp.StompFrame)",
            "org.apache.activemq.transport.mock.MockTransport:void onException(java.io.IOException)",
            "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportSupport:void onException(java.io.IOException)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportLogger:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportFilter:void onException(java.io.IOException)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.ResponseCorrelator:void onException(java.io.IOException)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.util.ServiceStopper:void stop(org.apache.activemq.Service)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void stop()",
            "org.apache.activemq.broker.ft.MasterConnector:void stop()",
            "org.apache.activemq.broker.region.RegionBroker:void doStop(org.apache.activemq.util.ServiceStopper)",
            "org.apache.activemq.network.ForwardingBridge:void stop()",
            "org.apache.activemq.proxy.ProxyConnection:void stop()",
            "org.apache.activemq.transport.discovery.DiscoveryTransport:void stop()",
            "org.apache.activemq.proxy.ProxyConnector:void stop()",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void stop()",
            "org.apache.activemq.broker.TransportConnector:void stop()",
            "org.apache.activemq.util.ServiceStopper:void stopServices(java.util.List)",
            "org.apache.activemq.transport.fanout.FanoutTransport:void stop()",
            "org.apache.activemq.broker.BrokerService:void stopAllConnectors(org.apache.activemq.util.ServiceStopper)"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransportServer$1:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void stop()",
            "org.apache.activemq.transport.TransportFilter:void stop()"
        ]
    },
    "org.apache.activemq.broker.jmx.BrokerView:javax.management.ObjectName createDurableSubscriber(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.security.AuthorizationBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter:void doRecoverSubscription(org.apache.activemq.store.jdbc.TransactionContext,org.apache.activemq.command.ActiveMQDestination,java.lang.String,java.lang.String,org.apache.activemq.store.jdbc.JDBCMessageRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.jdbc.JDBCTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)"
        ]
    },
    "org.apache.activemq.store.jdbc.JDBCTopicMessageStore$1:void recoverMessageReference(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter:void doRecoverSubscription(org.apache.activemq.store.jdbc.TransactionContext,org.apache.activemq.command.ActiveMQDestination,java.lang.String,java.lang.String,org.apache.activemq.store.jdbc.JDBCMessageRecoveryListener)"
        ]
    },
    "org.apache.activemq.store.ProxyTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.journal.QuickJournalTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)",
            "org.apache.activemq.broker.region.Topic:void activate(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.DurableTopicSubscription)",
            "org.apache.activemq.store.journal.JournalTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)"
        ]
    },
    "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.jmx.ManagedTopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.BrokerView:void addTopic(java.lang.String)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.RegionBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination lookup(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.jmx.BrokerView:void addQueue(java.lang.String)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.virtual.CompositeDestinationInterceptor:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.QueueView:int moveMatchingMessagesTo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.QueueView:int copyMatchingMessagesTo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.ConnectionPool:void decrementReferenceCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnection:void close()"
        ]
    },
    "org.apache.activemq.pool.PooledConnectionFactory:javax.jms.Connection createConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnectionFactory:javax.jms.Connection createConnection()"
        ]
    },
    "org.apache.activemq.pool.PooledConnectionFactory:org.apache.activemq.ActiveMQConnection createConnection(org.apache.activemq.pool.ConnectionKey)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnectionFactory:javax.jms.Connection createConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XAQueueConnection createXAQueueConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XATopicConnection createXATopicConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.Connection createConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.util.CommandAgent:javax.jms.Connection createConnection()",
            "org.apache.activemq.broker.jmx.DestinationView:java.lang.String sendTextMessage(java.util.Map,java.lang.String)",
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.ActiveMQConnection makeConnection()",
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.ActiveMQConnection makeConnection(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.activemq.ActiveMQConnection:org.apache.activemq.ActiveMQConnection makeConnection(java.lang.String)",
            "org.apache.activemq.pool.PooledConnectionFactory:org.apache.activemq.ActiveMQConnection createConnection(org.apache.activemq.pool.ConnectionKey)"
        ]
    },
    "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.TopicConnection createTopicConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.QueueConnection createQueueConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQXAConnectionFactory:javax.jms.XAConnection createXAConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.store.jdbc.JDBCPersistenceAdapter:void databaseLockKeepAlive()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3:void run()"
        ]
    },
    "org.apache.activemq.broker.BrokerService$3:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.InactivityMonitor:void readCheck()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void access$000(org.apache.activemq.transport.InactivityMonitor)"
        ]
    },
    "org.apache.activemq.transport.mock.MockTransport:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)",
            "org.apache.activemq.transport.InactivityMonitor:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportLogger:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportFilter:void onException(java.io.IOException)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.transport.TransportSupport:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.udp.UdpTransport:void run()",
            "org.apache.activemq.transport.tcp.TcpTransport:void run()"
        ]
    },
    "org.apache.activemq.transport.WireFormatNegotiator:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)",
            "org.apache.activemq.transport.TransportSupport:void onException(java.io.IOException)",
            "org.apache.activemq.transport.InactivityMonitor:void onException(java.io.IOException)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportLogger:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportFilter:void onException(java.io.IOException)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onException(java.io.IOException)",
            "org.apache.activemq.transport.mock.MockTransport:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.transport.ResponseCorrelator:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)",
            "org.apache.activemq.transport.TransportSupport:void onException(java.io.IOException)",
            "org.apache.activemq.transport.InactivityMonitor:void onException(java.io.IOException)",
            "org.apache.activemq.transport.fanout.FanoutTransport$FanoutTransportHandler:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportLogger:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportFilter:void onException(java.io.IOException)",
            "org.apache.activemq.transport.reliable.ReliableTransport:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.reliable.ReliableTransport:void replayCommands(org.apache.activemq.command.ReplayCommand)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.failover.FailoverTransport$1:void onException(java.io.IOException)",
            "org.apache.activemq.transport.mock.MockTransport:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterConnector:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.util.ServiceStopper:void stop(org.apache.activemq.Service)",
            "org.apache.activemq.util.ServiceSupport:void dispose(org.apache.activemq.Service)",
            "org.apache.activemq.broker.jmx.FTConnectorView:void stop()"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void doStop(org.apache.activemq.util.ServiceStopper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void stop()",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void doStop(org.apache.activemq.util.ServiceStopper)"
        ]
    },
    "org.apache.activemq.network.ForwardingBridge:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.util.ServiceSupport:void dispose(org.apache.activemq.Service)"
        ]
    },
    "org.apache.activemq.proxy.ProxyConnection:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.proxy.ProxyConnection$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.proxy.ProxyConnection:void onFailure(java.io.IOException)"
        ]
    },
    "org.apache.activemq.transport.discovery.DiscoveryTransport:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void stop()",
            "org.apache.activemq.transport.TransportFilter:void stop()"
        ]
    },
    "org.apache.activemq.proxy.ProxyConnector:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ProxyConnectorView:void stop()"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalCommand(org.apache.activemq.command.Command)",
            "org.apache.activemq.util.ServiceSupport:void dispose(org.apache.activemq.Service)",
            "org.apache.activemq.network.MulticastNetworkConnector:void doStop(org.apache.activemq.util.ServiceStopper)"
        ]
    },
    "org.apache.activemq.broker.TransportConnector:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ConnectorView:void stop()"
        ]
    },
    "org.apache.activemq.util.ServiceStopper:void stopServices(java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.fanout.FanoutTransport:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.util.ServiceStopper:void stop(org.apache.activemq.Service)",
            "org.apache.activemq.transport.InactivityMonitor:void stop()",
            "org.apache.activemq.transport.TransportFilter:void stop()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void stopAllConnectors(org.apache.activemq.util.ServiceStopper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void stop()"
        ]
    },
    "org.apache.activemq.transport.InactivityMonitor:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void stop()",
            "org.apache.activemq.broker.TransportConnection:void disposeTransport()",
            "org.apache.activemq.transport.TransportFilter:void stop()",
            "org.apache.activemq.util.ServiceSupport:void dispose(org.apache.activemq.Service)"
        ]
    },
    "org.apache.activemq.transport.TransportFilter:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void stop()",
            "org.apache.activemq.broker.TransportConnection:void disposeTransport()",
            "org.apache.activemq.proxy.ProxyConnector$2:void stop()",
            "org.apache.activemq.transport.mock.MockTransport:void stop()",
            "org.apache.activemq.transport.TransportFilter:void stop()",
            "org.apache.activemq.transport.WireFormatNegotiator:void stop()",
            "org.apache.activemq.transport.CommandJoiner:void stop()",
            "org.apache.activemq.util.ServiceSupport:void dispose(org.apache.activemq.Service)"
        ]
    },
    "org.apache.activemq.security.AuthorizationBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.store.jdbc.JDBCTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.journal.QuickJournalTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)",
            "org.apache.activemq.broker.region.Topic:void activate(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.DurableTopicSubscription)",
            "org.apache.activemq.store.journal.JournalTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)",
            "org.apache.activemq.store.ProxyTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)"
        ]
    },
    "org.apache.activemq.store.journal.QuickJournalTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic:void activate(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.DurableTopicSubscription)"
        ]
    },
    "org.apache.activemq.store.journal.JournalTopicMessageStore:void recoverSubscription(java.lang.String,java.lang.String,org.apache.activemq.store.MessageRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic:void activate(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.DurableTopicSubscription)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.jmx.BrokerView:void addTopic(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.security.AuthorizationBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.MutableBrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.view.DestinationDotFileInterceptor:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination lookup(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination lookup(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.BrokerView:void addQueue(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledConnection:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.pool.PooledConnectionFactory:javax.jms.Connection createConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.pool.PooledConnectionFactory:void start()"
        ]
    },
    "org.apache.activemq.broker.util.CommandAgent:javax.jms.Connection createConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.util.CommandAgent:javax.jms.Connection getConnection()"
        ]
    },
    "org.apache.activemq.ActiveMQConnection:org.apache.activemq.ActiveMQConnection makeConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:org.apache.activemq.ActiveMQConnection makeConnection(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.ActiveMQConnection:org.apache.activemq.ActiveMQConnection makeConnection(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.InactivityMonitor:void access$000(org.apache.activemq.transport.InactivityMonitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor$1:void run()"
        ]
    },
    "org.apache.activemq.transport.reliable.ReliableTransport:void replayCommands(org.apache.activemq.command.ReplayCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.ReliableTransport:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.broker.jmx.FTConnectorView:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.RegionBroker:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerBroadcaster:void stop()",
            "org.apache.activemq.broker.TransactionBroker:void stop()",
            "org.apache.activemq.broker.BrokerFilter:void stop()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void doStop(org.apache.activemq.util.ServiceStopper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void stop()"
        ]
    },
    "org.apache.activemq.proxy.ProxyConnection:void onFailure(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.proxy.ProxyConnection$1:void onCommand(java.lang.Object)",
            "org.apache.activemq.proxy.ProxyConnection$2:void onCommand(java.lang.Object)",
            "org.apache.activemq.proxy.ProxyConnection$2:void onException(java.io.IOException)",
            "org.apache.activemq.proxy.ProxyConnection$1:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.broker.jmx.ProxyConnectorView:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.MulticastNetworkConnector:void doStop(org.apache.activemq.util.ServiceStopper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.ConnectorView:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:void disposeTransport()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void stop()"
        ]
    },
    "org.apache.activemq.proxy.ProxyConnector$2:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.util.ServiceStopper:void stop(org.apache.activemq.Service)"
        ]
    },
    "org.apache.activemq.transport.mock.MockTransport:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void stop()",
            "org.apache.activemq.transport.TransportFilter:void stop()"
        ]
    },
    "org.apache.activemq.transport.WireFormatNegotiator:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void stop()",
            "org.apache.activemq.transport.TransportFilter:void stop()"
        ]
    },
    "org.apache.activemq.transport.CommandJoiner:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.InactivityMonitor:void stop()",
            "org.apache.activemq.transport.TransportFilter:void stop()",
            "org.apache.activemq.transport.udp.UdpTransportServer:void doStop(org.apache.activemq.util.ServiceStopper)"
        ]
    },
    "org.apache.activemq.security.AuthorizationBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.MutableBrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void startDestinations()",
            "org.apache.activemq.broker.MutableBrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination lookup(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.view.DestinationDotFileInterceptor:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractRegion:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.pool.PooledConnectionFactory:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.CommandAgent:javax.jms.Connection getConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.util.CommandAgent:void start()"
        ]
    },
    "org.apache.activemq.transport.InactivityMonitor$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransactionBroker:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerBroadcaster:void stop()",
            "org.apache.activemq.broker.TransactionBroker:void stop()",
            "org.apache.activemq.broker.BrokerFilter:void stop()"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void stop()",
            "org.apache.activemq.broker.BrokerBroadcaster:void stop()",
            "org.apache.activemq.broker.TransactionBroker:void stop()",
            "org.apache.activemq.broker.BrokerFilter:void stop()"
        ]
    },
    "org.apache.activemq.proxy.ProxyConnection$2:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.ResponseCorrelator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportFilter:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.TransportLogger:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.stomp.StompTransportFilter:void sendToActiveMQ(org.apache.activemq.command.Command)",
            "org.apache.activemq.transport.InactivityMonitor:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.WireFormatNegotiator:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.proxy.ProxyConnection$2:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.reliable.ReliableTransport:void requestReplay(int,int)",
            "org.apache.activemq.transport.InactivityMonitor:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportLogger:void onException(java.io.IOException)",
            "org.apache.activemq.transport.TransportFilter:void onException(java.io.IOException)",
            "org.apache.activemq.transport.CommandJoiner:void onCommand(java.lang.Object)",
            "org.apache.activemq.transport.MarshallingTransportFilter:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.proxy.ProxyConnection$1:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.udp.UdpTransportServer:void doStop(org.apache.activemq.util.ServiceStopper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void startDestinations()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void start()"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddDestination(org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.region.Topic:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.util.BrokerSupport:void resend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void stop()",
            "org.apache.activemq.broker.BrokerService$2:void stop()",
            "org.apache.activemq.broker.ft.MasterBroker:void stop()",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void stop()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.xbean.XBeanBrokerService:void afterPropertiesSet()",
            "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)",
            "org.apache.activemq.broker.jmx.BrokerView:void start()"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddDestination(org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.UserIDBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.security.AuthorizationBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)"
        ]
    },
    "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker$1:void recover(org.apache.activemq.command.XATransactionId,org.apache.activemq.command.Message[],org.apache.activemq.command.MessageAck[])",
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.region.Topic:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.util.BrokerSupport:void resend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.MutableBrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.BrokerService$2:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.util.ServiceStopper:void stop(org.apache.activemq.Service)"
        ]
    },
    "org.apache.activemq.broker.ft.MasterBroker:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void stop()",
            "org.apache.activemq.broker.TransportConnection:void stop()"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.xbean.XBeanBrokerService:void afterPropertiesSet()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.BrokerView:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.UserIDBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.MutableBrokerFilter:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.security.AuthorizationBroker:void send(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.broker.TransactionBroker$1:void recover(org.apache.activemq.command.XATransactionId,org.apache.activemq.command.Message[],org.apache.activemq.command.MessageAck[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.journal.QuickJournalTransactionStore:void recover(org.apache.activemq.store.TransactionRecoveryListener)",
            "org.apache.activemq.store.memory.MemoryTransactionStore:void recover(org.apache.activemq.store.TransactionRecoveryListener)",
            "org.apache.activemq.store.journal.JournalTransactionStore:void recover(org.apache.activemq.store.TransactionRecoveryListener)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.store.journal.QuickJournalTransactionStore:void recover(org.apache.activemq.store.TransactionRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker:void start()"
        ]
    },
    "org.apache.activemq.store.memory.MemoryTransactionStore:void recover(org.apache.activemq.store.TransactionRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker:void start()"
        ]
    },
    "org.apache.activemq.store.journal.JournalTransactionStore:void recover(org.apache.activemq.store.TransactionRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker:void start()"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.TransactionBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerBroadcaster:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.CompositeDestinationBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.TransactionBroker:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void start()",
            "org.apache.activemq.broker.TransactionBroker:void start()",
            "org.apache.activemq.broker.BrokerBroadcaster:void start()"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.security.JaasCertificateAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.security.JaasAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.security.SimpleAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.TransactionBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransactionBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.TransactionBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerBroadcaster:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.security.JaasAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.security.SimpleAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.security.JaasCertificateAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.security.AuthorizationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.security.AuthorizationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.view.DestinationDotFileInterceptor:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.BrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.CompositeDestinationBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.CompositeDestinationBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void start()",
            "org.apache.activemq.broker.TransactionBroker:void start()",
            "org.apache.activemq.broker.MutableBrokerFilter:void start()",
            "org.apache.activemq.broker.BrokerBroadcaster:void start()"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processAddConsumer(org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveConsumer(org.apache.activemq.command.ConsumerId)"
        ]
    },
    "org.apache.activemq.security.JaasCertificateAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.JaasAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.SimpleAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveDestination(org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.security.JaasAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.SimpleAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.JaasCertificateAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.AuthorizationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.AuthorizationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.DestinationDotFileInterceptor:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveConnection(org.apache.activemq.command.ConnectionId)",
            "org.apache.activemq.broker.MutableBrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.MutableBrokerFilter:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void start()",
            "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void start()",
            "org.apache.activemq.broker.MutableBrokerFilter:void start()"
        ]
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveConsumer(org.apache.activemq.command.ConsumerId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveSession(org.apache.activemq.command.SessionId)",
            "org.apache.activemq.command.RemoveInfo:org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processRemoveDestination(org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.UDPTraceBrokerPlugin:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)"
        ],
        "vulCaller": []
    }
}
{
    "org.jolokia.http.AgentServlet:void handle(org.jolokia.http.AgentServlet$ServletRequestHandler,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.jolokia.http.AgentServlet:void handle(org.jolokia.http.AgentServlet$ServletRequestHandler,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.jolokia.http.HttpRequestHandler:void checkClientIPAccess(java.lang.String,java.lang.String)",
            "org.jolokia.http.HttpRequestHandler:java.lang.String extractCorsOrigin(java.lang.String)",
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)",
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ],
        "vulCaller": [
            "org.jolokia.http.AgentServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.jolokia.http.AgentServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.jolokia.http.AgentServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.jolokia.http.AgentServlet:void handle(org.jolokia.http.AgentServlet$ServletRequestHandler,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.jolokia.http.HttpRequestHandler:void checkClientIPAccess(java.lang.String,java.lang.String)",
            "org.jolokia.http.HttpRequestHandler:java.lang.String extractCorsOrigin(java.lang.String)",
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)",
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.jolokia.http.AgentServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.jolokia.http.AgentServlet:void handle(org.jolokia.http.AgentServlet$ServletRequestHandler,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.jolokia.http.HttpRequestHandler:void checkClientIPAccess(java.lang.String,java.lang.String)",
            "org.jolokia.http.HttpRequestHandler:java.lang.String extractCorsOrigin(java.lang.String)",
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)",
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)",
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ],
        "vulCaller": [
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ]
    },
    "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)",
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ],
        "vulCaller": [
            "org.jolokia.http.HttpRequestHandler:java.lang.String extractCorsOrigin(java.lang.String)",
            "org.jolokia.http.HttpRequestHandler:java.util.Map handleCorsPreflightRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.jolokia.http.HttpRequestHandler:java.util.Map handleCorsPreflightRequest(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.jolokia.http.HttpRequestHandler:java.util.Map handleCorsPreflightRequest(java.lang.String,java.lang.String)",
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)",
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ],
        "vulCaller": [
            "org.jolokia.http.AgentServlet:void doOptions(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.jolokia.http.AgentServlet:void doOptions(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.jolokia.http.HttpRequestHandler:java.util.Map handleCorsPreflightRequest(java.lang.String,java.lang.String)",
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)",
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.jolokia.http.HttpRequestHandler:void checkClientIPAccess(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.jolokia.http.HttpRequestHandler:void checkClientIPAccess(java.lang.String,java.lang.String)"
        ],
        "vulCaller": [
            "org.jolokia.http.AgentServlet:void handle(org.jolokia.http.AgentServlet$ServletRequestHandler,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.jolokia.http.HttpRequestHandler:java.lang.String extractCorsOrigin(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.jolokia.http.HttpRequestHandler:java.lang.String extractCorsOrigin(java.lang.String)",
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)",
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ],
        "vulCaller": [
            "org.jolokia.http.AgentServlet:void setCorsHeader(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.jolokia.http.AgentServlet:void setCorsHeader(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.jolokia.http.HttpRequestHandler:java.lang.String extractCorsOrigin(java.lang.String)",
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)",
            "org.jolokia.backend.BackendManager:boolean isCorsAccessAllowed(java.lang.String)"
        ],
        "vulCaller": [
            "org.jolokia.http.AgentServlet:void handle(org.jolokia.http.AgentServlet$ServletRequestHandler,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)"
        ],
        "vulCaller": [
            "org.jolokia.restrictor.PolicyRestrictor:boolean isCorsAccessAllowed(java.lang.String)",
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.Object)"
        ]
    },
    "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.jolokia.restrictor.policy.CorsChecker:boolean check(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.jolokia.restrictor.policy.CorsChecker:void <init>(org.w3c.dom.Document)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.jolokia.restrictor.policy.CorsChecker:void <init>(org.w3c.dom.Document)"
        ],
        "vulCaller": [
            "org.jolokia.restrictor.PolicyRestrictor:void <init>(java.io.InputStream)"
        ]
    },
    "org.jolokia.restrictor.PolicyRestrictor:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.jolokia.restrictor.policy.CorsChecker:void <init>(org.w3c.dom.Document)"
        ],
        "vulCaller": [
            "org.jolokia.restrictor.RestrictorFactory:org.jolokia.restrictor.PolicyRestrictor lookupPolicyRestrictor(java.lang.String)"
        ]
    },
    "org.jolokia.restrictor.RestrictorFactory:org.jolokia.restrictor.PolicyRestrictor lookupPolicyRestrictor(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.jolokia.restrictor.policy.CorsChecker:void <init>(org.w3c.dom.Document)"
        ],
        "vulCaller": [
            "org.jolokia.http.AgentServlet:org.jolokia.restrictor.Restrictor createRestrictor(java.lang.String)"
        ]
    },
    "org.jolokia.http.AgentServlet:org.jolokia.restrictor.Restrictor createRestrictor(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.jolokia.restrictor.policy.CorsChecker:void <init>(org.w3c.dom.Document)"
        ],
        "vulCaller": [
            "org.jolokia.http.AgentServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.jolokia.http.AgentServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.jolokia.restrictor.policy.CorsChecker:void <init>(org.w3c.dom.Document)"
        ],
        "vulCaller": []
    }
}
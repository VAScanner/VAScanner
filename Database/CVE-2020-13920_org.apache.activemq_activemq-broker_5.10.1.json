{
    "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagementContext:javax.management.MBeanServer createMBeanServer()",
            "org.apache.activemq.broker.jmx.ManagementContext:javax.management.MBeanServer findTigerMBeanServer()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagementContext:javax.management.MBeanServer createMBeanServer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagementContext:javax.management.MBeanServer findMBeanServer()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagementContext:javax.management.MBeanServer findTigerMBeanServer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagementContext:javax.management.MBeanServer findMBeanServer()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagementContext:javax.management.MBeanServer findMBeanServer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagementContext:javax.management.MBeanServer getMBeanServer()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagementContext:javax.management.MBeanServer getMBeanServer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagementContext:java.util.Set queryNames(javax.management.ObjectName,javax.management.QueryExp)",
            "org.apache.activemq.broker.jmx.ManagementContext:void start()",
            "org.apache.activemq.broker.jmx.ManagementContext:java.lang.Object getAttribute(javax.management.ObjectName,java.lang.String)",
            "org.apache.activemq.broker.jmx.ManagementContext:void stop()",
            "org.apache.activemq.broker.jmx.ManagementContext:javax.management.ObjectInstance getObjectInstance(javax.management.ObjectName)",
            "org.apache.activemq.broker.jmx.ManagementContext:javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)",
            "org.apache.activemq.broker.jmx.ManagementContext:java.lang.Object newProxyInstance(javax.management.ObjectName,java.lang.Class,boolean)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagementContext:java.util.Set queryNames(javax.management.ObjectName,javax.management.QueryExp)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ConnectionView:javax.management.ObjectName[] getProducers()",
            "org.apache.activemq.broker.jmx.SubscriptionView:javax.management.ObjectName getConnection()",
            "org.apache.activemq.broker.jmx.ConnectionView:javax.management.ObjectName[] getConsumers()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagementContext:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLoggerFactory:void createTransportLoggerControl(int)",
            "org.apache.activemq.broker.BrokerService:void startManagementContext()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagementContext:java.lang.Object getAttribute(javax.management.ObjectName,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.ManagementContext:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void doStartBroker()",
            "org.apache.activemq.transport.TransportLoggerFactory:void stop()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagementContext:javax.management.ObjectInstance getObjectInstance(javax.management.ObjectName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.ManagementContext:javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.AsyncAnnotatedMBean:void registerMBean(java.util.concurrent.ExecutorService,long,org.apache.activemq.broker.jmx.ManagementContext,java.lang.Object,javax.management.ObjectName)",
            "org.apache.activemq.broker.jmx.AnnotatedMBean:void registerMBean(org.apache.activemq.broker.jmx.ManagementContext,java.lang.Object,javax.management.ObjectName)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagementContext:java.lang.Object newProxyInstance(javax.management.ObjectName,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.plugin.StatisticsBroker:org.apache.activemq.broker.jmx.BrokerViewMBean getBrokerView()",
            "org.apache.activemq.plugin.StatisticsBroker:void sendSubStats(org.apache.activemq.broker.ConnectionContext,javax.management.ObjectName[],org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void printSubscribers(java.io.PrintWriter,java.util.Map,java.util.Map,java.lang.String,javax.management.ObjectName[])",
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:org.apache.activemq.broker.jmx.BrokerViewMBean getBrokerView()"
        ]
    },
    "org.apache.activemq.broker.jmx.ConnectionView:javax.management.ObjectName[] getProducers()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.SubscriptionView:javax.management.ObjectName getConnection()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.ConnectionView:javax.management.ObjectName[] getConsumers()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.TransportLoggerFactory:void createTransportLoggerControl(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLoggerFactory:org.apache.activemq.transport.TransportLogger createTransportLogger(org.apache.activemq.transport.Transport,int,org.slf4j.Logger,java.lang.String,boolean,boolean,int)"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void startManagementContext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void start()",
            "org.apache.activemq.broker.BrokerService:void doStartBroker()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void doStartBroker()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void access$300(org.apache.activemq.broker.BrokerService)",
            "org.apache.activemq.broker.BrokerService:void startBroker(boolean)"
        ]
    },
    "org.apache.activemq.transport.TransportLoggerFactory:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.AsyncAnnotatedMBean:void registerMBean(java.util.concurrent.ExecutorService,long,org.apache.activemq.broker.jmx.ManagementContext,java.lang.Object,javax.management.ObjectName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void addInactiveSubscription(org.apache.activemq.util.SubscriptionKey,org.apache.activemq.command.SubscriptionInfo,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:javax.management.ObjectName registerSlowConsumerStrategy(org.apache.activemq.broker.region.policy.AbortSlowConsumerStrategy)",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void registerProducer(javax.management.ObjectName,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.jmx.ProducerView)",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void registerSubscription(javax.management.ObjectName,org.apache.activemq.command.ConsumerInfo,org.apache.activemq.util.SubscriptionKey,org.apache.activemq.broker.jmx.SubscriptionView)",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void registerRecoveredTransactionMBean(org.apache.activemq.transaction.XATransaction)",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void registerDestination(javax.management.ObjectName,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.jmx.DestinationView)"
        ]
    },
    "org.apache.activemq.broker.jmx.AnnotatedMBean:void registerMBean(org.apache.activemq.broker.jmx.ManagementContext,java.lang.Object,javax.management.ObjectName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.MBeanBridgeDestination:void onInboundMessage(org.apache.activemq.command.Message)",
            "org.apache.activemq.network.MBeanNetworkListener:void onStart(org.apache.activemq.network.NetworkBridge)",
            "org.apache.activemq.transport.TransportLoggerFactory:void createTransportLoggerControl(int)",
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.TransportConnector registerConnectorMBean(org.apache.activemq.broker.TransportConnector)",
            "org.apache.activemq.broker.BrokerService:void registerNetworkConnectorMBean(org.apache.activemq.network.NetworkConnector)",
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.Broker addInterceptors(org.apache.activemq.broker.Broker)",
            "org.apache.activemq.network.MBeanBridgeDestination:void onOutboundMessage(org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerService:void registerJmsConnectorMBean(org.apache.activemq.network.jms.JmsConnector)",
            "org.apache.activemq.broker.BrokerService:void registerProxyConnectorMBean(org.apache.activemq.proxy.ProxyConnector)",
            "org.apache.activemq.broker.jmx.ManagedTransportConnection:void registerMBean(javax.management.ObjectName)",
            "org.apache.activemq.transport.TransportLoggerView:void register()",
            "org.apache.activemq.network.NetworkConnector:void registerNetworkBridgeMBean(org.apache.activemq.network.NetworkBridge)",
            "org.apache.activemq.broker.BrokerService:void startManagementContext()"
        ]
    },
    "org.apache.activemq.plugin.StatisticsBroker:org.apache.activemq.broker.jmx.BrokerViewMBean getBrokerView()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.plugin.StatisticsBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.plugin.StatisticsBroker:void sendSubStats(org.apache.activemq.broker.ConnectionContext,javax.management.ObjectName[],org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.plugin.StatisticsBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void printSubscribers(java.io.PrintWriter,java.util.Map,java.util.Map,java.lang.String,javax.management.ObjectName[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void generateFile(java.io.PrintWriter)"
        ]
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:org.apache.activemq.broker.jmx.BrokerViewMBean getBrokerView()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void generateFile(java.io.PrintWriter)"
        ]
    },
    "org.apache.activemq.transport.TransportLoggerFactory:org.apache.activemq.transport.TransportLogger createTransportLogger(org.apache.activemq.transport.Transport,int,org.slf4j.Logger,java.lang.String,boolean,boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLoggerFactory:org.apache.activemq.transport.TransportLogger createTransportLogger(org.apache.activemq.transport.Transport)",
            "org.apache.activemq.transport.TransportLoggerFactory:org.apache.activemq.transport.TransportLogger createTransportLogger(org.apache.activemq.transport.Transport,java.lang.String,boolean,boolean,int)",
            "org.apache.activemq.transport.TransportLoggerFactory:org.apache.activemq.transport.TransportLogger createTransportLogger(org.apache.activemq.transport.Transport,org.slf4j.Logger)"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void start(boolean)",
            "org.apache.activemq.broker.BrokerService:void autoStart()",
            "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)",
            "org.apache.activemq.broker.jmx.BrokerView:void start()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void access$300(org.apache.activemq.broker.BrokerService)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService$3:void run()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void startBroker(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void start()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void addInactiveSubscription(org.apache.activemq.util.SubscriptionKey,org.apache.activemq.command.SubscriptionInfo,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:javax.management.ObjectName registerSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void buildExistingSubscriptions()",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void unregisterSubscription(javax.management.ObjectName,boolean)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:javax.management.ObjectName registerSlowConsumerStrategy(org.apache.activemq.broker.region.policy.AbortSlowConsumerStrategy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.DestinationView:javax.management.ObjectName getSlowConsumerStrategy()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void registerProducer(javax.management.ObjectName,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.jmx.ProducerView)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void registerSubscription(javax.management.ObjectName,org.apache.activemq.command.ConsumerInfo,org.apache.activemq.util.SubscriptionKey,org.apache.activemq.broker.jmx.SubscriptionView)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:javax.management.ObjectName registerSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void registerRecoveredTransactionMBean(org.apache.activemq.transaction.XATransaction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker:void registerMBean(org.apache.activemq.transaction.XATransaction)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void registerDestination(javax.management.ObjectName,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.jmx.DestinationView)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void register(org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.region.Destination)"
        ]
    },
    "org.apache.activemq.network.MBeanBridgeDestination:void onInboundMessage(org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.MBeanNetworkListener:void onStart(org.apache.activemq.network.NetworkBridge)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void startLocalBridge()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.TransportConnector registerConnectorMBean(org.apache.activemq.broker.TransportConnector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.TransportConnector startTransportConnector(org.apache.activemq.broker.TransportConnector)"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void registerNetworkConnectorMBean(org.apache.activemq.network.NetworkConnector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void start()",
            "org.apache.activemq.broker.jmx.BrokerView:java.lang.String addNetworkConnector(java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.Broker addInterceptors(org.apache.activemq.broker.Broker)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.Broker createBroker()"
        ]
    },
    "org.apache.activemq.network.MBeanBridgeDestination:void onOutboundMessage(org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void registerJmsConnectorMBean(org.apache.activemq.network.jms.JmsConnector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.network.jms.JmsConnector addJmsConnector(org.apache.activemq.network.jms.JmsConnector)"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void registerProxyConnectorMBean(org.apache.activemq.proxy.ProxyConnector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.proxy.ProxyConnector addProxyConnector(org.apache.activemq.proxy.ProxyConnector)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTransportConnection:void registerMBean(javax.management.ObjectName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedTransportConnection:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.jmx.ManagedTransportConnection:void <init>(org.apache.activemq.broker.TransportConnector,org.apache.activemq.transport.Transport,org.apache.activemq.broker.Broker,org.apache.activemq.thread.TaskRunnerFactory,org.apache.activemq.thread.TaskRunnerFactory,org.apache.activemq.broker.jmx.ManagementContext,javax.management.ObjectName)"
        ]
    },
    "org.apache.activemq.transport.TransportLoggerView:void register()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLoggerView:void <init>(org.apache.activemq.transport.TransportLogger,java.lang.String,int,org.apache.activemq.broker.jmx.ManagementContext)"
        ]
    },
    "org.apache.activemq.network.NetworkConnector:void registerNetworkBridgeMBean(org.apache.activemq.network.NetworkBridge)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.plugin.StatisticsBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void generateFile(java.io.PrintWriter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.DotFileInterceptorSupport:void generateFile()"
        ]
    },
    "org.apache.activemq.transport.TransportLoggerFactory:org.apache.activemq.transport.TransportLogger createTransportLogger(org.apache.activemq.transport.Transport)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLoggerFactorySPI:org.apache.activemq.transport.Transport createTransportLogger(org.apache.activemq.transport.Transport)"
        ]
    },
    "org.apache.activemq.transport.TransportLoggerFactory:org.apache.activemq.transport.TransportLogger createTransportLogger(org.apache.activemq.transport.Transport,java.lang.String,boolean,boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLoggerFactorySPI:org.apache.activemq.transport.Transport createTransportLogger(org.apache.activemq.transport.Transport,java.lang.String,boolean,boolean,int)"
        ]
    },
    "org.apache.activemq.transport.TransportLoggerFactory:org.apache.activemq.transport.TransportLogger createTransportLogger(org.apache.activemq.transport.Transport,org.slf4j.Logger)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void start(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void autoStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void postConstruct()"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.peer.PeerTransportFactory$1:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)",
            "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.broker.jmx.BrokerView:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService$3:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:javax.management.ObjectName registerSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedTempTopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.jmx.ManagedQueueRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.jmx.ManagedTempQueueRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.jmx.ManagedTopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void buildExistingSubscriptions()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void start()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void unregisterSubscription(javax.management.ObjectName,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.DestinationView:javax.management.ObjectName getSlowConsumerStrategy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void unregisterDestination(javax.management.ObjectName)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.TransactionBroker:void registerMBean(org.apache.activemq.transaction.XATransaction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker:void access$100(org.apache.activemq.broker.TransactionBroker,org.apache.activemq.transaction.XATransaction)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void register(org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.region.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedTempQueueRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.jmx.ManagedTempTopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.jmx.ManagedTopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.jmx.ManagedQueueRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void startLocalBridge()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void doStartLocalAndRemoteBridges()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.TransportConnector startTransportConnector(org.apache.activemq.broker.TransportConnector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void startAllConnectors()"
        ]
    },
    "org.apache.activemq.broker.jmx.BrokerView:java.lang.String addNetworkConnector(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.Broker createBroker()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.Broker getBroker()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.network.jms.JmsConnector addJmsConnector(org.apache.activemq.network.jms.JmsConnector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void processHelperProperties()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.proxy.ProxyConnector addProxyConnector(org.apache.activemq.proxy.ProxyConnector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void setProxyConnectors(java.util.List)",
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.proxy.ProxyConnector addProxyConnector(java.net.URI)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTransportConnection:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.ManagedTransportConnection:void <init>(org.apache.activemq.broker.TransportConnector,org.apache.activemq.transport.Transport,org.apache.activemq.broker.Broker,org.apache.activemq.thread.TaskRunnerFactory,org.apache.activemq.thread.TaskRunnerFactory,org.apache.activemq.broker.jmx.ManagementContext,javax.management.ObjectName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedTransportConnector:org.apache.activemq.broker.Connection createConnection(org.apache.activemq.transport.Transport)"
        ]
    },
    "org.apache.activemq.transport.TransportLoggerView:void <init>(org.apache.activemq.transport.TransportLogger,java.lang.String,int,org.apache.activemq.broker.jmx.ManagementContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.TransportLoggerFactory:org.apache.activemq.transport.TransportLogger createTransportLogger(org.apache.activemq.transport.Transport,int,org.slf4j.Logger,java.lang.String,boolean,boolean,int)"
        ]
    },
    "org.apache.activemq.broker.view.DotFileInterceptorSupport:void generateFile()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.view.DestinationDotFileInterceptor:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.view.DestinationDotFileInterceptor:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)"
        ]
    },
    "org.apache.activemq.transport.TransportLoggerFactorySPI:org.apache.activemq.transport.Transport createTransportLogger(org.apache.activemq.transport.Transport)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.TransportLoggerFactorySPI:org.apache.activemq.transport.Transport createTransportLogger(org.apache.activemq.transport.Transport,java.lang.String,boolean,boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void postConstruct()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.peer.PeerTransportFactory$1:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.peer.PeerTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)",
            "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.peer.PeerTransportFactory$1:org.apache.activemq.transport.Transport doConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTempTopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedQueueRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.BrokerView:javax.management.ObjectName createDurableSubscriber(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTempQueueRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicRegion:java.util.List addSubscriptionsForDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void start()",
            "org.apache.activemq.broker.TransactionBroker:void start()",
            "org.apache.activemq.broker.BrokerBroadcaster:void start()"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.BrokerView:javax.management.ObjectName createDurableSubscriber(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.activemq.broker.BrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void unregisterDestination(javax.management.ObjectName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void unregister(org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.security.AuthorizationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransactionBroker:void access$100(org.apache.activemq.broker.TransactionBroker,org.apache.activemq.transaction.XATransaction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker$1:void recover(org.apache.activemq.command.XATransactionId,org.apache.activemq.command.Message[],org.apache.activemq.command.MessageAck[])"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTempQueueRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTempTopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedQueueRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void doStartLocalAndRemoteBridges()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void access$500(org.apache.activemq.network.DemandForwardingBridgeSupport)"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void startAllConnectors()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void masterFailed()",
            "org.apache.activemq.broker.BrokerService:void doStartBroker()",
            "org.apache.activemq.util.DefaultIOExceptionHandler$1$1:void run()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.Broker getBroker()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void startDestinations()",
            "org.apache.activemq.broker.jmx.DurableSubscriptionView:void destroy()",
            "org.apache.activemq.broker.BrokerService:void removeDestination(org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.TransportConnector:void start()",
            "org.apache.activemq.network.LdapNetworkConnector:void addConnector(javax.naming.directory.SearchResult)",
            "org.apache.activemq.broker.jmx.BrokerView:void gc()",
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.ConnectionContext getAdminConnectionContext()",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void fireFailedForwardAdvisory(org.apache.activemq.command.MessageDispatch,java.lang.Throwable)",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void start()",
            "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getDestinations()",
            "org.apache.activemq.broker.region.BaseDestination:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.store.MessageStore,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.region.DestinationStatistics)",
            "org.apache.activemq.broker.view.MessageBrokerView:java.lang.String getBrokerId()",
            "org.apache.activemq.broker.jmx.BrokerView:void destroyDurableSubscriber(java.lang.String,java.lang.String)",
            "org.apache.activemq.advisory.AdvisoryBroker:void nowMasterBroker()",
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.region.Destination getDestination(org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerService:void doStartBroker()",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void startLocalBridge()",
            "org.apache.activemq.advisory.AdvisoryBroker:void networkBridgeStarted(org.apache.activemq.command.BrokerInfo,boolean,java.lang.String)",
            "org.apache.activemq.broker.BrokerService:void startAllConnectors()",
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.jmx.BrokerView getAdminView()",
            "org.apache.activemq.broker.region.AbstractRegion:void start()",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptorFilter getFilter()",
            "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.Broker getRoot()",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void stop()",
            "org.apache.activemq.advisory.AdvisoryBroker:void networkBridgeStopped(org.apache.activemq.command.BrokerInfo)",
            "org.apache.activemq.broker.jmx.InactiveDurableSubscriptionView:void destroy()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void processHelperProperties()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void start()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void setProxyConnectors(java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.proxy.ProxyConnector addProxyConnector(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.proxy.ProxyConnector addProxyConnector(java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTransportConnector:org.apache.activemq.broker.Connection createConnection(org.apache.activemq.transport.Transport)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnector$1$1:void run()"
        ]
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.DestinationDotFileInterceptor:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.DestinationDotFileInterceptor:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.peer.PeerTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.peer.PeerTransportFactory$1:org.apache.activemq.transport.Transport doConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.transport.peer.PeerTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.BrokerView:javax.management.ObjectName createDurableSubscriber(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.plugin.SubQueueSelectorCacheBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.security.AuthorizationBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.cluster.ConnectionSplitBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicRegion:java.util.List addSubscriptionsForDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.plugin.StatisticsBroker:void start()",
            "org.apache.activemq.broker.BrokerFilter:void start()",
            "org.apache.activemq.broker.TransactionBroker:void start()",
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void start()",
            "org.apache.activemq.broker.BrokerBroadcaster:void start()"
        ]
    },
    "org.apache.activemq.broker.TransactionBroker:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void start()",
            "org.apache.activemq.broker.TransactionBroker:void start()",
            "org.apache.activemq.broker.BrokerBroadcaster:void start()"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.cluster.ConnectionSplitBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.cluster.ConnectionSplitBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void unregister(org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedQueueRegion:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.jmx.ManagedTopicRegion:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.jmx.ManagedTempTopicRegion:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.jmx.ManagedTempQueueRegion:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.security.AuthorizationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransactionBroker$1:void recover(org.apache.activemq.command.XATransactionId,org.apache.activemq.command.Message[],org.apache.activemq.command.MessageAck[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.store.memory.MemoryTransactionStore:void recover(org.apache.activemq.store.TransactionRecoveryListener)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination lookup(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void access$500(org.apache.activemq.network.DemandForwardingBridgeSupport)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport$5:void run()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:void masterFailed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.util.DefaultIOExceptionHandler$1$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void startDestinations()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void doStartBroker()"
        ]
    },
    "org.apache.activemq.broker.jmx.DurableSubscriptionView:void destroy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void removeDestination(org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.virtual.MirroredQueue:void remove(org.apache.activemq.broker.region.Destination)"
        ]
    },
    "org.apache.activemq.broker.TransportConnector:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.TransportConnector startTransportConnector(org.apache.activemq.broker.TransportConnector)",
            "org.apache.activemq.broker.jmx.BrokerView:java.lang.String addConnector(java.lang.String)",
            "org.apache.activemq.broker.jmx.ConnectorView:void start()",
            "org.apache.activemq.transport.vm.VMTransportFactory:org.apache.activemq.transport.Transport doCompositeConnect(java.net.URI)"
        ]
    },
    "org.apache.activemq.network.LdapNetworkConnector:void addConnector(javax.naming.directory.SearchResult)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.LdapNetworkConnector:void objectAdded(javax.naming.event.NamingEvent)",
            "org.apache.activemq.network.LdapNetworkConnector:void start()",
            "org.apache.activemq.network.LdapNetworkConnector:void objectChanged(javax.naming.event.NamingEvent)"
        ]
    },
    "org.apache.activemq.broker.jmx.BrokerView:void gc()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.ConnectionContext getAdminConnectionContext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void startDestinations()",
            "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.region.Destination getDestination(org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerService:void startVirtualConsumerDestinations()",
            "org.apache.activemq.broker.BrokerService:void removeDestination(org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void fireFailedForwardAdvisory(org.apache.activemq.command.MessageDispatch,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalException(org.apache.activemq.command.MessageDispatch,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void duplexStart(org.apache.activemq.broker.TransportConnection,org.apache.activemq.command.BrokerInfo,org.apache.activemq.command.BrokerInfo)",
            "org.apache.activemq.network.DiscoveryNetworkConnector:void onServiceAdd(org.apache.activemq.command.DiscoveryEvent)",
            "org.apache.activemq.broker.jmx.NetworkBridgeView:void start()",
            "org.apache.activemq.network.MulticastNetworkConnector:void handleStart()"
        ]
    },
    "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getDestinations()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getTopics()",
            "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getTempTopics()",
            "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getQueues()",
            "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getTempQueues()"
        ]
    },
    "org.apache.activemq.broker.region.BaseDestination:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.store.MessageStore,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.region.DestinationStatistics)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.store.TopicMessageStore,org.apache.activemq.broker.region.DestinationStatistics,org.apache.activemq.thread.TaskRunnerFactory)",
            "org.apache.activemq.broker.region.Queue:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.store.MessageStore,org.apache.activemq.broker.region.DestinationStatistics,org.apache.activemq.thread.TaskRunnerFactory)"
        ]
    },
    "org.apache.activemq.broker.view.MessageBrokerView:java.lang.String getBrokerId()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.BrokerView:void destroyDurableSubscriber(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void nowMasterBroker()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void nowMasterBroker()"
        ]
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.region.Destination getDestination(org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getDestinationView(org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.virtual.MirroredQueue:org.apache.activemq.broker.region.Destination getMirrorDestination(org.apache.activemq.broker.region.Destination)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void networkBridgeStarted(org.apache.activemq.command.BrokerInfo,boolean,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void networkBridgeStarted(org.apache.activemq.command.BrokerInfo,boolean,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.broker.jmx.BrokerView getAdminView()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.AbstractRegion:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void start()"
        ]
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptorFilter getFilter()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptor addMessageInterceptor(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void injectMessage(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void removeMessageInterceptor(org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.inteceptor.MessageInterceptor)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptor addMessageInterceptor(org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.inteceptor.MessageInterceptor)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void removeMessageInterceptorForQueue(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void removeMessageInterceptor(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptor addMessageInterceptorForQueue(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptor addMessageInterceptorForTopic(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void removeMessageInterceptorForTopic(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.Broker getRoot()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:void discard(org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.Broker getRoot()",
            "org.apache.activemq.broker.region.PrefetchSubscription:void sendToDLQ(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,java.lang.Throwable)",
            "org.apache.activemq.broker.region.RegionBroker:void purgeInactiveDestinations()",
            "org.apache.activemq.broker.region.RegionBroker:void messageExpired(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.NetworkBridgeView:void stop()",
            "org.apache.activemq.broker.TransportConnection:void doStop()",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalCommand(org.apache.activemq.command.Command)",
            "org.apache.activemq.network.MulticastNetworkConnector:void handleStop(org.apache.activemq.util.ServiceStopper)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void networkBridgeStopped(org.apache.activemq.command.BrokerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void networkBridgeStopped(org.apache.activemq.command.BrokerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.InactiveDurableSubscriptionView:void destroy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:org.apache.activemq.proxy.ProxyConnector addProxyConnector(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.DefaultBrokerFactory:org.apache.activemq.broker.BrokerService createBroker(java.net.URI)"
        ]
    },
    "org.apache.activemq.broker.TransportConnector$1$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.transport.peer.PeerTransportFactory:org.apache.activemq.transport.Transport doConnect(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.plugin.SubQueueSelectorCacheBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.AuthorizationBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.cluster.ConnectionSplitBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.plugin.StatisticsBroker:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.scheduler.SchedulerBroker:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void start()",
            "org.apache.activemq.broker.TransactionBroker:void start()",
            "org.apache.activemq.broker.BrokerBroadcaster:void start()"
        ]
    },
    "org.apache.activemq.broker.cluster.ConnectionSplitBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedQueueRegion:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTopicRegion:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTempTopicRegion:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedTempQueueRegion:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.store.memory.MemoryTransactionStore:void recover(org.apache.activemq.store.TransactionRecoveryListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker:void start()"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination lookup(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.region.AbstractRegion:void start()",
            "org.apache.activemq.broker.region.RegionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.region.RegionBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.region.RegionBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination lookup(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange,org.apache.activemq.command.ConsumerControl)",
            "org.apache.activemq.broker.region.AbstractRegion:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$5:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.virtual.MirroredQueue:void remove(org.apache.activemq.broker.region.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.BrokerView:java.lang.String addConnector(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.ConnectorView:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.LdapNetworkConnector:void objectAdded(javax.naming.event.NamingEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.LdapNetworkConnector:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.LdapNetworkConnector:void objectChanged(javax.naming.event.NamingEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerService:void startVirtualConsumerDestinations()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerService:void startDestinations()"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalException(org.apache.activemq.command.MessageDispatch,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport$11:void onCompletion(org.apache.activemq.transport.FutureResponse)",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalException(java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void duplexStart(org.apache.activemq.broker.TransportConnection,org.apache.activemq.command.BrokerInfo,org.apache.activemq.command.BrokerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processBrokerInfo(org.apache.activemq.command.BrokerInfo)"
        ]
    },
    "org.apache.activemq.network.DiscoveryNetworkConnector:void onServiceAdd(org.apache.activemq.command.DiscoveryEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.NetworkBridgeView:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.MulticastNetworkConnector:void handleStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.NetworkConnector$1:void doStart()"
        ]
    },
    "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getTopics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getTempTopics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getQueues()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.MessageBrokerView:java.util.Set getTempQueues()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Topic:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.store.TopicMessageStore,org.apache.activemq.broker.region.DestinationStatistics,org.apache.activemq.thread.TaskRunnerFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TempTopic:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.store.TopicMessageStore,org.apache.activemq.broker.region.DestinationStatistics,org.apache.activemq.thread.TaskRunnerFactory)",
            "org.apache.activemq.broker.region.DestinationFactoryImpl:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.region.DestinationStatistics)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.store.MessageStore,org.apache.activemq.broker.region.DestinationStatistics,org.apache.activemq.thread.TaskRunnerFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TempQueue:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.store.MessageStore,org.apache.activemq.broker.region.DestinationStatistics,org.apache.activemq.thread.TaskRunnerFactory)",
            "org.apache.activemq.broker.region.DestinationFactoryImpl:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.region.DestinationStatistics)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void nowMasterBroker()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void nowMasterBroker()",
            "org.apache.activemq.advisory.AdvisoryBroker:void nowMasterBroker()"
        ]
    },
    "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getDestinationView(org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getDestinationView(java.lang.String,byte)"
        ]
    },
    "org.apache.activemq.broker.region.virtual.MirroredQueue:org.apache.activemq.broker.region.Destination getMirrorDestination(org.apache.activemq.broker.region.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.virtual.MirroredQueue:org.apache.activemq.broker.region.Destination intercept(org.apache.activemq.broker.region.Destination)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void networkBridgeStarted(org.apache.activemq.command.BrokerInfo,boolean,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void networkBridgeStarted(org.apache.activemq.command.BrokerInfo,boolean,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void start()",
            "org.apache.activemq.broker.BrokerFilter:void start()",
            "org.apache.activemq.broker.TransactionBroker:void start()",
            "org.apache.activemq.broker.BrokerBroadcaster:void start()"
        ]
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptor addMessageInterceptor(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void injectMessage(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void removeMessageInterceptor(org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.inteceptor.MessageInterceptor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptor addMessageInterceptor(org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.inteceptor.MessageInterceptor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void removeMessageInterceptorForQueue(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void removeMessageInterceptor(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptor addMessageInterceptorForQueue(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:org.apache.activemq.broker.inteceptor.MessageInterceptor addMessageInterceptorForTopic(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void removeMessageInterceptorForTopic(java.lang.String,org.apache.activemq.broker.inteceptor.MessageInterceptor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicSubscription:void discard(org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:void add(org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.region.TopicSubscription:void dispatchMatched()"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.Broker getRoot()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.Broker getRoot()",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorFilter:void injectMessage(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void sendToDLQ(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void purgeInactiveDestinations()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker$1:void run()"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void messageExpired(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void messageExpired(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.broker.region.TopicSubscription:void removeExpiredMessages()"
        ]
    },
    "org.apache.activemq.broker.jmx.NetworkBridgeView:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransportConnection:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void serviceTransportException(java.io.IOException)",
            "org.apache.activemq.broker.TransportConnection$4:void run()"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalCommand(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport$2:void onCommand(java.lang.Object)",
            "org.apache.activemq.network.DemandForwardingBridgeSupport$1:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.network.MulticastNetworkConnector:void handleStop(org.apache.activemq.util.ServiceStopper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.NetworkConnector$1:void doStop(org.apache.activemq.util.ServiceStopper)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void networkBridgeStopped(org.apache.activemq.command.BrokerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void networkBridgeStopped(org.apache.activemq.command.BrokerInfo)"
        ]
    },
    "org.apache.activemq.broker.DefaultBrokerFactory:org.apache.activemq.broker.BrokerService createBroker(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.RegionBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.security.AbstractAuthenticationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.region.RegionBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void sendScheduledJob(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.scheduler.Job,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.virtual.CompositeDestinationFilter:void doForward(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message,org.apache.activemq.broker.Broker,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.StatisticsBroker:void sendStats(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQMapMessage,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.util.BrokerSupport:void doResend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.region.BaseDestination:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.ForcePersistencyModeBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.util.RedeliveryPlugin:void scheduleRedelivery(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,long,int)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.RegionBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination lookup(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.region.AbstractRegion:void start()",
            "org.apache.activemq.broker.region.RegionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.security.AuthorizationBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.TransactionBroker:void forceDestinationWakeupOnCompletion(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.transaction.Transaction,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.BaseCommand)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.view.DestinationDotFileInterceptor:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.region.RegionBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedRegionBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractRegion:void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange,org.apache.activemq.command.ConsumerControl)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange,org.apache.activemq.command.ConsumerControl)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractRegion:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$11:void onCompletion(org.apache.activemq.transport.FutureResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalException(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport$2:void onException(java.io.IOException)",
            "org.apache.activemq.network.DemandForwardingBridgeSupport$1:void onException(java.io.IOException)",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void doStartLocalAndRemoteBridges()",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void serviceLocalCommand(org.apache.activemq.command.Command)",
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void collectBrokerInfos()"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response processBrokerInfo(org.apache.activemq.command.BrokerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.NetworkConnector$1:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TempTopic:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.store.TopicMessageStore,org.apache.activemq.broker.region.DestinationStatistics,org.apache.activemq.thread.TaskRunnerFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.DestinationFactoryImpl:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.region.DestinationStatistics)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractTempRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.TempQueue:void <init>(org.apache.activemq.broker.BrokerService,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.store.MessageStore,org.apache.activemq.broker.region.DestinationStatistics,org.apache.activemq.thread.TaskRunnerFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.DestinationFactoryImpl:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.broker.region.DestinationStatistics)"
        ]
    },
    "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getDestinationView(java.lang.String,byte)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getQueueDestinationView(java.lang.String)",
            "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getTopicDestinationView(java.lang.String)",
            "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getDestinationView(java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.region.virtual.MirroredQueue:org.apache.activemq.broker.region.Destination intercept(org.apache.activemq.broker.region.Destination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicSubscription:void add(org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicSubscription:void dispatchMatched()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:org.apache.activemq.command.Response pullMessage(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessagePull)",
            "org.apache.activemq.broker.region.TopicSubscription:void add(org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.region.TopicSubscription:void access$100(org.apache.activemq.broker.region.TopicSubscription)",
            "org.apache.activemq.broker.region.TopicSubscription:void setPrefetchSize(int)",
            "org.apache.activemq.broker.region.TopicSubscription:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)"
        ]
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorFilter:void injectMessage(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry:void injectMessage(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.RegionBroker$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void messageExpired(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void messageExpired(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.advisory.AdvisoryBroker:void messageExpired(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.broker.region.TopicSubscription:void removeExpiredMessages()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:void add(org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:void serviceTransportException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection:void serviceException(java.lang.Throwable)",
            "org.apache.activemq.broker.TransportConnection$1:void onException(java.io.IOException)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection$4:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$2:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$1:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.NetworkConnector$1:void doStop(org.apache.activemq.util.ServiceStopper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.security.AuthorizationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.view.DestinationDotFileInterceptor:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.broker.BrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.security.AbstractAuthenticationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.security.JaasDualAuthenticationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.AbstractAuthenticationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.security.JaasDualAuthenticationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.security.AbstractAuthenticationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.broker.jmx.ManagedRegionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.BaseDestination:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void sendScheduledJob(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.scheduler.Job,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.virtual.CompositeDestinationFilter:void doForward(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message,org.apache.activemq.broker.Broker,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.StatisticsBroker:void sendStats(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQMapMessage,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.util.BrokerSupport:void doResend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.ForcePersistencyModeBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.util.RedeliveryPlugin:void scheduleRedelivery(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,long,int)"
        ]
    },
    "org.apache.activemq.broker.scheduler.SchedulerBroker:void sendScheduledJob(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.scheduler.Job,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.region.virtual.CompositeDestinationFilter:void doForward(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message,org.apache.activemq.broker.Broker,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.virtual.CompositeDestinationFilter:void access$000(org.apache.activemq.broker.region.virtual.CompositeDestinationFilter,org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message,org.apache.activemq.broker.Broker,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.virtual.CompositeDestinationFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void sendScheduledJob(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.scheduler.Job,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.StatisticsBroker:void sendStats(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQMapMessage,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.ForcePersistencyModeBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.plugin.StatisticsBroker:void sendStats(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQMapMessage,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.plugin.StatisticsBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.StatisticsBroker:void sendSubStats(org.apache.activemq.broker.ConnectionContext,javax.management.ObjectName[],org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.util.BrokerSupport:void doResend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.util.BrokerSupport:void resendNoCopy(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.util.BrokerSupport:void resend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.BaseDestination:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic:void dispatch(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.Queue:void messageSent(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)",
            "org.apache.activemq.advisory.AdvisoryBroker:void isFull(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.usage.Usage)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void messageExpired(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.advisory.AdvisoryBroker:void messageDelivered(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.advisory.AdvisoryBroker:void networkBridgeStarted(org.apache.activemq.command.BrokerInfo,boolean,java.lang.String)",
            "org.apache.activemq.advisory.AdvisoryBroker:void messageConsumed(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.advisory.AdvisoryBroker:void messageDiscarded(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription,org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.advisory.AdvisoryBroker:void slowConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fastProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)",
            "org.apache.activemq.advisory.AdvisoryBroker:void networkBridgeStopped(org.apache.activemq.command.BrokerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void nowMasterBroker()"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void scheduledJob(java.lang.String,org.apache.activemq.util.ByteSequence)",
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void sendScheduledJob(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.scheduler.Job,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.UserIDBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorFilter:void injectMessage(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.security.AuthorizationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.StatisticsBroker:void sendStats(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQMapMessage,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.util.BrokerSupport:void doResend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.plugin.StatisticsBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.inteceptor.MessageInterceptorFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.BaseDestination:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.ForcePersistencyModeBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.util.RedeliveryPlugin:void scheduleRedelivery(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,long,int)"
        ]
    },
    "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.BaseDestination:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void sendScheduledJob(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.scheduler.Job,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.StatisticsBroker:void sendStats(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQMapMessage,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.util.BrokerSupport:void doResend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.ForcePersistencyModeBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.util.RedeliveryPlugin:void scheduleRedelivery(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,long,int)"
        ]
    },
    "org.apache.activemq.plugin.ForcePersistencyModeBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.RedeliveryPlugin:void scheduleRedelivery(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,long,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.util.RedeliveryPlugin:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.security.AuthorizationBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.security.AuthorizationBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransactionBroker:void forceDestinationWakeupOnCompletion(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.transaction.Transaction,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.BaseCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker:void access$000(org.apache.activemq.broker.TransactionBroker,org.apache.activemq.broker.ConnectionContext,org.apache.activemq.transaction.Transaction,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.BaseCommand)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination lookup(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.region.AbstractRegion:void start()",
            "org.apache.activemq.broker.region.RegionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.BrokerBroadcaster:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.BrokerFilter:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.region.RegionBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.RegionBroker:void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange,org.apache.activemq.command.ConsumerControl)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange,org.apache.activemq.command.ConsumerControl)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$2:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport$1:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void collectBrokerInfos()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport:void access$400(org.apache.activemq.network.DemandForwardingBridgeSupport)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractTempRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.jmx.ManagedTempQueueRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.jmx.ManagedTempTopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.jmx.ManagedTopicRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.jmx.ManagedQueueRegion:org.apache.activemq.broker.region.Destination createDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getQueueDestinationView(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getTopicDestinationView(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.MessageBrokerView:org.apache.activemq.broker.view.BrokerDestinationView getDestinationView(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicSubscription:org.apache.activemq.command.Response pullMessage(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessagePull)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicSubscription:void access$100(org.apache.activemq.broker.region.TopicSubscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription$1:void afterCommit()"
        ]
    },
    "org.apache.activemq.broker.region.TopicSubscription:void setPrefetchSize(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.policy.PolicyEntry:void configurePrefetch(org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.broker.region.TopicSubscription:void acknowledge(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.MessageAck)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void messageExpired(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void messageExpired(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:void serviceException(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:void pullTimeout(long)",
            "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)",
            "org.apache.activemq.broker.region.PrefetchSubscription:void pullTimeout(long)",
            "org.apache.activemq.broker.TransportConnection$2:void run()"
        ]
    },
    "org.apache.activemq.broker.TransportConnection$1:void onException(java.io.IOException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.AuthorizationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.JaasDualAuthenticationBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.security.AuthorizationBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.broker.scheduler.SchedulerBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.BaseDestination:void onMessageWithNoConsumers(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void sendScheduledJob(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.scheduler.Job,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.StatisticsBroker:void sendStats(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQMapMessage,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.util.BrokerSupport:void doResend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.ForcePersistencyModeBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.util.RedeliveryPlugin:void scheduleRedelivery(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,long,int)"
        ]
    },
    "org.apache.activemq.broker.region.virtual.CompositeDestinationFilter:void access$000(org.apache.activemq.broker.region.virtual.CompositeDestinationFilter,org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message,org.apache.activemq.broker.Broker,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.virtual.CompositeDestinationFilter$1:void run()"
        ]
    },
    "org.apache.activemq.broker.region.virtual.CompositeDestinationFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.util.BrokerSupport:void resendNoCopy(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.RegionBroker:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.util.BrokerSupport:void resend(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:boolean moveMessageTo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.QueueMessageReference,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.region.Queue:int copyMatchingMessages(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReferenceFilter,org.apache.activemq.command.ActiveMQDestination,int)"
        ]
    },
    "org.apache.activemq.broker.region.Topic:void dispatch(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic$4:void afterCommit()",
            "org.apache.activemq.broker.region.Topic:void doMessageSend(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:void messageSent(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:void doMessageSend(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.Queue$SendSync:void processSent()"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void isFull(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.usage.Usage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void isFull(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.usage.Usage)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void messageDelivered(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void messageDelivered(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void messageConsumed(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void messageConsumed(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void messageDiscarded(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription,org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void messageDiscarded(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription,org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void slowConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void slowConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fastProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void fastProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)"
        ]
    },
    "org.apache.activemq.broker.scheduler.SchedulerBroker:void scheduledJob(java.lang.String,org.apache.activemq.util.ByteSequence)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.UserIDBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,org.apache.activemq.command.ActiveMQMessage)",
            "org.apache.activemq.broker.scheduler.SchedulerBroker:void sendScheduledJob(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.scheduler.Job,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerBroadcaster:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.StatisticsBroker:void sendStats(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQMapMessage,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.BrokerFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.TransactionBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.plugin.ForcePersistencyModeBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.security.AuthorizationBroker:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.inteceptor.MessageInterceptorFilter:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.util.RedeliveryPlugin:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.AuthorizationBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransactionBroker:void access$000(org.apache.activemq.broker.TransactionBroker,org.apache.activemq.broker.ConnectionContext,org.apache.activemq.transaction.Transaction,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.BaseCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransactionBroker$1:void recover(org.apache.activemq.command.XATransactionId,org.apache.activemq.command.Message[],org.apache.activemq.command.MessageAck[])"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange,org.apache.activemq.command.ConsumerControl)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange,org.apache.activemq.command.ConsumerControl)"
        ]
    },
    "org.apache.activemq.network.DemandForwardingBridgeSupport:void access$400(org.apache.activemq.network.DemandForwardingBridgeSupport)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.network.DemandForwardingBridgeSupport$5:void run()"
        ]
    },
    "org.apache.activemq.broker.region.TopicSubscription$1:void afterCommit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.policy.PolicyEntry:void configurePrefetch(org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.AbstractRegion:void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange,org.apache.activemq.command.ConsumerControl)",
            "org.apache.activemq.broker.region.policy.PolicyEntry:void configure(org.apache.activemq.broker.Broker,org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.region.QueueBrowserSubscription)",
            "org.apache.activemq.broker.region.policy.PolicyEntry:void configure(org.apache.activemq.broker.Broker,org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.region.TopicSubscription)",
            "org.apache.activemq.broker.region.policy.PolicyEntry:void configure(org.apache.activemq.broker.Broker,org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.region.QueueSubscription)",
            "org.apache.activemq.broker.region.policy.PolicyEntry:void configure(org.apache.activemq.broker.Broker,org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.region.DurableTopicSubscription)"
        ]
    },
    "org.apache.activemq.broker.region.TopicSubscription:void pullTimeout(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription:void access$200(org.apache.activemq.broker.region.TopicSubscription,long)"
        ]
    },
    "org.apache.activemq.broker.TransportConnection:org.apache.activemq.command.Response service(org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.TransportConnection$1:void onCommand(java.lang.Object)"
        ]
    },
    "org.apache.activemq.broker.region.PrefetchSubscription:void pullTimeout(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.PrefetchSubscription$1:void run()"
        ]
    },
    "org.apache.activemq.broker.TransportConnection$2:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.AuthorizationBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.virtual.CompositeDestinationFilter$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.RegionBroker:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)",
            "org.apache.activemq.plugin.DiscardingDLQBroker:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:boolean moveMessageTo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.QueueMessageReference,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReferenceFilter,org.apache.activemq.command.ActiveMQDestination,int)",
            "org.apache.activemq.broker.jmx.QueueView:boolean retryMessage(java.lang.String)",
            "org.apache.activemq.broker.region.Queue:int retryMessages(org.apache.activemq.broker.ConnectionContext,int)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:int copyMatchingMessages(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReferenceFilter,org.apache.activemq.command.ActiveMQDestination,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:int copyMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination,int)",
            "org.apache.activemq.broker.region.Queue:boolean copyMessageTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.Topic$4:void afterCommit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Topic:void doMessageSend(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Topic$3:void run()",
            "org.apache.activemq.broker.region.Topic:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:void doMessageSend(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)",
            "org.apache.activemq.broker.region.Queue$4:void run()"
        ]
    },
    "org.apache.activemq.broker.region.Queue$SendSync:void processSent()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void isFull(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.usage.Usage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void isFull(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.usage.Usage)",
            "org.apache.activemq.broker.BrokerFilter:void isFull(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.usage.Usage)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void messageDelivered(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void messageDelivered(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.advisory.AdvisoryBroker:void messageDelivered(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void messageConsumed(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void messageConsumed(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.BrokerFilter:void messageConsumed(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void messageDiscarded(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription,org.apache.activemq.broker.region.MessageReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void messageDiscarded(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription,org.apache.activemq.broker.region.MessageReference)",
            "org.apache.activemq.broker.BrokerFilter:void messageDiscarded(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Subscription,org.apache.activemq.broker.region.MessageReference)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void slowConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.broker.region.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void slowConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.broker.region.Subscription)",
            "org.apache.activemq.broker.BrokerFilter:void slowConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination,org.apache.activemq.broker.region.Subscription)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void fastProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void fastProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.advisory.AdvisoryBroker:void fastProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,boolean)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addDestinationInfo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.DestinationInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,long)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ActiveMQDestination,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.advisory.AdvisoryBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.policy.PolicyEntry:void configure(org.apache.activemq.broker.Broker,org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.region.QueueBrowserSubscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.QueueRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.policy.PolicyEntry:void configure(org.apache.activemq.broker.Broker,org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.region.TopicSubscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.region.TempTopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.policy.PolicyEntry:void configure(org.apache.activemq.broker.Broker,org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.region.QueueSubscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.QueueRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.policy.PolicyEntry:void configure(org.apache.activemq.broker.Broker,org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.region.DurableTopicSubscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.region.DurableTopicSubscription:void activate(org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo,org.apache.activemq.broker.region.RegionBroker)"
        ]
    },
    "org.apache.activemq.broker.region.TopicSubscription:void access$200(org.apache.activemq.broker.region.TopicSubscription,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicSubscription$2:void run()"
        ]
    },
    "org.apache.activemq.broker.TransportConnection$1:void onCommand(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.PrefetchSubscription$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)",
            "org.apache.activemq.plugin.DiscardingDLQBroker:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)",
            "org.apache.activemq.advisory.AdvisoryBroker:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.plugin.DiscardingDLQBroker:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReferenceFilter,org.apache.activemq.command.ActiveMQDestination,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination,int)",
            "org.apache.activemq.broker.region.Queue:boolean moveMessageTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.jmx.QueueView:boolean retryMessage(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Queue:int retryMessages(org.apache.activemq.broker.ConnectionContext,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:int retryMessages()"
        ]
    },
    "org.apache.activemq.broker.region.Queue:int copyMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:int copyMatchingMessagesTo(java.lang.String,java.lang.String,int)",
            "org.apache.activemq.broker.region.Queue:int copyMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:boolean copyMessageTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:boolean copyMessageTo(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.region.Topic$3:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Topic:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Queue:void send(org.apache.activemq.broker.ProducerBrokerExchange,org.apache.activemq.command.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Queue$4:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerBroadcaster:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.TransactionBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerBroadcaster:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)",
            "org.apache.activemq.plugin.DiscardingDLQBroker:boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.MessageReference,org.apache.activemq.broker.region.Subscription,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.advisory.AdvisoryBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.CompositeDestinationBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.QueueRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedQueueRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.TopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.TopicRegion:java.util.List addSubscriptionsForDestination(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.broker.region.Destination)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.jmx.ManagedTopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.TempTopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.ManagedTempTopicRegion:org.apache.activemq.broker.region.Subscription createSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)",
            "org.apache.activemq.broker.region.AbstractRegion:org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.broker.region.DurableTopicSubscription:void activate(org.apache.activemq.usage.SystemUsage,org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConsumerInfo,org.apache.activemq.broker.region.RegionBroker)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.TopicSubscription$2:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.broker.jmx.QueueView:int moveMatchingMessagesTo(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.activemq.broker.region.Queue:boolean moveMessageTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:boolean moveMessageTo(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.jmx.QueueView:int retryMessages()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.QueueView:int copyMatchingMessagesTo(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Queue:int copyMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:int copyMatchingMessagesTo(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.jmx.QueueView:boolean copyMessageTo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerBroadcaster:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeSubscription(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.RemoveSubscriptionInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.security.JaasCertificateAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.security.AbstractAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.security.JaasDualAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.TransactionBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.TransactionBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerFilter:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)",
            "org.apache.activemq.broker.TransactionBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.BrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.BrokerBroadcaster:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.broker.BrokerFilter:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.security.JaasAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.security.JaasDualAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.security.SimpleAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.security.JaasCertificateAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.broker.CompositeDestinationBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.CompositeDestinationBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.view.ConnectionDotFileInterceptor:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.CompositeDestinationBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerFilter:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.advisory.AdvisoryBroker:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.broker.BrokerBroadcaster:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)"
        ]
    },
    "org.apache.activemq.broker.BrokerBroadcaster:void removeProducer(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.region.Queue:int moveMatchingMessagesTo(org.apache.activemq.broker.ConnectionContext,java.lang.String,org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.broker.jmx.QueueView:int moveMatchingMessagesTo(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.activemq.broker.jmx.QueueView:int moveMatchingMessagesTo(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.QueueView:boolean moveMessageTo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.broker.jmx.QueueView:int copyMatchingMessagesTo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.JaasCertificateAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.security.JaasDualAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.security.AbstractAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.security.JaasDualAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)"
        ]
    },
    "org.apache.activemq.security.JaasDualAuthenticationBroker:void removeConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.JaasAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.security.JaasDualAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.security.JaasDualAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.SimpleAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.security.JaasCertificateAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": [
            "org.apache.activemq.security.JaasDualAuthenticationBroker:void addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.broker.jmx.QueueView:int moveMatchingMessagesTo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.broker.jmx.ManagementContext:void createConnector(javax.management.MBeanServer)"
        ],
        "vulCaller": []
    }
}
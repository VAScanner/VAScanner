{
    "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)": {
        "isVulRoot": true,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void allowTypesByRegExp(java.util.regex.Pattern[])",
            "com.thoughtworks.xstream.XStream:void denyPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader,com.thoughtworks.xstream.security.TypePermission[])",
            "com.thoughtworks.xstream.XStream:void allowTypeHierarchy(java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void allowTypes(java.lang.Class[])",
            "com.thoughtworks.xstream.XStream:void allowTypes(java.lang.String[])",
            "com.thoughtworks.xstream.XStream:void allowTypesByRegExp(java.lang.String[])",
            "com.thoughtworks.xstream.XStream:void allowTypesByWildcard(java.lang.String[])"
        ]
    },
    "com.thoughtworks.xstream.XStream:void allowTypesByRegExp(java.util.regex.Pattern[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void denyPermission(com.thoughtworks.xstream.security.TypePermission)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void denyTypesByWildcard(java.lang.String[])",
            "com.thoughtworks.xstream.XStream:void denyTypes(java.lang.Class[])",
            "com.thoughtworks.xstream.XStream:void denyTypesByRegExp(java.lang.String[])",
            "com.thoughtworks.xstream.XStream:void denyTypes(java.lang.String[])",
            "com.thoughtworks.xstream.XStream:void denyTypeHierarchy(java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void denyTypesByRegExp(java.util.regex.Pattern[])"
        ]
    },
    "com.thoughtworks.xstream.XStream:void setupSecurity()": {
        "isVulRoot": true,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)"
        ]
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader,com.thoughtworks.xstream.security.TypePermission[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String,com.thoughtworks.xstream.security.TypePermission[])",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.io.Reader,com.thoughtworks.xstream.security.TypePermission[])",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void allowTypeHierarchy(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void allowTypes(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void allowTypes(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void allowTypesByRegExp(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void allowTypesByWildcard(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)": {
        "isVulRoot": true,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream$4:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void setupConverters()": {
        "isVulRoot": true,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.DefaultConverterLookup)"
        ]
    },
    "com.thoughtworks.xstream.security.PrimitiveTypePermission:boolean allows(java.lang.Class)": {
        "isVulRoot": true,
        "srcRoot": [
            "com.thoughtworks.xstream.security.PrimitiveTypePermission:boolean allows(java.lang.Class)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider:java.lang.Object newInstance(java.lang.Class)": {
        "isVulRoot": true,
        "srcRoot": [
            "com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider:java.lang.Object newInstance(java.lang.Class)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.core.JVM:void <clinit>()",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Object newInstance(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider:java.lang.Object newInstance(java.lang.Class)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider:java.lang.Object newInstance(java.lang.Class)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Object newInstance(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider:java.lang.Object newInstance(java.lang.Class)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Object newInstance(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void denyTypesByWildcard(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void denyTypes(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void denyTypesByRegExp(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void denyTypes(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void denyTypeHierarchy(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void denyTypesByRegExp(java.util.regex.Pattern[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String,com.thoughtworks.xstream.security.TypePermission[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.io.Reader,com.thoughtworks.xstream.security.TypePermission[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.lang.String,com.thoughtworks.xstream.security.TypePermission[])"
        ]
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.XStream$4:java.lang.Object readFromStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedByte()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.String readUTF()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:float readFloat()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.Object readObjectOverride()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:byte readByte()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:long readLong()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:boolean readBoolean()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:short readShort()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedShort()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[],int,int)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:double readDouble()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:char readChar()"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object readFile(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.DefaultConverterLookup)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider:java.lang.Object newInstance(java.lang.Class)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.lang.String,com.thoughtworks.xstream.security.TypePermission[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.io.Reader)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedByte()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read()"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.String readUTF()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:float readFloat()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.Object readObjectOverride()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:byte readByte()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:long readLong()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:boolean readBoolean()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:short readShort()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedShort()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[])"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:double readDouble()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:char readChar()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object readFile(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object remove(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object access$500(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy,java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.io.HierarchicalStreamDriver)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference)"
        ]
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object access$500(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:java.lang.Object getValue()"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)",
            "com.thoughtworks.xstream.XStream:void <init>()",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:java.lang.Object getValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:boolean equals(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:void <init>(java.io.File)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader,com.thoughtworks.xstream.security.TypePermission[])"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()",
            "com.thoughtworks.xstream.persistence.FileStreamStrategy:void <init>(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:void <init>(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:java.lang.String toXML(com.thoughtworks.xstream.XStream,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse(org.xml.sax.InputSource)"
        ]
    },
    "com.thoughtworks.xstream.persistence.FileStreamStrategy:void <init>(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.String toXML(com.thoughtworks.xstream.XStream,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void parse(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)",
            "com.thoughtworks.xstream.XStream:void setupSecurity()"
        ],
        "vulCaller": []
    }
}
{
    "org.opencastproject.metadata.mpeg7.Mpeg7Parser:org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl parse(java.io.InputStream)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opencastproject.metadata.mpeg7.Mpeg7Parser:org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl parse(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl:void loadCatalogData(java.io.InputStream)"
        ]
    },
    "org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl:void loadCatalogData(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.opencastproject.metadata.mpeg7.Mpeg7Parser:org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl parse(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl:void <init>(java.io.InputStream)"
        ]
    },
    "org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl:org.w3c.dom.Document createDocument()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl:org.w3c.dom.Document createDocument()"
        ],
        "vulCaller": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl:org.w3c.dom.Document toXml()"
        ]
    },
    "org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl:org.w3c.dom.Document toXml()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl:org.w3c.dom.Document createDocument()"
        ],
        "vulCaller": []
    },
    "org.opencastproject.metadata.mpeg7.Mpeg7CatalogService:java.io.InputStream serialize(org.opencastproject.metadata.mpeg7.Mpeg7Catalog)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogService:java.io.InputStream serialize(org.opencastproject.metadata.mpeg7.Mpeg7Catalog)"
        ],
        "vulCaller": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogService:java.io.InputStream serialize(org.opencastproject.metadata.api.MetadataCatalog)"
        ]
    },
    "org.opencastproject.metadata.mpeg7.Mpeg7CatalogService:java.io.InputStream serialize(org.opencastproject.metadata.api.MetadataCatalog)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogService:java.io.InputStream serialize(org.opencastproject.metadata.mpeg7.Mpeg7Catalog)"
        ],
        "vulCaller": []
    },
    "org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.opencastproject.metadata.mpeg7.Mpeg7Parser:org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl parse(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogService:org.opencastproject.metadata.mpeg7.Mpeg7Catalog load(java.io.InputStream)"
        ]
    },
    "org.opencastproject.metadata.mpeg7.Mpeg7CatalogService:org.opencastproject.metadata.mpeg7.Mpeg7Catalog load(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.opencastproject.metadata.mpeg7.Mpeg7Parser:org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl parse(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.opencastproject.metadata.mpeg7.Mpeg7CatalogService:org.opencastproject.metadata.api.MetadataCatalog load(java.io.InputStream)"
        ]
    },
    "org.opencastproject.metadata.mpeg7.Mpeg7CatalogService:org.opencastproject.metadata.api.MetadataCatalog load(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.opencastproject.metadata.mpeg7.Mpeg7Parser:org.opencastproject.metadata.mpeg7.Mpeg7CatalogImpl parse(java.io.InputStream)"
        ],
        "vulCaller": []
    }
}
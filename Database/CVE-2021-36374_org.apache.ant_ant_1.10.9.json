{
    "org.apache.tools.zip.AsiExtraField:void parseFromLocalFileData(byte[],int,int)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.tools.zip.AsiExtraField:void parseFromLocalFileData(byte[],int,int)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)"
        ],
        "vulCaller": [
            "org.apache.tools.zip.ZipFile:java.util.Map populateFromCentralDirectory()"
        ]
    },
    "org.apache.tools.zip.ZipFile:java.util.Map populateFromCentralDirectory()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)"
        ],
        "vulCaller": [
            "org.apache.tools.zip.ZipFile:void <init>(java.io.File,java.lang.String,boolean)"
        ]
    },
    "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.zip.ZipFile:void <init>(java.io.File,java.lang.String,boolean)"
        ]
    },
    "org.apache.tools.zip.ZipFile:void <init>(java.io.File,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.zip.ZipFile:void <init>(java.lang.String,java.lang.String)",
            "org.apache.tools.ant.taskdefs.Expand:void expandFile(org.apache.tools.ant.util.FileUtils,java.io.File,java.io.File)",
            "org.apache.tools.zip.ZipFile:void <init>(java.io.File,java.lang.String)"
        ]
    },
    "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.tar.TarInputStream:void paxHeaders()"
        ]
    },
    "org.apache.tools.tar.TarInputStream:void paxHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.tar.TarInputStream:org.apache.tools.tar.TarEntry getNextEntry()"
        ]
    },
    "org.apache.tools.zip.ZipFile:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.depend.AntAnalyzer:void determineDependencies(java.util.Vector,java.util.Vector)",
            "org.apache.tools.ant.helper.ProjectHelper2:void parse(org.apache.tools.ant.Project,java.lang.Object,org.apache.tools.ant.helper.ProjectHelper2$RootHandler)",
            "org.apache.tools.ant.taskdefs.Jar:void grabFilesAndDirs(java.lang.String,java.util.List,java.util.List)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Expand:void expandFile(org.apache.tools.ant.util.FileUtils,java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Expand:void execute()"
        ]
    },
    "org.apache.tools.zip.ZipFile:void <init>(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.FileSet,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)",
            "org.apache.tools.zip.ZipFile:void <init>(java.io.File)",
            "org.apache.tools.ant.types.resources.ZipResource:void fetchEntry()",
            "org.apache.tools.zip.ZipFile:void <init>(java.lang.String)",
            "org.apache.tools.ant.types.resources.ZipResource:java.io.InputStream getInputStream()",
            "org.apache.tools.ant.types.ZipScanner:void fillMapsFromArchive(org.apache.tools.ant.types.Resource,java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.tools.tar.TarInputStream:org.apache.tools.tar.TarEntry getNextEntry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.tar.TarInputStream:byte[] getLongNameData()",
            "org.apache.tools.ant.taskdefs.Untar:void expandStream(java.lang.String,java.io.InputStream,java.io.File)",
            "org.apache.tools.tar.TarInputStream:void paxHeaders()",
            "org.apache.tools.ant.types.resources.TarResource:java.io.InputStream getInputStream()",
            "org.apache.tools.ant.types.resources.TarResource:void fetchEntry()",
            "org.apache.tools.ant.types.TarScanner:void fillMapsFromArchive(org.apache.tools.ant.types.Resource,java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.depend.AntAnalyzer:void determineDependencies(java.util.Vector,java.util.Vector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.depend.AbstractAnalyzer:java.util.Enumeration getClassDependencies()"
        ]
    },
    "org.apache.tools.ant.helper.ProjectHelper2:void parse(org.apache.tools.ant.Project,java.lang.Object,org.apache.tools.ant.helper.ProjectHelper2$RootHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.helper.ProjectHelper2:void parse(org.apache.tools.ant.Project,java.lang.Object)",
            "org.apache.tools.ant.helper.ProjectHelper2:org.apache.tools.ant.UnknownElement parseUnknownElement(org.apache.tools.ant.Project,java.net.URL)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Jar:void grabFilesAndDirs(java.lang.String,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Jar:void createIndexList(org.apache.tools.zip.ZipOutputStream)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Expand:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.FileSet,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void executeMain()",
            "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)"
        ]
    },
    "org.apache.tools.zip.ZipFile:void <init>(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.condition.IsSigned:boolean isSigned(java.io.File,java.lang.String)"
        ]
    },
    "org.apache.tools.ant.types.resources.ZipResource:void fetchEntry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.resources.ArchiveResource:void checkEntry()"
        ]
    },
    "org.apache.tools.zip.ZipFile:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.ZipResource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.ZipScanner:void fillMapsFromArchive(org.apache.tools.ant.types.Resource,java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.ArchiveScanner:void scanme()"
        ]
    },
    "org.apache.tools.tar.TarInputStream:byte[] getLongNameData()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.tar.TarInputStream:org.apache.tools.tar.TarEntry getNextEntry()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Untar:void expandStream(java.lang.String,java.io.InputStream,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Untar:void expandFile(org.apache.tools.ant.util.FileUtils,java.io.File,java.io.File)",
            "org.apache.tools.ant.taskdefs.Untar:void expandResource(org.apache.tools.ant.types.Resource,java.io.File)"
        ]
    },
    "org.apache.tools.ant.types.resources.TarResource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.TarResource:void fetchEntry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.resources.ArchiveResource:void checkEntry()"
        ]
    },
    "org.apache.tools.ant.types.TarScanner:void fillMapsFromArchive(org.apache.tools.ant.types.Resource,java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.ArchiveScanner:void scanme()"
        ]
    },
    "org.apache.tools.ant.util.depend.AbstractAnalyzer:java.util.Enumeration getClassDependencies()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.depend.Depend:void determineDependencies()"
        ]
    },
    "org.apache.tools.ant.helper.ProjectHelper2:void parse(org.apache.tools.ant.Project,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.helper.ProjectHelper2:org.apache.tools.ant.UnknownElement parseUnknownElement(org.apache.tools.ant.Project,java.net.URL)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.helper.ProjectHelper2:org.apache.tools.ant.UnknownElement parseAntlibDescriptor(org.apache.tools.ant.Project,org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Jar:void createIndexList(org.apache.tools.zip.ZipOutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Jar:void finalizeZipOutputStream(org.apache.tools.zip.ZipOutputStream)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:void executeMain()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void executeMain()"
        ]
    },
    "org.apache.tools.ant.taskdefs.condition.IsSigned:boolean isSigned(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.SignJar:boolean isSigned(java.io.File)",
            "org.apache.tools.ant.taskdefs.condition.IsSigned:boolean eval()"
        ]
    },
    "org.apache.tools.ant.types.resources.ArchiveResource:void checkEntry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.resources.ArchiveResource:int getMode()",
            "org.apache.tools.ant.types.resources.TarResource:long getLongUid()",
            "org.apache.tools.ant.types.resources.ArchiveResource:boolean isExists()",
            "org.apache.tools.ant.types.resources.ZipResource:org.apache.tools.zip.ZipExtraField[] getExtraFields()",
            "org.apache.tools.ant.types.resources.TarResource:long getLongGid()",
            "org.apache.tools.ant.types.resources.TarResource:java.lang.String getGroup()",
            "org.apache.tools.ant.types.resources.ArchiveResource:long getLastModified()",
            "org.apache.tools.ant.types.resources.ArchiveResource:long getSize()",
            "org.apache.tools.ant.types.resources.ArchiveResource:boolean isDirectory()",
            "org.apache.tools.ant.types.resources.TarResource:java.lang.String getUserName()"
        ]
    },
    "org.apache.tools.ant.types.ArchiveScanner:void scanme()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.ArchiveScanner:int getIncludedFilesCount()",
            "org.apache.tools.ant.types.ArchiveScanner:java.lang.String[] getIncludedDirectories()",
            "org.apache.tools.ant.types.ArchiveScanner:int getIncludedDirsCount()",
            "org.apache.tools.ant.types.ArchiveScanner:java.lang.String[] getIncludedFiles()",
            "org.apache.tools.ant.types.ArchiveScanner:java.util.Iterator getResourceDirectories(org.apache.tools.ant.Project)",
            "org.apache.tools.ant.types.ArchiveScanner:org.apache.tools.ant.types.Resource getResource(java.lang.String)",
            "org.apache.tools.ant.types.ArchiveScanner:java.util.Iterator getResourceFiles(org.apache.tools.ant.Project)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Untar:void expandFile(org.apache.tools.ant.util.FileUtils,java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Untar:void expandResource(org.apache.tools.ant.types.Resource,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.depend.Depend:void determineDependencies()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.depend.Depend:void execute()"
        ]
    },
    "org.apache.tools.ant.helper.ProjectHelper2:org.apache.tools.ant.UnknownElement parseAntlibDescriptor(org.apache.tools.ant.Project,org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Jar:void finalizeZipOutputStream(org.apache.tools.zip.ZipOutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Jar:boolean createEmptyZip(java.io.File)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.SignJar:boolean isSigned(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.SignJar:boolean isUpToDate(java.io.File,java.io.File)"
        ]
    },
    "org.apache.tools.ant.taskdefs.condition.IsSigned:boolean eval()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.selectors.SignedSelector:boolean isSelected(java.io.File,java.lang.String,java.io.File)"
        ]
    },
    "org.apache.tools.ant.types.resources.ArchiveResource:int getMode()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.TarResource:long getLongUid()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.resources.TarResource:int getUid()"
        ]
    },
    "org.apache.tools.ant.types.resources.ArchiveResource:boolean isExists()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.Resource:long getSize()",
            "org.apache.tools.ant.types.Resource:long getLastModified()"
        ]
    },
    "org.apache.tools.ant.types.resources.ZipResource:org.apache.tools.zip.ZipExtraField[] getExtraFields()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.TarResource:long getLongGid()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.resources.TarResource:int getGid()"
        ]
    },
    "org.apache.tools.ant.types.resources.TarResource:java.lang.String getGroup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.ArchiveResource:long getLastModified()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.ArchiveResource:long getSize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.ArchiveResource:boolean isDirectory()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.TarResource:java.lang.String getUserName()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.ArchiveScanner:int getIncludedFilesCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.ArchiveFileSet:int size()",
            "org.apache.tools.ant.types.resources.BCFileSet:int size()",
            "org.apache.tools.ant.types.FileSet:int size()",
            "org.apache.tools.ant.types.resources.MultiRootFileSet$Worker:int size()"
        ]
    },
    "org.apache.tools.ant.types.ArchiveScanner:java.lang.String[] getIncludedDirectories()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.resources.MultiRootFileSet$Worker:java.util.Iterator iterator()",
            "org.apache.tools.ant.types.resources.BCFileSet:java.util.Iterator iterator()",
            "org.apache.tools.ant.taskdefs.Zip:void executeMain()",
            "org.apache.tools.ant.taskdefs.XSLTProcess:void execute()",
            "org.apache.tools.ant.types.DirSet:java.lang.String toString()",
            "org.apache.tools.ant.taskdefs.Tar:java.lang.String[] getFileNames(org.apache.tools.ant.types.FileSet)",
            "org.apache.tools.ant.taskdefs.Sync:int[] removeOrphanFiles(java.util.Set,java.io.File,java.util.Set)",
            "org.apache.tools.ant.types.ArchiveScanner:java.util.Iterator getResourceDirectories(org.apache.tools.ant.Project)",
            "org.apache.tools.ant.taskdefs.Move:void doFileOperations()",
            "org.apache.tools.ant.types.DirSet:java.util.Iterator iterator()"
        ]
    },
    "org.apache.tools.ant.types.ArchiveScanner:int getIncludedDirsCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.DirSet:int size()",
            "org.apache.tools.ant.types.resources.BCFileSet:int size()",
            "org.apache.tools.ant.types.resources.MultiRootFileSet$Worker:int size()"
        ]
    },
    "org.apache.tools.ant.types.ArchiveScanner:java.lang.String[] getIncludedFiles()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.FixCRLF:void execute()",
            "org.apache.tools.ant.types.optional.depend.DependScanner:void scan()",
            "org.apache.tools.ant.taskdefs.optional.jsp.WLJspc:void execute()",
            "org.apache.tools.ant.taskdefs.Zip:void executeMain()",
            "org.apache.tools.ant.taskdefs.XSLTProcess:void execute()",
            "org.apache.tools.ant.types.FileSet:java.util.Iterator iterator()",
            "org.apache.tools.ant.taskdefs.Tar:java.lang.String[] getFileNames(org.apache.tools.ant.types.FileSet)",
            "org.apache.tools.ant.taskdefs.optional.Native2Ascii:void execute()",
            "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()",
            "org.apache.tools.ant.taskdefs.optional.ejb.EjbJar:void execute()",
            "org.apache.tools.ant.taskdefs.Move:void doFileOperations()",
            "org.apache.tools.ant.types.resources.MultiRootFileSet$Worker:java.util.Iterator iterator()",
            "org.apache.tools.ant.types.resources.BCFileSet:java.util.Iterator iterator()",
            "org.apache.tools.ant.taskdefs.Javac:void collectFileListFromModulePath()",
            "org.apache.tools.ant.taskdefs.optional.depend.Depend:void lambda$determineOutOfDateClasses$7(java.io.File)",
            "org.apache.tools.ant.taskdefs.optional.Cab:void appendFiles(java.util.Vector,org.apache.tools.ant.DirectoryScanner)",
            "org.apache.tools.ant.taskdefs.Javac:void collectFileListFromSourcePath()",
            "org.apache.tools.ant.taskdefs.Sync:int[] removeOrphanFiles(java.util.Set,java.io.File,java.util.Set)",
            "org.apache.tools.ant.taskdefs.optional.Javah:java.lang.String[] lambda$getClasses$0(org.apache.tools.ant.types.FileSet)",
            "org.apache.tools.ant.taskdefs.Rmic:void execute()",
            "org.apache.tools.ant.taskdefs.Replace:void execute()",
            "org.apache.tools.ant.types.ArchiveScanner:java.util.Iterator getResourceFiles(org.apache.tools.ant.Project)",
            "org.apache.tools.ant.taskdefs.Copydir:void execute()",
            "org.apache.tools.ant.taskdefs.optional.jsp.JspC:void execute()"
        ]
    },
    "org.apache.tools.ant.types.ArchiveScanner:java.util.Iterator getResourceDirectories(org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.ArchiveScanner:org.apache.tools.ant.types.Resource getResource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.ResourceUtils:org.apache.tools.ant.types.ResourceCollection selectSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory,org.apache.tools.ant.util.ResourceUtils$ResourceSelectorProvider)"
        ]
    },
    "org.apache.tools.ant.types.ArchiveScanner:java.util.Iterator getResourceFiles(org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.ArchiveFileSet:java.util.Iterator iterator()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.depend.Depend:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Jar:boolean createEmptyZip(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.SignJar:boolean isUpToDate(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.SignJar:void signOneJar(java.io.File,java.io.File)"
        ]
    },
    "org.apache.tools.ant.types.selectors.SignedSelector:boolean isSelected(java.io.File,java.lang.String,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.TarResource:int getUid()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.Resource:long getSize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Length$AccumHandler:void handle(org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.types.resources.selectors.Size:boolean isSelected(org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.taskdefs.Length$EachHandler:void handle(org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.taskdefs.Tar:void tarResource(org.apache.tools.ant.types.Resource,org.apache.tools.tar.TarOutputStream,java.lang.String,org.apache.tools.ant.taskdefs.Tar$TarFileSet)",
            "org.apache.tools.ant.util.ResourceUtils:boolean contentEquals(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,boolean)",
            "org.apache.tools.ant.types.resources.ArchiveResource:long getSize()"
        ]
    },
    "org.apache.tools.ant.types.Resource:long getLastModified()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Pack:void execute()",
            "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void setStylesheet(org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project,boolean)",
            "org.apache.tools.ant.types.resources.selectors.Date:boolean isSelected(org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void readTemplates()",
            "org.apache.tools.ant.taskdefs.Zip:void addResource(org.apache.tools.ant.types.Resource,java.lang.String,java.lang.String,org.apache.tools.zip.ZipOutputStream,int,org.apache.tools.zip.ZipFile,java.io.File)",
            "org.apache.tools.ant.types.selectors.SelectorUtils:boolean isOutOfDate(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,long)",
            "org.apache.tools.ant.taskdefs.condition.IsLastModified:boolean eval()",
            "org.apache.tools.ant.taskdefs.Zip:void zipDir(org.apache.tools.ant.types.Resource,org.apache.tools.zip.ZipOutputStream,java.lang.String,int,org.apache.tools.zip.ZipExtraField[])",
            "org.apache.tools.ant.types.ArchiveScanner:void scanme()",
            "org.apache.tools.ant.taskdefs.XSLTProcess:void process(java.io.File,java.io.File,org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.taskdefs.Touch:void touch(org.apache.tools.ant.types.Resource,long)",
            "org.apache.tools.ant.taskdefs.Tar:void tarResource(org.apache.tools.ant.types.Resource,org.apache.tools.tar.TarOutputStream,java.lang.String,org.apache.tools.ant.taskdefs.Tar$TarFileSet)",
            "org.apache.tools.ant.types.resources.ArchiveResource:long getLastModified()",
            "org.apache.tools.ant.taskdefs.DependSet:void logWithModificationTime(org.apache.tools.ant.types.Resource,java.lang.String)",
            "org.apache.tools.ant.taskdefs.XSLTProcess:void process(java.io.File,java.lang.String,java.io.File,org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.types.resources.TarResource:int getGid()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.ArchiveFileSet:int size()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.BCFileSet:int size()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.FileSet:int size()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.ArchiveFileSet:int size()",
            "org.apache.tools.ant.taskdefs.DependSet$HideMissingBasedir:int size()"
        ]
    },
    "org.apache.tools.ant.types.resources.MultiRootFileSet$Worker:int size()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.MultiRootFileSet$Worker:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.resources.BCFileSet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.XSLTProcess:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.DirSet:java.lang.String toString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Tar:java.lang.String[] getFileNames(org.apache.tools.ant.types.FileSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar$TarFileSet:java.lang.String[] getFiles(org.apache.tools.ant.Project)",
            "org.apache.tools.ant.taskdefs.Tar:void tar(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.tar.TarOutputStream)",
            "org.apache.tools.ant.taskdefs.Tar:boolean check(org.apache.tools.ant.types.ResourceCollection)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Sync:int[] removeOrphanFiles(java.util.Set,java.io.File,java.util.Set)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Sync:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Move:void doFileOperations()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void execute()"
        ]
    },
    "org.apache.tools.ant.types.DirSet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.DirSet:int size()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.FixCRLF:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.optional.depend.DependScanner:void scan()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.optional.depend.ClassfileSet:org.apache.tools.ant.DirectoryScanner getDirectoryScanner(org.apache.tools.ant.Project)"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.jsp.WLJspc:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.FileSet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.DependSet$HideMissingBasedir:java.util.Iterator iterator()",
            "org.apache.tools.ant.types.ArchiveFileSet:java.util.Iterator iterator()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.Native2Ascii:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.AbstractFileSet:java.lang.String toString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.ArchiveFileSet:java.lang.String toString()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.EjbJar:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Javac:void collectFileListFromModulePath()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Javac:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.depend.Depend:void lambda$determineOutOfDateClasses$7(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.Cab:void appendFiles(java.util.Vector,org.apache.tools.ant.DirectoryScanner)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.Cab:java.util.Vector getFileList()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Javac:void collectFileListFromSourcePath()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Javac:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.Javah:java.lang.String[] lambda$getClasses$0(org.apache.tools.ant.types.FileSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Rmic:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Replace:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Copydir:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.jsp.JspC:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.ResourceUtils:org.apache.tools.ant.types.ResourceCollection selectSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory,org.apache.tools.ant.util.ResourceUtils$ResourceSelectorProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.ResourceUtils:org.apache.tools.ant.types.ResourceCollection selectOutOfDateSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory,long)",
            "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.types.Resource[] selectOutOfDateResources(org.apache.tools.ant.types.Resource[],org.apache.tools.ant.util.FileNameMapper)"
        ]
    },
    "org.apache.tools.ant.types.ArchiveFileSet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.SignJar:void signOneJar(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.SignJar:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Length$AccumHandler:void handle(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Length:void handleResources(org.apache.tools.ant.taskdefs.Length$Handler)"
        ]
    },
    "org.apache.tools.ant.types.resources.selectors.Size:boolean isSelected(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Length$EachHandler:void handle(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Length:void handleResources(org.apache.tools.ant.taskdefs.Length$Handler)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Tar:void tarResource(org.apache.tools.ant.types.Resource,org.apache.tools.tar.TarOutputStream,java.lang.String,org.apache.tools.ant.taskdefs.Tar$TarFileSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar:void tar(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.tar.TarOutputStream)",
            "org.apache.tools.ant.taskdefs.Tar:void tarFile(java.io.File,org.apache.tools.tar.TarOutputStream,java.lang.String,org.apache.tools.ant.taskdefs.Tar$TarFileSet)"
        ]
    },
    "org.apache.tools.ant.util.ResourceUtils:boolean contentEquals(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.FileUtils:boolean contentEquals(java.io.File,java.io.File,boolean)",
            "org.apache.tools.ant.taskdefs.condition.ResourcesMatch:boolean eval()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Pack:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void setStylesheet(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void setStylesheet(java.io.File)",
            "org.apache.tools.ant.taskdefs.XSLTProcess:void configureLiaison(org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project,boolean)",
            "org.apache.tools.ant.taskdefs.Copy:void doResourceOperations(java.util.Map)",
            "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)",
            "org.apache.tools.ant.taskdefs.Concat:void execute()",
            "org.apache.tools.ant.taskdefs.Echo:void execute()"
        ]
    },
    "org.apache.tools.ant.types.resources.selectors.Date:boolean isSelected(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void readTemplates()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void createTransformer()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:void addResource(org.apache.tools.ant.types.Resource,java.lang.String,java.lang.String,org.apache.tools.zip.ZipOutputStream,int,org.apache.tools.zip.ZipFile,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.FileSet,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)",
            "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)"
        ]
    },
    "org.apache.tools.ant.types.selectors.SelectorUtils:boolean isOutOfDate(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project,boolean)",
            "org.apache.tools.ant.taskdefs.Concat:boolean lambda$isUpToDate$1(org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.util.ResourceUtils:boolean lambda$selectOutOfDateSources$0(org.apache.tools.ant.types.Resource,long,org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.types.selectors.SelectorUtils:boolean isOutOfDate(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,int)",
            "org.apache.tools.ant.taskdefs.Tar:boolean archiveIsUpToDate(org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.taskdefs.condition.IsLastModified:boolean eval()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Zip:void zipDir(org.apache.tools.ant.types.Resource,org.apache.tools.zip.ZipOutputStream,java.lang.String,int,org.apache.tools.zip.ZipExtraField[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void addDirectoryResource(org.apache.tools.ant.types.Resource,java.lang.String,java.lang.String,java.io.File,org.apache.tools.zip.ZipOutputStream,int,int)",
            "org.apache.tools.ant.taskdefs.Jar:void writeManifest(org.apache.tools.zip.ZipOutputStream,org.apache.tools.ant.taskdefs.Manifest)",
            "org.apache.tools.ant.taskdefs.Zip:void zipDir(java.io.File,org.apache.tools.zip.ZipOutputStream,java.lang.String,int,org.apache.tools.zip.ZipExtraField[])"
        ]
    },
    "org.apache.tools.ant.taskdefs.XSLTProcess:void process(java.io.File,java.io.File,org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.XSLTProcess:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Touch:void touch(org.apache.tools.ant.types.Resource,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Touch:void touch()"
        ]
    },
    "org.apache.tools.ant.taskdefs.DependSet:void logWithModificationTime(org.apache.tools.ant.types.Resource,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.DependSet:boolean uptodate(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.types.ResourceCollection)"
        ]
    },
    "org.apache.tools.ant.taskdefs.XSLTProcess:void process(java.io.File,java.lang.String,java.io.File,org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.XSLTProcess:void execute()",
            "org.apache.tools.ant.taskdefs.XSLTProcess:void processResources(org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.taskdefs.DependSet$HideMissingBasedir:int size()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Tar$TarFileSet:java.lang.String[] getFiles(org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Tar:void tar(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.tar.TarOutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Tar:boolean check(org.apache.tools.ant.types.ResourceCollection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Sync:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Copy:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.RenameExtensions:void execute()",
            "org.apache.tools.ant.taskdefs.Sync:void execute()"
        ]
    },
    "org.apache.tools.ant.types.optional.depend.ClassfileSet:org.apache.tools.ant.DirectoryScanner getDirectoryScanner(org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.DependSet$HideMissingBasedir:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.ArchiveFileSet:java.lang.String toString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Javac:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.Cab:java.util.Vector getFileList()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.Cab:void execute()"
        ]
    },
    "org.apache.tools.ant.util.ResourceUtils:org.apache.tools.ant.types.ResourceCollection selectOutOfDateSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.modules.Link:void execute()",
            "org.apache.tools.ant.util.ResourceUtils:org.apache.tools.ant.types.Resource[] selectOutOfDateSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.Resource[],org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory,long)",
            "org.apache.tools.ant.taskdefs.modules.Jmod:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.types.Resource[] selectOutOfDateResources(org.apache.tools.ant.types.Resource[],org.apache.tools.ant.util.FileNameMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.taskdefs.Zip$ArchiveState getResourcesToAdd(org.apache.tools.ant.types.FileSet[],java.io.File,boolean)",
            "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.taskdefs.Zip$ArchiveState getNonFileSetResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[],java.io.File,boolean)"
        ]
    },
    "org.apache.tools.ant.taskdefs.SignJar:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Length:void handleResources(org.apache.tools.ant.taskdefs.Length$Handler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Length:void execute()",
            "org.apache.tools.ant.taskdefs.Length:boolean eval()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Tar:void tarFile(java.io.File,org.apache.tools.tar.TarOutputStream,java.lang.String,org.apache.tools.ant.taskdefs.Tar$TarFileSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar:void tar(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.tar.TarOutputStream)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:boolean contentEquals(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.condition.FilesMatch:boolean eval()",
            "org.apache.tools.ant.util.FileUtils:boolean contentEquals(java.io.File,java.io.File)"
        ]
    },
    "org.apache.tools.ant.taskdefs.condition.ResourcesMatch:boolean eval()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void setStylesheet(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.XSLTProcess:void configureLiaison(org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.taskdefs.XSLTProcess:void configureLiaison(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.XSLTProcess:void configureLiaison(java.io.File)",
            "org.apache.tools.ant.taskdefs.XSLTProcess:void process(java.io.File,java.io.File,org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.taskdefs.XSLTProcess:void process(java.io.File,java.lang.String,java.io.File,org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void doFileOperations()",
            "org.apache.tools.ant.taskdefs.Move:void copyFile(java.io.File,java.io.File,boolean,boolean)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Copy:void doResourceOperations(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void execute()"
        ]
    },
    "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Concat:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Echo:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void createTransformer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void transform(java.io.File,java.io.File)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Concat:boolean lambda$isUpToDate$1(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.ResourceUtils:boolean lambda$selectOutOfDateSources$0(org.apache.tools.ant.types.Resource,long,org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.selectors.SelectorUtils:boolean isOutOfDate(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Tar:boolean archiveIsUpToDate(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar:boolean check(org.apache.tools.ant.types.ResourceCollection)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:void addDirectoryResource(org.apache.tools.ant.types.Resource,java.lang.String,java.lang.String,java.io.File,org.apache.tools.zip.ZipOutputStream,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.FileSet,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)",
            "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Jar:void writeManifest(org.apache.tools.zip.ZipOutputStream,org.apache.tools.ant.taskdefs.Manifest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Jar:void initZipOutputStream(org.apache.tools.zip.ZipOutputStream)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:void zipDir(java.io.File,org.apache.tools.zip.ZipOutputStream,java.lang.String,int,org.apache.tools.zip.ZipExtraField[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void zipDir(java.io.File,org.apache.tools.zip.ZipOutputStream,java.lang.String,int)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Touch:void touch()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Touch:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.DependSet:boolean uptodate(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.types.ResourceCollection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.DependSet:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.XSLTProcess:void processResources(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.XSLTProcess:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Tar:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.RenameExtensions:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.Cab:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.modules.Link:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.ResourceUtils:org.apache.tools.ant.types.Resource[] selectOutOfDateSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.Resource[],org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.SourceFileScanner:java.lang.String[] restrict(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper,long)",
            "org.apache.tools.ant.util.ResourceUtils:org.apache.tools.ant.types.Resource[] selectOutOfDateSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.Resource[],org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory)",
            "org.apache.tools.ant.taskdefs.Copy:java.util.Map buildMap(org.apache.tools.ant.types.Resource[],java.io.File,org.apache.tools.ant.util.FileNameMapper)",
            "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.types.Resource[] selectOutOfDateResources(org.apache.tools.ant.types.Resource[],org.apache.tools.ant.util.FileNameMapper)"
        ]
    },
    "org.apache.tools.ant.taskdefs.modules.Jmod:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.taskdefs.Zip$ArchiveState getResourcesToAdd(org.apache.tools.ant.types.FileSet[],java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.taskdefs.Zip$ArchiveState getResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[],java.io.File,boolean)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.taskdefs.Zip$ArchiveState getNonFileSetResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[],java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.taskdefs.Zip$ArchiveState getResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[],java.io.File,boolean)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Length:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Length:boolean eval()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.condition.FilesMatch:boolean eval()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.FileUtils:boolean contentEquals(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.FixCRLF:void processFile(java.lang.String)",
            "org.apache.tools.ant.types.selectors.DifferentSelector:boolean selectionTest(java.io.File,java.io.File)"
        ]
    },
    "org.apache.tools.ant.taskdefs.XSLTProcess:void configureLiaison(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Copy:void doFileOperations()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Move:void copyFile(java.io.File,java.io.File,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Move:void doFileOperations()",
            "org.apache.tools.ant.taskdefs.Move:void moveFile(java.io.File,java.io.File,boolean,boolean)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)"
        ]
    },
    "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.Project)"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.TraXLiaison:void transform(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.XSLTProcess:void process(java.io.File,java.io.File,org.apache.tools.ant.types.Resource)",
            "org.apache.tools.ant.taskdefs.XSLTProcess:void process(java.io.File,java.lang.String,java.io.File,org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Jar:void initZipOutputStream(org.apache.tools.zip.ZipOutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Jar:boolean createEmptyZip(java.io.File)",
            "org.apache.tools.ant.taskdefs.Ear:void initZipOutputStream(org.apache.tools.zip.ZipOutputStream)",
            "org.apache.tools.ant.taskdefs.War:void initZipOutputStream(org.apache.tools.zip.ZipOutputStream)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:void zipDir(java.io.File,org.apache.tools.zip.ZipOutputStream,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void addParentDirs(java.io.File,java.lang.String,org.apache.tools.zip.ZipOutputStream,java.lang.String,int)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Touch:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.DependSet:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.SourceFileScanner:java.lang.String[] restrict(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void buildMap(java.io.File,java.io.File,java.lang.String[],org.apache.tools.ant.util.FileNameMapper,java.util.Hashtable)",
            "org.apache.tools.ant.util.SourceFileScanner:java.lang.String[] restrict(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper)",
            "org.apache.tools.ant.util.SourceFileScanner:java.io.File[] restrictAsFiles(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper,long)"
        ]
    },
    "org.apache.tools.ant.util.ResourceUtils:org.apache.tools.ant.types.Resource[] selectOutOfDateSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.Resource[],org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.UpToDate:boolean eval()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Copy:java.util.Map buildMap(org.apache.tools.ant.types.Resource[],java.io.File,org.apache.tools.ant.util.FileNameMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:java.util.Map scan(org.apache.tools.ant.types.Resource[],java.io.File)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:org.apache.tools.ant.taskdefs.Zip$ArchiveState getResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[],java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Jar:org.apache.tools.ant.taskdefs.Zip$ArchiveState getResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[],java.io.File,boolean)",
            "org.apache.tools.ant.taskdefs.Zip:void executeMain()"
        ]
    },
    "org.apache.tools.ant.taskdefs.FixCRLF:void processFile(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.FixCRLF:void execute()"
        ]
    },
    "org.apache.tools.ant.types.selectors.DifferentSelector:boolean selectionTest(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Move:void moveFile(java.io.File,java.io.File,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Move:void doFileOperations()"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.FixCRLF:void processFile(java.lang.String)",
            "org.apache.tools.ant.taskdefs.CopyPath:void execute()",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,org.apache.tools.ant.Project)"
        ]
    },
    "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Ear:void initZipOutputStream(org.apache.tools.zip.ZipOutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.War:void initZipOutputStream(org.apache.tools.zip.ZipOutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Zip:void addParentDirs(java.io.File,java.lang.String,org.apache.tools.zip.ZipOutputStream,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void addDirectoryResource(org.apache.tools.ant.types.Resource,java.lang.String,java.lang.String,java.io.File,org.apache.tools.zip.ZipOutputStream,int,int)",
            "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.FileSet,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)",
            "org.apache.tools.ant.taskdefs.Zip:void addResources(org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.types.Resource[],org.apache.tools.zip.ZipOutputStream)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Copy:void buildMap(java.io.File,java.io.File,java.lang.String[],org.apache.tools.ant.util.FileNameMapper,java.util.Hashtable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void scan(java.io.File,java.io.File,java.lang.String[],java.lang.String[])"
        ]
    },
    "org.apache.tools.ant.util.SourceFileScanner:java.lang.String[] restrict(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar:boolean archiveIsUpToDate(java.lang.String[],java.io.File)",
            "org.apache.tools.ant.taskdefs.Rmic:void scanDir(java.io.File,java.lang.String[],org.apache.tools.ant.util.FileNameMapper)",
            "org.apache.tools.ant.taskdefs.optional.Native2Ascii:void execute()",
            "org.apache.tools.ant.taskdefs.UpToDate:boolean scanDir(java.io.File,java.lang.String[])",
            "org.apache.tools.ant.taskdefs.UpToDate:boolean eval()",
            "org.apache.tools.ant.taskdefs.ExecuteOn:java.lang.String[] restrict(java.lang.String[],java.io.File)"
        ]
    },
    "org.apache.tools.ant.util.SourceFileScanner:java.io.File[] restrictAsFiles(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.SourceFileScanner:java.io.File[] restrictAsFiles(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper)"
        ]
    },
    "org.apache.tools.ant.taskdefs.UpToDate:boolean eval()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.UpToDate:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Copy:java.util.Map scan(org.apache.tools.ant.types.Resource[],java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void execute()",
            "org.apache.tools.ant.taskdefs.Sync$MyCopy:java.util.Map scan(org.apache.tools.ant.types.Resource[],java.io.File)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Jar:org.apache.tools.ant.taskdefs.Zip$ArchiveState getResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[],java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.CopyPath:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,boolean,boolean,java.lang.String)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,org.apache.tools.ant.Project)"
        ]
    },
    "org.apache.tools.ant.util.ResourceUtils:void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector:boolean isSelected(org.apache.tools.ant.types.Resource)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Copy:void scan(java.io.File,java.io.File,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Sync$MyCopy:void scan(java.io.File,java.io.File,java.lang.String[],java.lang.String[])",
            "org.apache.tools.ant.taskdefs.Move:void doFileOperations()",
            "org.apache.tools.ant.taskdefs.Copy:void iterateOverBaseDirs(java.util.Set,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Tar:boolean archiveIsUpToDate(java.lang.String[],java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar:boolean archiveIsUpToDate(java.lang.String[])",
            "org.apache.tools.ant.taskdefs.Tar:boolean check(java.io.File,java.lang.String[])"
        ]
    },
    "org.apache.tools.ant.taskdefs.Rmic:void scanDir(java.io.File,java.lang.String[],org.apache.tools.ant.util.FileNameMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Rmic:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.UpToDate:boolean scanDir(java.io.File,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.UpToDate:boolean eval()"
        ]
    },
    "org.apache.tools.ant.taskdefs.ExecuteOn:java.lang.String[] restrict(java.lang.String[],java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.ExecuteOn:java.lang.String[] getFilesAndDirs(org.apache.tools.ant.types.FileList)",
            "org.apache.tools.ant.taskdefs.ExecuteOn:void runExec(org.apache.tools.ant.taskdefs.Execute)",
            "org.apache.tools.ant.taskdefs.ExecuteOn:java.lang.String[] getFiles(java.io.File,org.apache.tools.ant.DirectoryScanner)",
            "org.apache.tools.ant.taskdefs.ExecuteOn:java.lang.String[] getDirs(java.io.File,org.apache.tools.ant.DirectoryScanner)"
        ]
    },
    "org.apache.tools.ant.util.SourceFileScanner:java.io.File[] restrictAsFiles(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Javac:void scanDir(java.io.File,java.io.File,java.lang.String[])"
        ]
    },
    "org.apache.tools.ant.taskdefs.UpToDate:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Sync$MyCopy:java.util.Map scan(org.apache.tools.ant.types.Resource[],java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void execute()"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,boolean,boolean,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,boolean,boolean,java.lang.String)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,boolean,boolean)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,org.apache.tools.ant.Project)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector:boolean isSelected(org.apache.tools.ant.types.Resource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Sync$MyCopy:void scan(java.io.File,java.io.File,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void iterateOverBaseDirs(java.util.Set,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Copy:void iterateOverBaseDirs(java.util.Set,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copy:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Tar:boolean archiveIsUpToDate(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Tar:boolean check(java.io.File,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar:boolean check(java.io.File,java.util.Collection)",
            "org.apache.tools.ant.taskdefs.Tar:boolean check(org.apache.tools.ant.types.ResourceCollection)"
        ]
    },
    "org.apache.tools.ant.taskdefs.ExecuteOn:java.lang.String[] getFilesAndDirs(org.apache.tools.ant.types.FileList)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.ExecuteOn:void runExec(org.apache.tools.ant.taskdefs.Execute)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.ExecTask:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.ExecuteOn:java.lang.String[] getFiles(java.io.File,org.apache.tools.ant.DirectoryScanner)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.ExecuteOn:void runExec(org.apache.tools.ant.taskdefs.Execute)"
        ]
    },
    "org.apache.tools.ant.taskdefs.ExecuteOn:java.lang.String[] getDirs(java.io.File,org.apache.tools.ant.DirectoryScanner)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.ExecuteOn:void runExec(org.apache.tools.ant.taskdefs.Execute)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Javac:void scanDir(java.io.File,java.io.File,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Javac:void collectFileListFromModulePath()",
            "org.apache.tools.ant.taskdefs.Javac:void collectFileListFromSourcePath()"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,boolean,boolean,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,boolean)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,boolean,boolean)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,boolean)",
            "org.apache.tools.ant.Project:void copyFile(java.io.File,java.io.File,boolean,boolean,boolean)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String)",
            "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Tar:boolean check(java.io.File,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Tar:boolean check(org.apache.tools.ant.types.ResourceCollection)"
        ]
    },
    "org.apache.tools.ant.taskdefs.ExecTask:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.GenerateKey:void execute()",
            "org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient:void executeForkV4()",
            "org.apache.tools.ant.taskdefs.optional.Cab:void execute()",
            "org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool:void verifyBorlandJarV5(java.io.File)",
            "org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient:void executeForkV5()",
            "org.apache.tools.ant.taskdefs.Chmod:void execute()",
            "org.apache.tools.ant.taskdefs.VerifyJar:void verifyOneJar(java.io.File)",
            "org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase:java.lang.String runS(org.apache.tools.ant.types.Commandline,boolean)",
            "org.apache.tools.ant.taskdefs.SignJar:void signOneJar(java.io.File,java.io.File)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Rmic:void moveGeneratedFile(java.io.File,java.io.File,java.lang.String,org.apache.tools.ant.taskdefs.rmic.RmicAdapter)",
            "org.apache.tools.ant.Project:void copyFile(java.io.File,java.io.File,boolean)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.Project:void copyFile(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File,org.apache.tools.ant.types.FilterSetCollection,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.Project:void copyFile(java.io.File,java.io.File,boolean,boolean)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.Project:void copyFile(java.lang.String,java.lang.String,boolean,boolean,boolean)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String,org.apache.tools.ant.types.FilterSetCollection,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.Project:void copyFile(java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.tools.ant.Project:void copyFile(java.io.File,java.io.File,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.Project:void copyFile(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tools.ant.util.FileUtils:void copyFile(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.util.FileUtils:void rename(java.io.File,java.io.File)",
            "org.apache.tools.ant.taskdefs.Rmic:void moveGeneratedFile(java.io.File,java.io.File,java.lang.String,org.apache.tools.ant.taskdefs.rmic.RmicAdapter)",
            "org.apache.tools.ant.Project:void copyFile(java.io.File,java.io.File)",
            "org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool:void buildWeblogicJar(java.io.File,java.io.File,java.lang.String)"
        ]
    },
    "org.apache.tools.ant.taskdefs.GenerateKey:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient:void executeForkV4()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient:void executeFork()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool:void verifyBorlandJarV5(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool:void verifyBorlandJar(java.io.File)"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient:void executeForkV5()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient:void executeFork()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Chmod:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.VerifyJar:void verifyOneJar(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.VerifyJar:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase:java.lang.String runS(org.apache.tools.ant.types.Commandline,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase:java.lang.String runS(org.apache.tools.ant.types.Commandline)",
            "org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout:boolean lsCheckout()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Rmic:void moveGeneratedFile(java.io.File,java.io.File,java.lang.String,org.apache.tools.ant.taskdefs.rmic.RmicAdapter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Rmic:void lambda$execute$0(java.io.File,org.apache.tools.ant.taskdefs.rmic.RmicAdapter,java.lang.String)"
        ]
    },
    "org.apache.tools.ant.Project:void copyFile(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.Project:void copyFile(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.Project:void copyFile(java.io.File,java.io.File,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copyfile:void execute()"
        ]
    },
    "org.apache.tools.ant.Project:void copyFile(java.lang.String,java.lang.String,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.Project:void copyFile(java.lang.String,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Copydir:void execute()"
        ]
    },
    "org.apache.tools.ant.Project:void copyFile(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.util.FileUtils:void rename(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Replace:void processFile(java.io.File)",
            "org.apache.tools.ant.taskdefs.FixCRLF:void processFile(java.lang.String)",
            "org.apache.tools.ant.taskdefs.Rename:void execute()",
            "org.apache.tools.ant.taskdefs.Zip:void executeMain()",
            "org.apache.tools.ant.taskdefs.optional.ReplaceRegExp:void doReplace(java.io.File,int)",
            "org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool:boolean isRebuildRequired(java.io.File,java.io.File)",
            "org.apache.tools.ant.taskdefs.Zip:java.io.File renameFile()",
            "org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool:boolean isRebuildRequired(java.io.File,java.io.File)",
            "org.apache.tools.ant.util.SymbolicLinkUtils:void deleteSymbolicLink(java.io.File,org.apache.tools.ant.Task)"
        ]
    },
    "org.apache.tools.ant.Project:void copyFile(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool:void buildWeblogicJar(java.io.File,java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool:void writeJar(java.lang.String,java.io.File,java.util.Hashtable,java.lang.String)"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient:void executeFork()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool:void verifyBorlandJar(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool:void writeJar(java.lang.String,java.io.File,java.util.Hashtable,java.lang.String)"
        ]
    },
    "org.apache.tools.ant.taskdefs.VerifyJar:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase:java.lang.String runS(org.apache.tools.ant.types.Commandline)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout:boolean lsCheckout()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Rmic:void lambda$execute$0(java.io.File,org.apache.tools.ant.taskdefs.rmic.RmicAdapter,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Copyfile:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.Replace:void processFile(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Replace:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Rename:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.ReplaceRegExp:void doReplace(java.io.File,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.ReplaceRegExp:void execute()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool:boolean isRebuildRequired(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool:void writeJar(java.lang.String,java.io.File,java.util.Hashtable,java.lang.String)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Zip:java.io.File renameFile()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Zip:void executeMain()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool:boolean isRebuildRequired(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool:void writeJar(java.lang.String,java.io.File,java.util.Hashtable,java.lang.String)"
        ]
    },
    "org.apache.tools.ant.util.SymbolicLinkUtils:void deleteSymbolicLink(java.io.File,org.apache.tools.ant.Task)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool:void writeJar(java.lang.String,java.io.File,java.util.Hashtable,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.dispatch.DispatchUtils:void execute(java.lang.Object)"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool:void writeJar(java.lang.String,java.io.File,java.util.Hashtable,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.ReplaceRegExp:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool:void writeJar(java.lang.String,java.io.File,java.util.Hashtable,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.dispatch.DispatchUtils:void execute(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.optional.unix.Symlink:void execute()",
            "org.apache.tools.ant.TaskAdapter:void execute()",
            "org.apache.tools.ant.Task:void perform()"
        ]
    },
    "org.apache.tools.ant.taskdefs.optional.unix.Symlink:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.dispatch.DispatchUtils:void execute(java.lang.Object)"
        ]
    },
    "org.apache.tools.ant.TaskAdapter:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.dispatch.DispatchUtils:void execute(java.lang.Object)"
        ]
    },
    "org.apache.tools.ant.Task:void perform()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.taskdefs.Retry:void execute()",
            "org.apache.tools.ant.taskdefs.DependSet:void execute()",
            "org.apache.tools.ant.taskdefs.MacroInstance:void execute()",
            "org.apache.tools.ant.taskdefs.Parallel$TaskRunnable:void run()"
        ]
    },
    "org.apache.tools.ant.taskdefs.Retry:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "org.apache.tools.ant.taskdefs.MacroInstance:void execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": [
            "org.apache.tools.ant.dispatch.DispatchUtils:void execute(java.lang.Object)"
        ]
    },
    "org.apache.tools.ant.taskdefs.Parallel$TaskRunnable:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.tools.zip.ZipFile:void resolveLocalFileHeaderData(java.util.Map)",
            "org.apache.tools.zip.ZipFile:void readCentralDirectoryEntry(java.util.Map)",
            "org.apache.tools.tar.TarInputStream:java.util.Map parsePaxHeaders(java.io.InputStream)"
        ],
        "vulCaller": []
    }
}
{
    "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String getOriginatingContextPath(javax.servlet.http.HttpServletRequest)",
            "org.springframework.web.util.UrlPathHelper:java.lang.String getContextPath(javax.servlet.http.HttpServletRequest)",
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeAndCleanUriString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ]
    },
    "org.springframework.web.util.UrlPathHelper:java.lang.String getOriginatingContextPath(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.springframework.web.util.UrlPathHelper:java.lang.String getContextPath(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String getPathWithinApplication(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.springframework.web.util.UrlPathHelper:java.lang.String decodeAndCleanUriString(javax.servlet.http.HttpServletRequest,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String getRequestUri(javax.servlet.http.HttpServletRequest)",
            "org.springframework.web.util.UrlPathHelper:java.lang.String getOriginatingRequestUri(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.springframework.web.accept.PathExtensionContentNegotiationStrategy:org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.web.accept.PathExtensionContentNegotiationStrategy:org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy:org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest,java.lang.String)"
        ]
    },
    "org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy:org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.accept.PathExtensionContentNegotiationStrategy:org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.springframework.web.accept.ContentNegotiationManagerFactoryBean:void afterPropertiesSet()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.web.accept.ContentNegotiationManagerFactoryBean:void afterPropertiesSet()"
        ],
        "vulCaller": []
    },
    "org.springframework.web.util.WebUtils:java.lang.String extractFullFilenameFromUrlPath(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.web.util.WebUtils:java.lang.String extractFullFilenameFromUrlPath(java.lang.String)",
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.accept.PathExtensionContentNegotiationStrategy:java.lang.String getMediaTypeKey(org.springframework.web.context.request.NativeWebRequest)",
            "org.springframework.web.util.WebUtils:java.lang.String extractFilenameFromUrlPath(java.lang.String)"
        ]
    },
    "org.springframework.web.accept.PathExtensionContentNegotiationStrategy:java.lang.String getMediaTypeKey(org.springframework.web.context.request.NativeWebRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.WebUtils:java.lang.String extractFullFilenameFromUrlPath(java.lang.String)",
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.springframework.web.util.WebUtils:java.lang.String extractFilenameFromUrlPath(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.WebUtils:java.lang.String extractFullFilenameFromUrlPath(java.lang.String)",
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter:void writePrefix(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter:void writePrefix(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)"
        ],
        "vulCaller": []
    },
    "org.springframework.web.util.UrlPathHelper:java.lang.String getPathWithinApplication(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String getPathWithinServletMapping(javax.servlet.http.HttpServletRequest)",
            "org.springframework.web.util.UrlPathHelper:java.lang.String getLookupPathForRequest(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.springframework.web.util.UrlPathHelper:java.lang.String getRequestUri(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.context.request.async.WebAsyncManager:void startAsyncProcessing(java.lang.Object[])",
            "org.springframework.web.util.UrlPathHelper:java.lang.String getPathWithinApplication(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.springframework.web.util.UrlPathHelper:java.lang.String getOriginatingRequestUri(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.springframework.web.util.UrlPathHelper:java.lang.String getPathWithinServletMapping(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String getLookupPathForRequest(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.springframework.web.util.UrlPathHelper:java.lang.String getLookupPathForRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.accept.PathExtensionContentNegotiationStrategy:java.lang.String getMediaTypeKey(org.springframework.web.context.request.NativeWebRequest)",
            "org.springframework.web.cors.UrlBasedCorsConfigurationSource:org.springframework.web.cors.CorsConfiguration getCorsConfiguration(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.springframework.web.context.request.async.WebAsyncManager:void startAsyncProcessing(java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.context.request.async.WebAsyncManager:void startDeferredResultProcessing(org.springframework.web.context.request.async.DeferredResult,java.lang.Object[])",
            "org.springframework.web.context.request.async.WebAsyncManager:void startCallableProcessing(org.springframework.web.context.request.async.WebAsyncTask,java.lang.Object[])"
        ]
    },
    "org.springframework.web.cors.UrlBasedCorsConfigurationSource:org.springframework.web.cors.CorsConfiguration getCorsConfiguration(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.springframework.web.context.request.async.WebAsyncManager:void startDeferredResultProcessing(org.springframework.web.context.request.async.DeferredResult,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.springframework.web.context.request.async.WebAsyncManager:void startCallableProcessing(org.springframework.web.context.request.async.WebAsyncTask,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": [
            "org.springframework.web.context.request.async.WebAsyncManager:void startCallableProcessing(java.util.concurrent.Callable,java.lang.Object[])"
        ]
    },
    "org.springframework.web.context.request.async.WebAsyncManager:void startCallableProcessing(java.util.concurrent.Callable,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.web.util.UrlPathHelper:java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ],
        "vulCaller": []
    }
}
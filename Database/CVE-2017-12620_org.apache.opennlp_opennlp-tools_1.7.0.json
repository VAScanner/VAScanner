{
    "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)": {
        "isVulRoot": true,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.util.featuregen.GeneratorFactory:java.util.List getDescriptorElements(java.io.InputStream)",
            "opennlp.tools.util.featuregen.GeneratorFactory:java.util.Map extractCustomArtifactSerializerMappings(java.io.InputStream)",
            "opennlp.tools.util.featuregen.GeneratorFactory:opennlp.tools.util.featuregen.AdaptiveFeatureGenerator create(java.io.InputStream,opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider)"
        ]
    },
    "opennlp.tools.util.featuregen.GeneratorFactory:java.util.List getDescriptorElements(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool:java.util.Map loadResources(java.io.File,java.io.File)"
        ]
    },
    "opennlp.tools.util.featuregen.GeneratorFactory:java.util.Map extractCustomArtifactSerializerMappings(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool:java.util.Map loadResources(java.io.File,java.io.File)"
        ]
    },
    "opennlp.tools.util.featuregen.GeneratorFactory:opennlp.tools.util.featuregen.AdaptiveFeatureGenerator create(java.io.InputStream,opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.namefind.TokenNameFinderFactory:opennlp.tools.util.featuregen.AdaptiveFeatureGenerator createFeatureGenerators()",
            "opennlp.tools.namefind.NameFinderME:opennlp.tools.util.featuregen.AdaptiveFeatureGenerator createFeatureGenerator(byte[],java.util.Map)"
        ]
    },
    "opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream:void <init>(opennlp.tools.util.ObjectStream)": {
        "isVulRoot": true,
        "srcRoot": [
            "opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream:void <init>(opennlp.tools.util.ObjectStream)"
        ],
        "vulCaller": [
            "opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamFactory:opennlp.tools.util.ObjectStream create(java.lang.String[])"
        ]
    },
    "opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamFactory:opennlp.tools.util.ObjectStream create(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream:void <init>(opennlp.tools.util.ObjectStream)"
        ],
        "vulCaller": []
    },
    "opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool:java.util.Map loadResources(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool:java.util.Map loadResources(java.lang.String,java.io.File)",
            "opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool:void run(java.lang.String,java.lang.String[])",
            "opennlp.tools.cmdline.namefind.TokenNameFinderCrossValidatorTool:void run(java.lang.String,java.lang.String[])"
        ]
    },
    "opennlp.tools.namefind.TokenNameFinderFactory:opennlp.tools.util.featuregen.AdaptiveFeatureGenerator createFeatureGenerators()": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.namefind.TokenNameFinderFactory:opennlp.tools.namefind.NameContextGenerator createContextGenerator()"
        ]
    },
    "opennlp.tools.namefind.NameFinderME:opennlp.tools.util.featuregen.AdaptiveFeatureGenerator createFeatureGenerator(byte[],java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool:java.util.Map loadResources(java.lang.String,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool:void run(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "opennlp.tools.cmdline.namefind.TokenNameFinderCrossValidatorTool:void run(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "opennlp.tools.namefind.TokenNameFinderFactory:opennlp.tools.namefind.NameContextGenerator createContextGenerator()": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.namefind.NameFinderME:void <init>(opennlp.tools.namefind.TokenNameFinderModel)",
            "opennlp.tools.namefind.NameFinderME:opennlp.tools.namefind.TokenNameFinderModel train(java.lang.String,java.lang.String,opennlp.tools.util.ObjectStream,opennlp.tools.util.TrainingParameters,opennlp.tools.namefind.TokenNameFinderFactory)"
        ]
    },
    "opennlp.tools.namefind.NameFinderME:void <init>(opennlp.tools.namefind.TokenNameFinderModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.cmdline.namefind.TokenNameFinderTool:void run(java.lang.String[])",
            "opennlp.tools.namefind.TokenNameFinderCrossValidator:void evaluate(opennlp.tools.util.ObjectStream,int)",
            "opennlp.tools.namefind.NameSampleSequenceStream:opennlp.tools.ml.model.Event[] updateContext(opennlp.tools.ml.model.Sequence,opennlp.tools.ml.model.AbstractModel)",
            "opennlp.tools.cmdline.namefind.TokenNameFinderEvaluatorTool:void run(java.lang.String,java.lang.String[])"
        ]
    },
    "opennlp.tools.namefind.NameFinderME:opennlp.tools.namefind.TokenNameFinderModel train(java.lang.String,java.lang.String,opennlp.tools.util.ObjectStream,opennlp.tools.util.TrainingParameters,opennlp.tools.namefind.TokenNameFinderFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.namefind.TokenNameFinderCrossValidator:void evaluate(opennlp.tools.util.ObjectStream,int)",
            "opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool:void run(java.lang.String,java.lang.String[])"
        ]
    },
    "opennlp.tools.cmdline.namefind.TokenNameFinderTool:void run(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "opennlp.tools.namefind.TokenNameFinderCrossValidator:void evaluate(opennlp.tools.util.ObjectStream,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": [
            "opennlp.tools.cmdline.namefind.TokenNameFinderCrossValidatorTool:void run(java.lang.String,java.lang.String[])"
        ]
    },
    "opennlp.tools.namefind.NameSampleSequenceStream:opennlp.tools.ml.model.Event[] updateContext(opennlp.tools.ml.model.Sequence,opennlp.tools.ml.model.AbstractModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": []
    },
    "opennlp.tools.cmdline.namefind.TokenNameFinderEvaluatorTool:void run(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "opennlp.tools.util.featuregen.GeneratorFactory:org.w3c.dom.Document createDOM(java.io.InputStream)"
        ],
        "vulCaller": []
    }
}
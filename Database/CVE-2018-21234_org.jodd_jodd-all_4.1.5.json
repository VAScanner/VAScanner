{
    "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)": {
        "isVulRoot": true,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)",
            "jodd.json.MapToBean:java.lang.Object generifyList(java.util.List,java.lang.Class)",
            "jodd.json.MapToBean:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object parseObjectContent(java.lang.Class,java.lang.Class,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object _parse(char[])"
        ]
    },
    "jodd.json.MapToBean:java.lang.Object generifyList(java.util.List,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ]
    },
    "jodd.json.MapToBean:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.MapToBean:java.lang.Object generifyList(java.util.List,java.lang.Class)",
            "jodd.json.MapToBean:java.util.Map generifyMap(java.util.Map,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parseObjectContent(java.lang.Class,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parseValue(java.lang.Class,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object _parse(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parse(char[],java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object parse(java.lang.String,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object parse(java.lang.String)",
            "jodd.json.JsonParser:java.lang.Object parse(char[])"
        ]
    },
    "jodd.json.MapToBean:java.util.Map generifyMap(java.util.Map,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parseValue(java.lang.Class,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parseArrayContent(java.lang.Class,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object parseObjectContent(java.lang.Class,java.lang.Class,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object _parse(char[])"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parse(char[],java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:java.lang.Object parse(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.RequestBodyScopeInject:void lambda$inject$0(java.lang.String,jodd.madvoc.injector.Target,jodd.madvoc.config.ScopeData$In)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:jodd.json.JsonObject parseAsJsonObject(java.lang.String)",
            "jodd.json.JsonParser:jodd.json.JsonArray parseAsJsonArray(java.lang.String)",
            "jodd.json.JsonParser:java.util.List parseAsList(java.lang.String,java.lang.Class)",
            "jodd.json.JsonParser:java.util.Map parseAsMap(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parse(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:java.lang.Object parseArrayContent(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parseValue(java.lang.Class,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.madvoc.injector.RequestBodyScopeInject:void lambda$inject$0(java.lang.String,jodd.madvoc.injector.Target,jodd.madvoc.config.ScopeData$In)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.Targets:void forEachTargetAndInScopes(jodd.madvoc.ScopeType,java.util.function.BiConsumer)"
        ]
    },
    "jodd.json.JsonParser:jodd.json.JsonObject parseAsJsonObject(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:jodd.json.JsonArray parseAsJsonArray(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:java.util.List parseAsList(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:java.util.Map parseAsMap(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.Targets:void forEachTargetAndInScopes(jodd.madvoc.ScopeType,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.ApplicationScopeInjector:void inject(jodd.madvoc.ActionRequest)",
            "jodd.madvoc.injector.RequestScopeInjector:void injectParameters(jodd.madvoc.injector.Targets,javax.servlet.http.HttpServletRequest)",
            "jodd.madvoc.injector.MadvocContextScopeInjector:void injectContext(jodd.madvoc.injector.Targets,jodd.petite.PetiteContainer)",
            "jodd.madvoc.injector.RequestBodyScopeInject:void inject(jodd.madvoc.ActionRequest)",
            "jodd.madvoc.injector.RequestScopeInjector:void injectUploadedFiles(jodd.madvoc.injector.Targets,javax.servlet.http.HttpServletRequest)",
            "jodd.madvoc.injector.RequestScopeInjector:void injectAttributes(jodd.madvoc.injector.Targets,javax.servlet.http.HttpServletRequest)",
            "jodd.madvoc.injector.ServletContextScopeInjector:void injectContext(jodd.madvoc.injector.Targets,javax.servlet.ServletContext)",
            "jodd.madvoc.injector.CookieScopeInjector:void inject(jodd.madvoc.ActionRequest)",
            "jodd.madvoc.injector.ApplicationScopeInjector:void injectContext(jodd.madvoc.injector.Targets,javax.servlet.ServletContext)",
            "jodd.madvoc.injector.MadvocContextScopeInjector:void inject(jodd.madvoc.ActionRequest)",
            "jodd.madvoc.injector.ServletContextScopeInjector:void inject(jodd.madvoc.ActionRequest)",
            "jodd.madvoc.injector.SessionScopeInjector:void inject(jodd.madvoc.ActionRequest)",
            "jodd.madvoc.injector.ActionPathMacroInjector:void injectMacros(java.lang.String,jodd.madvoc.macro.PathMacros,jodd.madvoc.injector.Targets)"
        ]
    },
    "jodd.madvoc.injector.ApplicationScopeInjector:void inject(jodd.madvoc.ActionRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.RequestScopeInjector:void injectParameters(jodd.madvoc.injector.Targets,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.RequestScopeInjector:void inject(jodd.madvoc.ActionRequest)"
        ]
    },
    "jodd.madvoc.injector.MadvocContextScopeInjector:void injectContext(jodd.madvoc.injector.Targets,jodd.petite.PetiteContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.MadvocContextScopeInjector:void injectContext(jodd.madvoc.injector.Targets,java.lang.Object)"
        ]
    },
    "jodd.madvoc.injector.RequestBodyScopeInject:void inject(jodd.madvoc.ActionRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.RequestScopeInjector:void injectUploadedFiles(jodd.madvoc.injector.Targets,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.RequestScopeInjector:void inject(jodd.madvoc.ActionRequest)"
        ]
    },
    "jodd.madvoc.injector.RequestScopeInjector:void injectAttributes(jodd.madvoc.injector.Targets,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.RequestScopeInjector:void inject(jodd.madvoc.ActionRequest)"
        ]
    },
    "jodd.madvoc.injector.ServletContextScopeInjector:void injectContext(jodd.madvoc.injector.Targets,javax.servlet.ServletContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.ServletContextScopeInjector:void injectContext(jodd.madvoc.injector.Targets,java.lang.Object)"
        ]
    },
    "jodd.madvoc.injector.CookieScopeInjector:void inject(jodd.madvoc.ActionRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.ApplicationScopeInjector:void injectContext(jodd.madvoc.injector.Targets,javax.servlet.ServletContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.ApplicationScopeInjector:void injectContext(jodd.madvoc.injector.Targets,java.lang.Object)"
        ]
    },
    "jodd.madvoc.injector.MadvocContextScopeInjector:void inject(jodd.madvoc.ActionRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.ServletContextScopeInjector:void inject(jodd.madvoc.ActionRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.SessionScopeInjector:void inject(jodd.madvoc.ActionRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.ActionPathMacroInjector:void injectMacros(java.lang.String,jodd.madvoc.macro.PathMacros,jodd.madvoc.injector.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.injector.ActionPathMacroInjector:void inject(jodd.madvoc.ActionRequest)"
        ]
    },
    "jodd.madvoc.injector.RequestScopeInjector:void inject(jodd.madvoc.ActionRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.MadvocContextScopeInjector:void injectContext(jodd.madvoc.injector.Targets,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.ServletContextScopeInjector:void injectContext(jodd.madvoc.injector.Targets,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.ApplicationScopeInjector:void injectContext(jodd.madvoc.injector.Targets,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.injector.ActionPathMacroInjector:void inject(jodd.madvoc.ActionRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    }
}
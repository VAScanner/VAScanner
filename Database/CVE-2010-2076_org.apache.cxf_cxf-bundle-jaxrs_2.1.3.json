{
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)"
        ],
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": [
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ],
        "vulCaller": []
    }
}
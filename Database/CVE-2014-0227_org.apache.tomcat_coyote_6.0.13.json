{
    "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalAprInputBuffer:void nextRequest()",
            "org.apache.coyote.http11.InternalNioInputBuffer:void nextRequest()",
            "org.apache.coyote.http11.InternalInputBuffer:void nextRequest()"
        ]
    },
    "org.apache.coyote.http11.InternalAprInputBuffer:void nextRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AprEndpoint$Handler$SocketState process(long)"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:void nextRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.NioEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer:void nextRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void process(java.net.Socket)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalNioInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)",
            "org.apache.coyote.http11.InternalInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)",
            "org.apache.coyote.http11.InternalAprInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalNioInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioInputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalAprInputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalInputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseCRLF()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioInputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalAprInputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalInputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AprEndpoint$Handler$SocketState process(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AprEndpoint$Handler$SocketState process(long)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.NioEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.NioEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void process(java.net.Socket)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:boolean process(java.net.Socket)"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11NioProcessor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11NioProcessor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()",
            "org.apache.coyote.http11.Http11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Processor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)"
        ]
    },
    "org.apache.coyote.http11.InternalAprInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11AprProcessor:void prepareRequest()",
            "org.apache.coyote.http11.Http11AprProcessor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)"
        ]
    },
    "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.InternalAprInputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void process(java.net.Socket)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseCRLF()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseEndChunk()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AprEndpoint$Handler$SocketState process(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$Worker:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.NioEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:boolean process(java.net.Socket)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.JIoEndpoint$Worker:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.NioEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:void prepareRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.NioEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void prepareRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void process(java.net.Socket)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:boolean process(java.net.Socket)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AprEndpoint$Handler$SocketState process(long)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:void prepareRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AprEndpoint$Handler$SocketState process(long)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.NioEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AprEndpoint$Handler$SocketState process(long)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseEndChunk()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$Worker:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Worker:void run()",
            "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.JIoEndpoint$Worker:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.InternalNioOutputBuffer:void flush()",
            "org.apache.coyote.Response:void reset()",
            "org.apache.coyote.Response:void sendHeaders()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:void flush()",
            "org.apache.coyote.Response:void acknowledge()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.InternalNioOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalOutputBuffer:void flush()",
            "org.apache.coyote.http11.InternalNioOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void finish()"
        ]
    },
    "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Worker:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.Response:void reset()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.Response:void sendHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.jk.common.JkInputStream:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.InternalAprOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.Response:void acknowledge()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:void endRequest()",
            "org.apache.coyote.http11.Http11AprProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalAprOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11NioProcessor:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void process(java.net.Socket)",
            "org.apache.coyote.http11.Http11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.Response:void finish()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.jk.server.JkCoyoteHandler:int invoke(org.apache.jk.core.Msg,org.apache.jk.core.MsgContext)"
        ]
    },
    "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Worker:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$PollerEvent:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.jk.common.JkInputStream:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.jk.server.JkCoyoteHandler:int invoke(org.apache.jk.core.Msg,org.apache.jk.core.MsgContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$PollerEvent:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.NioEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ],
        "vulCaller": []
    }
}
{
    "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.PrivateKey getPrivateKey(java.lang.String)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)"
        ],
        "vulCaller": [
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.PrivateKey getPrivateKey(java.lang.String)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)"
        ]
    },
    "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.PrivateKey getPrivateKey(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.PrivateKey getPrivateKey(java.lang.String)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)"
        ],
        "vulCaller": []
    },
    "org.postgresql.ssl.jdbc4.LazyKeyManager:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.PrivateKey getPrivateKey(java.lang.String)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)"
        ],
        "vulCaller": [
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])"
        ]
    },
    "org.postgresql.ssl.jdbc4.LazyKeyManager:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])": {
        "isVulRoot": true,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.security.PrivateKey getPrivateKey(java.lang.String)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)"
        ],
        "vulCaller": []
    },
    "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()"
        ],
        "vulCaller": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()"
        ]
    },
    "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()"
        ],
        "vulCaller": [
            "org.postgresql.ssl.MakeSSL:void convert(org.postgresql.core.PGStream,java.util.Properties,org.postgresql.core.Logger)"
        ]
    },
    "org.postgresql.core.PGStream:boolean hasMessagePending()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.core.v3.QueryExecutorImpl:org.postgresql.core.v3.CopyOperationImpl processCopyResults(org.postgresql.core.v3.CopyOperationImpl,boolean)",
            "org.postgresql.core.v3.QueryExecutorImpl:void processNotifies()",
            "org.postgresql.core.v2.QueryExecutorImpl:void processNotifies()"
        ]
    },
    "org.postgresql.core.v3.QueryExecutorImpl:org.postgresql.core.v3.CopyOperationImpl processCopyResults(org.postgresql.core.v3.CopyOperationImpl,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.core.v3.QueryExecutorImpl:org.postgresql.copy.CopyOperation startCopy(java.lang.String,boolean)",
            "org.postgresql.core.v3.QueryExecutorImpl:void cancelCopy(org.postgresql.core.v3.CopyOperationImpl)",
            "org.postgresql.core.v3.QueryExecutorImpl:long endCopy(org.postgresql.core.v3.CopyInImpl)",
            "org.postgresql.core.v3.QueryExecutorImpl:void readFromCopy(org.postgresql.core.v3.CopyOutImpl)",
            "org.postgresql.core.v3.QueryExecutorImpl:void flushCopy(org.postgresql.core.v3.CopyInImpl)",
            "org.postgresql.core.v3.QueryExecutorImpl:void writeToCopy(org.postgresql.core.v3.CopyInImpl,byte[],int,int)"
        ]
    },
    "org.postgresql.core.v3.QueryExecutorImpl:void processNotifies()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.jdbc.PgConnection:org.postgresql.PGNotification[] getNotifications()"
        ]
    },
    "org.postgresql.core.v2.QueryExecutorImpl:void processNotifies()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.jdbc.PgConnection:org.postgresql.PGNotification[] getNotifications()"
        ]
    },
    "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.ssl.MakeSSL:void convert(org.postgresql.core.PGStream,java.util.Properties,org.postgresql.core.Logger)"
        ]
    },
    "org.postgresql.ssl.MakeSSL:void convert(org.postgresql.core.PGStream,java.util.Properties,org.postgresql.core.Logger)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.core.v3.ConnectionFactoryImpl:org.postgresql.core.PGStream enableSSL(org.postgresql.core.PGStream,boolean,java.util.Properties,org.postgresql.core.Logger,int)",
            "org.postgresql.core.v2.ConnectionFactoryImpl:org.postgresql.core.PGStream enableSSL(org.postgresql.core.PGStream,boolean,java.util.Properties,org.postgresql.core.Logger,int)"
        ]
    },
    "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.ssl.MakeSSL:void convert(org.postgresql.core.PGStream,java.util.Properties,org.postgresql.core.Logger)"
        ]
    },
    "org.postgresql.core.v3.QueryExecutorImpl:org.postgresql.copy.CopyOperation startCopy(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.copy.CopyManager:org.postgresql.copy.CopyOut copyOut(java.lang.String)",
            "org.postgresql.copy.CopyManager:org.postgresql.copy.CopyIn copyIn(java.lang.String)"
        ]
    },
    "org.postgresql.core.v3.QueryExecutorImpl:void cancelCopy(org.postgresql.core.v3.CopyOperationImpl)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.core.v3.CopyOperationImpl:void cancelCopy()"
        ]
    },
    "org.postgresql.core.v3.QueryExecutorImpl:long endCopy(org.postgresql.core.v3.CopyInImpl)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.core.v3.CopyInImpl:long endCopy()"
        ]
    },
    "org.postgresql.core.v3.QueryExecutorImpl:void readFromCopy(org.postgresql.core.v3.CopyOutImpl)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.core.v3.CopyOutImpl:byte[] readFromCopy()"
        ]
    },
    "org.postgresql.core.v3.QueryExecutorImpl:void flushCopy(org.postgresql.core.v3.CopyInImpl)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": []
    },
    "org.postgresql.core.v3.QueryExecutorImpl:void writeToCopy(org.postgresql.core.v3.CopyInImpl,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.core.v3.CopyInImpl:void writeToCopy(byte[],int,int)"
        ]
    },
    "org.postgresql.jdbc.PgConnection:org.postgresql.PGNotification[] getNotifications()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": []
    },
    "org.postgresql.core.v3.ConnectionFactoryImpl:org.postgresql.core.PGStream enableSSL(org.postgresql.core.PGStream,boolean,java.util.Properties,org.postgresql.core.Logger,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.core.v3.ConnectionFactoryImpl:org.postgresql.core.ProtocolConnection openConnectionImpl(org.postgresql.util.HostSpec[],java.lang.String,java.lang.String,java.util.Properties,org.postgresql.core.Logger)"
        ]
    },
    "org.postgresql.core.v2.ConnectionFactoryImpl:org.postgresql.core.PGStream enableSSL(org.postgresql.core.PGStream,boolean,java.util.Properties,org.postgresql.core.Logger,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.core.v2.ConnectionFactoryImpl:org.postgresql.core.ProtocolConnection openConnectionImpl(org.postgresql.util.HostSpec[],java.lang.String,java.lang.String,java.util.Properties,org.postgresql.core.Logger)"
        ]
    },
    "org.postgresql.copy.CopyManager:org.postgresql.copy.CopyOut copyOut(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.copy.CopyManager:long copyOut(java.lang.String,java.io.Writer)",
            "org.postgresql.copy.CopyManager:long copyOut(java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.postgresql.copy.CopyManager:org.postgresql.copy.CopyIn copyIn(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.Reader,int)",
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.InputStream,int)"
        ]
    },
    "org.postgresql.core.v3.CopyOperationImpl:void cancelCopy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.copy.CopyManager:org.postgresql.copy.CopyOut copyOut(java.lang.String)",
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.Reader,int)",
            "org.postgresql.copy.CopyManager:long copyOut(java.lang.String,java.io.Writer)",
            "org.postgresql.copy.CopyManager:long copyOut(java.lang.String,java.io.OutputStream)",
            "org.postgresql.copy.CopyManager:org.postgresql.copy.CopyIn copyIn(java.lang.String)",
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.InputStream,int)"
        ]
    },
    "org.postgresql.core.v3.CopyInImpl:long endCopy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.Reader,int)",
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.InputStream,int)"
        ]
    },
    "org.postgresql.core.v3.CopyOutImpl:byte[] readFromCopy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.copy.CopyManager:long copyOut(java.lang.String,java.io.Writer)",
            "org.postgresql.copy.CopyManager:long copyOut(java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.postgresql.core.v3.CopyInImpl:void writeToCopy(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.Reader,int)",
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.InputStream,int)"
        ]
    },
    "org.postgresql.core.v3.ConnectionFactoryImpl:org.postgresql.core.ProtocolConnection openConnectionImpl(org.postgresql.util.HostSpec[],java.lang.String,java.lang.String,java.util.Properties,org.postgresql.core.Logger)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.core.ConnectionFactory:org.postgresql.core.ProtocolConnection openConnection(org.postgresql.util.HostSpec[],java.lang.String,java.lang.String,java.util.Properties,org.postgresql.core.Logger)"
        ]
    },
    "org.postgresql.core.v2.ConnectionFactoryImpl:org.postgresql.core.ProtocolConnection openConnectionImpl(org.postgresql.util.HostSpec[],java.lang.String,java.lang.String,java.util.Properties,org.postgresql.core.Logger)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.core.ConnectionFactory:org.postgresql.core.ProtocolConnection openConnection(org.postgresql.util.HostSpec[],java.lang.String,java.lang.String,java.util.Properties,org.postgresql.core.Logger)"
        ]
    },
    "org.postgresql.copy.CopyManager:long copyOut(java.lang.String,java.io.Writer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": []
    },
    "org.postgresql.copy.CopyManager:long copyOut(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": []
    },
    "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.Reader,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.Reader)"
        ]
    },
    "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.InputStream,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": [
            "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.InputStream)"
        ]
    },
    "org.postgresql.core.ConnectionFactory:org.postgresql.core.ProtocolConnection openConnection(org.postgresql.util.HostSpec[],java.lang.String,java.lang.String,java.util.Properties,org.postgresql.core.Logger)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.jdbc.PgConnection:void <init>(org.postgresql.util.HostSpec[],java.lang.String,java.lang.String,java.util.Properties,java.lang.String)"
        ]
    },
    "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.Reader)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": []
    },
    "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.core.PGStream:boolean hasMessagePending()"
        ],
        "vulCaller": []
    },
    "org.postgresql.jdbc.PgConnection:void <init>(org.postgresql.util.HostSpec[],java.lang.String,java.lang.String,java.util.Properties,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.Driver:java.sql.Connection makeConnection(java.lang.String,java.util.Properties)"
        ]
    },
    "org.postgresql.Driver:java.sql.Connection makeConnection(java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.Driver:java.sql.Connection connect(java.lang.String,java.util.Properties)",
            "org.postgresql.Driver:java.sql.Connection access$100(java.lang.String,java.util.Properties)"
        ]
    },
    "org.postgresql.Driver:java.sql.Connection connect(java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": []
    },
    "org.postgresql.Driver:java.sql.Connection access$100(java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": [
            "org.postgresql.Driver$ConnectThread:void run()"
        ]
    },
    "org.postgresql.Driver$ConnectThread:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.postgresql.ssl.jdbc4.LibPQFactory:void <init>(java.util.Properties)",
            "org.postgresql.ssl.jdbc4.LazyKeyManager:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:void throwKeyManagerException()",
            "org.postgresql.ssl.jdbc4.LibPQFactory:boolean verify(java.lang.String,javax.net.ssl.SSLSession)"
        ],
        "vulCaller": []
    }
}
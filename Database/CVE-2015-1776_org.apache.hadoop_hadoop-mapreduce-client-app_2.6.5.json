{
    "org.apache.hadoop.mapred.TaskAttemptListenerImpl:org.apache.hadoop.mapred.JvmTask getTask(org.apache.hadoop.mapred.JvmContext)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.hadoop.mapred.TaskAttemptListenerImpl:org.apache.hadoop.mapred.JvmTask getTask(org.apache.hadoop.mapred.JvmContext)"
        ],
        "vulCaller": []
    },
    "org.apache.hadoop.mapreduce.v2.app.MRAppMaster:void initJobCredentialsAndUGI(org.apache.hadoop.conf.Configuration)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.hadoop.mapreduce.v2.app.MRAppMaster:void initJobCredentialsAndUGI(org.apache.hadoop.conf.Configuration)"
        ],
        "vulCaller": [
            "org.apache.hadoop.mapreduce.v2.app.MRAppMaster:void serviceInit(org.apache.hadoop.conf.Configuration)"
        ]
    },
    "org.apache.hadoop.mapreduce.v2.app.MRAppMaster:void serviceInit(org.apache.hadoop.conf.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.hadoop.mapreduce.v2.app.MRAppMaster:void initJobCredentialsAndUGI(org.apache.hadoop.conf.Configuration)"
        ],
        "vulCaller": []
    },
    "org.apache.hadoop.mapreduce.v2.app.MRAppMaster$ContainerLauncherRouter:void serviceStart()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.hadoop.mapreduce.v2.app.MRAppMaster$ContainerLauncherRouter:void serviceStart()"
        ],
        "vulCaller": []
    },
    "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler:void runSubtask(org.apache.hadoop.mapred.Task,org.apache.hadoop.mapreduce.v2.api.records.TaskType,org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId,int,boolean,java.util.Map)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler:void runSubtask(org.apache.hadoop.mapred.Task,org.apache.hadoop.mapreduce.v2.api.records.TaskType,org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId,int,boolean,java.util.Map)"
        ],
        "vulCaller": [
            "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler:void runTask(org.apache.hadoop.mapreduce.v2.app.launcher.ContainerRemoteLaunchEvent,java.util.Map)"
        ]
    },
    "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler:void runTask(org.apache.hadoop.mapreduce.v2.app.launcher.ContainerRemoteLaunchEvent,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler:void runSubtask(org.apache.hadoop.mapred.Task,org.apache.hadoop.mapreduce.v2.api.records.TaskType,org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId,int,boolean,java.util.Map)"
        ],
        "vulCaller": [
            "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler:void access$200(org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler,org.apache.hadoop.mapreduce.v2.app.launcher.ContainerRemoteLaunchEvent,java.util.Map)"
        ]
    },
    "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler:void access$200(org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler,org.apache.hadoop.mapreduce.v2.app.launcher.ContainerRemoteLaunchEvent,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler:void runSubtask(org.apache.hadoop.mapred.Task,org.apache.hadoop.mapreduce.v2.api.records.TaskType,org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId,int,boolean,java.util.Map)"
        ],
        "vulCaller": [
            "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler$1:void run()"
        ]
    },
    "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler:void runSubtask(org.apache.hadoop.mapred.Task,org.apache.hadoop.mapreduce.v2.api.records.TaskType,org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId,int,boolean,java.util.Map)"
        ],
        "vulCaller": []
    }
}
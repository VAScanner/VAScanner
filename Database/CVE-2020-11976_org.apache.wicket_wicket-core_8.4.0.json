{
    "org.apache.wicket.MarkupContainer:int removals_size()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:int access$000(org.apache.wicket.MarkupContainer)"
        ]
    },
    "org.apache.wicket.MarkupContainer:int access$000(org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:org.apache.wicket.Component findLastExistingChildAlreadyReturned(org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:void refreshInternalIteratorIfNeeded()",
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:void <init>(org.apache.wicket.MarkupContainer)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild access$400(org.apache.wicket.MarkupContainer,int)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild access$400(org.apache.wicket.MarkupContainer,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:org.apache.wicket.Component findLastExistingChildAlreadyReturned(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer$1MarkupChildIterator:org.apache.wicket.Component findLastExistingChildAlreadyReturned(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:void refreshInternalIteratorIfNeeded()"
        ]
    },
    "org.apache.wicket.MarkupContainer$1MarkupChildIterator:void refreshInternalIteratorIfNeeded()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:org.apache.wicket.Component next()",
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:void remove()",
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:boolean hasNext()"
        ]
    },
    "org.apache.wicket.MarkupContainer$1MarkupChildIterator:void <init>(org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:java.util.Iterator iterator()"
        ]
    },
    "org.apache.wicket.MarkupContainer$1MarkupChildIterator:org.apache.wicket.Component next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:java.lang.Object next()"
        ]
    },
    "org.apache.wicket.MarkupContainer$1MarkupChildIterator:void remove()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()"
        ]
    },
    "org.apache.wicket.MarkupContainer$1MarkupChildIterator:boolean hasNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void detachChildren()",
            "org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor:org.apache.wicket.util.visit.Visit visit(org.apache.wicket.Component,org.apache.wicket.util.visit.Visit)",
            "org.apache.wicket.MarkupContainer:void onBeforeRenderChildren()",
            "org.apache.wicket.MarkupContainer$1ChildrenIterator:boolean hasNext()",
            "org.apache.wicket.markup.html.panel.AbstractMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment searchMarkupInTransparentResolvers(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.IMarkupFragment,org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:void removeChildren()",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void dequeue(org.apache.wicket.DequeueContext)",
            "org.apache.wicket.Page:boolean hasInvisibleTransparentChild(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:java.lang.String toString(boolean)",
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()",
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void cleanChildrenMarkup(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onRender()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer removeAll()",
            "org.apache.wicket.MarkupContainer:void internalMarkRendering(boolean)",
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component resolveChild(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onBeforeRender()"
        ]
    },
    "org.apache.wicket.MarkupContainer:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void detachChildren()",
            "org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor:org.apache.wicket.util.visit.Visit visit(org.apache.wicket.Component,org.apache.wicket.util.visit.Visit)",
            "org.apache.wicket.MarkupContainer:void onBeforeRenderChildren()",
            "org.apache.wicket.markup.repeater.RepeatingView:java.util.Iterator renderIterator()",
            "org.apache.wicket.markup.repeater.RefreshingView:java.util.Iterator getItems()",
            "org.apache.wicket.markup.html.panel.AbstractMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment searchMarkupInTransparentResolvers(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.IMarkupFragment,org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:void removeChildren()",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void dequeue(org.apache.wicket.DequeueContext)",
            "org.apache.wicket.Page:boolean hasInvisibleTransparentChild(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:java.lang.String toString(boolean)",
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()",
            "org.apache.wicket.MarkupContainer:java.util.stream.Stream streamChildren()",
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void cleanChildrenMarkup(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.markup.repeater.data.GridView:java.util.Iterator getItems()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer removeAll()",
            "org.apache.wicket.MarkupContainer:void internalMarkRendering(boolean)",
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component resolveChild(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onBeforeRender()"
        ]
    },
    "org.apache.wicket.MarkupContainer$1MarkupChildIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void detachChildren()",
            "org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor:org.apache.wicket.util.visit.Visit visit(org.apache.wicket.Component,org.apache.wicket.util.visit.Visit)",
            "org.apache.wicket.MarkupContainer:void onBeforeRenderChildren()",
            "org.apache.wicket.markup.html.panel.AbstractMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment searchMarkupInTransparentResolvers(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.IMarkupFragment,org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:void removeChildren()",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void dequeue(org.apache.wicket.DequeueContext)",
            "org.apache.wicket.Page:boolean hasInvisibleTransparentChild(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:java.lang.String toString(boolean)",
            "org.apache.wicket.MarkupContainer$1ChildrenIterator:java.lang.Object next()",
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()",
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void cleanChildrenMarkup(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onRender()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer removeAll()",
            "org.apache.wicket.MarkupContainer:void internalMarkRendering(boolean)",
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component resolveChild(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onBeforeRender()"
        ]
    },
    "org.apache.wicket.markup.html.list.ListView:void onPopulate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onBeforeRender()"
        ]
    },
    "org.apache.wicket.MarkupContainer:void detachChildren()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void detach()"
        ]
    },
    "org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor:org.apache.wicket.util.visit.Visit visit(org.apache.wicket.Component,org.apache.wicket.util.visit.Visit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor:org.apache.wicket.util.visit.Visit visit(org.apache.wicket.Component,org.apache.wicket.util.visit.Visit)",
            "org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor:org.apache.wicket.util.visit.Visit visit(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void onBeforeRenderChildren()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void onBeforeRender()"
        ]
    },
    "org.apache.wicket.MarkupContainer$1ChildrenIterator:boolean hasNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.panel.AbstractMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment searchMarkupInTransparentResolvers(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.IMarkupFragment,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.panel.AbstractMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment searchMarkupInTransparentResolvers(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.IMarkupFragment,org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void removeChildren()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalOnRemove()"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractRepeater:void dequeue(org.apache.wicket.DequeueContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void dequeueChildrenContainer(org.apache.wicket.DequeueContext,org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.MarkupContainer:void dequeuePreamble(org.apache.wicket.DequeueContext)"
        ]
    },
    "org.apache.wicket.Page:boolean hasInvisibleTransparentChild(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Page:boolean hasInvisibleTransparentChild(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.Page:void checkRendering(org.apache.wicket.MarkupContainer)"
        ]
    },
    "org.apache.wicket.MarkupContainer:java.lang.String toString(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Localizer:java.lang.String getStringIgnoreSettings(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.util.Locale,java.lang.String,java.lang.String)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer add(org.apache.wicket.Component[])",
            "org.apache.wicket.markup.html.form.AutoLabelResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)",
            "org.apache.wicket.core.request.handler.ListenerInvocationNotAllowedException:java.lang.String detail(org.apache.wicket.Component,org.apache.wicket.behavior.Behavior)",
            "org.apache.wicket.Component:org.apache.wicket.Page getPage()",
            "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:org.apache.wicket.markup.html.form.Form getForm()",
            "org.apache.wicket.Component:java.lang.Object getDefaultModelObject()",
            "org.apache.wicket.MarkupContainer:java.lang.String toString()",
            "org.apache.wicket.Component:void detach()"
        ]
    },
    "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void cleanChildrenMarkup(org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractRepeater:void onRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRender()"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer removeAll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border removeAll()",
            "org.apache.wicket.markup.html.list.ListView$3:void onClick()",
            "org.apache.wicket.markup.html.list.ListView$2:void onClick()",
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void setStartIndex()",
            "org.apache.wicket.markup.html.list.ListView$1:void onClick()",
            "org.apache.wicket.markup.repeater.RefreshingView:void onPopulate()",
            "org.apache.wicket.markup.html.list.Loop:void onPopulate()",
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()"
        ]
    },
    "org.apache.wicket.MarkupContainer:void internalMarkRendering(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void markRendering(boolean)"
        ]
    },
    "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component resolveChild(org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component resolveChild(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component getChild()"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractRepeater:void onBeforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractPageableView:void onBeforeRender()",
            "org.apache.wicket.Component:void beforeRender()"
        ]
    },
    "org.apache.wicket.markup.repeater.RepeatingView:java.util.Iterator renderIterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onRender()"
        ]
    },
    "org.apache.wicket.markup.repeater.RefreshingView:java.util.Iterator getItems()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.RefreshingView:void onPopulate()"
        ]
    },
    "org.apache.wicket.MarkupContainer:java.util.stream.Stream streamChildren()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.repeater.data.GridView:java.util.Iterator getItems()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.RefreshingView:void onPopulate()"
        ]
    },
    "org.apache.wicket.MarkupContainer$1ChildrenIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:void detach()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.FormTester:void <init>(java.lang.String,org.apache.wicket.markup.html.form.Form,org.apache.wicket.util.tester.BaseWicketTester,boolean)",
            "org.apache.wicket.core.request.handler.ComponentRenderingRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.core.request.handler.PageProvider$Provision:void detach()",
            "org.apache.wicket.util.tester.BaseWicketTester:void cleanupFeedbackMessages(org.apache.wicket.feedback.IFeedbackMessageFilter)",
            "org.apache.wicket.MarkupContainer:void removedComponent(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor:org.apache.wicket.util.visit.Visit visit(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy:void renderChildHeaders(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.Component:void onBeforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.validation.FormComponentFeedbackBorder:void onBeforeRender()",
            "org.apache.wicket.markup.html.form.AbstractTextComponent:void onBeforeRender()",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onBeforeRender()",
            "org.apache.wicket.Component:void beforeRender()",
            "org.apache.wicket.markup.html.form.Form:void onBeforeRender()",
            "org.apache.wicket.markup.html.form.CheckGroupSelector:void onBeforeRender()",
            "org.apache.wicket.Page:void onBeforeRender()",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void onBeforeRender()"
        ]
    },
    "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.Fragment:org.apache.wicket.DequeueContext newDequeueContext()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.Fragment:org.apache.wicket.DequeueContext newDequeueContext()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.Component:void internalOnRemove()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void removedComponent(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void dequeueChildrenContainer(org.apache.wicket.DequeueContext,org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void dequeueChild(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag,org.apache.wicket.DequeueContext)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void dequeuePreamble(org.apache.wicket.DequeueContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void dequeue()"
        ]
    },
    "org.apache.wicket.Page:void checkRendering(org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Page:void endComponentRender(org.apache.wicket.Component)",
            "org.apache.wicket.Page:void onAfterRender()"
        ]
    },
    "org.apache.wicket.Localizer:java.lang.String getStringIgnoreSettings(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.util.Locale,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.util.Locale,java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.Localizer:java.lang.String getStringIgnoreSettings(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.lang.String)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer add(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:void addDequeuedComponent(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.link.ClientSideImageMap:org.apache.wicket.markup.html.link.ClientSideImageMap addPolygonArea(org.apache.wicket.markup.html.link.AbstractLink,int[])",
            "org.apache.wicket.markup.html.panel.FeedbackPanel:void <init>(java.lang.String,org.apache.wicket.feedback.IFeedbackMessageFilter)",
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderComponent(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border add(org.apache.wicket.Component[])",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String,org.apache.wicket.model.IModel,int,boolean)",
            "org.apache.wicket.markup.html.debug.PageView:void <init>(java.lang.String,org.apache.wicket.Page)",
            "org.apache.wicket.markup.html.WebPage:void validateHeaders()",
            "org.apache.wicket.markup.html.pages.BrowserInfoPage:void initComps()",
            "org.apache.wicket.core.util.string.ComponentRenderer$RenderPage:void <init>(org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.DummyPanelPage:void onInitialize()",
            "org.apache.wicket.markup.html.link.ClientSideImageMap:org.apache.wicket.markup.html.link.ClientSideImageMap addShapeArea(org.apache.wicket.markup.html.link.AbstractLink,java.awt.Shape)",
            "org.apache.wicket.markup.html.link.ClientSideImageMap:void <init>(java.lang.String,org.apache.wicket.markup.html.image.Image)",
            "org.apache.wicket.markup.html.pages.BrowserInfoForm:void <init>(java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.pages.AccessDeniedPage:void <init>()",
            "org.apache.wicket.markup.html.pages.InternalErrorPage:void <init>()",
            "org.apache.wicket.markup.html.link.ClientSideImageMap:org.apache.wicket.markup.html.link.ClientSideImageMap addCircleArea(org.apache.wicket.markup.html.link.AbstractLink,int,int,int)",
            "org.apache.wicket.markup.html.list.Loop:void onPopulate()",
            "org.apache.wicket.markup.repeater.RefreshingView:void addItems(java.util.Iterator)",
            "org.apache.wicket.MarkupContainer:void addDequeuedComponent(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void populateItem(org.apache.wicket.markup.html.list.LoopItem)",
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border addToBorder(org.apache.wicket.Component[])",
            "org.apache.wicket.markup.resolver.HtmlHeaderResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigator:void onInitialize()",
            "org.apache.wicket.markup.html.link.ClientSideImageMap:org.apache.wicket.markup.html.link.ClientSideImageMap addRectangleArea(org.apache.wicket.markup.html.link.AbstractLink,int,int,int,int)",
            "org.apache.wicket.markup.html.pages.PageExpiredErrorPage:void <init>()",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component startComponentInPage(org.apache.wicket.Component,org.apache.wicket.markup.IMarkupFragment)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer addOrReplace(org.apache.wicket.Component[])",
            "org.apache.wicket.markup.html.pages.ExceptionErrorPage:void <init>(java.lang.Throwable,org.apache.wicket.Page)",
            "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView:void populateItem(org.apache.wicket.markup.html.list.ListItem)",
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()",
            "org.apache.wicket.MarkupContainer:boolean autoAdd(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream)",
            "org.apache.wicket.markup.repeater.data.GridView:void addItems(java.util.Iterator)",
            "org.apache.wicket.markup.html.pages.RedirectPage:void <init>(java.lang.CharSequence,int)",
            "org.apache.wicket.util.tester.DummyHomePage:void <init>()",
            "org.apache.wicket.markup.html.debug.PageView$3:void populateItem(org.apache.wicket.markup.html.list.ListItem)"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.renderStrategy.ParentFirstHeaderRenderStrategy$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void renderHeadForInnerSiblings(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)",
            "org.apache.wicket.markup.renderStrategy.AbstractHeaderRenderStrategy:void renderRootComponent(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState,org.apache.wicket.Component)",
            "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.core.request.handler.ListenerInvocationNotAllowedException:java.lang.String detail(org.apache.wicket.Component,org.apache.wicket.behavior.Behavior)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerInvocationNotAllowedException:void <init>(org.apache.wicket.Component,org.apache.wicket.behavior.Behavior,java.lang.String)"
        ]
    },
    "org.apache.wicket.Component:org.apache.wicket.Page getPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void renderPart()",
            "org.apache.wicket.core.request.handler.ComponentRenderingRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.behavior.AbstractAjaxBehavior:java.lang.CharSequence getCallbackUrl()",
            "org.apache.wicket.markup.html.WebPage:void validateHeaders()",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeListener(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.form.StatelessForm:org.apache.wicket.markup.html.form.Form$MethodMismatchResponse onMethodMismatch()",
            "org.apache.wicket.markup.html.MarkupUtil:boolean isMarkupHtml5Compliant(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:void onRequest()",
            "org.apache.wicket.markup.html.internal.HtmlHeaderContainer:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.validation.FormComponentFeedbackIndicator:void onConfigure()",
            "org.apache.wicket.markup.html.link.StatelessLink:java.lang.CharSequence getURL()",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void internalInvoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.Component,java.lang.Object)",
            "org.apache.wicket.markup.html.link.Link:boolean isEnabled()",
            "org.apache.wicket.Component:org.apache.wicket.request.IRequestHandler createRequestHandler(org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.Integer)",
            "org.apache.wicket.ComponentEventSender:void breadth(org.apache.wicket.ComponentEvent)",
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigationIncrementLink:void onClick()",
            "org.apache.wicket.RequestListenerInterface:void internalInvoke(org.apache.wicket.Component,java.lang.Object)",
            "org.apache.wicket.markup.html.form.StatelessForm:java.lang.CharSequence getActionUrl()",
            "org.apache.wicket.markup.resolver.AutoLinkResolver$AnchorResolverDelegate:org.apache.wicket.Component newAutoComponent(java.lang.String,org.apache.wicket.markup.resolver.AutoLinkResolver$PathInfo)",
            "org.apache.wicket.markup.html.form.Radio:java.lang.String getValue()",
            "org.apache.wicket.feedback.FencedFeedbackPanel$2:java.util.List collectMessages(org.apache.wicket.Component,org.apache.wicket.feedback.IFeedbackMessageFilter)",
            "org.apache.wicket.Component:java.lang.String toString(boolean)",
            "org.apache.wicket.markup.html.form.StatelessForm:void process(org.apache.wicket.markup.html.form.IFormSubmitter)",
            "org.apache.wicket.ComponentEventSender:void depth(org.apache.wicket.ComponentEvent)",
            "org.apache.wicket.markup.resolver.HtmlHeaderResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.BaseWicketTester:void invokeListener(org.apache.wicket.Component,org.apache.wicket.behavior.Behavior)",
            "org.apache.wicket.markup.html.WebMarkupContainer:org.apache.wicket.markup.html.WebPage getWebPage()",
            "org.apache.wicket.markup.html.form.Form:org.apache.wicket.markup.html.form.IFormSubmitter findSubmittingButton()",
            "org.apache.wicket.behavior.InvalidBehaviorIdException:void <init>(org.apache.wicket.Component,int)",
            "org.apache.wicket.markup.html.form.Check:java.lang.String getValue()",
            "org.apache.wicket.ajax.AjaxNewWindowNotifyingBehavior:void onNewWindow(org.apache.wicket.ajax.AjaxRequestTarget)",
            "org.apache.wicket.markup.html.form.validation.FormComponentFeedbackBorder:void onBeforeRender()",
            "org.apache.wicket.feedback.FeedbackMessagesModel:java.util.List collectMessages(org.apache.wicket.Component,org.apache.wicket.feedback.IFeedbackMessageFilter)",
            "org.apache.wicket.util.tester.BaseWicketTester:void invokeListener(org.apache.wicket.Component)",
            "org.apache.wicket.Component:org.apache.wicket.request.component.IRequestablePage getPage()",
            "org.apache.wicket.markup.html.WebComponent:org.apache.wicket.markup.html.WebPage getWebPage()",
            "org.apache.wicket.markup.html.internal.HtmlHeaderContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form:boolean handleMultiPart()"
        ]
    },
    "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:org.apache.wicket.markup.html.form.Form getForm()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter:org.apache.wicket.markup.html.form.Form getForm()",
            "org.apache.wicket.util.tester.BaseWicketTester:void submitAjaxFormSubmitBehavior(org.apache.wicket.Component,org.apache.wicket.ajax.form.AjaxFormSubmitBehavior)",
            "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeBehavior(org.apache.wicket.behavior.AbstractAjaxBehavior)",
            "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:void onEvent(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.Component:java.lang.Object getDefaultModelObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:java.lang.String getDefaultModelObjectAsString()",
            "org.apache.wicket.markup.html.list.ListView:java.util.List getModelObject()",
            "org.apache.wicket.markup.html.link.ExternalLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.list.Loop:int getIterations()",
            "org.apache.wicket.markup.html.form.Check:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.WicketTester:void assertModelValue(java.lang.String,java.lang.Object)",
            "org.apache.wicket.markup.html.image.resource.LocalizedImageResource:void setSrcAttribute(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer$1:java.lang.String getValue(java.lang.String)",
            "org.apache.wicket.markup.html.list.PageableListView:int getViewSize()",
            "org.apache.wicket.markup.html.form.RadioGroup$1:void component(org.apache.wicket.markup.html.form.Radio,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.Radio:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.list.ListView:int getViewSize()",
            "org.apache.wicket.IGenericComponent:java.lang.Object getModelObject()",
            "org.apache.wicket.Component$3:boolean compare(org.apache.wicket.Component,java.lang.Object)",
            "org.apache.wicket.markup.html.list.ListView:java.util.List getList()"
        ]
    },
    "org.apache.wicket.MarkupContainer:java.lang.String toString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.XsltTransformer:java.lang.CharSequence transform(org.apache.wicket.Component,java.lang.CharSequence)",
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)",
            "org.apache.wicket.Component:void rendered()",
            "org.apache.wicket.markup.html.form.AbstractChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.AttributeModifier:java.lang.String toStringOrNull(java.lang.Object)",
            "org.apache.wicket.markup.html.panel.AbstractMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.MarkupStream getAssociatedMarkupStream(boolean)",
            "org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void internalRenderComponent()",
            "org.apache.wicket.markup.html.form.RadioChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.Component:java.lang.String exceptionMessage(java.lang.String)",
            "org.apache.wicket.Component:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isComponentOnAjaxResponse(org.apache.wicket.Component)",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onRender()",
            "org.apache.wicket.Component:void internalRender()",
            "org.apache.wicket.markup.html.form.ChoiceRenderer:java.lang.String getIdValue(java.lang.Object,int)",
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.MarkupContainer:void throwException(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.Component:void internalRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void render()"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border removeAll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer removeAll()"
        ]
    },
    "org.apache.wicket.markup.html.list.ListView$3:void onClick()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.ListView$2:void onClick()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void setStartIndex()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void onConfigure()"
        ]
    },
    "org.apache.wicket.markup.html.list.ListView$1:void onClick()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.repeater.RefreshingView:void onPopulate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onBeforeRender()"
        ]
    },
    "org.apache.wicket.markup.html.list.Loop:void onPopulate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onBeforeRender()"
        ]
    },
    "org.apache.wicket.Component:void markRendering(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void renderPart()",
            "org.apache.wicket.core.request.handler.PageAndComponentProvider:org.apache.wicket.request.component.IRequestableComponent getComponent()",
            "org.apache.wicket.Page:void renderPage()"
        ]
    },
    "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component getChild()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.internal.Enclosure:void onConfigure()",
            "org.apache.wicket.markup.html.internal.Enclosure:boolean isVisible()"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractPageableView:void onBeforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void beforeRender()"
        ]
    },
    "org.apache.wicket.Component:void beforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderComponent(org.apache.wicket.Component)",
            "org.apache.wicket.Component:void render()",
            "org.apache.wicket.core.request.handler.PageAndComponentProvider:org.apache.wicket.request.component.IRequestableComponent getComponent()",
            "org.apache.wicket.MarkupContainer:void addedComponent(org.apache.wicket.Component)",
            "org.apache.wicket.page.PartialPageUpdate:boolean prepareComponent(org.apache.wicket.Component)",
            "org.apache.wicket.core.request.handler.ComponentRenderingRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.Page:void renderPage()"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:void <init>(java.lang.String,org.apache.wicket.markup.html.form.Form,org.apache.wicket.util.tester.BaseWicketTester,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.FormTester newFormTester(java.lang.String,boolean)"
        ]
    },
    "org.apache.wicket.core.request.handler.ComponentRenderingRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.PageProvider$Provision:void detach()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.PageProvider:void detach()"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void cleanupFeedbackMessages(org.apache.wicket.feedback.IFeedbackMessageFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void cleanupFeedbackMessages()",
            "org.apache.wicket.util.tester.BaseWicketTester:void clearFeedbackMessages()"
        ]
    },
    "org.apache.wicket.MarkupContainer:void removedComponent(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer replace(org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer remove(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy:void renderChildHeaders(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy:void renderHeader(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.form.validation.FormComponentFeedbackBorder:void onBeforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void beforeRender()"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractTextComponent:void onBeforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void beforeRender()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:void onBeforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void beforeRender()"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckGroupSelector:void onBeforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Page:void onBeforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void beforeRender()"
        ]
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void onBeforeRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void beforeRender()"
        ]
    },
    "org.apache.wicket.markup.html.panel.Fragment:org.apache.wicket.DequeueContext newDequeueContext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.TagUtils:void copyAttributes(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.Fragment:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.MarkupContainer:void renderAssociatedMarkup(java.lang.String,java.lang.String)",
            "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void dequeueChild(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag,org.apache.wicket.DequeueContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void dequeue(org.apache.wicket.DequeueContext)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void dequeue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void onInitialize()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer queue(org.apache.wicket.Component[])",
            "org.apache.wicket.markup.html.border.Border:void onConfigure()",
            "org.apache.wicket.MarkupContainer:void dequeueChild(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag,org.apache.wicket.DequeueContext)"
        ]
    },
    "org.apache.wicket.Page:void endComponentRender(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void renderPart()"
        ]
    },
    "org.apache.wicket.Page:void onAfterRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void afterRender()",
            "org.apache.wicket.markup.html.WebPage:void onAfterRender()"
        ]
    },
    "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.util.Locale,java.lang.String,org.apache.wicket.model.IModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.StringResourceModel:java.lang.String getString(org.apache.wicket.Component)",
            "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.util.Locale,java.lang.String,java.lang.String)",
            "org.apache.wicket.model.ResourceModel$AssignmentWrapper:java.lang.String load()",
            "org.apache.wicket.model.ResourceModel:java.lang.String getObject()"
        ]
    },
    "org.apache.wicket.Localizer:java.lang.String getStringIgnoreSettings(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getNullKeyDisplayValue()",
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getNullValidDisplayValue()"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:void addDequeuedComponent(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void dequeue(org.apache.wicket.DequeueContext)"
        ]
    },
    "org.apache.wicket.markup.html.link.ClientSideImageMap:org.apache.wicket.markup.html.link.ClientSideImageMap addPolygonArea(org.apache.wicket.markup.html.link.AbstractLink,int[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel:void <init>(java.lang.String,org.apache.wicket.feedback.IFeedbackMessageFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FeedbackPanel:void <init>(java.lang.String)",
            "org.apache.wicket.feedback.FencedFeedbackPanel:void <init>(java.lang.String,org.apache.wicket.Component,org.apache.wicket.feedback.IFeedbackMessageFilter)",
            "org.apache.wicket.markup.html.panel.ComponentFeedbackPanel:void <init>(java.lang.String,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderComponent(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border add(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer add(org.apache.wicket.Component[])"
        ]
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String,org.apache.wicket.model.IModel,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String,org.apache.wicket.model.IModel,int)"
        ]
    },
    "org.apache.wicket.markup.html.debug.PageView:void <init>(java.lang.String,org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.ExceptionErrorPage$1:void onClick()"
        ]
    },
    "org.apache.wicket.markup.html.WebPage:void validateHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.WebPage:void onAfterRender()"
        ]
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage:void initComps()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.BrowserInfoPage:void <init>()"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer$RenderPage:void <init>(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer$RenderPage:void <init>(org.apache.wicket.Component,org.apache.wicket.core.util.string.ComponentRenderer$1)"
        ]
    },
    "org.apache.wicket.util.tester.DummyPanelPage:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void fireInitialize()"
        ]
    },
    "org.apache.wicket.markup.html.link.ClientSideImageMap:org.apache.wicket.markup.html.link.ClientSideImageMap addShapeArea(org.apache.wicket.markup.html.link.AbstractLink,java.awt.Shape)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.link.ClientSideImageMap:void <init>(java.lang.String,org.apache.wicket.markup.html.image.Image)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoForm:void <init>(java.lang.String,org.apache.wicket.model.IModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.BrowserInfoPage$3:void <init>(org.apache.wicket.markup.html.pages.BrowserInfoPage,java.lang.String,org.apache.wicket.model.IModel,org.apache.wicket.model.IModel)"
        ]
    },
    "org.apache.wicket.markup.html.pages.AccessDeniedPage:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.reflect.Constructor,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.markup.html.pages.InternalErrorPage:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.reflect.Constructor,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.markup.html.link.ClientSideImageMap:org.apache.wicket.markup.html.link.ClientSideImageMap addCircleArea(org.apache.wicket.markup.html.link.AbstractLink,int,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.repeater.RefreshingView:void addItems(java.util.Iterator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.RefreshingView:void onPopulate()"
        ]
    },
    "org.apache.wicket.MarkupContainer:void addDequeuedComponent(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void dequeue(org.apache.wicket.DequeueContext)"
        ]
    },
    "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void populateItem(org.apache.wicket.markup.html.list.LoopItem)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.Loop:void onPopulate()"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border addToBorder(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border add(org.apache.wicket.Component[])",
            "org.apache.wicket.markup.html.form.validation.FormComponentFeedbackBorder:void <init>(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.resolver.HtmlHeaderResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.navigation.paging.PagingNavigator:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void fireInitialize()"
        ]
    },
    "org.apache.wicket.markup.html.link.ClientSideImageMap:org.apache.wicket.markup.html.link.ClientSideImageMap addRectangleArea(org.apache.wicket.markup.html.link.AbstractLink,int,int,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.pages.PageExpiredErrorPage:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.reflect.Constructor,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component startComponentInPage(org.apache.wicket.Component,org.apache.wicket.markup.IMarkupFragment)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component startComponentInPage(org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component startComponentInPage(java.lang.Class,org.apache.wicket.markup.IMarkupFragment)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer addOrReplace(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.page.PartialPageUpdate:void writeHeaderContribution(org.apache.wicket.request.Response,org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border addOrReplace(org.apache.wicket.Component[])"
        ]
    },
    "org.apache.wicket.markup.html.pages.ExceptionErrorPage:void <init>(java.lang.Throwable,org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler mapUnexpectedExceptions(java.lang.Exception,org.apache.wicket.Application)"
        ]
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView:void populateItem(org.apache.wicket.markup.html.list.ListItem)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()"
        ]
    },
    "org.apache.wicket.MarkupContainer:boolean autoAdd(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:boolean renderNext(org.apache.wicket.markup.MarkupStream)"
        ]
    },
    "org.apache.wicket.markup.repeater.data.GridView:void addItems(java.util.Iterator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.RefreshingView:void onPopulate()"
        ]
    },
    "org.apache.wicket.markup.html.pages.RedirectPage:void <init>(java.lang.CharSequence,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.RedirectPage:void <init>(org.apache.wicket.Page,int)",
            "org.apache.wicket.markup.html.pages.RedirectPage:void <init>(java.lang.CharSequence)"
        ]
    },
    "org.apache.wicket.util.tester.DummyHomePage:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.reflect.Constructor,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.markup.html.debug.PageView$3:void populateItem(org.apache.wicket.markup.html.list.ListItem)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()"
        ]
    },
    "org.apache.wicket.markup.renderStrategy.ParentFirstHeaderRenderStrategy$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.renderStrategy.ParentFirstHeaderRenderStrategy$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void renderHeadForInnerSiblings(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.markup.renderStrategy.AbstractHeaderRenderStrategy:void renderRootComponent(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy:void renderHeader(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState,org.apache.wicket.Component)",
            "org.apache.wicket.markup.renderStrategy.AbstractHeaderRenderStrategy:void renderHeader(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor:org.apache.wicket.util.visit.Visit visit(org.apache.wicket.Component,org.apache.wicket.util.visit.Visit)",
            "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void renderHeadForInnerSiblings(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.core.request.handler.ListenerInvocationNotAllowedException:void <init>(org.apache.wicket.Component,org.apache.wicket.behavior.Behavior,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.request.component.IRequestableComponent,org.apache.wicket.behavior.Behavior)",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.request.component.IRequestableComponent)",
            "org.apache.wicket.RequestListenerInterface:void invoke(org.apache.wicket.request.component.IRequestableComponent,org.apache.wicket.behavior.Behavior)",
            "org.apache.wicket.RequestListenerInterface:void invoke(org.apache.wicket.request.component.IRequestableComponent)"
        ]
    },
    "org.apache.wicket.Component:void renderPart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderComponent(org.apache.wicket.Component)",
            "org.apache.wicket.core.request.handler.ComponentRenderingRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.page.XmlPartialPageUpdate:void writeComponent(org.apache.wicket.request.Response,java.lang.String,org.apache.wicket.Component,java.lang.String)"
        ]
    },
    "org.apache.wicket.behavior.AbstractAjaxBehavior:java.lang.CharSequence getCallbackUrl()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void executeBehavior(org.apache.wicket.behavior.AbstractAjaxBehavior)",
            "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence renderAjaxAttributes(org.apache.wicket.Component,org.apache.wicket.ajax.attributes.AjaxRequestAttributes)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void executeListener(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String,boolean)",
            "org.apache.wicket.util.tester.WicketTester:void executeListener(java.lang.Class,org.apache.wicket.Component,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.StatelessForm:org.apache.wicket.markup.html.form.Form$MethodMismatchResponse onMethodMismatch()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.markup.html.MarkupUtil:boolean isMarkupHtml5Compliant(org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:void onRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.internal.HtmlHeaderContainer:org.apache.wicket.markup.IMarkupFragment getMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void renderComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:org.apache.wicket.markup.ComponentTag getMarkupTag()",
            "org.apache.wicket.Component:void internalRender()",
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void renderHeadForInnerSiblings(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)",
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.Component:java.lang.String toString(boolean)",
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.TransparentWebMarkupContainer:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:org.apache.wicket.Component findChildComponent(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.resolver.ComponentResolvers:org.apache.wicket.Component resolveByComponentHierarchy(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.validation.FormComponentFeedbackIndicator:void onConfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.link.StatelessLink:java.lang.CharSequence getURL()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:void internalInvoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.Component,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.request.component.IRequestableComponent,org.apache.wicket.behavior.Behavior)",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.request.component.IRequestableComponent)"
        ]
    },
    "org.apache.wicket.markup.html.link.Link:boolean isEnabled()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:boolean isEnabledInHierarchy()"
        ]
    },
    "org.apache.wicket.Component:org.apache.wicket.request.IRequestHandler createRequestHandler(org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.Integer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:java.lang.CharSequence urlForListener(org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.Component:java.lang.CharSequence urlForListener(org.apache.wicket.behavior.Behavior,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.ComponentEventSender:void breadth(org.apache.wicket.ComponentEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ComponentEventSender:void send(org.apache.wicket.event.IEventSink,org.apache.wicket.event.Broadcast,java.lang.Object)"
        ]
    },
    "org.apache.wicket.markup.html.navigation.paging.PagingNavigationIncrementLink:void onClick()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.Link:void onRequest()"
        ]
    },
    "org.apache.wicket.RequestListenerInterface:void internalInvoke(org.apache.wicket.Component,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.RequestListenerInterface:void invoke(org.apache.wicket.request.component.IRequestableComponent,org.apache.wicket.behavior.Behavior)",
            "org.apache.wicket.RequestListenerInterface:void invoke(org.apache.wicket.request.component.IRequestableComponent)"
        ]
    },
    "org.apache.wicket.markup.html.form.StatelessForm:java.lang.CharSequence getActionUrl()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForSubmitter(org.apache.wicket.markup.html.form.IFormSubmittingComponent)"
        ]
    },
    "org.apache.wicket.markup.resolver.AutoLinkResolver$AnchorResolverDelegate:org.apache.wicket.Component newAutoComponent(java.lang.String,org.apache.wicket.markup.resolver.AutoLinkResolver$PathInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Radio:java.lang.String getValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Radio:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.RadioGroup$2:void component(org.apache.wicket.markup.html.form.Radio,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.RadioGroup$1:void component(org.apache.wicket.markup.html.form.Radio,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.feedback.FencedFeedbackPanel$2:java.util.List collectMessages(org.apache.wicket.Component,org.apache.wicket.feedback.IFeedbackMessageFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.feedback.FeedbackMessagesModel:java.util.List getObject()"
        ]
    },
    "org.apache.wicket.Component:java.lang.String toString(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Localizer:java.lang.String getStringIgnoreSettings(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.util.Locale,java.lang.String,java.lang.String)",
            "org.apache.wicket.Component:java.lang.String toString()",
            "org.apache.wicket.markup.html.form.AutoLabelResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Page$3:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.Component:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)",
            "org.apache.wicket.core.request.handler.ListenerInvocationNotAllowedException:java.lang.String detail(org.apache.wicket.Component,org.apache.wicket.behavior.Behavior)",
            "org.apache.wicket.Component:org.apache.wicket.Page getPage()",
            "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:org.apache.wicket.markup.html.form.Form getForm()",
            "org.apache.wicket.Component:java.lang.Object getDefaultModelObject()",
            "org.apache.wicket.Component:void detach()",
            "org.apache.wicket.MarkupContainer:java.lang.String toString(boolean)",
            "org.apache.wicket.resource.loader.ComponentStringResourceLoader:java.lang.String loadStringResource(org.apache.wicket.Component,java.lang.String,java.util.Locale,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.StatelessForm:void process(org.apache.wicket.markup.html.form.IFormSubmitter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.ComponentEventSender:void depth(org.apache.wicket.ComponentEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ComponentEventSender:void send(org.apache.wicket.event.IEventSink,org.apache.wicket.event.Broadcast,java.lang.Object)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void invokeListener(org.apache.wicket.Component,org.apache.wicket.behavior.Behavior)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester select(java.lang.String,int)"
        ]
    },
    "org.apache.wicket.markup.html.WebMarkupContainer:org.apache.wicket.markup.html.WebPage getWebPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form:org.apache.wicket.markup.html.form.IFormSubmitter findSubmittingButton()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.logger.ListenerLogData:org.apache.wicket.Component tryToGetFormSubmittingComponent(org.apache.wicket.core.request.handler.IPageAndComponentProvider)",
            "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.behavior.InvalidBehaviorIdException:void <init>(org.apache.wicket.Component,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Behaviors:org.apache.wicket.behavior.Behavior getBehaviorById(int)"
        ]
    },
    "org.apache.wicket.markup.html.form.Check:java.lang.String getValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.CheckGroup$1:void component(org.apache.wicket.markup.html.form.Check,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.CheckGroup$2:void component(org.apache.wicket.markup.html.form.Check,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.Check:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.ajax.AjaxNewWindowNotifyingBehavior:void onNewWindow(org.apache.wicket.ajax.AjaxRequestTarget)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxNewWindowNotifyingBehavior:void respond(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.feedback.FeedbackMessagesModel:java.util.List collectMessages(org.apache.wicket.Component,org.apache.wicket.feedback.IFeedbackMessageFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.feedback.FeedbackMessagesModel:java.util.List getObject()"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void invokeListener(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:org.apache.wicket.request.component.IRequestablePage getPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.markup.html.WebComponent:org.apache.wicket.markup.html.WebPage getWebPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.internal.HtmlHeaderContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:boolean handleMultiPart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter:org.apache.wicket.markup.html.form.Form getForm()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:org.apache.wicket.markup.html.form.Form findFormToProcess(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void submitAjaxFormSubmitBehavior(org.apache.wicket.Component,org.apache.wicket.ajax.form.AjaxFormSubmitBehavior)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String,boolean)"
        ]
    },
    "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)",
            "org.apache.wicket.ajax.form.AjaxFormValidatingBehavior$FormValidateVisitor$1:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)",
            "org.apache.wicket.ajax.markup.html.form.AjaxButton$1:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)",
            "org.apache.wicket.ajax.markup.html.form.AjaxFallbackButton$1:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void executeBehavior(org.apache.wicket.behavior.AbstractAjaxBehavior)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String,boolean)",
            "org.apache.wicket.util.tester.BaseWicketTester:void submitAjaxFormSubmitBehavior(org.apache.wicket.Component,org.apache.wicket.ajax.form.AjaxFormSubmitBehavior)",
            "org.apache.wicket.util.tester.WicketTester:void executeBehavior(java.lang.Class,org.apache.wicket.behavior.AbstractAjaxBehavior,java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:void internalExecuteAllTimerBehaviors(org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeAjaxEvent(org.apache.wicket.Component,java.lang.String)"
        ]
    },
    "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:void onEvent(org.apache.wicket.ajax.AjaxRequestTarget)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:java.lang.String getDefaultModelObjectAsString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result hasLabel(java.lang.String,java.lang.String)",
            "org.apache.wicket.util.tester.WicketTester:void assertLabel(java.lang.String,java.lang.String)",
            "org.apache.wicket.markup.html.basic.Label:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.WicketTesterHelper$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getModelValue()",
            "org.apache.wicket.markup.html.image.resource.LocalizedImageResource:void setSrcAttribute(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.basic.MultiLineLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.debug.PageView$4:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.SimpleFormComponentLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Button:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Button:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.list.ListView:java.util.List getModelObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FeedbackPanel:java.util.List getCurrentMessages()",
            "org.apache.wicket.markup.html.list.ListItemModel:java.lang.Object getObject()",
            "org.apache.wicket.markup.html.list.ListItemModel:void setObject(java.lang.Object)"
        ]
    },
    "org.apache.wicket.markup.html.link.ExternalLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.Loop:int getIterations()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void renderItem(org.apache.wicket.markup.html.list.LoopItem)",
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void setStartIndex()",
            "org.apache.wicket.markup.html.list.Loop:void onPopulate()"
        ]
    },
    "org.apache.wicket.markup.html.form.Check:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertModelValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.image.resource.LocalizedImageResource:void setSrcAttribute(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.ImageButton:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.Image:java.lang.String buildSrcAttribute(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer$1:java.lang.String getValue(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.PageableListView:int getViewSize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.RadioGroup$1:void component(org.apache.wicket.markup.html.form.Radio,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.RadioGroup$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.Radio:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.ListView:int getViewSize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.PageableListView:int getViewSize()",
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()"
        ]
    },
    "org.apache.wicket.IGenericComponent:java.lang.Object getModelObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.CheckGroup$1:void component(org.apache.wicket.markup.html.form.Check,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.FormComponent:void updateCollectionModel(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:void addRetainedDisabled(java.util.ArrayList)",
            "org.apache.wicket.markup.html.pages.BrowserInfoForm$1:void onSubmit()",
            "org.apache.wicket.markup.html.pages.BrowserInfoPage$3:void afterSubmit()",
            "org.apache.wicket.markup.html.pages.BrowserInfoPage$ContinueLink:void onClick()",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.lang.String getModelValue()",
            "org.apache.wicket.markup.html.form.CheckGroup:java.lang.String getModelValue()",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void onDetach()",
            "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView:void populateItem(org.apache.wicket.markup.html.list.ListItem)",
            "org.apache.wicket.markup.html.basic.EnumLabel:java.lang.String getStringValue()",
            "org.apache.wicket.markup.html.form.NumberTextField:java.lang.String getModelValue()",
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getModelValue()",
            "org.apache.wicket.markup.html.form.NumberTextField:java.lang.Class getNumberType()",
            "org.apache.wicket.markup.html.include.Include:java.lang.String importAsString()",
            "org.apache.wicket.markup.html.link.DownloadLink:void onClick()",
            "org.apache.wicket.markup.html.debug.PageView$3:void populateItem(org.apache.wicket.markup.html.list.ListItem)"
        ]
    },
    "org.apache.wicket.Component$3:boolean compare(org.apache.wicket.Component,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Radio:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:org.apache.wicket.Component setDefaultModelObject(java.lang.Object)",
            "org.apache.wicket.markup.html.form.RadioGroup$1:void component(org.apache.wicket.markup.html.form.Radio,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.list.ListView:java.util.List getList()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.ListView:int getViewSize()",
            "org.apache.wicket.markup.html.list.ListView$1:boolean isEnabled()",
            "org.apache.wicket.util.tester.WicketTester:void assertListView(java.lang.String,java.util.List)",
            "org.apache.wicket.markup.html.list.ListView$3:void onClick()",
            "org.apache.wicket.markup.html.list.ListView$2:void onClick()",
            "org.apache.wicket.markup.html.list.ListView$1:void onClick()",
            "org.apache.wicket.util.tester.BaseWicketTester:void assertListView(java.lang.String,java.util.List)",
            "org.apache.wicket.markup.html.list.ListView:org.apache.wicket.markup.html.list.ListView setStartIndex(int)",
            "org.apache.wicket.markup.html.list.PageableListView:long getItemCount()"
        ]
    },
    "org.apache.wicket.markup.transformer.XsltTransformer:java.lang.CharSequence transform(org.apache.wicket.Component,java.lang.CharSequence)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.XsltTransformerBehavior:java.lang.CharSequence transform(org.apache.wicket.Component,java.lang.CharSequence)",
            "org.apache.wicket.markup.transformer.XsltOutputTransformerContainer:java.lang.CharSequence transform(org.apache.wicket.Component,java.lang.CharSequence)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.panel.Fragment:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.MarkupContainer:void renderAssociatedMarkup(java.lang.String,java.lang.String)",
            "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.Component:void rendered()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRender()"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.AttributeModifier:java.lang.String toStringOrNull(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.AttributeModifier:void replaceAttributeValue(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.panel.AbstractMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.MarkupStream getAssociatedMarkupStream(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void renderHeadFromAssociatedMarkupFile(org.apache.wicket.markup.html.WebMarkupContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.Component:void internalRenderComponent()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void onRender()",
            "org.apache.wicket.markup.html.WebComponent:void onRender()"
        ]
    },
    "org.apache.wicket.markup.html.form.RadioChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.RadioChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.Component:java.lang.String exceptionMessage(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.Markup getAssociatedMarkup()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer add(org.apache.wicket.Component[])",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer replace(org.apache.wicket.Component)",
            "org.apache.wicket.Component:org.apache.wicket.Component get(java.lang.String)",
            "org.apache.wicket.markup.html.form.FormComponent:int inputAsInt()",
            "org.apache.wicket.markup.html.form.FormComponent:int inputAsInt(int)"
        ]
    },
    "org.apache.wicket.Component:org.apache.wicket.markup.IMarkupFragment getMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void renderComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:org.apache.wicket.markup.MarkupStream findMarkupStream()",
            "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.core.util.string.ComponentRenderer$RenderPage:void <init>(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.internal.HtmlHeaderContainer:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.border.Body:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component getChild()",
            "org.apache.wicket.Component:void internalRenderComponent()",
            "org.apache.wicket.util.tester.BaseWicketTester$StartComponentInPage:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.Page:void onRender()",
            "org.apache.wicket.util.tester.WicketTester:org.apache.wicket.markup.IMarkupFragment getMarkupFragment(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.HeaderPartContainer:java.lang.String getScopeFromMarkup()",
            "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)",
            "org.apache.wicket.Component:org.apache.wicket.markup.ComponentTag getMarkupTag()",
            "org.apache.wicket.Component:void internalRender()",
            "org.apache.wicket.markup.repeater.AbstractRepeater:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void renderHeadForInnerSiblings(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)",
            "org.apache.wicket.markup.resolver.AutoLinkResolver$AnchorResolverDelegate:org.apache.wicket.Component newAutoComponent(java.lang.String,org.apache.wicket.markup.resolver.AutoLinkResolver$PathInfo)",
            "org.apache.wicket.Component:java.lang.String toString(boolean)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isComponentOnAjaxResponse(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isComponentOnAjaxResponse(org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.WicketTester:void assertComponentOnAjaxResponse(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.form.ChoiceRenderer:java.lang.String getIdValue(java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getModelValue()",
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:boolean isSelected(java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:boolean isSelected(java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.markup.html.form.ChoiceRenderer:java.lang.Object getObject(java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.markup.html.form.AbstractChoice:void setOptionAttributes(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.lang.String getModelValue()",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.util.Map createChoicesIdsMap()",
            "org.apache.wicket.markup.html.form.RadioChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void throwException(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:boolean renderNext(org.apache.wicket.markup.MarkupStream)"
        ]
    },
    "org.apache.wicket.Component:void render()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void renderPart()",
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void renderHeadFromAssociatedMarkupFile(org.apache.wicket.markup.html.WebMarkupContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer)",
            "org.apache.wicket.markup.html.list.ListView:void renderItem(org.apache.wicket.markup.html.list.ListItem)",
            "org.apache.wicket.markup.html.list.Loop:void renderItem(org.apache.wicket.markup.html.list.LoopItem)",
            "org.apache.wicket.MarkupContainer:boolean renderNext(org.apache.wicket.markup.MarkupStream)",
            "org.apache.wicket.markup.repeater.AbstractRepeater:void renderChild(org.apache.wicket.Component)",
            "org.apache.wicket.Page:void renderPage()",
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:java.util.Map findAndRenderChildWicketTags(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer removeAll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void onConfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void configure()"
        ]
    },
    "org.apache.wicket.core.request.handler.PageAndComponentProvider:org.apache.wicket.request.component.IRequestableComponent getComponent()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.logger.ListenerLogData:org.apache.wicket.Component tryToGetFormSubmittingComponent(org.apache.wicket.core.request.handler.IPageAndComponentProvider)",
            "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:org.apache.wicket.request.component.IRequestableComponent getComponent()",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:org.apache.wicket.request.component.IRequestableComponent getComponent()",
            "org.apache.wicket.core.request.handler.logger.ListenerLogData:java.lang.Class tryToGetComponentClass(org.apache.wicket.core.request.handler.IPageAndComponentProvider)",
            "org.apache.wicket.core.request.handler.logger.ListenerLogData:void <init>(org.apache.wicket.core.request.handler.IPageAndComponentProvider,java.lang.Integer)"
        ]
    },
    "org.apache.wicket.Page:void renderPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.handler.render.WebPageRenderer:org.apache.wicket.protocol.http.BufferedWebResponse renderPage(org.apache.wicket.request.Url,org.apache.wicket.request.cycle.RequestCycle)",
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence lambda$renderPage$2(java.util.function.Supplier)",
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderPage(org.apache.wicket.core.request.handler.PageProvider)"
        ]
    },
    "org.apache.wicket.markup.html.internal.Enclosure:void onConfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void configure()"
        ]
    },
    "org.apache.wicket.markup.html.internal.Enclosure:boolean isVisible()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isComponentOnAjaxResponse(org.apache.wicket.Component)",
            "org.apache.wicket.Component:boolean determineVisibility()"
        ]
    },
    "org.apache.wicket.MarkupContainer:void addedComponent(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer add(org.apache.wicket.Component[])",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer replace(org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:void internalAdd(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.page.PartialPageUpdate:boolean prepareComponent(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.page.PartialPageUpdate:void writeComponents(org.apache.wicket.request.Response,java.lang.String)"
        ]
    },
    "org.apache.wicket.core.request.handler.ComponentRenderingRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.FormTester newFormTester(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.FormTester newFormTester(java.lang.String)"
        ]
    },
    "org.apache.wicket.core.request.handler.PageProvider:void detach()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void cleanupFeedbackMessages()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void clearFeedbackMessages()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit()",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer replace(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:org.apache.wicket.Component replaceWith(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border replace(org.apache.wicket.Component)",
            "org.apache.wicket.page.PartialPageUpdate:void writeTo(org.apache.wicket.request.Response,java.lang.String)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer addOrReplace(org.apache.wicket.Component[])",
            "org.apache.wicket.markup.html.pages.ExceptionErrorPage$1:void onClick()",
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border replaceInBorder(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer remove(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer remove(java.lang.String)",
            "org.apache.wicket.markup.html.WebPage:void validateHeaders()",
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:void remove()",
            "org.apache.wicket.MarkupContainer:void addedComponent(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border remove(org.apache.wicket.Component)",
            "org.apache.wicket.Component:void remove()",
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border removeFromBorder(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy:void renderHeader(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.page.PartialPageUpdate:void writeHeaderContribution(org.apache.wicket.request.Response,org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.WebPage:void validateHeaders()",
            "org.apache.wicket.markup.html.internal.HtmlHeaderContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.TagUtils:void copyAttributes(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.panel.Fragment:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.Fragment$1:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void renderAssociatedMarkup(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void renderAssociatedMarkup(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:org.apache.wicket.markup.IMarkupFragment getMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)",
            "org.apache.wicket.Component:void renderComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:org.apache.wicket.markup.ComponentTag getMarkupTag()",
            "org.apache.wicket.Component:void internalRender()",
            "org.apache.wicket.Component:java.lang.String toString(boolean)",
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void dequeue(org.apache.wicket.DequeueContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void dequeueChildrenContainer(org.apache.wicket.DequeueContext,org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.MarkupContainer:void dequeuePreamble(org.apache.wicket.DequeueContext)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.markup.html.AjaxFallbackLink:void onInitialize()",
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigator:void onInitialize()",
            "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationLink:void onInitialize()",
            "org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink:void onInitialize()",
            "org.apache.wicket.ajax.markup.html.AjaxLink:void onInitialize()",
            "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationIncrementLink:void onInitialize()",
            "org.apache.wicket.Component:void fireInitialize()",
            "org.apache.wicket.ajax.markup.html.form.AjaxButton:void onInitialize()",
            "org.apache.wicket.Page:void onInitialize()"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer queue(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border queue(org.apache.wicket.Component[])",
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border queueToBorder(org.apache.wicket.Component[])"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:void onConfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void configure()"
        ]
    },
    "org.apache.wicket.Component:void afterRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void render()"
        ]
    },
    "org.apache.wicket.markup.html.WebPage:void onAfterRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void afterRender()"
        ]
    },
    "org.apache.wicket.model.StringResourceModel:java.lang.String getString(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.StringResourceModel:java.lang.String getString()",
            "org.apache.wicket.model.StringResourceModel$AssignmentWrapper:java.lang.String load()"
        ]
    },
    "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.util.Locale,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,java.lang.String)",
            "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component)",
            "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.lang.String)",
            "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel)"
        ]
    },
    "org.apache.wicket.model.ResourceModel$AssignmentWrapper:java.lang.String load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.ResourceModel$AssignmentWrapper:java.lang.Object load()"
        ]
    },
    "org.apache.wicket.model.ResourceModel:java.lang.String getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.ResourceModel:java.lang.Object getObject()"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getNullKeyDisplayValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.CharSequence getDefaultChoice(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getNullValidDisplayValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.CharSequence getDefaultChoice(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.feedback.FencedFeedbackPanel:void <init>(java.lang.String,org.apache.wicket.Component,org.apache.wicket.feedback.IFeedbackMessageFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.feedback.FencedFeedbackPanel:void <init>(java.lang.String,org.apache.wicket.Component)",
            "org.apache.wicket.feedback.FencedFeedbackPanel:void <init>(java.lang.String,org.apache.wicket.feedback.IFeedbackMessageFilter)"
        ]
    },
    "org.apache.wicket.markup.html.panel.ComponentFeedbackPanel:void <init>(java.lang.String,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer add(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:boolean autoAdd(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream)",
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderComponent(org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer addOrReplace(org.apache.wicket.Component[])"
        ]
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String,org.apache.wicket.model.IModel,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String)",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String,int)"
        ]
    },
    "org.apache.wicket.markup.html.pages.ExceptionErrorPage$1:void onClick()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.Link:void onRequest()"
        ]
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.reflect.Constructor,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.protocol.http.WebSession:org.apache.wicket.markup.html.WebPage newBrowserInfoPage()"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer$RenderPage:void <init>(org.apache.wicket.Component,org.apache.wicket.core.util.string.ComponentRenderer$1)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderComponent(org.apache.wicket.Component)",
            "org.apache.wicket.core.util.string.ComponentRenderer:org.apache.wicket.Page lambda$renderComponent$1(java.util.function.Supplier)"
        ]
    },
    "org.apache.wicket.Component:void fireInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void internalInitialize()",
            "org.apache.wicket.Component:void internalInitialize()",
            "org.apache.wicket.MarkupContainer$3:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage$3:void <init>(org.apache.wicket.markup.html.pages.BrowserInfoPage,java.lang.String,org.apache.wicket.model.IModel,org.apache.wicket.model.IModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.BrowserInfoPage:void initComps()"
        ]
    },
    "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.reflect.Constructor,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.Class)",
            "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.markup.html.form.validation.FormComponentFeedbackBorder:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component startComponentInPage(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void executeTest(java.lang.Class,org.apache.wicket.Component,java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component startComponentInPage(java.lang.Class,org.apache.wicket.markup.IMarkupFragment)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component startComponentInPage(java.lang.Class)"
        ]
    },
    "org.apache.wicket.page.PartialPageUpdate:void writeHeaderContribution(org.apache.wicket.request.Response,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.page.XmlPartialPageUpdate:void writeComponent(org.apache.wicket.request.Response,java.lang.String,org.apache.wicket.Component,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border addOrReplace(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer addOrReplace(org.apache.wicket.Component[])"
        ]
    },
    "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler mapUnexpectedExceptions(java.lang.Exception,org.apache.wicket.Application)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler internalMap(java.lang.Exception)"
        ]
    },
    "org.apache.wicket.MarkupContainer:boolean renderNext(org.apache.wicket.markup.MarkupStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void renderAll(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.pages.RedirectPage:void <init>(org.apache.wicket.Page,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.RedirectPage:void <init>(org.apache.wicket.Page)"
        ]
    },
    "org.apache.wicket.markup.html.pages.RedirectPage:void <init>(java.lang.CharSequence)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.renderStrategy.ParentFirstHeaderRenderStrategy$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.renderStrategy.AbstractHeaderRenderStrategy:void renderHeader(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.request.component.IRequestableComponent,org.apache.wicket.behavior.Behavior)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invokeListener(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean)"
        ]
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.request.component.IRequestableComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invokeListener(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean)"
        ]
    },
    "org.apache.wicket.RequestListenerInterface:void invoke(org.apache.wicket.request.component.IRequestableComponent,org.apache.wicket.behavior.Behavior)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.RequestListenerInterface:void invoke(org.apache.wicket.request.component.IRequestableComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.page.XmlPartialPageUpdate:void writeComponent(org.apache.wicket.request.Response,java.lang.String,org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.page.PartialPageUpdate:void writeComponents(org.apache.wicket.request.Response,java.lang.String)"
        ]
    },
    "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence renderAjaxAttributes(org.apache.wicket.Component,org.apache.wicket.ajax.attributes.AjaxRequestAttributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence renderAjaxAttributes(org.apache.wicket.Component)",
            "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence getCallbackFunctionBody(org.apache.wicket.ajax.attributes.CallbackParameter[])"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String)",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submitLink(java.lang.String,boolean)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void executeListener(java.lang.Class,org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTestCase:void executeListener(org.apache.wicket.Component,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onRequest()",
            "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:void onEvent(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.Component:void renderComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void renderAssociatedMarkup(java.lang.String,java.lang.String)",
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.Component:org.apache.wicket.markup.ComponentTag getMarkupTag()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:java.lang.String getMarkupIdFromMarkup()",
            "org.apache.wicket.Component:org.apache.wicket.util.value.ValueMap getMarkupAttributes()"
        ]
    },
    "org.apache.wicket.markup.html.TransparentWebMarkupContainer:org.apache.wicket.Component findChildComponent(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void dequeue(org.apache.wicket.DequeueContext)"
        ]
    },
    "org.apache.wicket.markup.resolver.ComponentResolvers:org.apache.wicket.Component resolveByComponentHierarchy(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void renderHeadForInnerSiblings(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)",
            "org.apache.wicket.markup.resolver.ComponentResolvers:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag,org.apache.wicket.markup.resolver.ComponentResolvers$ResolverFilter)"
        ]
    },
    "org.apache.wicket.Component:boolean isEnabledInHierarchy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractCheckSelector:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form:void validate()",
            "org.apache.wicket.markup.html.form.Form$8:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isDisabled(java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isEnabled(java.lang.String)",
            "org.apache.wicket.markup.html.link.DisabledAttributeLinkBehavior:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.markup.html.AjaxFallbackLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:boolean isEnabledInHierarchy()",
            "org.apache.wicket.markup.html.form.Form$FormModelUpdateVisitor:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.Form$5:void component(org.apache.wicket.markup.html.form.Form,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.ajax.markup.html.AjaxLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.AjaxEventBehavior:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.head.IHeaderResponse)",
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.markup.html.form.FormComponent:void inputChanged()",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField$1:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.link.ExternalLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.FormTester:java.lang.String[] getInputValue(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.FormComponent:boolean checkRequired()",
            "org.apache.wicket.markup.html.form.Form:void process(org.apache.wicket.markup.html.form.IFormSubmitter)",
            "org.apache.wicket.markup.html.link.Link:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Check:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form$ValidationVisitor:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabelMarker:void <init>(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.FormComponent:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.RadioChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.markup.html.form.Radio:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result checkUsability(org.apache.wicket.Component,boolean)",
            "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabelMarker:void updateFrom(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.ajax.AjaxRequestTarget)",
            "org.apache.wicket.util.tester.FormTester$1:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.SubmitLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationBehavior:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:boolean isStateless()",
            "org.apache.wicket.markup.html.form.CheckGroupSelector:boolean isEnabled()",
            "org.apache.wicket.ajax.markup.html.form.AjaxFallbackButton:boolean isButtonEnabled()",
            "org.apache.wicket.Component:boolean canCallListener()"
        ]
    },
    "org.apache.wicket.Component:java.lang.CharSequence urlForListener(org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.StatelessLink:java.lang.CharSequence getURL()",
            "org.apache.wicket.markup.html.link.InlineFrame:java.lang.CharSequence getURL()",
            "org.apache.wicket.markup.html.link.ResourceLink:java.lang.CharSequence getURL()",
            "org.apache.wicket.markup.html.link.Link:java.lang.CharSequence getURL()",
            "org.apache.wicket.markup.html.form.StatelessForm:java.lang.CharSequence getActionUrl()",
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getActionUrl()",
            "org.apache.wicket.util.tester.BaseWicketTester:java.lang.String urlFor(org.apache.wicket.markup.html.link.Link)",
            "org.apache.wicket.markup.html.image.resource.LocalizedImageResource:void setSrcAttribute(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.BaseWicketTester:void submitForm(java.lang.String)"
        ]
    },
    "org.apache.wicket.Component:java.lang.CharSequence urlForListener(org.apache.wicket.behavior.Behavior,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.behavior.AbstractAjaxBehavior:java.lang.CharSequence getCallbackUrl()",
            "org.apache.wicket.markup.html.form.FormComponentUpdatingBehavior:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.ComponentEventSender:void send(org.apache.wicket.event.IEventSink,org.apache.wicket.event.Broadcast,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void send(org.apache.wicket.event.IEventSink,org.apache.wicket.event.Broadcast,java.lang.Object)"
        ]
    },
    "org.apache.wicket.markup.html.link.Link:void onRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void internalInvoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.Component,java.lang.Object)",
            "org.apache.wicket.markup.html.link.ResourceLink:void onRequest()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForSubmitter(org.apache.wicket.markup.html.form.IFormSubmittingComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.SubmitLink:java.lang.CharSequence getTriggerJavaScript()"
        ]
    },
    "org.apache.wicket.markup.html.form.RadioGroup$2:void component(org.apache.wicket.markup.html.form.Radio,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.RadioGroup$2:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.feedback.FeedbackMessagesModel:java.util.List getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.feedback.FeedbackMessagesModel:java.lang.Object getObject()"
        ]
    },
    "org.apache.wicket.Component:java.lang.String toString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.XsltTransformer:java.lang.CharSequence transform(org.apache.wicket.Component,java.lang.CharSequence)",
            "org.apache.wicket.ajax.AjaxRequestHandler:void add(org.apache.wicket.Component[])",
            "org.apache.wicket.Component:void rendered()",
            "org.apache.wicket.page.PartialPageUpdate:boolean prepareComponent(org.apache.wicket.Component)",
            "org.apache.wicket.page.PartialPageUpdate:void add(org.apache.wicket.Component,java.lang.String)",
            "org.apache.wicket.markup.html.panel.AbstractMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void internalRenderComponent()",
            "org.apache.wicket.Component:java.lang.String exceptionMessage(java.lang.String)",
            "org.apache.wicket.Component:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isComponentOnAjaxResponse(org.apache.wicket.Component)",
            "org.apache.wicket.Component:void internalRender()",
            "org.apache.wicket.ajax.AjaxRequestHandler:void focusComponent(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.Page$3:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Page$3:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.resource.loader.ComponentStringResourceLoader:java.lang.String loadStringResource(org.apache.wicket.Component,java.lang.String,java.util.Locale,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.resource.loader.ClassStringResourceLoader:java.lang.String loadStringResource(org.apache.wicket.Component,java.lang.String,java.util.Locale,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester select(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.logger.ListenerLogData:org.apache.wicket.Component tryToGetFormSubmittingComponent(org.apache.wicket.core.request.handler.IPageAndComponentProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.logger.ListenerLogData:void <init>(org.apache.wicket.core.request.handler.IPageAndComponentProvider,java.lang.Integer)"
        ]
    },
    "org.apache.wicket.Behaviors:org.apache.wicket.behavior.Behavior getBehaviorById(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:org.apache.wicket.behavior.Behavior getBehaviorById(int)"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckGroup$1:void component(org.apache.wicket.markup.html.form.Check,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.CheckGroup$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckGroup$2:void component(org.apache.wicket.markup.html.form.Check,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.CheckGroup$2:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.ajax.AjaxNewWindowNotifyingBehavior:void respond(org.apache.wicket.ajax.AjaxRequestTarget)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:org.apache.wicket.markup.html.form.Form findFormToProcess(org.apache.wicket.markup.html.form.IFormSubmitter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void callOnError(org.apache.wicket.markup.html.form.IFormSubmitter)",
            "org.apache.wicket.markup.html.form.Form:void markFormsSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)",
            "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)",
            "org.apache.wicket.markup.html.form.Form:void delegateSubmit(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.form.AjaxFormValidatingBehavior$FormValidateVisitor$1:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.markup.html.form.AjaxButton$1:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.markup.html.form.AjaxFallbackButton$1:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void executeBehavior(java.lang.Class,org.apache.wicket.behavior.AbstractAjaxBehavior,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTestCase:void executeBehavior(org.apache.wicket.behavior.AbstractAjaxBehavior,java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void internalExecuteAllTimerBehaviors(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void executeAllTimerBehaviors(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.util.tester.BaseWicketTester:void access$500(org.apache.wicket.util.tester.BaseWicketTester,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void executeAjaxEvent(org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void executeAjaxEvent(java.lang.String,java.lang.String)",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result hasLabel(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertLabel(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.basic.Label:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTesterHelper$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTesterHelper$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getModelValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getValue()"
        ]
    },
    "org.apache.wicket.markup.html.basic.MultiLineLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.debug.PageView$4:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.debug.PageView$4:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.SimpleFormComponentLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Button:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.ImageButton:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.markup.html.form.AjaxFallbackButton:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.Button:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel:java.util.List getCurrentMessages()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FeedbackPanel:boolean anyMessage(int)"
        ]
    },
    "org.apache.wicket.markup.html.list.ListItemModel:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getLabel()",
            "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView$1:org.apache.wicket.feedback.FeedbackMessage getObject()",
            "org.apache.wicket.Component:java.lang.Object getDefaultModelObject()",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:java.util.Map variablesMap()",
            "org.apache.wicket.markup.html.link.AbstractLink:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.model.ComponentPropertyModel$AssignmentWrapper:java.lang.Object getObject()",
            "org.apache.wicket.model.ChainingModel:java.lang.Object getObject()",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:org.apache.wicket.model.IModel findLabelContent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.HTML5Attributes:void onInput(org.apache.wicket.markup.html.form.AbstractTextComponent,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.model.AbstractPropertyModel:java.lang.Object getInnermostModelOrObject()",
            "org.apache.wicket.markup.html.form.AbstractChoice:java.util.List getChoices()",
            "org.apache.wicket.markup.html.form.ChoiceRenderer:java.lang.Object getObject(java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.image.ExternalImage:void buildSrcAttribute(org.apache.wicket.markup.ComponentTag,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.link.DownloadLink:void onClick()"
        ]
    },
    "org.apache.wicket.markup.html.list.ListItemModel:void setObject(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.upload.FileUploadField:void onDetach()",
            "org.apache.wicket.markup.html.form.FormComponent:void updateCollectionModel(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.model.ChainingModel:void setObject(java.lang.Object)",
            "org.apache.wicket.markup.html.form.PasswordTextField:void onDetach()",
            "org.apache.wicket.Component:org.apache.wicket.Component setDefaultModelObject(java.lang.Object)",
            "org.apache.wicket.model.AbstractPropertyModel:void setObject(java.lang.Object)"
        ]
    },
    "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void renderItem(org.apache.wicket.markup.html.list.LoopItem)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.Loop:void renderChild(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.form.ImageButton:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.image.Image:java.lang.String buildSrcAttribute(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.image.Image:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.RadioGroup$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent:void updateCollectionModel(org.apache.wicket.markup.html.form.FormComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.ListMultipleChoice:void updateModel()",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void updateModel()",
            "org.apache.wicket.markup.html.form.CheckGroup:void updateModel()"
        ]
    },
    "org.apache.wicket.markup.html.form.ListMultipleChoice:void addRetainedDisabled(java.util.ArrayList)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.util.Collection convertValue(java.lang.String[])",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.util.List convertChoiceIdsToChoices(java.lang.String[])"
        ]
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoForm$1:void onSubmit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage$3:void afterSubmit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.BrowserInfoForm$1:void onSubmit()"
        ]
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage$ContinueLink:void onClick()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.Link:void onRequest()"
        ]
    },
    "org.apache.wicket.markup.html.form.ListMultipleChoice:java.lang.String getModelValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getValue()"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckGroup:java.lang.String getModelValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void onDetach()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void detach()"
        ]
    },
    "org.apache.wicket.markup.html.basic.EnumLabel:java.lang.String getStringValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.basic.EnumLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.NumberTextField:java.lang.String getModelValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getValue()"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getModelValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getValue()"
        ]
    },
    "org.apache.wicket.markup.html.form.NumberTextField:java.lang.Class getNumberType()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.NumberTextField:void convertInput()"
        ]
    },
    "org.apache.wicket.markup.html.include.Include:java.lang.String importAsString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.include.Include:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.link.DownloadLink:void onClick()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:org.apache.wicket.Component setDefaultModelObject(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void setIterations(int)",
            "org.apache.wicket.markup.html.list.ListView:void setModelObject(java.util.List)",
            "org.apache.wicket.IGenericComponent:org.apache.wicket.IGenericComponent setModelObject(java.lang.Object)"
        ]
    },
    "org.apache.wicket.markup.html.list.ListView$1:boolean isEnabled()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertListView(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void assertListView(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.ListView:org.apache.wicket.markup.html.list.ListView setStartIndex(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.PageableListView:int getViewSize()"
        ]
    },
    "org.apache.wicket.markup.html.list.PageableListView:long getItemCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.PageableListView:long getPageCount()",
            "org.apache.wicket.markup.html.list.PageableListView:long getCurrentPage()"
        ]
    },
    "org.apache.wicket.markup.transformer.XsltTransformerBehavior:java.lang.CharSequence transform(org.apache.wicket.Component,java.lang.CharSequence)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.transformer.XsltOutputTransformerContainer:java.lang.CharSequence transform(org.apache.wicket.Component,java.lang.CharSequence)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.AttributeModifier:void replaceAttributeValue(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.AttributeModifier:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void renderHeadFromAssociatedMarkupFile(org.apache.wicket.markup.html.WebMarkupContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void onRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:void onRender()",
            "org.apache.wicket.Component:void internalRender()",
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void onRender()",
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void access$101(org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer)"
        ]
    },
    "org.apache.wicket.markup.html.WebComponent:void onRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRender()"
        ]
    },
    "org.apache.wicket.markup.html.form.RadioChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.Markup getAssociatedMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment findMarkupInAssociatedFileHeader(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.Component:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.MarkupUtil$1:void component(org.apache.wicket.MarkupContainer,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.IMarkupFragment getRegionMarkup()",
            "org.apache.wicket.Component:org.apache.wicket.MarkupContainer findParentWithAssociatedMarkup()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.MarkupStream getAssociatedMarkupStream(boolean)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.Component:org.apache.wicket.Component get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.Component get(java.lang.String)",
            "org.apache.wicket.Component:org.apache.wicket.request.component.IRequestableComponent get(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:int inputAsInt()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent:int inputAsInt(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:org.apache.wicket.markup.MarkupStream findMarkupStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void checkComponentTag(org.apache.wicket.markup.ComponentTag,java.lang.String)",
            "org.apache.wicket.ajax.markup.html.form.AjaxFallbackButton:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.markup.html.AjaxFallbackLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void checkComponentTagAttribute(org.apache.wicket.markup.ComponentTag,java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.border.Body:org.apache.wicket.markup.IMarkupFragment getMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:java.lang.String toString(boolean)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester$StartComponentInPage:org.apache.wicket.markup.IMarkupFragment getMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Page:void onRender()",
            "org.apache.wicket.Component:org.apache.wicket.markup.ComponentTag getMarkupTag()",
            "org.apache.wicket.Component:void internalRender()",
            "org.apache.wicket.markup.resolver.AutoLinkResolver$AnchorResolverDelegate:org.apache.wicket.Component newAutoComponent(java.lang.String,org.apache.wicket.markup.resolver.AutoLinkResolver$PathInfo)",
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)",
            "org.apache.wicket.Component:java.lang.String toString(boolean)",
            "org.apache.wicket.markup.html.internal.HtmlHeaderContainer:org.apache.wicket.markup.IMarkupFragment getMarkup()"
        ]
    },
    "org.apache.wicket.Page:void onRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.WebPage:void onRender()",
            "org.apache.wicket.Component:void internalRender()"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:org.apache.wicket.markup.IMarkupFragment getMarkupFragment(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertMarkupLocale(org.apache.wicket.Component,java.util.Locale)",
            "org.apache.wicket.util.tester.WicketTester:void assertMarkupStyle(org.apache.wicket.Component,java.lang.String)",
            "org.apache.wicket.util.tester.WicketTester:void assertMarkupVariation(org.apache.wicket.Component,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.HeaderPartContainer:java.lang.String getScopeFromMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.HeaderPartContainer:void <init>(java.lang.String,org.apache.wicket.MarkupContainer,org.apache.wicket.markup.IMarkupFragment)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.panel.Fragment:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.MarkupContainer:void renderAssociatedMarkup(java.lang.String,java.lang.String)",
            "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractRepeater:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.panel.Fragment:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:org.apache.wicket.markup.IMarkupFragment getMarkup()",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void assertComponentOnAjaxResponse(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertComponentOnAjaxResponse(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:boolean isSelected(java.lang.Object,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.RadioChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.ListMultipleChoice:boolean isSelected(java.lang.Object,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.ChoiceRenderer:java.lang.Object getObject(java.lang.String,org.apache.wicket.model.IModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.Object convertChoiceIdToChoice(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractChoice:void setOptionAttributes(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.ListMultipleChoice:java.util.Map createChoicesIdsMap()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.util.List convertChoiceIdsToChoices(java.lang.String[])"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.ListView:void renderItem(org.apache.wicket.markup.html.list.ListItem)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.ListView:void renderChild(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.list.Loop:void renderItem(org.apache.wicket.markup.html.list.LoopItem)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void renderItem(org.apache.wicket.markup.html.list.LoopItem)",
            "org.apache.wicket.markup.html.list.Loop:void renderChild(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractRepeater:void renderChild(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onRender()"
        ]
    },
    "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:java.util.Map findAndRenderChildWicketTags(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:void renderMessage(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.wicket.Component:void configure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.internal.Enclosure:void onConfigure()",
            "org.apache.wicket.ajax.form.AjaxFormValidatingBehavior$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.basic.EnclosureContainer:void onConfigure()",
            "org.apache.wicket.Component:void beforeRender()"
        ]
    },
    "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:org.apache.wicket.request.component.IRequestableComponent getComponent()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:boolean includeRenderCount()"
        ]
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:org.apache.wicket.request.component.IRequestableComponent getComponent()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:boolean includeRenderCount()",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invokeListener(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean)"
        ]
    },
    "org.apache.wicket.core.request.handler.logger.ListenerLogData:java.lang.Class tryToGetComponentClass(org.apache.wicket.core.request.handler.IPageAndComponentProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.logger.ListenerLogData:void <init>(org.apache.wicket.core.request.handler.IPageAndComponentProvider,java.lang.Integer)"
        ]
    },
    "org.apache.wicket.core.request.handler.logger.ListenerLogData:void <init>(org.apache.wicket.core.request.handler.IPageAndComponentProvider,java.lang.Integer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.request.handler.render.WebPageRenderer:org.apache.wicket.protocol.http.BufferedWebResponse renderPage(org.apache.wicket.request.Url,org.apache.wicket.request.cycle.RequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.handler.render.WebPageRenderer:void respond(org.apache.wicket.request.cycle.RequestCycle)"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence lambda$renderPage$2(java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.Object inThreadContext(java.util.function.Supplier)"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderPage(org.apache.wicket.core.request.handler.PageProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:boolean determineVisibility()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.internal.Enclosure:void onConfigure()",
            "org.apache.wicket.Component:boolean isVisibleInHierarchy()",
            "org.apache.wicket.markup.html.internal.Enclosure:boolean isVisible()",
            "org.apache.wicket.Component:void internalRender()",
            "org.apache.wicket.Component:java.lang.String toString(boolean)",
            "org.apache.wicket.markup.html.basic.EnclosureContainer:void onConfigure()",
            "org.apache.wicket.Component:void beforeRender()"
        ]
    },
    "org.apache.wicket.MarkupContainer:void internalAdd(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.page.PartialPageUpdate:void writeComponents(org.apache.wicket.request.Response,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.page.PartialPageUpdate:void writeTo(org.apache.wicket.request.Response,java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.FormTester newFormTester(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit(java.lang.String)"
        ]
    },
    "org.apache.wicket.Component:org.apache.wicket.Component replaceWith(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border replace(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer replace(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.page.PartialPageUpdate:void writeTo(org.apache.wicket.request.Response,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border replaceInBorder(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border replace(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer remove(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border remove(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border remove(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer remove(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.Component:void remove()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border removeFromBorder(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border remove(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.panel.Fragment$1:org.apache.wicket.markup.IMarkupFragment chooseMarkup(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void renderAssociatedMarkup(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.BorderMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.Fragment:org.apache.wicket.DequeueContext newDequeueContext()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.ajax.markup.html.AjaxFallbackLink:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void fireInitialize()"
        ]
    },
    "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationLink:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void fireInitialize()"
        ]
    },
    "org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void fireInitialize()"
        ]
    },
    "org.apache.wicket.ajax.markup.html.AjaxLink:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void fireInitialize()"
        ]
    },
    "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationIncrementLink:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void fireInitialize()"
        ]
    },
    "org.apache.wicket.ajax.markup.html.form.AjaxButton:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void fireInitialize()"
        ]
    },
    "org.apache.wicket.Page:void onInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void fireInitialize()",
            "org.apache.wicket.util.tester.DummyPanelPage:void onInitialize()"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border queue(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer queue(org.apache.wicket.Component[])"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border queueToBorder(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:void <init>(java.lang.String,org.apache.wicket.model.IModel)"
        ]
    },
    "org.apache.wicket.model.StringResourceModel:java.lang.String getString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.StringResourceModel:java.lang.String load()"
        ]
    },
    "org.apache.wicket.model.StringResourceModel$AssignmentWrapper:java.lang.String load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.StringResourceModel$AssignmentWrapper:java.lang.Object load()"
        ]
    },
    "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getDefaultLabel(java.lang.String)",
            "org.apache.wicket.response.filter.AjaxServerAndClientTimeFilter:java.lang.String getStatusString(long,java.lang.String)",
            "org.apache.wicket.markup.html.form.AbstractChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:java.util.Map variablesMap()",
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getString(org.apache.wicket.Localizer,java.lang.String,org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getNullKeyDisplayValue()",
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getNullValidDisplayValue()",
            "org.apache.wicket.markup.html.form.RadioChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)"
        ]
    },
    "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.EnumChoiceRenderer:java.lang.Object getDisplayValue(java.lang.Enum)"
        ]
    },
    "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.response.filter.ServerAndClientTimeFilter:org.apache.wicket.util.string.AppendingStringBuffer filter(org.apache.wicket.util.string.AppendingStringBuffer)",
            "org.apache.wicket.Component:java.lang.String getString(java.lang.String,org.apache.wicket.model.IModel,java.lang.String)"
        ]
    },
    "org.apache.wicket.Localizer:java.lang.String getString(java.lang.String,org.apache.wicket.Component,org.apache.wicket.model.IModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:java.lang.String getString(java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.util.tester.WicketTester:void assertComponentFeedbackMessage(org.apache.wicket.Component,java.lang.String,org.apache.wicket.model.IModel,org.apache.wicket.feedback.IFeedbackMessageFilter)"
        ]
    },
    "org.apache.wicket.model.ResourceModel$AssignmentWrapper:java.lang.Object load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.model.ResourceModel:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.CharSequence getDefaultChoice(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.feedback.FencedFeedbackPanel:void <init>(java.lang.String,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.feedback.FencedFeedbackPanel:void <init>(java.lang.String)"
        ]
    },
    "org.apache.wicket.feedback.FencedFeedbackPanel:void <init>(java.lang.String,org.apache.wicket.feedback.IFeedbackMessageFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String,org.apache.wicket.model.IModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void <init>(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.protocol.http.WebSession:org.apache.wicket.markup.html.WebPage newBrowserInfoPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.WebSession:org.apache.wicket.protocol.http.request.WebClientInfo getClientInfo()"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:org.apache.wicket.Page lambda$renderComponent$1(java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence lambda$renderPage$2(java.util.function.Supplier)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void internalInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Page:void onConfigure()",
            "org.apache.wicket.Page:boolean isPageStateless()",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void internalInvoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.Component,java.lang.Object)",
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderComponent(org.apache.wicket.Component)",
            "org.apache.wicket.RequestListenerInterface:void internalInvoke(org.apache.wicket.Component,java.lang.Object)",
            "org.apache.wicket.core.request.handler.PageAndComponentProvider:org.apache.wicket.request.component.IRequestableComponent getComponent()",
            "org.apache.wicket.MarkupContainer:void addedComponent(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.Component:void internalInitialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void addedComponent(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer$3:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer$3:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.DefaultMapperContext:org.apache.wicket.request.component.IRequestablePage newPageInstance(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.session.DefaultPageFactory:org.apache.wicket.request.component.IRequestablePage newPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.DefaultMapperContext:org.apache.wicket.request.component.IRequestablePage newPageInstance(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void executeTest(java.lang.Class,org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component startComponentInPage(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer addOrReplace(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler internalMap(java.lang.Exception)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler map(java.lang.Exception)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void renderAll(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Page:void onRender()",
            "org.apache.wicket.MarkupContainer:void renderComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.pages.RedirectPage:void <init>(org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invokeListener(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence renderAjaxAttributes(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence getCallbackScript(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence getCallbackFunctionBody(org.apache.wicket.ajax.attributes.CallbackParameter[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence getCallbackFunction(org.apache.wicket.ajax.attributes.CallbackParameter[])"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void clickLink(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submitLink(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTestCase:void executeListener(org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form:void onRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void internalInvoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.Component,java.lang.Object)"
        ]
    },
    "org.apache.wicket.Component:java.lang.String getMarkupIdFromMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:java.lang.Object getMarkupIdImpl()"
        ]
    },
    "org.apache.wicket.Component:org.apache.wicket.util.value.ValueMap getMarkupAttributes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)",
            "org.apache.wicket.markup.html.link.Link:java.lang.CharSequence appendAnchor(org.apache.wicket.markup.ComponentTag,java.lang.CharSequence)",
            "org.apache.wicket.markup.html.form.Form:java.lang.String getMethod()"
        ]
    },
    "org.apache.wicket.markup.resolver.ComponentResolvers:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag,org.apache.wicket.markup.resolver.ComponentResolvers$ResolverFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component getChildComponent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.MarkupContainer:boolean renderNext(org.apache.wicket.markup.MarkupStream)",
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:java.util.Map findAndRenderChildWicketTags(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractCheckSelector:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form:void validate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void process(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$8:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$8:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isDisabled(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertDisabled(java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isEnabled(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertEnabled(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.link.DisabledAttributeLinkBehavior:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.markup.html.AjaxFallbackLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$FormModelUpdateVisitor:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$FormModelUpdateVisitor:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$5:void component(org.apache.wicket.markup.html.form.Form,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$5:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.ajax.markup.html.AjaxLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.ajax.AjaxEventBehavior:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.head.IHeaderResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent:void inputChanged()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void processInput()",
            "org.apache.wicket.markup.html.form.Form$9:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior:void onEvent(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField$1:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:java.lang.String[] getInputValue(org.apache.wicket.markup.html.form.FormComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester$5:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.util.tester.FormTester$1:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:boolean checkRequired()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void validateRequired()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:void process(org.apache.wicket.markup.html.form.IFormSubmitter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)",
            "org.apache.wicket.markup.html.form.StatelessForm:void process(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.markup.html.link.Link:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.markup.html.AjaxFallbackLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationIncrementLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$ValidationVisitor:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$ValidationVisitor:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabelMarker:void <init>(org.apache.wicket.markup.html.form.FormComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.TextField:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.DropDownChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.CheckGroup:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.upload.FileUploadField:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.RadioChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Button:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void internalRenderComponent()",
            "org.apache.wicket.markup.html.form.FormComponentPanel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.CheckBox:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.RadioGroup:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result checkUsability(org.apache.wicket.Component,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertUsability(org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String,boolean)",
            "org.apache.wicket.util.tester.BaseWicketTester:void submitAjaxFormSubmitBehavior(org.apache.wicket.Component,org.apache.wicket.ajax.form.AjaxFormSubmitBehavior)",
            "org.apache.wicket.util.tester.BaseWicketTester:void internalExecuteAllTimerBehaviors(org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeAjaxEvent(org.apache.wicket.Component,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabelMarker:void updateFrom(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.ajax.AjaxRequestTarget)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void updateAutoLabels(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.util.tester.FormTester$1:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.FormTester$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.SubmitLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationBehavior:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:boolean isStateless()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Page:boolean isPageStateless()",
            "org.apache.wicket.Component:boolean canCallListenerAfterExpiry()",
            "org.apache.wicket.Page$2:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckGroupSelector:boolean isEnabled()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.markup.html.form.AjaxFallbackButton:boolean isButtonEnabled()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:boolean canCallListener()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.request.component.IRequestableComponent)",
            "org.apache.wicket.Component:boolean isStateless()",
            "org.apache.wicket.behavior.Behavior:boolean canCallListener(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.image.Image:boolean canCallListener()"
        ]
    },
    "org.apache.wicket.markup.html.link.InlineFrame:java.lang.CharSequence getURL()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.InlineFrame:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.link.ResourceLink:java.lang.CharSequence getURL()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.link.Link:java.lang.CharSequence getURL()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.BrowserInfoPage$ContinueLink:void renderHead(org.apache.wicket.markup.head.IHeaderResponse)",
            "org.apache.wicket.markup.html.link.Link:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getActionUrl()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForSubmitter(org.apache.wicket.markup.html.form.IFormSubmittingComponent)",
            "org.apache.wicket.markup.html.form.Form:void writeHiddenFields()"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:java.lang.String urlFor(org.apache.wicket.markup.html.link.Link)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void submitForm(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String,boolean)",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit()",
            "org.apache.wicket.util.tester.BaseWicketTester:void submitForm(org.apache.wicket.markup.html.form.Form)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponentUpdatingBehavior:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:void send(org.apache.wicket.event.IEventSink,org.apache.wicket.event.Broadcast,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.link.ResourceLink:void onRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void internalInvoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.Component,java.lang.Object)"
        ]
    },
    "org.apache.wicket.markup.html.form.SubmitLink:java.lang.CharSequence getTriggerJavaScript()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.SubmitLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.RadioGroup$2:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.feedback.FeedbackMessagesModel:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getLabel()",
            "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView$1:org.apache.wicket.feedback.FeedbackMessage getObject()",
            "org.apache.wicket.Component:java.lang.Object getDefaultModelObject()",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:java.util.Map variablesMap()",
            "org.apache.wicket.markup.html.link.AbstractLink:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.model.ComponentPropertyModel$AssignmentWrapper:java.lang.Object getObject()",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:org.apache.wicket.model.IModel findLabelContent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.WicketTester:void assertFeedback(java.lang.String,java.io.Serializable[])",
            "org.apache.wicket.markup.html.HTML5Attributes:void onInput(org.apache.wicket.markup.html.form.AbstractTextComponent,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AbstractChoice:java.util.List getChoices()",
            "org.apache.wicket.markup.html.form.ChoiceRenderer:java.lang.Object getObject(java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.image.ExternalImage:void buildSrcAttribute(org.apache.wicket.markup.ComponentTag,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.link.DownloadLink:void onClick()"
        ]
    },
    "org.apache.wicket.ajax.AjaxRequestHandler:void add(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxRequestHandler$2:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.page.PartialPageUpdate:void add(org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxRequestHandler:void add(org.apache.wicket.Component,java.lang.String)"
        ]
    },
    "org.apache.wicket.ajax.AjaxRequestHandler:void focusComponent(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Page$3:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.resource.loader.ClassStringResourceLoader:java.lang.String loadStringResource(org.apache.wicket.Component,java.lang.String,java.util.Locale,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:org.apache.wicket.behavior.Behavior getBehaviorById(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:boolean includeRenderCount()",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invokeListener(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean)",
            "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:boolean includeRenderCount()",
            "org.apache.wicket.core.request.handler.logger.ListenerLogData:void <init>(org.apache.wicket.core.request.handler.IPageAndComponentProvider,java.lang.Integer)"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckGroup$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.CheckGroup$2:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form:void callOnError(org.apache.wicket.markup.html.form.IFormSubmitter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void process(org.apache.wicket.markup.html.form.IFormSubmitter)",
            "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:void markFormsSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:void delegateSubmit(org.apache.wicket.markup.html.form.IFormSubmitter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void process(org.apache.wicket.markup.html.form.IFormSubmitter)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTestCase:void executeBehavior(org.apache.wicket.behavior.AbstractAjaxBehavior,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void executeAllTimerBehaviors(org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void access$500(org.apache.wicket.util.tester.BaseWicketTester,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester$4:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void executeAjaxEvent(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTesterHelper$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.TextField:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.FormTester:java.lang.String getFormComponentValue(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.TextArea:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.FormTester:java.lang.String getTextComponentValue(java.lang.String)",
            "org.apache.wicket.util.cookies.CookieUtils:void save(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.RadioChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.CheckBox:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.debug.PageView$4:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.markup.html.form.AjaxFallbackButton:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel:boolean anyMessage(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FeedbackPanel:boolean anyMessage()",
            "org.apache.wicket.markup.html.panel.FeedbackPanel:boolean anyErrorMessage()"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getLabel()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.util.Map addDefaultVars(java.util.Map)"
        ]
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView$1:org.apache.wicket.feedback.FeedbackMessage getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView$1:java.lang.Object getObject()"
        ]
    },
    "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:java.util.Map variablesMap()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.link.AbstractLink:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.model.ComponentPropertyModel$AssignmentWrapper:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.model.ChainingModel:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.ChainingModel:java.lang.Object getObject()",
            "org.apache.wicket.model.AbstractPropertyModel:java.lang.Object getInnermostModelOrObject()"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:org.apache.wicket.model.IModel findLabelContent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.HTML5Attributes:void onInput(org.apache.wicket.markup.html.form.AbstractTextComponent,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.HTML5Attributes:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.model.AbstractPropertyModel:java.lang.Object getInnermostModelOrObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.AbstractPropertyModel:java.lang.Object getObject()",
            "org.apache.wicket.model.AbstractPropertyModel:java.lang.reflect.Method getPropertySetter()",
            "org.apache.wicket.model.AbstractPropertyModel:java.lang.reflect.Field getPropertyField()",
            "org.apache.wicket.model.AbstractPropertyModel:java.lang.reflect.Method getPropertyGetter()",
            "org.apache.wicket.model.AbstractPropertyModel:java.lang.Class getObjectClass()",
            "org.apache.wicket.model.AbstractPropertyModel:void setObject(java.lang.Object)"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractChoice:java.util.List getChoices()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.String getModelValue()",
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:void addRetainedDisabled(java.util.ArrayList)",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.RadioChoice:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.lang.String getModelValue()",
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.util.Map createChoicesIdsMap()"
        ]
    },
    "org.apache.wicket.markup.html.image.ExternalImage:void buildSrcAttribute(org.apache.wicket.markup.ComponentTag,org.apache.wicket.model.IModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.image.ExternalImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.upload.FileUploadField:void onDetach()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.model.ChainingModel:void setObject(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.ChainingModel:void setObject(java.lang.Object)",
            "org.apache.wicket.model.AbstractPropertyModel:void setObject(java.lang.Object)"
        ]
    },
    "org.apache.wicket.markup.html.form.PasswordTextField:void onDetach()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.model.AbstractPropertyModel:void setObject(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.Loop:void renderChild(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onRender()"
        ]
    },
    "org.apache.wicket.markup.html.image.Image:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.image.Source:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.ListMultipleChoice:void updateModel()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void updateModel()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior:void onEvent(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckGroup:void updateModel()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.ListMultipleChoice:java.util.Collection convertValue(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.lang.Object convertValue(java.lang.String[])"
        ]
    },
    "org.apache.wicket.markup.html.form.ListMultipleChoice:java.util.List convertChoiceIdsToChoices(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.ListMultipleChoice:java.util.Collection convertValue(java.lang.String[])"
        ]
    },
    "org.apache.wicket.markup.html.basic.EnumLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.NumberTextField:void convertInput()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void validate()"
        ]
    },
    "org.apache.wicket.markup.html.include.Include:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void setIterations(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigation:void setStartIndex()"
        ]
    },
    "org.apache.wicket.markup.html.list.ListView:void setModelObject(java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.IGenericComponent:org.apache.wicket.IGenericComponent setModelObject(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void updateCollectionModel(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.FormComponent:void updateModel()"
        ]
    },
    "org.apache.wicket.markup.html.list.PageableListView:long getPageCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.PageableListView:void setCurrentPage(long)"
        ]
    },
    "org.apache.wicket.markup.html.list.PageableListView:long getCurrentPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.PageableListView:long getFirstItemOffset()"
        ]
    },
    "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void onRender()"
        ]
    },
    "org.apache.wicket.AttributeModifier:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.html.internal.HtmlHeaderContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:void onRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRender()"
        ]
    },
    "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void onRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRender()"
        ]
    },
    "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void access$101(org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer$2:void run()"
        ]
    },
    "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment findMarkupInAssociatedFileHeader(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.IMarkupFragment getMarkup(org.apache.wicket.MarkupContainer,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.MarkupUtil$1:void component(org.apache.wicket.MarkupContainer,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.MarkupUtil$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.markup.IMarkupFragment getRegionMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.IMarkupFragment getRegionMarkup()",
            "org.apache.wicket.markup.html.panel.Panel:org.apache.wicket.markup.IMarkupFragment getRegionMarkup()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.DequeueContext newDequeueContext()"
        ]
    },
    "org.apache.wicket.Component:org.apache.wicket.MarkupContainer findParentWithAssociatedMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.image.resource.LocalizedImageResource:void loadStaticImage(java.lang.String)",
            "org.apache.wicket.markup.resolver.AutoLinkResolver$AnchorResolverDelegate:org.apache.wicket.Component newAutoComponent(java.lang.String,org.apache.wicket.markup.resolver.AutoLinkResolver$PathInfo)",
            "org.apache.wicket.markup.transformer.XsltTransformer:org.apache.wicket.util.resource.IResourceStream getResourceStream(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.Component get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.page.PartialPageUpdate:void <init>(org.apache.wicket.Page)",
            "org.apache.wicket.markup.resolver.AutoLinkResolver$ResourceReferenceAutolink:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.resolver.AutoLinkResolver$AutolinkBookmarkablePageLink:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.Component findChildComponent(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.resolver.WicketContainerResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.list.Loop$1:org.apache.wicket.Component next()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.request.component.IRequestableComponent get(java.lang.String)",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit(java.lang.String)",
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component getChildComponent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.Component get(java.lang.String)",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester selectMultiple(java.lang.String,int[],boolean)",
            "org.apache.wicket.markup.html.HeaderPartContainer:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.FormTester:java.lang.String getTextComponentValue(java.lang.String)",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester setFile(java.lang.String,org.apache.wicket.util.file.File,java.lang.String)",
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester setValue(java.lang.String,java.lang.String)",
            "org.apache.wicket.MarkupContainer:boolean renderNext(org.apache.wicket.markup.MarkupStream)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component getComponentFromLastRenderedPage(java.lang.String,boolean,boolean)",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester select(java.lang.String,int)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer addOrReplace(org.apache.wicket.Component[])",
            "org.apache.wicket.markup.html.list.ListView:void onPopulate()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer remove(java.lang.String)",
            "org.apache.wicket.protocol.http.AjaxEnclosureListener:boolean isControllerOfEnclosure(org.apache.wicket.Component,org.apache.wicket.markup.html.internal.Enclosure)",
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:void renderHeadForInnerSiblings(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)",
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component resolveChild(org.apache.wicket.MarkupContainer)",
            "org.apache.wicket.markup.html.list.ListView$4:org.apache.wicket.Component next()",
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:java.util.Map findAndRenderChildWicketTags(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelResolver:org.apache.wicket.Component findRelatedComponent(org.apache.wicket.MarkupContainer,java.lang.String)"
        ]
    },
    "org.apache.wicket.Component:org.apache.wicket.request.component.IRequestableComponent get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:void checkComponentTag(org.apache.wicket.markup.ComponentTag,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.image.ExternalSource:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AbstractCheckSelector:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.FormComponentLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.media.Source:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.TextArea:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.link.InlineFrame:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.media.Track:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Check:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.Picture:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.media.audio.Audio:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.InlineImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.ContextImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.CheckBox:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.TextField:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Radio:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.ImageButton:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.DropDownChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.Image:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.upload.FileUploadField:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.Source:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.link.ClientSideImageMap:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.ExternalImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.media.video.Video:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.Component:void checkComponentTagAttribute(org.apache.wicket.markup.ComponentTag,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.TextField:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Radio:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AbstractCheckSelector:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.ImageButton:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Check:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.upload.FileUploadField:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.CheckBox:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.WebPage:void onRender()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRender()"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void assertMarkupLocale(org.apache.wicket.Component,java.util.Locale)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertMarkupStyle(org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertMarkupVariation(org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.HeaderPartContainer:void <init>(java.lang.String,org.apache.wicket.MarkupContainer,org.apache.wicket.markup.IMarkupFragment)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.html.HeaderPartContainer getHeaderPart(org.apache.wicket.markup.html.WebMarkupContainer,java.lang.String,org.apache.wicket.markup.IMarkupFragment)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void assertComponentOnAjaxResponse(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.Object convertChoiceIdToChoice(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.Object convertValue(java.lang.String[])"
        ]
    },
    "org.apache.wicket.markup.html.list.ListView:void renderChild(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractRepeater:void onRender()"
        ]
    },
    "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:void renderMessage(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.ajax.form.AjaxFormValidatingBehavior$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.form.AjaxFormValidatingBehavior$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.basic.EnclosureContainer:void onConfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:boolean includeRenderCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:boolean includeRenderCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.request.handler.render.WebPageRenderer:void respond(org.apache.wicket.request.cycle.RequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.util.tester.BaseWicketTester$LastPageRecordingPageRendererProvider$1:void respond(org.apache.wicket.request.cycle.RequestCycle)"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.Object inThreadContext(java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer:void inThreadContext(java.lang.Runnable)",
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderPage(java.util.function.Supplier)"
        ]
    },
    "org.apache.wicket.Component:boolean isVisibleInHierarchy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void validate()",
            "org.apache.wicket.markup.html.form.Form$8:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.Component:boolean isVisibleInHierarchy()",
            "org.apache.wicket.ajax.form.AjaxFormValidatingBehavior$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isVisible(java.lang.String)",
            "org.apache.wicket.markup.renderStrategy.ParentFirstHeaderRenderStrategy$1:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.Form:boolean isFormComponentVisibleInPage(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.Component:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)",
            "org.apache.wicket.markup.html.form.Form$FormModelUpdateVisitor:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.Form$5:void component(org.apache.wicket.markup.html.form.Form,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.FormComponentPanel:void lambda$clearInput$0(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.Form$13:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.Form$15:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.html.form.FormComponent:void inputChanged()",
            "org.apache.wicket.Page$3:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy$1:boolean preCheck(org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.FormTester:java.lang.String[] getInputValue(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.Form:void process(org.apache.wicket.markup.html.form.IFormSubmitter)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component getComponentFromLastRenderedPage(java.lang.String,boolean,boolean)",
            "org.apache.wicket.markup.html.form.Form$ValidationVisitor:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.markup.repeater.AbstractPageableView:long getRowCount()",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isInvisible(java.lang.String)",
            "org.apache.wicket.markup.html.image.Image:boolean canCallListener()",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result checkUsability(org.apache.wicket.Component,boolean)",
            "org.apache.wicket.markup.html.form.Form$1:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.util.tester.FormTester$1:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.Component:boolean isStateless()",
            "org.apache.wicket.Component:boolean canCallListener()"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester submit(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer replace(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:org.apache.wicket.Component replaceWith(org.apache.wicket.Component)",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer addOrReplace(org.apache.wicket.Component[])"
        ]
    },
    "org.apache.wicket.ajax.AjaxRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.html.border.Border remove(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer remove(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer remove(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer remove(java.lang.String)",
            "org.apache.wicket.MarkupContainer$1MarkupChildIterator:void remove()",
            "org.apache.wicket.MarkupContainer:void addedComponent(org.apache.wicket.Component)",
            "org.apache.wicket.Component:void remove()"
        ]
    },
    "org.apache.wicket.markup.html.panel.BorderMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer queue(org.apache.wicket.Component[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:void <init>(java.lang.String,org.apache.wicket.model.IModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.border.Border:void <init>(java.lang.String)"
        ]
    },
    "org.apache.wicket.model.StringResourceModel:java.lang.String load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.StringResourceModel:java.lang.Object load()"
        ]
    },
    "org.apache.wicket.model.StringResourceModel$AssignmentWrapper:java.lang.Object load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.LoadableDetachableModel:java.lang.Object getObject()"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getDefaultLabel(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:org.apache.wicket.model.IModel findLabelContent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getDefaultLabel()",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel$1:java.lang.String load()"
        ]
    },
    "org.apache.wicket.response.filter.AjaxServerAndClientTimeFilter:java.lang.String getStatusString(long,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.response.filter.AjaxServerAndClientTimeFilter:org.apache.wicket.util.string.AppendingStringBuffer filter(org.apache.wicket.util.string.AppendingStringBuffer)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getString(org.apache.wicket.Localizer,java.lang.String,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getMessage(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.wicket.markup.html.form.EnumChoiceRenderer:java.lang.Object getDisplayValue(java.lang.Enum)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.EnumChoiceRenderer:java.lang.Object getDisplayValue(java.lang.Object)"
        ]
    },
    "org.apache.wicket.response.filter.ServerAndClientTimeFilter:org.apache.wicket.util.string.AppendingStringBuffer filter(org.apache.wicket.util.string.AppendingStringBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:java.lang.String getString(java.lang.String,org.apache.wicket.model.IModel,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabelMarker:void updateFrom(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.ajax.AjaxRequestTarget)",
            "org.apache.wicket.markup.parser.filter.WicketMessageTagHandler$AttributeLocalizer:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.Component:java.lang.String getString(java.lang.String,org.apache.wicket.model.IModel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField$CaptionModel:java.lang.String getObject()",
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigation$TitleAppender:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:java.lang.String getString(java.lang.String)",
            "org.apache.wicket.markup.html.form.Form:void onFileUploadException(org.apache.commons.fileupload.FileUploadException,java.util.Map)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void assertComponentFeedbackMessage(org.apache.wicket.Component,java.lang.String,org.apache.wicket.model.IModel,org.apache.wicket.feedback.IFeedbackMessageFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.feedback.FencedFeedbackPanel:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.protocol.http.WebSession:org.apache.wicket.protocol.http.request.WebClientInfo getClientInfo()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.WebSession:org.apache.wicket.core.request.ClientInfo getClientInfo()",
            "org.apache.wicket.markup.html.pages.BrowserInfoPage:org.apache.wicket.protocol.http.ClientProperties newClientInfo()",
            "org.apache.wicket.resource.DynamicJQueryResourceReference:java.lang.String getName()"
        ]
    },
    "org.apache.wicket.Page:void onConfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void configure()"
        ]
    },
    "org.apache.wicket.Page:boolean isPageStateless()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.Page:boolean peekPageStateless()",
            "org.apache.wicket.Component:org.apache.wicket.request.IRequestHandler createRequestHandler(org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.Integer)",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeListener(org.apache.wicket.Component)",
            "org.apache.wicket.request.handler.render.WebPageRenderer:boolean isPageStateless()",
            "org.apache.wicket.Page:void onAfterRender()",
            "org.apache.wicket.core.request.handler.PageAndComponentProvider:org.apache.wicket.request.component.IRequestableComponent getComponent()"
        ]
    },
    "org.apache.wicket.MarkupContainer$3:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.DefaultMapperContext:org.apache.wicket.request.component.IRequestablePage newPageInstance(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.PageProvider$Provision:org.apache.wicket.request.component.IRequestablePage getPage()"
        ]
    },
    "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler map(java.lang.Exception)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester$TestExceptionMapper:org.apache.wicket.request.IRequestHandler map(java.lang.Exception)",
            "org.apache.wicket.request.cycle.RequestCycle:org.apache.wicket.request.IRequestHandler handleException(java.lang.Exception)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void renderComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.MarkupContainer:void renderAssociatedMarkup(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence getCallbackScript(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxEventBehavior:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.head.IHeaderResponse)",
            "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence getCallbackScript()"
        ]
    },
    "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence getCallbackFunction(org.apache.wicket.ajax.attributes.CallbackParameter[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void clickLink(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:java.lang.Object getMarkupIdImpl()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.DefaultMarkupIdGenerator:java.lang.String generateMarkupId(org.apache.wicket.Component,boolean)"
        ]
    },
    "org.apache.wicket.markup.html.link.Link:java.lang.CharSequence appendAnchor(org.apache.wicket.markup.ComponentTag,java.lang.CharSequence)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.Link:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:java.lang.String getMethod()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form:void onFormSubmitted(org.apache.wicket.markup.html.form.IFormSubmitter)",
            "org.apache.wicket.markup.html.form.Form:boolean encodeUrlInHiddenFields()"
        ]
    },
    "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component getChildComponent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.MarkupContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component getChild()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$8:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertDisabled(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertEnabled(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form$FormModelUpdateVisitor:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form$5:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent:void processInput()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form$9:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$9:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior:void onEvent(org.apache.wicket.ajax.AjaxRequestTarget)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester$5:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester$5:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:void validateRequired()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void validate()"
        ]
    },
    "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationIncrementLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigationLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$ValidationVisitor:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.TextField:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.NumberTextField:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.PasswordTextField:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.DropDownChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.ListChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.ListMultipleChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckGroup:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.upload.FileUploadField:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.RadioChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponentPanel:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckBox:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.RadioGroup:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertUsability(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent:void updateAutoLabels(org.apache.wicket.ajax.AjaxRequestTarget)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$4:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior:void onEvent(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.util.tester.FormTester$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:boolean canCallListenerAfterExpiry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.Page$2:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Page$2:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.behavior.Behavior:boolean canCallListener(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.request.component.IRequestableComponent,org.apache.wicket.behavior.Behavior)",
            "org.apache.wicket.RequestListenerInterface:void invoke(org.apache.wicket.request.component.IRequestableComponent,org.apache.wicket.behavior.Behavior)"
        ]
    },
    "org.apache.wicket.markup.html.image.Image:boolean canCallListener()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void invoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.request.component.IRequestableComponent)",
            "org.apache.wicket.Component:boolean isStateless()",
            "org.apache.wicket.behavior.Behavior:boolean canCallListener(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.link.InlineFrame:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage$ContinueLink:void renderHead(org.apache.wicket.markup.head.IHeaderResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:void writeHiddenFields()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void submitForm(org.apache.wicket.markup.html.form.Form)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertFeedback(java.lang.String,java.io.Serializable[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.AjaxRequestHandler$2:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxRequestHandler$2:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.ajax.AjaxRequestHandler:void add(org.apache.wicket.Component,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxRequestHandler:void add(org.apache.wicket.Component[])"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester$4:void component(org.apache.wicket.Component,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester$4:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:java.lang.String getFormComponentValue(org.apache.wicket.markup.html.form.FormComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.FormTester:java.lang.String[] getInputValue(org.apache.wicket.markup.html.form.FormComponent)"
        ]
    },
    "org.apache.wicket.markup.html.form.TextArea:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.FormTester:java.lang.String getTextComponentValue(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.cookies.CookieUtils:void save(org.apache.wicket.markup.html.form.FormComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel:boolean anyMessage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FeedbackPanel$1:void onConfigure()"
        ]
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel:boolean anyErrorMessage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.util.Map addDefaultVars(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getMessage(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView$1:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getLabel()",
            "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView$1:org.apache.wicket.feedback.FeedbackMessage getObject()",
            "org.apache.wicket.Component:java.lang.Object getDefaultModelObject()",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:java.util.Map variablesMap()",
            "org.apache.wicket.markup.html.link.AbstractLink:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.model.ComponentPropertyModel$AssignmentWrapper:java.lang.Object getObject()",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:org.apache.wicket.model.IModel findLabelContent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.HTML5Attributes:void onInput(org.apache.wicket.markup.html.form.AbstractTextComponent,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AbstractChoice:java.util.List getChoices()",
            "org.apache.wicket.markup.html.form.ChoiceRenderer:java.lang.Object getObject(java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.image.ExternalImage:void buildSrcAttribute(org.apache.wicket.markup.ComponentTag,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.link.DownloadLink:void onClick()"
        ]
    },
    "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.validation.EqualInputValidator:void validate(org.apache.wicket.markup.html.form.Form)"
        ]
    },
    "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.HTML5Attributes:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.model.AbstractPropertyModel:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.AttributeModifier:java.lang.Object getReplacementOrNull(org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeBehavior(org.apache.wicket.behavior.AbstractAjaxBehavior)"
        ]
    },
    "org.apache.wicket.model.AbstractPropertyModel:java.lang.reflect.Method getPropertySetter()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.model.AbstractPropertyModel:java.lang.reflect.Field getPropertyField()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.model.AbstractPropertyModel:java.lang.reflect.Method getPropertyGetter()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.model.AbstractPropertyModel:java.lang.Class getObjectClass()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.image.ExternalImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.image.ExternalSource:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.image.Source:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.ListMultipleChoice:java.lang.Object convertValue(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent:void validate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$18:void validate(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.FormComponent:void processInput()",
            "org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior:void onEvent(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:void updateModel()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void setModelValue(java.lang.String[])",
            "org.apache.wicket.markup.html.form.FormComponent:void processInput()",
            "org.apache.wicket.markup.html.form.upload.FileUploadField:void updateModel()",
            "org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior:void onEvent(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.markup.html.list.PageableListView:void setCurrentPage(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.PageableListView:long getFirstItemOffset()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.PageableListView:int getViewSize()"
        ]
    },
    "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer$2:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.wicket.markup.html.MarkupUtil$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.markup.IMarkupFragment getRegionMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.DequeueContext newDequeueContext()"
        ]
    },
    "org.apache.wicket.markup.html.panel.Panel:org.apache.wicket.markup.IMarkupFragment getRegionMarkup()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:org.apache.wicket.DequeueContext newDequeueContext()"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.DequeueContext newDequeueContext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.MarkupContainer:void dequeue()"
        ]
    },
    "org.apache.wicket.markup.html.image.resource.LocalizedImageResource:void loadStaticImage(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.image.resource.LocalizedImageResource:void setSrcAttribute(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.transformer.XsltTransformer:org.apache.wicket.util.resource.IResourceStream getResourceStream(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.XsltTransformer:java.lang.CharSequence transform(org.apache.wicket.Component,java.lang.CharSequence)"
        ]
    },
    "org.apache.wicket.page.PartialPageUpdate:void <init>(org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.page.XmlPartialPageUpdate:void <init>(org.apache.wicket.Page)"
        ]
    },
    "org.apache.wicket.markup.resolver.AutoLinkResolver$ResourceReferenceAutolink:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.resolver.AutoLinkResolver$AutolinkBookmarkablePageLink:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.resolver.ComponentResolvers:org.apache.wicket.Component resolveByComponentHierarchy(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.Component findChildComponent(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.TransparentWebMarkupContainer:org.apache.wicket.Component findChildComponent(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.MarkupContainer:void dequeue(org.apache.wicket.DequeueContext)"
        ]
    },
    "org.apache.wicket.markup.resolver.WicketContainerResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.Loop$1:org.apache.wicket.Component next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.Loop$1:java.lang.Object next()"
        ]
    },
    "org.apache.wicket.MarkupContainer:org.apache.wicket.request.component.IRequestableComponent get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.PageAndComponentProvider:org.apache.wicket.request.component.IRequestableComponent getComponent()"
        ]
    },
    "org.apache.wicket.markup.html.internal.Enclosure:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.resolver.ComponentResolvers:org.apache.wicket.Component resolveByComponentHierarchy(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester selectMultiple(java.lang.String,int[],boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester selectMultiple(java.lang.String,int[])"
        ]
    },
    "org.apache.wicket.markup.html.HeaderPartContainer:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.resolver.ComponentResolvers:org.apache.wicket.Component resolveByComponentHierarchy(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester setFile(java.lang.String,org.apache.wicket.util.file.File,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.resolver.ComponentResolvers:org.apache.wicket.Component resolveByComponentHierarchy(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester setValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester setValue(java.lang.String,boolean)",
            "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester selectMultiple(java.lang.String,int[],boolean)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component getComponentFromLastRenderedPage(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component getComponentFromLastRenderedPage(java.lang.String,boolean)",
            "org.apache.wicket.util.tester.BaseWicketTester:void assertNotExists(java.lang.String)"
        ]
    },
    "org.apache.wicket.protocol.http.AjaxEnclosureListener:boolean isControllerOfEnclosure(org.apache.wicket.Component,org.apache.wicket.markup.html.internal.Enclosure)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.AjaxEnclosureListener$1:void component(org.apache.wicket.markup.html.internal.InlineEnclosure,org.apache.wicket.util.visit.IVisit)",
            "org.apache.wicket.util.tester.BaseWicketTester:void lambda$isComponentOnAjaxResponse$1(org.apache.wicket.Component,org.apache.wicket.markup.html.internal.Enclosure,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.list.ListView$4:org.apache.wicket.Component next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.list.ListView$4:java.lang.Object next()"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelResolver:org.apache.wicket.Component findRelatedComponent(org.apache.wicket.MarkupContainer,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.image.ExternalSource:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponentLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.media.Source:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.media.Track:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.image.Picture:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.media.audio.Audio:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.image.InlineImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.image.ContextImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.link.ClientSideImageMap:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.media.video.Video:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:org.apache.wicket.markup.html.HeaderPartContainer getHeaderPart(org.apache.wicket.markup.html.WebMarkupContainer,java.lang.String,org.apache.wicket.markup.IMarkupFragment)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy:void renderHeadFromAssociatedMarkupFile(org.apache.wicket.markup.html.WebMarkupContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractSingleSelectChoice:java.lang.Object convertValue(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.form.AjaxFormValidatingBehavior$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester$LastPageRecordingPageRendererProvider$1:void respond(org.apache.wicket.request.cycle.RequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.util.tester.BaseWicketTester$LastPageRecordingPageRendererProvider$1:void respond(org.apache.wicket.request.cycle.RequestCycle)"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:void inThreadContext(java.lang.Runnable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer:void <init>(org.apache.wicket.Application)",
            "org.apache.wicket.core.util.string.ComponentRenderer:void destroy()"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderPage(java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderComponent(java.util.function.Supplier)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isVisible(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertVisible(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:boolean isFormComponentVisibleInPage(org.apache.wicket.markup.html.form.FormComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void validateFormValidator(org.apache.wicket.markup.html.form.validation.IFormValidator)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponentPanel:void lambda$clearInput$0(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form$13:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$13:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$15:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$15:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy$1:boolean preCheck(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor:org.apache.wicket.util.visit.Visit visit(org.apache.wicket.Component,org.apache.wicket.util.visit.Visit)"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractPageableView:long getRowCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractPageableView:long getViewSize()",
            "org.apache.wicket.markup.repeater.AbstractPageableView:long getPageCount()"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isInvisible(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertInvisible(java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$1:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.html.border.Border:org.apache.wicket.MarkupContainer remove(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.border.Border:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.validation.FormComponentFeedbackBorder:void <init>(java.lang.String)"
        ]
    },
    "org.apache.wicket.model.StringResourceModel:java.lang.Object load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.LoadableDetachableModel:java.lang.Object getObject()"
        ]
    },
    "org.apache.wicket.model.LoadableDetachableModel:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getLabel()",
            "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView$1:org.apache.wicket.feedback.FeedbackMessage getObject()",
            "org.apache.wicket.markup.html.pages.BrowserInfoPage$2:org.apache.wicket.protocol.http.ClientProperties load()",
            "org.apache.wicket.model.StringResourceModel$AssignmentWrapper:java.lang.String load()",
            "org.apache.wicket.Component:java.lang.Object getDefaultModelObject()",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:java.util.Map variablesMap()",
            "org.apache.wicket.markup.html.link.AbstractLink:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.pages.BrowserInfoPage$3:void afterSubmit()",
            "org.apache.wicket.model.ComponentPropertyModel$AssignmentWrapper:java.lang.Object getObject()",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:org.apache.wicket.model.IModel findLabelContent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.resource.FileSystemResource:java.nio.file.Path getPath()",
            "org.apache.wicket.markup.html.HTML5Attributes:void onInput(org.apache.wicket.markup.html.form.AbstractTextComponent,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AbstractChoice:java.util.List getChoices()",
            "org.apache.wicket.markup.html.form.ChoiceRenderer:java.lang.Object getObject(java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.image.ExternalImage:void buildSrcAttribute(org.apache.wicket.markup.ComponentTag,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.link.DownloadLink:void onClick()"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:java.lang.String getDefaultLabel()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getLabel()"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel$1:java.lang.String load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel$1:java.lang.Object load()"
        ]
    },
    "org.apache.wicket.response.filter.AjaxServerAndClientTimeFilter:org.apache.wicket.util.string.AppendingStringBuffer filter(org.apache.wicket.util.string.AppendingStringBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getMessage(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.validation.ValidationError:java.io.Serializable getErrorMessage(org.apache.wicket.validation.IErrorMessageSource)"
        ]
    },
    "org.apache.wicket.markup.html.form.EnumChoiceRenderer:java.lang.Object getDisplayValue(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.parser.filter.WicketMessageTagHandler$AttributeLocalizer:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField$CaptionModel:java.lang.String getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField$CaptionModel:java.lang.Object getObject()"
        ]
    },
    "org.apache.wicket.markup.html.navigation.paging.PagingNavigation$TitleAppender:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:java.lang.String getString(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponentLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void renderHead(org.apache.wicket.markup.head.IHeaderResponse)",
            "org.apache.wicket.markup.parser.filter.WicketMessageTagHandler$AttributeLocalizer:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.repeater.OddEvenItem:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.list.OddEvenListItem:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form:void writeHiddenFields()",
            "org.apache.wicket.markup.html.form.Form:void appendDefaultButtonField()",
            "org.apache.wicket.markup.html.form.EnumChoiceRenderer:java.lang.Object getDisplayValue(java.lang.Enum)",
            "org.apache.wicket.markup.html.basic.EnumLabel:java.lang.String getStringValue()",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField$CaptionModel:java.lang.String getObject()",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:org.apache.wicket.model.IModel findLabelContent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FeedbackPanel:java.lang.String getCSSClass(org.apache.wicket.feedback.FeedbackMessage)",
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigator$TitleAppender:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:void onFileUploadException(org.apache.commons.fileupload.FileUploadException,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:boolean handleMultiPart()"
        ]
    },
    "org.apache.wicket.protocol.http.WebSession:org.apache.wicket.core.request.ClientInfo getClientInfo()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage:org.apache.wicket.protocol.http.ClientProperties newClientInfo()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.resource.DynamicJQueryResourceReference:java.lang.String getName()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Page:boolean peekPageStateless()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Page:void onBeforeRender()"
        ]
    },
    "org.apache.wicket.request.handler.render.WebPageRenderer:boolean isPageStateless()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.handler.render.WebPageRenderer:boolean shouldRedirectToTargetUrl(org.apache.wicket.request.cycle.RequestCycle,org.apache.wicket.request.Url,org.apache.wicket.request.Url)",
            "org.apache.wicket.request.handler.render.WebPageRenderer:boolean shouldRenderPageAndWriteResponse(org.apache.wicket.request.cycle.RequestCycle,org.apache.wicket.request.Url,org.apache.wicket.request.Url)",
            "org.apache.wicket.request.handler.render.WebPageRenderer:void respond(org.apache.wicket.request.cycle.RequestCycle)"
        ]
    },
    "org.apache.wicket.core.request.handler.PageProvider$Provision:org.apache.wicket.request.component.IRequestablePage getPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.PageProvider:org.apache.wicket.request.component.IRequestablePage getPageInstance()"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester$TestExceptionMapper:org.apache.wicket.request.IRequestHandler map(java.lang.Exception)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester$TestExceptionMapper:org.apache.wicket.request.IRequestHandler map(java.lang.Exception)",
            "org.apache.wicket.request.cycle.RequestCycle:org.apache.wicket.request.IRequestHandler handleException(java.lang.Exception)"
        ]
    },
    "org.apache.wicket.request.cycle.RequestCycle:org.apache.wicket.request.IRequestHandler handleException(java.lang.Exception)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.cycle.RequestCycle:boolean executeExceptionRequestHandler(java.lang.Exception,int)"
        ]
    },
    "org.apache.wicket.MarkupContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.internal.HtmlHeaderContainer:void renderHeaderTagBody(org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState)",
            "org.apache.wicket.markup.html.form.Form:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void access$001(org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.link.AbstractLink:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Button:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void access$001(org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence getCallbackScript()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxNewWindowNotifyingBehavior:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.head.IHeaderResponse)",
            "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:void setTimeout(org.apache.wicket.markup.head.IHeaderResponse)"
        ]
    },
    "org.apache.wicket.DefaultMarkupIdGenerator:java.lang.String generateMarkupId(org.apache.wicket.Component,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:java.lang.String getMarkupId(boolean)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:boolean encodeUrlInHiddenFields()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForSubmitter(org.apache.wicket.markup.html.form.IFormSubmittingComponent)",
            "org.apache.wicket.markup.html.form.Form:void writeHiddenFields()",
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForListenerUrl(java.lang.CharSequence)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$9:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester$5:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.NumberTextField:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.PasswordTextField:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.ListChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$4:void component(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$4:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.Page$2:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy:void onComponentTagBody(org.apache.wicket.Component,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.ajax.AjaxRequestHandler$2:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester$4:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel$1:void onConfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void configure()"
        ]
    },
    "org.apache.wicket.markup.html.form.validation.EqualInputValidator:void validate(org.apache.wicket.markup.html.form.Form)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.AttributeModifier:java.lang.Object getReplacementOrNull(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.AttributeModifier:void replaceAttributeValue(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$18:void validate(org.apache.wicket.markup.html.form.FormComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent:void setModelValue(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.cookies.CookieUtils:java.lang.String load(org.apache.wicket.markup.html.form.FormComponent)"
        ]
    },
    "org.apache.wicket.markup.html.form.upload.FileUploadField:void updateModel()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.page.XmlPartialPageUpdate:void <init>(org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxRequestHandler$1:void <init>(org.apache.wicket.ajax.AjaxRequestHandler,org.apache.wicket.Page)"
        ]
    },
    "org.apache.wicket.markup.html.list.Loop$1:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester selectMultiple(java.lang.String,int[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.FormTester:org.apache.wicket.util.tester.FormTester setValue(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component getComponentFromLastRenderedPage(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isVisible(java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component getComponentFromLastRenderedPage(java.lang.String)",
            "org.apache.wicket.util.tester.WicketTester:void assertComponentOnAjaxResponse(java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isInvisible(java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void assertNotExists(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.protocol.http.AjaxEnclosureListener$1:void component(org.apache.wicket.markup.html.internal.InlineEnclosure,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.AjaxEnclosureListener$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void lambda$isComponentOnAjaxResponse$1(org.apache.wicket.Component,org.apache.wicket.markup.html.internal.Enclosure,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.ListView$4:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.AutoLabelTextResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:void <init>(org.apache.wicket.Application)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.util.string.ComponentRenderer:void <init>()"
        ]
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:void destroy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderComponent(java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertVisible(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form:void validateFormValidator(org.apache.wicket.markup.html.form.validation.IFormValidator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void validateFormValidators()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$13:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form$15:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.repeater.AbstractPageableView:long getViewSize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractPageableView:java.util.Iterator getItemModels()"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractPageableView:long getPageCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractPageableView:long getCurrentPage()"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void assertInvisible(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage$2:org.apache.wicket.protocol.http.ClientProperties load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.BrowserInfoPage$2:java.lang.Object load()"
        ]
    },
    "org.apache.wicket.resource.FileSystemResource:java.nio.file.Path getPath()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.resource.FileSystemResource:org.apache.wicket.request.resource.AbstractResource$ResourceResponse newResourceResponse(org.apache.wicket.request.resource.IResource$Attributes)",
            "org.apache.wicket.resource.FileSystemResource:java.io.InputStream getInputStream()",
            "org.apache.wicket.resource.FileSystemResource:long getSize()",
            "org.apache.wicket.resource.FileSystemResource:java.lang.String getMimeType()"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel$1:java.lang.Object load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.LoadableDetachableModel:java.lang.Object getObject()"
        ]
    },
    "org.apache.wicket.validation.ValidationError:java.io.Serializable getErrorMessage(org.apache.wicket.validation.IErrorMessageSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void error(org.apache.wicket.validation.IValidationError)"
        ]
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField$CaptionModel:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent$MessageSource:java.lang.String getLabel()",
            "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView$1:org.apache.wicket.feedback.FeedbackMessage getObject()",
            "org.apache.wicket.Component:java.lang.Object getDefaultModelObject()",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:java.util.Map variablesMap()",
            "org.apache.wicket.markup.html.link.AbstractLink:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.model.ComponentPropertyModel$AssignmentWrapper:java.lang.Object getObject()",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:org.apache.wicket.model.IModel findLabelContent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void onComponentTagBody(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.HTML5Attributes:void onInput(org.apache.wicket.markup.html.form.AbstractTextComponent,org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AbstractChoice:java.util.List getChoices()",
            "org.apache.wicket.markup.html.form.ChoiceRenderer:java.lang.Object getObject(java.lang.String,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.image.ExternalImage:void buildSrcAttribute(org.apache.wicket.markup.ComponentTag,org.apache.wicket.model.IModel)",
            "org.apache.wicket.markup.html.link.DownloadLink:void onClick()"
        ]
    },
    "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void renderHead(org.apache.wicket.markup.head.IHeaderResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.markup.repeater.OddEvenItem:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.list.OddEvenListItem:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form:void appendDefaultButtonField()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void writeHiddenFields()"
        ]
    },
    "org.apache.wicket.markup.html.panel.FeedbackPanel:java.lang.String getCSSClass(org.apache.wicket.feedback.FeedbackMessage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView:void populateItem(org.apache.wicket.markup.html.list.ListItem)"
        ]
    },
    "org.apache.wicket.markup.html.navigation.paging.PagingNavigator$TitleAppender:void onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.request.handler.render.WebPageRenderer:boolean shouldRedirectToTargetUrl(org.apache.wicket.request.cycle.RequestCycle,org.apache.wicket.request.Url,org.apache.wicket.request.Url)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.handler.render.WebPageRenderer:void respond(org.apache.wicket.request.cycle.RequestCycle)"
        ]
    },
    "org.apache.wicket.request.handler.render.WebPageRenderer:boolean shouldRenderPageAndWriteResponse(org.apache.wicket.request.cycle.RequestCycle,org.apache.wicket.request.Url,org.apache.wicket.request.Url)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.handler.render.WebPageRenderer:void respond(org.apache.wicket.request.cycle.RequestCycle)"
        ]
    },
    "org.apache.wicket.core.request.handler.PageProvider:org.apache.wicket.request.component.IRequestablePage getPageInstance()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.PageProvider:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()",
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(org.apache.wicket.core.request.handler.IPageProvider,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)",
            "org.apache.wicket.core.request.handler.PageProvider:java.lang.Class getPageClass()",
            "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:org.apache.wicket.request.component.IRequestablePage getPage()",
            "org.apache.wicket.markup.html.link.InlineFrame:void onRequest()",
            "org.apache.wicket.request.handler.render.PageRenderer:org.apache.wicket.request.component.IRequestablePage getPage()",
            "org.apache.wicket.core.request.handler.PageAndComponentProvider:org.apache.wicket.request.component.IRequestableComponent getComponent()",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:org.apache.wicket.request.component.IRequestablePage getPage()",
            "org.apache.wicket.util.tester.BaseWicketTester$LastPageRecordingPageRendererProvider$1:void respond(org.apache.wicket.request.cycle.RequestCycle)",
            "org.apache.wicket.core.request.mapper.AbstractBookmarkableMapper:org.apache.wicket.request.IRequestHandler processHybrid(org.apache.wicket.request.mapper.info.PageInfo,java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.Integer)",
            "org.apache.wicket.core.util.string.ComponentRenderer:java.lang.CharSequence renderPage(org.apache.wicket.core.request.handler.PageProvider)",
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:org.apache.wicket.request.component.IRequestablePage getPage()"
        ]
    },
    "org.apache.wicket.request.cycle.RequestCycle:boolean executeExceptionRequestHandler(java.lang.Exception,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.cycle.RequestCycle:boolean executeExceptionRequestHandler(java.lang.Exception,int)",
            "org.apache.wicket.request.cycle.RequestCycle:boolean processRequest()"
        ]
    },
    "org.apache.wicket.markup.html.internal.HtmlHeaderContainer:void renderHeaderTagBody(org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.renderStrategy.AbstractHeaderRenderStrategy:void renderRootComponent(org.apache.wicket.markup.html.internal.HtmlHeaderContainer,org.apache.wicket.markup.html.internal.HtmlHeaderContainer$HeaderStreamState,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void access$001(org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer$1:void run()"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void access$001(org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel$2:void executeInsideBufferedZone()"
        ]
    },
    "org.apache.wicket.ajax.AjaxNewWindowNotifyingBehavior:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.head.IHeaderResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:void setTimeout(org.apache.wicket.markup.head.IHeaderResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:void restart(org.apache.wicket.core.request.handler.IPartialPageRequestHandler)",
            "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.head.IHeaderResponse)",
            "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:void respond(org.apache.wicket.ajax.AjaxRequestTarget)"
        ]
    },
    "org.apache.wicket.Component:java.lang.String getMarkupId(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:java.lang.String getMarkupId()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForListenerUrl(java.lang.CharSequence)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForInterfaceUrl(java.lang.CharSequence)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$4:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.cookies.CookieUtils:java.lang.String load(org.apache.wicket.markup.html.form.FormComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.AjaxRequestHandler$1:void <init>(org.apache.wicket.ajax.AjaxRequestHandler,org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxRequestHandler:void <init>(org.apache.wicket.Page)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component getComponentFromLastRenderedPage(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result hasLabel(java.lang.String,java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeAjaxEvent(java.lang.String,java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String,boolean)",
            "org.apache.wicket.util.tester.WicketTester:void assertFeedback(java.lang.String,java.io.Serializable[])",
            "org.apache.wicket.util.tester.WicketTester:void assertListView(java.lang.String,java.util.List)",
            "org.apache.wicket.util.tester.WicketTester:void assertLabel(java.lang.String,java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.FormTester newFormTester(java.lang.String,boolean)",
            "org.apache.wicket.util.tester.BaseWicketTester:void assertListView(java.lang.String,java.util.List)",
            "org.apache.wicket.util.tester.WicketTester:void assertModelValue(java.lang.String,java.lang.Object)",
            "org.apache.wicket.util.tester.WicketTester:void assertBookmarkablePageLink(java.lang.String,java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component assertExists(java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:void submitForm(java.lang.String)"
        ]
    },
    "org.apache.wicket.protocol.http.AjaxEnclosureListener$1:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.util.string.ComponentRenderer:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form:void validateFormValidators()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:void validate()",
            "org.apache.wicket.markup.html.form.Form$19:void component(org.apache.wicket.markup.html.form.Form,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractPageableView:java.util.Iterator getItemModels()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.RefreshingView:void onPopulate()"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractPageableView:long getCurrentPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractPageableView:long getFirstItemOffset()"
        ]
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage$2:java.lang.Object load()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.model.LoadableDetachableModel:java.lang.Object getObject()"
        ]
    },
    "org.apache.wicket.resource.FileSystemResource:org.apache.wicket.request.resource.AbstractResource$ResourceResponse newResourceResponse(org.apache.wicket.request.resource.IResource$Attributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.resource.AbstractResource:void respond(org.apache.wicket.request.resource.IResource$Attributes)"
        ]
    },
    "org.apache.wicket.resource.FileSystemResource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.resource.FileSystemResource:org.apache.wicket.request.resource.AbstractResource$ResourceResponse createResourceResponse(org.apache.wicket.request.resource.IResource$Attributes,java.nio.file.Path)"
        ]
    },
    "org.apache.wicket.resource.FileSystemResource:long getSize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.resource.FileSystemResource:org.apache.wicket.request.resource.AbstractResource$ResourceResponse createResourceResponse(org.apache.wicket.request.resource.IResource$Attributes,java.nio.file.Path)"
        ]
    },
    "org.apache.wicket.resource.FileSystemResource:java.lang.String getMimeType()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.resource.FileSystemResource:org.apache.wicket.request.resource.AbstractResource$ResourceResponse createResourceResponse(org.apache.wicket.request.resource.IResource$Attributes,java.nio.file.Path)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:void error(org.apache.wicket.validation.IValidationError)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void reportRequiredError()",
            "org.apache.wicket.markup.html.form.FormComponent$ValidatableAdapter:void error(org.apache.wicket.validation.IValidationError)",
            "org.apache.wicket.markup.html.form.NumberTextField:void convertInput()",
            "org.apache.wicket.markup.html.form.FormComponent:void convertInput()",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.wicket.core.request.handler.PageProvider:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()",
            "org.apache.wicket.core.request.handler.BookmarkablePageRequestHandler:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()",
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()",
            "org.apache.wicket.core.request.handler.logger.PageLogData:void <init>(org.apache.wicket.core.request.handler.IPageProvider)"
        ]
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(org.apache.wicket.core.request.handler.IPageProvider,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(org.apache.wicket.request.component.IRequestablePage)",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void internalInvoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.Component,java.lang.Object)",
            "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.core.request.handler.RenderPageRequestHandler createPageRequestHandler(org.apache.wicket.core.request.handler.PageProvider)",
            "org.apache.wicket.NonResettingRestartException:org.apache.wicket.request.IRequestHandler createRequestHandler(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)",
            "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)",
            "org.apache.wicket.RestartResponseAtInterceptPageException:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(org.apache.wicket.core.request.handler.IPageProvider)",
            "org.apache.wicket.RestartResponseException:void <init>(org.apache.wicket.core.request.handler.IPageProvider,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)",
            "org.apache.wicket.RestartResponseAtInterceptPageException:void <init>(org.apache.wicket.Page)"
        ]
    },
    "org.apache.wicket.core.request.handler.PageProvider:java.lang.Class getPageClass()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.BookmarkablePageRequestHandler:java.lang.Class getPageClass()",
            "org.apache.wicket.core.request.handler.logger.PageLogData:java.lang.Class tryToGetPageClass(org.apache.wicket.core.request.handler.IPageProvider)",
            "org.apache.wicket.core.request.handler.PageAndComponentProvider:org.apache.wicket.request.component.IRequestableComponent getComponent()",
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:java.lang.Class getPageClass()",
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:java.lang.Class getPageClass()",
            "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:java.lang.Class getPageClass()"
        ]
    },
    "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:org.apache.wicket.request.component.IRequestablePage getPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.link.InlineFrame:void onRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void internalInvoke(org.apache.wicket.request.IRequestCycle,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy,boolean,org.apache.wicket.Component,java.lang.Object)"
        ]
    },
    "org.apache.wicket.request.handler.render.PageRenderer:org.apache.wicket.request.component.IRequestablePage getPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.handler.render.WebPageRenderer:org.apache.wicket.protocol.http.BufferedWebResponse renderPage(org.apache.wicket.request.Url,org.apache.wicket.request.cycle.RequestCycle)",
            "org.apache.wicket.request.handler.render.WebPageRenderer:boolean isPageStateless()",
            "org.apache.wicket.request.handler.render.WebPageRenderer:void respond(org.apache.wicket.request.cycle.RequestCycle)"
        ]
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:org.apache.wicket.request.component.IRequestablePage getPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.ListenerRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.core.request.mapper.AbstractBookmarkableMapper:org.apache.wicket.request.IRequestHandler processHybrid(org.apache.wicket.request.mapper.info.PageInfo,java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.Integer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.mapper.AbstractBookmarkableMapper:org.apache.wicket.request.IRequestHandler mapRequest(org.apache.wicket.request.Request)"
        ]
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:org.apache.wicket.request.component.IRequestablePage getPage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.request.cycle.RequestCycle:boolean processRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.cycle.RequestCycle:boolean processRequestAndDetach()"
        ]
    },
    "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel$2:void executeInsideBufferedZone()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.internal.ResponseBufferZone:java.lang.CharSequence execute()"
        ]
    },
    "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:void restart(org.apache.wicket.core.request.handler.IPartialPageRequestHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.head.IHeaderResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxClientInfoBehavior:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.head.IHeaderResponse)"
        ]
    },
    "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:void respond(org.apache.wicket.ajax.AjaxRequestTarget)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:java.lang.String getMarkupId()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelResolver:java.lang.String getLabelIdFor(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.form.CheckboxMultipleChoiceSelector:java.lang.CharSequence getFindCheckboxesFunction()",
            "org.apache.wicket.Component:void renderComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:java.lang.String getTimerId()",
            "org.apache.wicket.markup.html.form.Form:void renderPlaceholderTag(org.apache.wicket.markup.ComponentTag,org.apache.wicket.request.Response)",
            "org.apache.wicket.markup.html.link.ClientSideImageMap$UsemapModel:java.lang.String getObject()",
            "org.apache.wicket.markup.html.link.Link:java.lang.CharSequence appendAnchor(org.apache.wicket.markup.ComponentTag,java.lang.CharSequence)",
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:java.lang.String getCheckBoxMarkupId(java.lang.String)",
            "org.apache.wicket.ajax.AjaxRequestHandler:void focusComponent(org.apache.wicket.Component)",
            "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:java.lang.CharSequence renderAjaxAttributes(org.apache.wicket.Component,org.apache.wicket.ajax.attributes.AjaxRequestAttributes)",
            "org.apache.wicket.markup.html.pages.BrowserInfoForm:java.lang.String getFormMarkupId()",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField:void renderHead(org.apache.wicket.markup.head.IHeaderResponse)",
            "org.apache.wicket.ajax.AjaxRequestHandler:void add(org.apache.wicket.Component[])",
            "org.apache.wicket.ajax.form.AjaxFormSubmitBehavior:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)",
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForListenerUrl(java.lang.CharSequence)",
            "org.apache.wicket.markup.html.form.AbstractCheckSelector:void renderHead(org.apache.wicket.markup.head.IHeaderResponse)",
            "org.apache.wicket.Component:void internalRenderComponent()",
            "org.apache.wicket.markup.html.form.SubmitLink:java.lang.CharSequence getTriggerJavaScript()",
            "org.apache.wicket.markup.html.form.RadioChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)",
            "org.apache.wicket.Component:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isComponentOnAjaxResponse(org.apache.wicket.Component)",
            "org.apache.wicket.markup.html.form.Form:java.lang.String getHiddenFieldsId()",
            "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForSubmitter(org.apache.wicket.markup.html.form.IFormSubmittingComponent)",
            "org.apache.wicket.ajax.form.AjaxFormValidatingBehavior$FormValidateVisitor$1:void updateAjaxAttributes(org.apache.wicket.ajax.attributes.AjaxRequestAttributes)",
            "org.apache.wicket.Component:java.lang.String getAjaxRegionMarkupId()"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForInterfaceUrl(java.lang.CharSequence)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.AjaxRequestHandler:void <init>(org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.WebApplication:org.apache.wicket.ajax.AjaxRequestTarget newAjaxRequestTarget(org.apache.wicket.Page)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void assertBookmarkablePageLink(java.lang.String,java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component assertExists(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.markup.html.form.FormComponent assertFormComponent(java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isComponent(java.lang.String,java.lang.Class)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isDisabled(java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isEnabled(java.lang.String)",
            "org.apache.wicket.util.tester.WicketTester:void assertBehavior(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form$19:void component(org.apache.wicket.markup.html.form.Form,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form$19:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)"
        ]
    },
    "org.apache.wicket.markup.repeater.AbstractPageableView:long getFirstItemOffset()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.repeater.AbstractPageableView:java.util.Iterator getItemModels()",
            "org.apache.wicket.markup.repeater.AbstractPageableView:long getViewSize()"
        ]
    },
    "org.apache.wicket.request.resource.AbstractResource:void respond(org.apache.wicket.request.resource.IResource$Attributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.resource.FileSystemResource:void respond(org.apache.wicket.request.resource.IResource$Attributes)",
            "org.apache.wicket.request.handler.resource.ResourceRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.resource.FileSystemResource:org.apache.wicket.request.resource.AbstractResource$ResourceResponse createResourceResponse(org.apache.wicket.request.resource.IResource$Attributes,java.nio.file.Path)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.resource.FileSystemResource:org.apache.wicket.request.resource.AbstractResource$ResourceResponse newResourceResponse(org.apache.wicket.request.resource.IResource$Attributes)"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent:void reportRequiredError()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void validate()",
            "org.apache.wicket.markup.html.form.FormComponent:void validateRequired()"
        ]
    },
    "org.apache.wicket.markup.html.form.FormComponent$ValidatableAdapter:void error(org.apache.wicket.validation.IValidationError)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.FormComponent:void convertInput()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractTextComponent:void convertInput()",
            "org.apache.wicket.markup.html.form.FormComponent:void validate()"
        ]
    },
    "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent)",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent,java.lang.String)",
            "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent,java.util.Map)"
        ]
    },
    "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.BookmarkablePageRequestHandler:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:org.apache.wicket.request.mapper.parameter.PageParameters getPageParameters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.logger.PageLogData:void <init>(org.apache.wicket.core.request.handler.IPageProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.BookmarkablePageRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.core.request.handler.logger.ListenerLogData:void <init>(org.apache.wicket.core.request.handler.IPageAndComponentProvider,java.lang.Integer)"
        ]
    },
    "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(org.apache.wicket.request.component.IRequestablePage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void setResponsePage(org.apache.wicket.request.component.IRequestablePage)"
        ]
    },
    "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.core.request.handler.RenderPageRequestHandler createPageRequestHandler(org.apache.wicket.core.request.handler.PageProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler mapExpectedExceptions(java.lang.Exception,org.apache.wicket.Application)",
            "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler mapUnexpectedExceptions(java.lang.Exception,org.apache.wicket.Application)"
        ]
    },
    "org.apache.wicket.NonResettingRestartException:org.apache.wicket.request.IRequestHandler createRequestHandler(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.NonResettingRestartException:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)"
        ]
    },
    "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(java.lang.Class,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)",
            "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(java.lang.Class)"
        ]
    },
    "org.apache.wicket.RestartResponseAtInterceptPageException:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.RestartResponseAtInterceptPageException:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(org.apache.wicket.core.request.handler.IPageProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.RedirectPage:void <init>(org.apache.wicket.Page,int)",
            "org.apache.wicket.core.request.mapper.AbstractBookmarkableMapper:org.apache.wicket.request.IRequestHandler processBookmarkable(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.core.request.mapper.PageInstanceMapper:org.apache.wicket.request.IRequestHandler mapRequest(org.apache.wicket.request.Request)",
            "org.apache.wicket.ajax.AjaxRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)",
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler mapExpectedExceptions(java.lang.Exception,org.apache.wicket.Application)",
            "org.apache.wicket.core.request.mapper.AbstractBookmarkableMapper:org.apache.wicket.request.IRequestHandler processHybrid(org.apache.wicket.request.mapper.info.PageInfo,java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.Integer)",
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(org.apache.wicket.request.component.IRequestablePage)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Page startPage(org.apache.wicket.core.request.handler.IPageProvider)"
        ]
    },
    "org.apache.wicket.RestartResponseException:void <init>(org.apache.wicket.core.request.handler.IPageProvider,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.RestartResponseException:void <init>(org.apache.wicket.request.component.IRequestablePage)",
            "org.apache.wicket.RestartResponseException:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.RestartResponseAtInterceptPageException:void <init>(org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void redirectToInterceptPage(org.apache.wicket.Page)",
            "org.apache.wicket.protocol.http.WebSession:org.apache.wicket.protocol.http.request.WebClientInfo getClientInfo()"
        ]
    },
    "org.apache.wicket.core.request.handler.BookmarkablePageRequestHandler:java.lang.Class getPageClass()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.logger.PageLogData:java.lang.Class tryToGetPageClass(org.apache.wicket.core.request.handler.IPageProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.logger.PageLogData:void <init>(org.apache.wicket.core.request.handler.IPageProvider)"
        ]
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:java.lang.Class getPageClass()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.ListenerRequestHandler:java.lang.Class getPageClass()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.BookmarkableListenerRequestHandler:java.lang.Class getPageClass()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.mapper.AbstractBookmarkableMapper:org.apache.wicket.request.IRequestHandler mapRequest(org.apache.wicket.request.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.request.cycle.RequestCycle:boolean processRequestAndDetach()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest(org.apache.wicket.protocol.http.mock.MockHttpServletRequest,org.apache.wicket.request.IRequestHandler,boolean)",
            "org.apache.wicket.protocol.http.WicketFilter:boolean processRequestCycle(org.apache.wicket.request.cycle.RequestCycle,org.apache.wicket.request.http.WebResponse,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.wicket.markup.html.internal.ResponseBufferZone:java.lang.CharSequence execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:org.apache.wicket.model.IModel findLabelContent(org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.ajax.AjaxClientInfoBehavior:void renderHead(org.apache.wicket.Component,org.apache.wicket.markup.head.IHeaderResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.AutoLabelResolver:java.lang.String getLabelIdFor(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabelMarker:void updateFrom(org.apache.wicket.markup.html.form.FormComponent,org.apache.wicket.ajax.AjaxRequestTarget)",
            "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabel:void <init>(java.lang.String,org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckboxMultipleChoiceSelector:java.lang.CharSequence getFindCheckboxesFunction()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:java.lang.String getTimerId()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AbstractAjaxTimerBehavior:void setTimeout(org.apache.wicket.markup.head.IHeaderResponse)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:void renderPlaceholderTag(org.apache.wicket.markup.ComponentTag,org.apache.wicket.request.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRender()"
        ]
    },
    "org.apache.wicket.markup.html.link.ClientSideImageMap$UsemapModel:java.lang.String getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.ClientSideImageMap$UsemapModel:java.lang.Object getObject()",
            "org.apache.wicket.markup.html.link.ClientSideImageMap$UsemapModel:java.io.Serializable getObject()"
        ]
    },
    "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:java.lang.String getCheckBoxMarkupId(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.CheckBoxMultipleChoice:void appendOptionHtml(org.apache.wicket.util.string.AppendingStringBuffer,java.lang.Object,int,java.lang.String)"
        ]
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoForm:java.lang.String getFormMarkupId()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.pages.BrowserInfoPage:void renderHead(org.apache.wicket.markup.head.IHeaderResponse)"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractCheckSelector:void renderHead(org.apache.wicket.markup.head.IHeaderResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AbstractCheckSelector:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Form:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.link.InlineFrame:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.media.Track:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.InlineImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.ContextImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.internal.InlineEnclosure:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.basic.EnumLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.Image:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.ajax.markup.html.AjaxLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.basic.MultiLineLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.link.ClientSideImageMap:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.ExternalImage:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.upload.MultiFileUploadField$1:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.head.filter.HeaderResponseContainer:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.media.MediaComponent:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.FormComponentLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.media.Source:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.link.ExternalLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.basic.Label:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.link.Link:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.Check:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.repeater.OddEvenItem:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.list.OddEvenListItem:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.image.Picture:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.FormComponent:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.Component:void internalRenderComponent()",
            "org.apache.wicket.markup.html.form.Radio:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.form.SubmitLink:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.resolver.AutoLinkResolver$ResourceReferenceAutolink:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.form.Form:java.lang.String getHiddenFieldsId()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForSubmitter(org.apache.wicket.markup.html.form.IFormSubmittingComponent)",
            "org.apache.wicket.markup.html.form.Form:void writeHiddenFields()",
            "org.apache.wicket.markup.html.form.Form:java.lang.CharSequence getJsForListenerUrl(java.lang.CharSequence)"
        ]
    },
    "org.apache.wicket.Component:java.lang.String getAjaxRegionMarkupId()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void renderPlaceholderTag(org.apache.wicket.markup.ComponentTag,org.apache.wicket.request.Response)"
        ]
    },
    "org.apache.wicket.protocol.http.WebApplication:org.apache.wicket.ajax.AjaxRequestTarget newAjaxRequestTarget(org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AbstractDefaultAjaxBehavior:void onRequest()"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.markup.html.form.FormComponent assertFormComponent(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isRequired(java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isNotRequired(java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isComponent(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertComponent(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void assertBehavior(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.form.Form$19:void component(java.lang.Object,org.apache.wicket.util.visit.IVisit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.resource.FileSystemResource:void respond(org.apache.wicket.request.resource.IResource$Attributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.request.handler.resource.ResourceRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.request.handler.resource.ResourceReferenceRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.DownloadLink$1:void respond(org.apache.wicket.request.IRequestCycle)"
        ]
    },
    "org.apache.wicket.markup.html.form.AbstractTextComponent:void convertInput()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.FormComponent:void validate()"
        ]
    },
    "org.apache.wicket.markup.html.form.validation.AbstractFormValidator:void error(org.apache.wicket.markup.html.form.FormComponent,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.BookmarkablePageRequestHandler:void detach(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:void setResponsePage(org.apache.wicket.request.component.IRequestablePage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.navigation.paging.PagingNavigationIncrementLink:void onClick()",
            "org.apache.wicket.markup.html.link.InlineFrame:void onRequest()",
            "org.apache.wicket.util.tester.DummyHomePage$TestLink:void onClick()"
        ]
    },
    "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler mapExpectedExceptions(java.lang.Exception,org.apache.wicket.Application)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.DefaultExceptionMapper:org.apache.wicket.request.IRequestHandler internalMap(java.lang.Exception)"
        ]
    },
    "org.apache.wicket.NonResettingRestartException:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.NonResettingRestartException:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)"
        ]
    },
    "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(java.lang.Class,org.apache.wicket.core.request.handler.RenderPageRequestHandler$RedirectPolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void setResponsePage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.Component:void setResponsePage(java.lang.Class)"
        ]
    },
    "org.apache.wicket.request.cycle.RequestCycle:void setResponsePage(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.RestartResponseAtInterceptPageException:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.authorization.strategies.page.SimplePageAuthorizationStrategy$1:void onUnauthorizedInstantiation(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.core.request.mapper.AbstractBookmarkableMapper:org.apache.wicket.request.IRequestHandler processBookmarkable(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.mapper.AbstractBookmarkableMapper:org.apache.wicket.request.IRequestHandler mapRequest(org.apache.wicket.request.Request)"
        ]
    },
    "org.apache.wicket.core.request.mapper.PageInstanceMapper:org.apache.wicket.request.IRequestHandler mapRequest(org.apache.wicket.request.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(org.apache.wicket.request.component.IRequestablePage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Page startPage(org.apache.wicket.core.request.handler.IPageProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Page startPage(org.apache.wicket.Page)"
        ]
    },
    "org.apache.wicket.RestartResponseException:void <init>(org.apache.wicket.request.component.IRequestablePage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener:void suppressHandler(javax.servlet.http.HttpServletRequest,java.lang.String,org.apache.wicket.request.component.IRequestablePage)"
        ]
    },
    "org.apache.wicket.RestartResponseException:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.RestartResponseException:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.wicket.Component:void redirectToInterceptPage(org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest(org.apache.wicket.protocol.http.mock.MockHttpServletRequest,org.apache.wicket.request.IRequestHandler,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest(org.apache.wicket.protocol.http.mock.MockHttpServletRequest,org.apache.wicket.request.IRequestHandler,boolean)",
            "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest(org.apache.wicket.request.IRequestHandler)",
            "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest(org.apache.wicket.protocol.http.mock.MockHttpServletRequest,org.apache.wicket.request.IRequestHandler)"
        ]
    },
    "org.apache.wicket.protocol.http.WicketFilter:boolean processRequestCycle(org.apache.wicket.request.cycle.RequestCycle,org.apache.wicket.request.http.WebResponse,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.WicketFilter:boolean processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabel:void <init>(java.lang.String,org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.form.AutoLabelResolver:org.apache.wicket.Component resolve(org.apache.wicket.MarkupContainer,org.apache.wicket.markup.MarkupStream,org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.link.ClientSideImageMap$UsemapModel:java.lang.Object getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.AttributeModifier:java.lang.Object getReplacementOrNull(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.markup.html.link.ClientSideImageMap$UsemapModel:java.io.Serializable getObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.pages.BrowserInfoPage:void renderHead(org.apache.wicket.markup.head.IHeaderResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderHead(org.apache.wicket.markup.html.internal.HtmlHeaderContainer)"
        ]
    },
    "org.apache.wicket.markup.html.form.AutoLabelTextResolver$TextLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.internal.InlineEnclosure:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.border.Border$BorderBodyContainer:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.basic.EnumLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.resolver.WicketMessageResolver$MessageContainer:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.html.basic.MultiLineLabel:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.head.filter.HeaderResponseContainer:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.media.MediaComponent:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.media.audio.Audio:void onComponentTag(org.apache.wicket.markup.ComponentTag)",
            "org.apache.wicket.markup.html.media.video.Video:void onComponentTag(org.apache.wicket.markup.ComponentTag)"
        ]
    },
    "org.apache.wicket.markup.html.basic.Label:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRenderComponent()"
        ]
    },
    "org.apache.wicket.markup.resolver.AutoLinkResolver$ResourceReferenceAutolink:void onComponentTag(org.apache.wicket.markup.ComponentTag)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Component:void renderPlaceholderTag(org.apache.wicket.markup.ComponentTag,org.apache.wicket.request.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Component:void internalRender()",
            "org.apache.wicket.markup.html.form.Form:void renderPlaceholderTag(org.apache.wicket.markup.ComponentTag,org.apache.wicket.request.Response)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isRequired(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertRequired(java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.util.tester.Result isNotRequired(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void assertNotRequired(java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void assertComponent(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.request.handler.resource.ResourceReferenceRequestHandler:void respond(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.link.DownloadLink$1:void respond(org.apache.wicket.request.IRequestCycle)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.DummyHomePage$TestLink:void onClick()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.Link:void onRequest()"
        ]
    },
    "org.apache.wicket.NonResettingRestartException:void <init>(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.NonResettingRestartException:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.wicket.Component:void setResponsePage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.ajax.AjaxNewWindowNotifyingBehavior:void onNewWindow(org.apache.wicket.ajax.AjaxRequestTarget)",
            "org.apache.wicket.markup.html.form.StatelessForm:org.apache.wicket.markup.html.form.Form$MethodMismatchResponse onMethodMismatch()"
        ]
    },
    "org.apache.wicket.Component:void setResponsePage(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.markup.html.link.PopupCloseLink:void onClick()",
            "org.apache.wicket.markup.html.pages.BrowserInfoPage$3:void afterSubmit()",
            "org.apache.wicket.markup.html.pages.BrowserInfoPage$ContinueLink:void onClick()"
        ]
    },
    "org.apache.wicket.authorization.strategies.page.SimplePageAuthorizationStrategy$1:void onUnauthorizedInstantiation(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.Application$1:void onInstantiation(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.core.request.handler.RenderPageRequestHandler:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Page startPage(org.apache.wicket.Page)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void executeTest(java.lang.Class,org.apache.wicket.Page,java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Component startComponentInPage(org.apache.wicket.Component,org.apache.wicket.markup.IMarkupFragment)"
        ]
    },
    "org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener:void suppressHandler(javax.servlet.http.HttpServletRequest,java.lang.String,org.apache.wicket.request.component.IRequestablePage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener:void checkRequest(javax.servlet.http.HttpServletRequest,java.lang.String,org.apache.wicket.request.component.IRequestablePage)"
        ]
    },
    "org.apache.wicket.RestartResponseException:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest(org.apache.wicket.request.IRequestHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void invokeListener(org.apache.wicket.Component,org.apache.wicket.behavior.Behavior)",
            "org.apache.wicket.util.tester.BaseWicketTester:void invokeListener(org.apache.wicket.Component)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest(org.apache.wicket.protocol.http.mock.MockHttpServletRequest,org.apache.wicket.request.IRequestHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest()",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.request.resource.ResourceReference startResourceReference(org.apache.wicket.request.resource.ResourceReference,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeListener(org.apache.wicket.Component)",
            "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest(org.apache.wicket.protocol.http.mock.MockHttpServletRequest)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Page startPage(org.apache.wicket.core.request.handler.IPageProvider)"
        ]
    },
    "org.apache.wicket.protocol.http.WicketFilter:boolean processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.WicketServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.wicket.protocol.http.WicketFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.wicket.protocol.http.WicketServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void assertRequired(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void assertNotRequired(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.NonResettingRestartException:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.markup.html.link.PopupCloseLink:void onClick()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.Application$1:void onInstantiation(org.apache.wicket.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void executeTest(java.lang.Class,org.apache.wicket.Page,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTestCase:void executeTest(org.apache.wicket.Page,java.lang.String)"
        ]
    },
    "org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener:void checkRequest(javax.servlet.http.HttpServletRequest,java.lang.String,org.apache.wicket.request.component.IRequestablePage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener:void onRequestHandlerResolved(org.apache.wicket.request.cycle.RequestCycle,org.apache.wicket.request.IRequestHandler)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void executeAjaxUrl(org.apache.wicket.request.Url)",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeUrl(java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Page startPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)",
            "org.apache.wicket.util.tester.BaseWicketTester:void executeBehavior(org.apache.wicket.behavior.AbstractAjaxBehavior)",
            "org.apache.wicket.util.tester.BaseWicketTester:void submitForm(java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.request.resource.ResourceReference startResourceReference(org.apache.wicket.request.resource.ResourceReference,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.request.resource.ResourceReference startResourceReference(org.apache.wicket.request.resource.ResourceReference)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:boolean processRequest(org.apache.wicket.protocol.http.mock.MockHttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.protocol.http.WicketServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.protocol.http.WicketFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.protocol.http.WicketServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTestCase:void executeTest(org.apache.wicket.Page,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener:void onRequestHandlerResolved(org.apache.wicket.request.cycle.RequestCycle,org.apache.wicket.request.IRequestHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void executeAjaxUrl(org.apache.wicket.request.Url)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.BaseWicketTester:void executeUrl(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String,boolean)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Page startPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:void clickLink(java.lang.String,boolean)",
            "org.apache.wicket.util.tester.WicketTester:void executeTest(java.lang.Class,java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.String)",
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Page startPage(java.lang.Class)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.request.resource.ResourceReference startResourceReference(org.apache.wicket.request.resource.ResourceReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.request.resource.ResourceReference startResource(org.apache.wicket.request.resource.IResource)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTester:void executeTest(java.lang.Class,java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTestCase:void executeTest(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.Page startPage(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTester:void executeTest(java.lang.Class,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.BaseWicketTester:org.apache.wicket.request.resource.ResourceReference startResource(org.apache.wicket.request.resource.IResource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTestCase:void executeTest(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    },
    "org.apache.wicket.util.tester.WicketTester:void executeTest(java.lang.Class,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": [
            "org.apache.wicket.util.tester.WicketTestCase:void executeTest(java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.wicket.util.tester.WicketTestCase:void executeTest(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.wicket.MarkupContainer:int removals_size()",
            "org.apache.wicket.MarkupContainer:org.apache.wicket.MarkupContainer$RemovedChild removals_get(int)"
        ],
        "vulCaller": []
    }
}
{
    "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap filterSubscriptions(org.springframework.util.MultiValueMap,org.springframework.messaging.Message)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap filterSubscriptions(org.springframework.util.MultiValueMap,org.springframework.messaging.Message)"
        ],
        "vulCaller": [
            "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap findSubscriptionsInternal(java.lang.String,org.springframework.messaging.Message)"
        ]
    },
    "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap findSubscriptionsInternal(java.lang.String,org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap filterSubscriptions(org.springframework.util.MultiValueMap,org.springframework.messaging.Message)"
        ],
        "vulCaller": [
            "org.springframework.messaging.simp.broker.AbstractSubscriptionRegistry:org.springframework.util.MultiValueMap findSubscriptions(org.springframework.messaging.Message)"
        ]
    },
    "org.springframework.messaging.simp.broker.AbstractSubscriptionRegistry:org.springframework.util.MultiValueMap findSubscriptions(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap filterSubscriptions(org.springframework.util.MultiValueMap,org.springframework.messaging.Message)"
        ],
        "vulCaller": [
            "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler:void sendMessageToSubscribers(java.lang.String,org.springframework.messaging.Message)"
        ]
    },
    "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler:void sendMessageToSubscribers(java.lang.String,org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap filterSubscriptions(org.springframework.util.MultiValueMap,org.springframework.messaging.Message)"
        ],
        "vulCaller": [
            "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler:void handleMessageInternal(org.springframework.messaging.Message)"
        ]
    },
    "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler:void handleMessageInternal(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap filterSubscriptions(org.springframework.util.MultiValueMap,org.springframework.messaging.Message)"
        ],
        "vulCaller": [
            "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler:void handleMessage(org.springframework.messaging.Message)"
        ]
    },
    "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler:void handleMessage(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap filterSubscriptions(org.springframework.util.MultiValueMap,org.springframework.messaging.Message)"
        ],
        "vulCaller": [
            "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler$UnsentDisconnectChannelInterceptor:void afterSendCompletion(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean,java.lang.Exception)"
        ]
    },
    "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler$UnsentDisconnectChannelInterceptor:void afterSendCompletion(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean,java.lang.Exception)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry:org.springframework.util.MultiValueMap filterSubscriptions(org.springframework.util.MultiValueMap,org.springframework.messaging.Message)"
        ],
        "vulCaller": []
    }
}
{
    "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()": {
        "isVulRoot": true,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void setContent(java.io.InputStream)",
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void addContent(io.netty.buffer.ByteBuf,boolean)",
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void setContent(io.netty.buffer.ByteBuf)"
        ]
    },
    "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void setContent(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedFileUpload:void setContent(java.io.InputStream)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void setContent(java.io.InputStream)"
        ]
    },
    "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void addContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void readFileUploadByteMultipartStandard(java.lang.String)",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void readFileUploadByteMultipart(java.lang.String)",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:void addContent(io.netty.buffer.ByteBuf,boolean)"
        ]
    },
    "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void setContent(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute copy()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute duplicate()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:void setContent(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload duplicate()",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void setContent(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.DiskAttribute:void setValue(java.lang.String)",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:void setContent(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void setContent(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void setFinalBuffer(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributes()",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void loadFieldMultipartStandard(java.lang.String)",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void loadFieldMultipart(java.lang.String)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributesStandard()"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void readFileUploadByteMultipartStandard(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void readFileUploadByteMultipart(java.lang.String)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void readFileUploadByteMultipart(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData getFileUpload(java.lang.String)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:void addContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void readFileUploadByteMultipartStandard(java.lang.String)",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void readFileUploadByteMultipart(java.lang.String)"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute copy()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData copy()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute duplicate()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData duplicate()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder duplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:void setContent(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder duplicate()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload duplicate()",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData duplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void setContent(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskAttribute:void <init>(java.lang.String,java.lang.String)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void setFinalBuffer(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void setValue(java.lang.String)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributes()",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributesStandard()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder copy()",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData copy()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void setFinalBuffer(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributes()",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributesStandard()"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributes()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBody()"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void loadFieldMultipartStandard(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void loadFieldMultipart(java.lang.String)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void loadFieldMultipart(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData decodeMultipart(io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void setFinalBuffer(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributes()",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void loadFieldMultipartStandard(java.lang.String)",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void loadFieldMultipart(java.lang.String)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributesStandard()"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributesStandard()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributes()"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData getFileUpload(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData decodeMultipart(io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus)",
            "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData getFileUpload(java.lang.String)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder copy()",
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder duplicate()",
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData duplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder duplicate()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData duplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void <init>(java.lang.String,java.lang.String,long)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void setFinalBuffer(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributes()",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBodyAttributesStandard()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData copy()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void parseBody()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder offer(io.netty.handler.codec.http.HttpContent)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData decodeMultipart(io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDisposition()",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void parseBodyMultipart()",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDelimiter(java.lang.String,io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus,io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData getFileUpload(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDisposition()",
            "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void addBodyAttribute(java.lang.String,java.lang.String)",
            "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void addBodyHttpData(io.netty.handler.codec.http.multipart.InterfaceHttpData)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void <init>(java.lang.String,java.lang.String,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder offer(io.netty.handler.codec.http.HttpContent)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)",
            "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDisposition()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData decodeMultipart(io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void parseBodyMultipart()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void parseBody()"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDelimiter(java.lang.String,io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus,io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpData decodeMultipart(io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void addBodyAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void addBodyHttpData(io.netty.handler.codec.http.multipart.InterfaceHttpData)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void addBodyFileUpload(java.lang.String,java.io.File,java.lang.String,boolean)",
            "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void setBodyHttpDatas(java.util.List)",
            "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void addBodyAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)",
            "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void parseBody()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder offer(io.netty.handler.codec.http.HttpContent)",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void addBodyFileUpload(java.lang.String,java.io.File,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void addBodyFileUploads(java.lang.String,java.io.File[],java.lang.String[],boolean[])"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void setBodyHttpDatas(java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder offer(io.netty.handler.codec.http.HttpContent)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent)",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)",
            "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)",
            "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:void addBodyFileUploads(java.lang.String,java.io.File[],java.lang.String[],boolean[])": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent)"
        ]
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    }
}
{
    "ratpack.http.internal.DefaultResponse:void sendStream(org.reactivestreams.Publisher)": {
        "isVulRoot": true,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void sendStream(org.reactivestreams.Publisher)"
        ],
        "vulCaller": []
    },
    "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)": {
        "isVulRoot": true,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.DefaultResponse:void send(byte[])",
            "ratpack.http.internal.DefaultResponse:void send(io.netty.buffer.ByteBuf)",
            "ratpack.http.internal.DefaultResponse:void send()"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.DefaultResponse:void send(java.lang.CharSequence,byte[])"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.DefaultResponse:void send(java.lang.CharSequence,io.netty.buffer.ByteBuf)",
            "ratpack.http.internal.DefaultResponse:void send(java.lang.String)"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void lastModified(java.util.Date,java.lang.Runnable)",
            "ratpack.handling.internal.DefaultContext:void onErrorHandlerError(ratpack.error.ServerErrorHandler,java.lang.Throwable,java.lang.Throwable)",
            "ratpack.http.internal.MultiMethodHandler:void handle(ratpack.handling.Context)"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void sendFile(java.nio.file.Path)": {
        "isVulRoot": true,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void sendFile(java.nio.file.Path)"
        ],
        "vulCaller": []
    },
    "ratpack.http.internal.DefaultResponse:void send(java.lang.CharSequence,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.internal.DefaultResponse:void send(java.lang.CharSequence,io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.internal.DefaultResponse:void send(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void onErrorHandlerError(ratpack.error.ServerErrorHandler,java.lang.Throwable,java.lang.Throwable)",
            "ratpack.http.internal.DefaultResponse:void send(java.lang.CharSequence,java.lang.String)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void lastModified(java.util.Date,java.lang.Runnable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void onErrorHandlerError(ratpack.error.ServerErrorHandler,java.lang.Throwable,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void error(java.lang.Throwable)"
        ]
    },
    "ratpack.http.internal.MultiMethodHandler:void handle(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void byMethod(ratpack.func.Action)"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send(java.lang.CharSequence,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void error(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void clientError(int)",
            "ratpack.handling.internal.DefaultContext:void lambda$start$114(ratpack.handling.internal.DefaultContext$RequestConstants,java.lang.Throwable)",
            "ratpack.handling.internal.DefaultContext:void render(java.lang.Object)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void byMethod(ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void clientError(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultByContentSpec:void lambda$new$109(ratpack.handling.Context)",
            "ratpack.handling.internal.ClientErrorForwardingHandler:void handle(ratpack.handling.Context)",
            "ratpack.render.internal.DefaultRenderController:void render(java.lang.Object,ratpack.handling.Context)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void lambda$start$114(ratpack.handling.internal.DefaultContext$RequestConstants,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void render(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultByContentSpec:void lambda$new$109(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.ContentNegotiationHandler:void handle(ratpack.handling.Context)"
        ]
    },
    "ratpack.handling.internal.ClientErrorForwardingHandler:void handle(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.MultiMethodHandler:void handle(ratpack.handling.Context)",
            "ratpack.handling.internal.DefaultContext:void next()"
        ]
    },
    "ratpack.render.internal.DefaultRenderController:void render(java.lang.Object,ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void render(java.lang.Object)"
        ]
    },
    "ratpack.http.internal.ContentNegotiationHandler:void handle(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void byContent(ratpack.func.Action)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void next()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void insert(ratpack.handling.Handler[])",
            "ratpack.handling.internal.DefaultContext:void next(ratpack.registry.Registry)",
            "ratpack.handling.internal.DefaultContext:void lambda$start$116(ratpack.handling.internal.DefaultContext,ratpack.exec.Execution)",
            "ratpack.handling.internal.DefaultContext:void insert(ratpack.registry.Registry,ratpack.handling.Handler[])"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void byContent(ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void insert(ratpack.handling.Handler[])": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultByContentSpec:void lambda$noMatch$112(java.lang.String,ratpack.handling.Context)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void next(ratpack.registry.Registry)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void lambda$start$116(ratpack.handling.internal.DefaultContext,ratpack.exec.Execution)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void insert(ratpack.registry.Registry,ratpack.handling.Handler[])": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultByContentSpec:void lambda$noMatch$112(java.lang.String,ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.ContentNegotiationHandler:void handle(ratpack.handling.Context)"
        ]
    }
}
{
    "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.security.credential.Credential getVerificationCredential(java.security.cert.X509Certificate)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.security.credential.Credential getVerificationCredential(java.security.cert.X509Certificate)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:boolean hasValidSignature(org.opensaml.saml.common.SignableSAMLObject,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.assertion.SAML20AssertionValidator getAssertionValidator(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:void validateAssertion(java.lang.String,org.opensaml.saml.saml2.core.Assertion,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,boolean)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Assertion validateSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,java.lang.String,org.opensaml.saml.saml2.core.Response)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Response getSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)"
        ],
        "vulCaller": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.assertion.SAML20AssertionValidator getAssertionValidator(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:boolean hasValidSignature(org.opensaml.saml.common.SignableSAMLObject,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)"
        ]
    },
    "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.assertion.SAML20AssertionValidator getAssertionValidator(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.security.credential.Credential getVerificationCredential(java.security.cert.X509Certificate)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:boolean hasValidSignature(org.opensaml.saml.common.SignableSAMLObject,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.assertion.SAML20AssertionValidator getAssertionValidator(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:void validateAssertion(java.lang.String,org.opensaml.saml.saml2.core.Assertion,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,boolean)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Assertion validateSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,java.lang.String,org.opensaml.saml.saml2.core.Response)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Response getSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)"
        ],
        "vulCaller": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:void validateAssertion(java.lang.String,org.opensaml.saml.saml2.core.Assertion,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,boolean)"
        ]
    },
    "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:boolean hasValidSignature(org.opensaml.saml.common.SignableSAMLObject,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.security.credential.Credential getVerificationCredential(java.security.cert.X509Certificate)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:boolean hasValidSignature(org.opensaml.saml.common.SignableSAMLObject,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.assertion.SAML20AssertionValidator getAssertionValidator(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:void validateAssertion(java.lang.String,org.opensaml.saml.saml2.core.Assertion,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,boolean)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Assertion validateSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,java.lang.String,org.opensaml.saml.saml2.core.Response)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Response getSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)"
        ],
        "vulCaller": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:void validateAssertion(java.lang.String,org.opensaml.saml.saml2.core.Assertion,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,boolean)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Assertion validateSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,java.lang.String,org.opensaml.saml.saml2.core.Response)"
        ]
    },
    "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:void validateAssertion(java.lang.String,org.opensaml.saml.saml2.core.Assertion,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,boolean)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.security.credential.Credential getVerificationCredential(java.security.cert.X509Certificate)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:boolean hasValidSignature(org.opensaml.saml.common.SignableSAMLObject,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.assertion.SAML20AssertionValidator getAssertionValidator(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:void validateAssertion(java.lang.String,org.opensaml.saml.saml2.core.Assertion,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,boolean)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Assertion validateSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,java.lang.String,org.opensaml.saml.saml2.core.Response)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Response getSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)"
        ],
        "vulCaller": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Assertion validateSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,java.lang.String,org.opensaml.saml.saml2.core.Response)"
        ]
    },
    "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Assertion validateSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,java.lang.String,org.opensaml.saml.saml2.core.Response)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.security.credential.Credential getVerificationCredential(java.security.cert.X509Certificate)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:boolean hasValidSignature(org.opensaml.saml.common.SignableSAMLObject,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.assertion.SAML20AssertionValidator getAssertionValidator(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:void validateAssertion(java.lang.String,org.opensaml.saml.saml2.core.Assertion,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,boolean)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Assertion validateSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,java.lang.String,org.opensaml.saml.saml2.core.Response)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Response getSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)"
        ],
        "vulCaller": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)"
        ]
    },
    "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.security.credential.Credential getVerificationCredential(java.security.cert.X509Certificate)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:boolean hasValidSignature(org.opensaml.saml.common.SignableSAMLObject,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.assertion.SAML20AssertionValidator getAssertionValidator(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:void validateAssertion(java.lang.String,org.opensaml.saml.saml2.core.Assertion,org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,boolean)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Assertion validateSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken,java.lang.String,org.opensaml.saml.saml2.core.Response)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Response getSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)",
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)"
        ],
        "vulCaller": []
    },
    "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Response getSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.opensaml.saml.saml2.core.Response getSaml2Response(org.springframework.security.saml2.provider.service.authentication.Saml2AuthenticationToken)"
        ],
        "vulCaller": [
            "org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)"
        ]
    }
}
{
    "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void nextRequest()",
            "org.apache.coyote.http11.AbstractInputBuffer:void recycle()"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:void nextRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.InternalNio2InputBuffer:void nextRequest()",
            "org.apache.coyote.http11.InternalNioInputBuffer:void nextRequest()",
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:void recycle()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioInputBuffer:void recycle()",
            "org.apache.coyote.http11.InternalAprInputBuffer:void recycle()",
            "org.apache.coyote.http11.InternalInputBuffer:void recycle()",
            "org.apache.coyote.http11.InternalNio2InputBuffer:void recycle()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseEndChunk()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseEndChunk()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer:void nextRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Nio2Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:void nextRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:void recycle()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void recycle(boolean)"
        ]
    },
    "org.apache.coyote.http11.InternalAprInputBuffer:void recycle()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void recycle(boolean)"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer:void recycle()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void recycle(boolean)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer:void recycle()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void recycle(boolean)"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Nio2Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.AbstractHttp11Processor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void prepareRequest()",
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11AprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void doRun()",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor:void doRun()",
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()",
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()",
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11Nio2Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:void recycle(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.ajp.AjpNioProtocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.ajp.AjpNio2Protocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)"
        ]
    },
    "org.apache.coyote.http11.Http11Nio2Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:void prepareRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor:void doRun()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void doRun()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void doRun()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor:void doRun()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.JIoEndpoint:void processSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)"
        ]
    },
    "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AjpNioProtocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AjpNio2Protocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor)"
        ]
    },
    "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:void setReadListener(javax.servlet.ReadListener)",
            "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()",
            "org.apache.coyote.Request:boolean isFinished()"
        ]
    },
    "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()",
            "org.apache.coyote.Response:void reset()",
            "org.apache.coyote.Response:void sendHeaders()",
            "org.apache.coyote.Response:void finish()",
            "org.apache.coyote.Response:boolean checkRegisterForWrite(boolean)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void acknowledge()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void flush()",
            "org.apache.coyote.Response:long getBytesWritten(boolean)",
            "org.apache.coyote.Response:void setWriteListener(javax.servlet.WriteListener)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint:void processSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint:boolean processSocket0(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint:void processSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11Nio2Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.ajp.AjpNio2Processor$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpNio2Processor$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.AbstractEndpoint:void executeNonBlockingDispatches(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:void registerWriteInterest()",
            "org.apache.tomcat.util.net.JIoEndpoint$AsyncTimeout:void run()",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void failed(java.lang.Throwable,java.nio.ByteBuffer[])",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void completed(java.lang.Long,java.nio.ByteBuffer[])"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.Request:void setReadListener(javax.servlet.ReadListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddrForwarded()"
        ]
    },
    "org.apache.coyote.Request:boolean isFinished()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()"
        ]
    },
    "org.apache.coyote.Response:void reset()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.Response:void sendHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.Response:void finish()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.Response:boolean checkRegisterForWrite(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.Response:boolean isReady()"
        ]
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.Response:void acknowledge()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.Response:long getBytesWritten(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.Response:void setWriteListener(javax.servlet.WriteListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint:void processSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11Nio2Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.ajp.AjpNio2Processor$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpNio2Processor$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.AbstractEndpoint:void executeNonBlockingDispatches(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.AprEndpoint$AsyncTimeout:void run()",
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:void registerWriteInterest()",
            "org.apache.coyote.http11.Http11AprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void failed(java.lang.Throwable,java.nio.ByteBuffer[])",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void completed(java.lang.Long,java.nio.ByteBuffer[])"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.NioEndpoint:boolean dispatchForEvent(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel,int)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint:boolean processSocket0(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint:void processSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)",
            "org.apache.tomcat.util.net.Nio2Endpoint$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.Nio2Endpoint$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.Nio2Endpoint:void closeSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AjpNio2Processor$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpNio2Processor$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpNio2Processor$1:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AjpNio2Processor$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpNio2Processor$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.AbstractEndpoint:void executeNonBlockingDispatches(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer:void registerWriteInterest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractOutputBuffer:boolean isReady()"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint$AsyncTimeout:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void failed(java.lang.Throwable,java.nio.ByteBuffer[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void completed(java.lang.Long,java.nio.ByteBuffer[])"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void completed(java.lang.Long,java.nio.ByteBuffer[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddrForwarded()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.Response:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void setWriteListener(javax.servlet.WriteListener)"
        ]
    },
    "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint$AsyncTimeout:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$PollerEvent:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint:boolean dispatchForEvent(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint:void processSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)",
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint:boolean dispatchForEvent(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel)",
            "org.apache.coyote.http11.upgrade.NioServletOutputStream:int doWriteInternal(boolean,byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint:void processSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11Nio2Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.Nio2Endpoint$AsyncTimeout:void run()",
            "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpNio2Processor$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpNio2Processor$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.Nio2Endpoint:boolean setSocketOptions(java.nio.channels.AsynchronousSocketChannel)",
            "org.apache.tomcat.util.net.SecureNio2Channel$2:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.AbstractEndpoint:void executeNonBlockingDispatches(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:void registerWriteInterest()",
            "org.apache.coyote.http11.upgrade.Nio2ServletInputStream$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void failed(java.lang.Throwable,java.nio.ByteBuffer[])",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void completed(java.lang.Long,java.nio.ByteBuffer[])"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.Nio2Endpoint$1:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint:void closeSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpNio2Protocol$AjpConnectionHandler:void closeAll()",
            "org.apache.tomcat.util.net.Nio2Endpoint$2:void completed(java.lang.Integer,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)",
            "org.apache.tomcat.util.net.SecureNio2Channel$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.SecureNio2Channel$2:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler:void closeAll()",
            "org.apache.tomcat.util.net.Nio2Endpoint:boolean processSendfile(org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper)",
            "org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor:void doRun()",
            "org.apache.tomcat.util.net.Nio2Endpoint$2:void failed(java.lang.Throwable,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AjpNio2Processor$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AjpNio2Processor$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SecureNio2Channel$GatherState)",
            "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SecureNio2Channel$GatherState)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SecureNio2Channel$GatherState)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$PollerEvent:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:boolean breakKeepAliveLoop(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint:void processSocket(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11Nio2Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.AbstractEndpoint:void executeNonBlockingDispatches(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpNio2Processor$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2InputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:void registerWriteInterest()",
            "org.apache.coyote.ajp.AjpNio2Processor$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void failed(java.lang.Throwable,java.nio.ByteBuffer[])",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void completed(java.lang.Long,java.nio.ByteBuffer[])"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor)",
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.ajp.AjpNioProtocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.upgrade.NioServletOutputStream:int doWriteInternal(boolean,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.NioServletOutputStream:int doWrite(boolean,byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$AsyncTimeout:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint:boolean setSocketOptions(java.nio.channels.AsynchronousSocketChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Acceptor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$2:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$2:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletInputStream$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.Nio2ServletInputStream$1:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.coyote.http11.upgrade.Nio2ServletInputStream$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AjpNio2Protocol$AjpConnectionHandler:void closeAll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint:void stopInternal()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$2:void completed(java.lang.Integer,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$2:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.SecureNio2Channel$1:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$2:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$2:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.SecureNio2Channel$2:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler:void closeAll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint:void stopInternal()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint:boolean processSendfile(org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Nio2Processor:boolean breakKeepAliveLoop(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$2:void failed(java.lang.Throwable,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$2:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint:void awaitBytes(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.upgrade.Nio2ServletInputStream:int fillReadBuffer(boolean)",
            "org.apache.coyote.http11.InternalNio2InputBuffer:boolean fill(boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void completed(java.lang.Integer,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void completed(java.lang.Object,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Channel:void write(java.nio.ByteBuffer,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream:int doWriteInternal(boolean,byte[],int,int)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)",
            "org.apache.coyote.ajp.AjpNio2Processor:int output(byte[],int,int,boolean)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:boolean flushBufferInternal(boolean,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$3:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SecureNio2Channel$GatherState)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SecureNio2Channel$GatherState)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2OutputBuffer$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer$2:void completed(java.lang.Long,java.nio.ByteBuffer[])",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:boolean flushBufferInternal(boolean,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SecureNio2Channel$GatherState)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:boolean breakKeepAliveLoop(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.upgrade.NioServletOutputStream:int doWrite(boolean,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void writeInternal(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Acceptor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$2:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletInputStream$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletInputStream$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.Nio2ServletInputStream$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint:void stopInternal()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void stop()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$2:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$2:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.Http11Nio2Processor:boolean breakKeepAliveLoop(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$2:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint:void awaitBytes(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$2:void completed(java.lang.Integer,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)",
            "org.apache.tomcat.util.net.Nio2Endpoint:boolean setSocketOptions(java.nio.channels.AsynchronousSocketChannel)",
            "org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.ajp.AjpNio2Protocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor)"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletInputStream:int fillReadBuffer(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.Nio2ServletInputStream:int doRead(boolean,byte[],int,int)",
            "org.apache.coyote.http11.upgrade.Nio2ServletInputStream:boolean doIsReady()"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer:boolean fill(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2InputBuffer:boolean parseRequestLine(boolean)",
            "org.apache.coyote.http11.InternalNio2InputBuffer:org.apache.coyote.http11.InternalNio2InputBuffer$HeaderParseStatus parseHeader()",
            "org.apache.coyote.http11.AbstractInputBuffer:int available()",
            "org.apache.coyote.http11.InternalNio2InputBuffer$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalNio2InputBuffer:org.apache.coyote.http11.InternalNio2InputBuffer$HeaderParseStatus skipLine()"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.Nio2Channel:void write(java.nio.ByteBuffer,java.lang.Object,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$2:void completed(java.lang.Integer,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)",
            "org.apache.tomcat.util.net.Nio2Endpoint:boolean processSendfile(org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream:int doWriteInternal(boolean,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream:int doWrite(boolean,byte[],int,int)"
        ]
    },
    "org.apache.coyote.ajp.AjpNio2Processor:int output(byte[],int,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void writeResponseMessage(boolean)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareResponse()",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void flush(boolean)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void finish()",
            "org.apache.coyote.ajp.AbstractAjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:boolean refillReadBuffer(boolean)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer:boolean flushBufferInternal(boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2OutputBuffer:boolean flushBuffer(boolean)",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:void addToBB(byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$GatherCompletionHandler:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void writeInternal(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void onWritePossible()",
            "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void write(int)",
            "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletInputStream$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$ReadCompletionHandler:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.AbstractEndpoint:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint:void unbind()",
            "org.apache.tomcat.util.net.NioEndpoint:void unbind()",
            "org.apache.tomcat.util.net.JIoEndpoint:void unbind()",
            "org.apache.tomcat.util.net.Nio2Endpoint:void unbind()"
        ]
    },
    "org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletInputStream:int doRead(boolean,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletInputStream:boolean doIsReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer:boolean parseRequestLine(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer:org.apache.coyote.http11.InternalNio2InputBuffer$HeaderParseStatus parseHeader()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2InputBuffer:boolean parseHeaders()"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:int available()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer:org.apache.coyote.http11.InternalNio2InputBuffer$HeaderParseStatus skipLine()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2InputBuffer:org.apache.coyote.http11.InternalNio2InputBuffer$HeaderParseStatus parseHeader()"
        ]
    },
    "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream:int doWrite(boolean,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void writeInternal(byte[],int,int)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void writeResponseMessage(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void flushBufferedData()",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void writeData(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareResponse()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void finish()",
            "org.apache.coyote.ajp.AbstractAjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void flush(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void finish()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:boolean refillReadBuffer(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:boolean available()",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void finish()",
            "org.apache.coyote.ajp.AbstractAjpProcessor$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer:boolean flushBuffer(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void flush()",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:void addToBB(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer:void addToBB(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2OutputBuffer:void commit()",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:void sendAck()",
            "org.apache.coyote.http11.InternalNio2OutputBuffer:void access$300(org.apache.coyote.http11.InternalNio2OutputBuffer,byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void onWritePossible()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.upgrade.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState upgradeDispatch(org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.AbstractServletOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint:void unbind()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void stop()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint:void unbind()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void stop()"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint:void unbind()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void stop()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint:void unbind()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void stop()"
        ]
    },
    "org.apache.coyote.http11.InternalNio2InputBuffer:boolean parseHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void flushBufferedData()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void writeData(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void writeData(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void access$200(org.apache.coyote.ajp.AbstractAjpProcessor,org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:boolean available()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer:void commit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer:void sendAck()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer:void access$300(org.apache.coyote.http11.InternalNio2OutputBuffer,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNio2OutputBuffer$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.upgrade.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState upgradeDispatch(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void access$200(org.apache.coyote.ajp.AbstractAjpProcessor,org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.InternalNio2OutputBuffer$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:long end()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void recycle()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:long end()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()"
        ]
    }
}
{
    "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)",
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)"
        ],
        "vulCaller": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)"
        ]
    },
    "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)",
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)"
        ],
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)"
        ]
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)",
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)"
        ],
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int,java.lang.Class)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List readAll()"
        ]
    },
    "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,boolean,java.io.File[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File)"
        ]
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)",
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)"
        ],
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,java.lang.Class)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List readAll(java.lang.Class)"
        ]
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List readAll()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)",
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File getParent(java.io.File,int)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File getParent(java.io.File,int)",
            "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File getParent(java.io.File,int)",
            "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File getParent(java.io.File,int)",
            "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpResponse:long writeBody(java.io.File,cn.hutool.core.io.StreamProgress)",
            "cn.hutool.core.io.FileUtil:java.io.File touch(java.io.File,java.lang.String)",
            "cn.hutool.core.io.file.FileCopier:java.io.File copy()",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.http.HttpResponse:long writeBody(java.io.File,cn.hutool.core.io.StreamProgress)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,int,cn.hutool.core.io.StreamProgress)",
            "cn.hutool.http.HttpResponse:long writeBody(java.io.File)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File touch(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileCopier:java.io.File copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.file.FileCopier:java.lang.Object copy()",
            "cn.hutool.core.io.FileUtil:java.io.File copyContent(java.io.File,java.io.File,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File copy(java.io.File,java.io.File,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File copyFilesFromDir(java.io.File,java.io.File,boolean)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:boolean clean(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File copy(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.poi.excel.ExcelReader:void <init>(java.lang.String,int)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedInputStream getInputStream(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.poi.excel.sax.AbstractExcelSaxReader:java.lang.Object read(java.lang.String,int)",
            "cn.hutool.poi.excel.sax.AbstractExcelSaxReader:java.lang.Object read(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File mkParentDirs(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File getTmpDir()",
            "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.lang.String,java.util.Collection)",
            "cn.hutool.core.io.FileUtil:java.io.File getUserHomeDir()",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean,cn.hutool.core.text.csv.CsvWriteConfig)",
            "cn.hutool.core.io.FileUtil:java.io.File[] ls(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)",
            "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String)",
            "cn.hutool.core.util.XmlUtil:org.w3c.dom.Document readXML(java.lang.String)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:boolean exist(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean isDirectory(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.lang.Object load(cn.hutool.core.io.file.FileReader$ReaderHandler,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean isFile(java.lang.String)",
            "cn.hutool.core.io.resource.FileResource:void <init>(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.nio.charset.Charset,cn.hutool.core.io.file.FileReader$ReaderHandler)",
            "cn.hutool.poi.excel.WorkbookUtil:org.apache.poi.ss.usermodel.Workbook createBook(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.nio.charset.Charset,java.util.Collection)",
            "cn.hutool.core.io.FileUtil:java.io.File getWebRoot()",
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.poi.excel.ExcelWriter:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean del(java.lang.String)",
            "cn.hutool.core.io.FileTypeUtil:java.lang.String getTypeByPath(java.lang.String)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String,java.io.FileFilter)",
            "cn.hutool.core.io.file.FileCopier:cn.hutool.core.io.file.FileCopier create(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File mkdir(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:byte[] readBytes(java.lang.String)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String)",
            "cn.hutool.http.HttpResponse:long writeBody(java.lang.String)",
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.lang.String)",
            "cn.hutool.extra.template.engine.freemarker.FreemarkerEngine:freemarker.template.Configuration createCfg(cn.hutool.extra.template.TemplateConfig)",
            "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)",
            "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.ClassLoader,java.lang.Class)"
        ]
    },
    "cn.hutool.core.io.FileUtil:boolean clean(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File copy(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelReader:void <init>(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelReader getReader(java.lang.String,int)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.BufferedReader getUtf8Reader(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedInputStream getInputStream(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:void readBySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.poi.excel.sax.AbstractExcelSaxReader:java.lang.Object read(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.sax.Excel07SaxReader read07BySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)",
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.sax.Excel03SaxReader read03BySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)"
        ]
    },
    "cn.hutool.poi.excel.sax.AbstractExcelSaxReader:java.lang.Object read(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File mkParentDirs(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File getTmpDir()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File getUserHomeDir()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.lang.String readUtf8String(java.lang.String)"
        ]
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean,cn.hutool.core.text.csv.CsvWriteConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File[] ls(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List listFileNames(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.lang.String)",
            "cn.hutool.extra.servlet.multipart.UploadFile:boolean processStream(cn.hutool.extra.servlet.multipart.MultipartRequestInputStream)",
            "cn.hutool.core.io.FileUtil:java.io.File writeBytes(byte[],java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:void writeToStream(java.lang.String,java.io.OutputStream)",
            "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedOutputStream getOutputStream(java.lang.String)",
            "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.captcha.AbstractCaptcha:void write(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File writeFromStream(java.io.InputStream,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.XmlUtil:org.w3c.dom.Document readXML(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.FileUtil:boolean exist(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.bloomfilter.BitSetBloomFilter:void init(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:boolean isDirectory(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object load(cn.hutool.core.io.file.FileReader$ReaderHandler,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean isFile(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.FileResource:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.resource.ResourceUtil:cn.hutool.core.io.resource.Resource getResourceObj(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.nio.charset.Charset,cn.hutool.core.io.file.FileReader$ReaderHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.lang.Object loadUtf8(java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)"
        ]
    },
    "cn.hutool.poi.excel.WorkbookUtil:org.apache.poi.ss.usermodel.Workbook createBook(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.nio.charset.Charset,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.util.Collection readUtf8Lines(java.lang.String,java.util.Collection)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File getWebRoot()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelWriter:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelWriter getWriter(java.lang.String,java.lang.String)",
            "cn.hutool.poi.excel.ExcelWriter:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:boolean del(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileTypeUtil:java.lang.String getTypeByPath(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)"
        ]
    },
    "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String,java.io.FileFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileCopier:cn.hutool.core.io.file.FileCopier create(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File mkdir(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.FileUtil:byte[] readBytes(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpResponse:long writeBody(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.template.engine.freemarker.FreemarkerEngine:freemarker.template.Configuration createCfg(cn.hutool.extra.template.TemplateConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.template.engine.freemarker.FreemarkerEngine:void <init>(cn.hutool.extra.template.TemplateConfig)"
        ]
    },
    "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.ClassLoader,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.ClassLoader)",
            "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String)",
            "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.Class)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String,java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String,java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)",
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List readAll(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)",
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,int,cn.hutool.core.io.StreamProgress)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,int)",
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,cn.hutool.core.io.StreamProgress)"
        ]
    },
    "cn.hutool.http.HttpResponse:long writeBody(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpResponse:long writeBody(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.file.FileCopier:java.lang.Object copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File copyContent(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File copy(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File copy(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.FileUtil:void move(java.io.File,java.io.File,boolean)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File copyFilesFromDir(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelReader getReader(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelReader getReader(java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedReader getUtf8Reader(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelUtil:void readBySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeUtf8Lines(java.util.Collection,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File appendUtf8Lines(java.util.Collection,java.lang.String)"
        ]
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.sax.Excel07SaxReader read07BySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.sax.Excel03SaxReader read03BySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.String readUtf8String(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List listFileNames(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.multipart.UploadFile:boolean processStream(cn.hutool.extra.servlet.multipart.MultipartRequestInputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.servlet.multipart.MultipartFormData:void parseRequestStream(java.io.InputStream,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeBytes(byte[],java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeUtf8String(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:void writeToStream(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedOutputStream getOutputStream(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File appendUtf8String(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.captcha.AbstractCaptcha:void write(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:void store(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.nio.charset.Charset,boolean)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeFromStream(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.bloomfilter.BitSetBloomFilter:void init(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:cn.hutool.core.io.resource.Resource getResourceObj(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.Setting:void <init>(java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object loadUtf8(java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List readUtf8Lines(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.util.Collection readUtf8Lines(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelWriter getWriter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelWriter:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelWriter getWriter(java.lang.String)"
        ]
    },
    "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.template.engine.freemarker.FreemarkerEngine:void <init>(cn.hutool.extra.template.TemplateConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.template.engine.EngineFactory:cn.hutool.extra.template.Engine doCreate(cn.hutool.extra.template.TemplateConfig)",
            "cn.hutool.extra.template.engine.freemarker.FreemarkerEngine:void <init>()"
        ]
    },
    "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.resource.ResourceUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.resource.ResourceUtil:java.lang.String readUtf8Str(java.lang.String)",
            "cn.hutool.core.io.resource.ResourceUtil:java.io.InputStream getStreamSafe(java.lang.String)",
            "cn.hutool.core.io.resource.ResourceUtil:java.io.InputStream getStream(java.lang.String)",
            "cn.hutool.core.io.resource.ResourceUtil:cn.hutool.core.io.resource.Resource getResourceObj(java.lang.String)",
            "cn.hutool.core.io.resource.ResourceUtil:java.lang.String readStr(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.Setting:void <init>(java.lang.String,java.lang.Class,java.nio.charset.Charset,boolean)",
            "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.Class,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,cn.hutool.core.io.StreamProgress)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File)"
        ]
    },
    "cn.hutool.core.io.FileUtil:void move(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.io.File)"
        ]
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelReader getReader(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeUtf8Lines(java.util.Collection,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendUtf8Lines(java.util.Collection,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.multipart.MultipartFormData:void parseRequestStream(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.servlet.multipart.MultipartFormData:void parseRequest(javax.servlet.ServletRequest)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeUtf8String(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendUtf8String(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.template.engine.velocity.VelocityUtil:void toFile(org.apache.velocity.Template,org.apache.velocity.VelocityContext,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String)"
        ]
    },
    "cn.hutool.setting.dialect.Props:void store(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:void store(java.lang.String,java.lang.Class)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.SettingLoader:void store(java.lang.String)"
        ]
    },
    "cn.hutool.setting.Setting:void <init>(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.cron.CronUtil:void setCronSetting(java.lang.String)",
            "cn.hutool.setting.profile.Profile:cn.hutool.setting.Setting getSetting(java.lang.String)",
            "cn.hutool.setting.Setting:void <init>(java.lang.String,boolean)"
        ]
    },
    "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:void <init>(java.lang.String)",
            "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.util.List readUtf8Lines(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelWriter getWriter(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.template.engine.EngineFactory:cn.hutool.extra.template.Engine doCreate(cn.hutool.extra.template.TemplateConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.template.engine.EngineFactory:cn.hutool.extra.template.Engine create(cn.hutool.extra.template.TemplateConfig)"
        ]
    },
    "cn.hutool.extra.template.engine.freemarker.FreemarkerEngine:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.lang.String readUtf8Str(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.io.InputStream getStreamSafe(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.log.dialect.jdk.JdkLogFactory:void readConfig()"
        ]
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.io.InputStream getStream(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.lang.String readStr(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.Setting:void <init>(java.lang.String,java.lang.Class,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.Class,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.lang.String)"
        ]
    },
    "cn.hutool.extra.servlet.multipart.MultipartFormData:void parseRequest(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.servlet.ServletUtil:cn.hutool.extra.servlet.multipart.MultipartFormData getMultipart(javax.servlet.ServletRequest,cn.hutool.extra.servlet.multipart.UploadSetting)"
        ]
    },
    "cn.hutool.extra.template.engine.velocity.VelocityUtil:void toFile(org.apache.velocity.Template,org.apache.velocity.VelocityContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.template.engine.velocity.VelocityUtil:void toFile(java.lang.String,org.apache.velocity.VelocityContext,java.lang.String)",
            "cn.hutool.extra.template.engine.velocity.VelocityUtil:void toFile(org.apache.velocity.app.VelocityEngine,java.lang.String,org.apache.velocity.VelocityContext,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.dialect.Props:void store(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.SettingLoader:void store(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.Setting:void store(java.lang.String)"
        ]
    },
    "cn.hutool.cron.CronUtil:void setCronSetting(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.cron.CronUtil:void start(boolean)"
        ]
    },
    "cn.hutool.setting.profile.Profile:cn.hutool.setting.Setting getSetting(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.Setting:void <init>(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoDS:void initSingle()",
            "cn.hutool.setting.Setting:void <init>(java.lang.String)",
            "cn.hutool.db.nosql.mongo.MongoDS:void initCloud()",
            "cn.hutool.setting.SettingUtil:cn.hutool.setting.Setting get(java.lang.String)",
            "cn.hutool.db.ds.DSFactory:void <init>(java.lang.String,java.lang.Class,cn.hutool.setting.Setting)",
            "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS init(java.lang.String)"
        ]
    },
    "cn.hutool.setting.dialect.Props:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String)"
        ]
    },
    "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.template.engine.EngineFactory:cn.hutool.extra.template.Engine create(cn.hutool.extra.template.TemplateConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.template.TemplateUtil:cn.hutool.extra.template.Engine createEngine(cn.hutool.extra.template.TemplateConfig)"
        ]
    },
    "cn.hutool.log.dialect.jdk.JdkLogFactory:void readConfig()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.log.dialect.jdk.JdkLogFactory:void <init>()"
        ]
    },
    "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.Class)"
        ]
    },
    "cn.hutool.extra.servlet.ServletUtil:cn.hutool.extra.servlet.multipart.MultipartFormData getMultipart(javax.servlet.ServletRequest,cn.hutool.extra.servlet.multipart.UploadSetting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.servlet.ServletUtil:cn.hutool.extra.servlet.multipart.MultipartFormData getMultipart(javax.servlet.ServletRequest)"
        ]
    },
    "cn.hutool.extra.template.engine.velocity.VelocityUtil:void toFile(java.lang.String,org.apache.velocity.VelocityContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.template.engine.velocity.VelocityUtil:void toFile(org.apache.velocity.app.VelocityEngine,java.lang.String,org.apache.velocity.VelocityContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.Setting:void store(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.cron.CronUtil:void start(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.cron.CronUtil:void start()"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void initSingle()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoDS:void <init>(java.lang.String,int)",
            "cn.hutool.db.nosql.mongo.MongoDS:void <init>(cn.hutool.setting.Setting,java.lang.String,int)",
            "cn.hutool.db.nosql.mongo.MongoDS:void init()"
        ]
    },
    "cn.hutool.setting.Setting:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDataSource:void <init>(cn.hutool.setting.Setting,java.lang.String)",
            "cn.hutool.db.ds.pooled.DbSetting:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.extra.mail.MailAccount:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void initCloud()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoDS:void init()"
        ]
    },
    "cn.hutool.setting.SettingUtil:cn.hutool.setting.Setting get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.DSFactory:void <init>(java.lang.String,java.lang.Class,cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.jndi.JndiDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.tomcat.TomcatDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.dbcp.DbcpDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.c3p0.C3p0DSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.simple.SimpleDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.druid.DruidDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.pooled.PooledDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.hikari.HikariDSFactory:void <init>(cn.hutool.setting.Setting)"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS init(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.redis.RedisDS:void <init>(cn.hutool.setting.Setting,java.lang.String)"
        ]
    },
    "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.template.TemplateUtil:cn.hutool.extra.template.Engine createEngine(cn.hutool.extra.template.TemplateConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.dialect.jdk.JdkLogFactory:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.log.LogFactory:cn.hutool.log.LogFactory doCreate()"
        ]
    },
    "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.ServletUtil:cn.hutool.extra.servlet.multipart.MultipartFormData getMultipart(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.cron.CronUtil:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void <init>(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.lang.String,int)"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void <init>(cn.hutool.setting.Setting,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void init()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoDS:void <init>(cn.hutool.setting.Setting,java.lang.String[])",
            "cn.hutool.db.nosql.mongo.MongoDS:void <init>(java.lang.String[])"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:void <init>(cn.hutool.setting.Setting,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDataSource:void <init>(java.lang.String)",
            "cn.hutool.db.ds.simple.SimpleDSFactory:cn.hutool.db.ds.simple.SimpleDataSource createDataSource(java.lang.String)"
        ]
    },
    "cn.hutool.db.ds.pooled.DbSetting:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.pooled.DbSetting:void <init>()",
            "cn.hutool.db.ds.pooled.PooledDSFactory:cn.hutool.db.ds.pooled.PooledDataSource createDataSource(java.lang.String)"
        ]
    },
    "cn.hutool.extra.mail.MailAccount:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.mail.GlobalMailAccount:cn.hutool.extra.mail.MailAccount createDefaultAccount()"
        ]
    },
    "cn.hutool.db.ds.jndi.JndiDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.jndi.JndiDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.tomcat.TomcatDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory doCreate(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.tomcat.TomcatDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.dbcp.DbcpDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory doCreate(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.dbcp.DbcpDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.c3p0.C3p0DSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.c3p0.C3p0DSFactory:void <init>()",
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory doCreate(cn.hutool.setting.Setting)"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.druid.DruidDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory doCreate(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.druid.DruidDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.pooled.PooledDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory doCreate(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.pooled.PooledDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.hikari.HikariDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.hikari.HikariDSFactory:void <init>()",
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory doCreate(cn.hutool.setting.Setting)"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:void <init>(cn.hutool.setting.Setting,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.redis.RedisDS:void <init>(java.lang.String)",
            "cn.hutool.db.nosql.redis.RedisDS:void <init>()",
            "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create(cn.hutool.setting.Setting,java.lang.String)"
        ]
    },
    "cn.hutool.log.LogFactory:cn.hutool.log.LogFactory doCreate()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.log.LogFactory:cn.hutool.log.LogFactory create()"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void <init>(cn.hutool.setting.Setting,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(cn.hutool.setting.Setting,java.lang.String[])"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void <init>(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.lang.String[])"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDataSource:cn.hutool.db.ds.simple.SimpleDataSource getDataSource(java.lang.String)",
            "cn.hutool.db.ds.simple.SimpleDataSource:void <init>()"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDSFactory:cn.hutool.db.ds.simple.SimpleDataSource createDataSource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDSFactory:javax.sql.DataSource getDataSource(java.lang.String)"
        ]
    },
    "cn.hutool.db.ds.pooled.DbSetting:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.pooled.PooledDataSource:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.db.ds.pooled.PooledDSFactory:cn.hutool.db.ds.pooled.PooledDataSource createDataSource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.pooled.PooledDSFactory:javax.sql.DataSource getDataSource(java.lang.String)"
        ]
    },
    "cn.hutool.extra.mail.GlobalMailAccount:cn.hutool.extra.mail.MailAccount createDefaultAccount()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.mail.GlobalMailAccount:void <init>(java.lang.String,int)"
        ]
    },
    "cn.hutool.db.ds.jndi.JndiDSFactory:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory doCreate(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory create(cn.hutool.setting.Setting)"
        ]
    },
    "cn.hutool.db.ds.tomcat.TomcatDSFactory:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.dbcp.DbcpDSFactory:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.c3p0.C3p0DSFactory:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.simple.SimpleDSFactory:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.druid.DruidDSFactory:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.pooled.PooledDSFactory:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.hikari.HikariDSFactory:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.nosql.redis.RedisDS:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create(java.lang.String)"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create()"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create(cn.hutool.setting.Setting,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.LogFactory:cn.hutool.log.LogFactory create()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.log.GlobalLogFactory:cn.hutool.log.LogFactory get()"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(cn.hutool.setting.Setting,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(cn.hutool.setting.Setting,java.util.Collection)"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.util.Collection)"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:cn.hutool.db.ds.simple.SimpleDataSource getDataSource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDataSource:cn.hutool.db.ds.simple.SimpleDataSource getDataSource()"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDSFactory:javax.sql.DataSource getDataSource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.pooled.PooledDataSource:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.pooled.PooledDataSource:cn.hutool.db.ds.pooled.PooledDataSource getDataSource(java.lang.String)",
            "cn.hutool.db.ds.pooled.PooledDataSource:void <init>()"
        ]
    },
    "cn.hutool.db.ds.pooled.PooledDSFactory:javax.sql.DataSource getDataSource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get(java.lang.String)"
        ]
    },
    "cn.hutool.extra.mail.GlobalMailAccount:void <init>(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.extra.mail.GlobalMailAccount:void <clinit>()"
        ]
    },
    "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory create(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory getCurrentDSFactory(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.GlobalDSFactory:cn.hutool.db.ds.DSFactory get()"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.GlobalLogFactory:cn.hutool.log.LogFactory get()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.log.LogFactory:cn.hutool.log.LogFactory getCurrentLogFactory()"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(cn.hutool.setting.Setting,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:cn.hutool.db.ds.simple.SimpleDataSource getDataSource()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.pooled.PooledDataSource:cn.hutool.db.ds.pooled.PooledDataSource getDataSource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.pooled.PooledDataSource:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.pooled.PooledDataSource:cn.hutool.db.ds.pooled.PooledDataSource getDataSource()"
        ]
    },
    "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.Session:cn.hutool.db.Session create(java.lang.String)",
            "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create(java.lang.String)",
            "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get()",
            "cn.hutool.db.Db:cn.hutool.db.Db use(java.lang.String)",
            "cn.hutool.db.DbUtil:javax.sql.DataSource getDs(java.lang.String)"
        ]
    },
    "cn.hutool.extra.mail.GlobalMailAccount:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory getCurrentDSFactory(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.GlobalDSFactory:cn.hutool.db.ds.DSFactory get()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get(java.lang.String)"
        ]
    },
    "cn.hutool.log.LogFactory:cn.hutool.log.LogFactory getCurrentLogFactory()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.log.LogFactory:cn.hutool.log.Log get(java.lang.String)",
            "cn.hutool.log.LogFactory:cn.hutool.log.Log get(java.lang.Class)"
        ]
    },
    "cn.hutool.db.ds.pooled.PooledDataSource:cn.hutool.db.ds.pooled.PooledDataSource getDataSource()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.Session:cn.hutool.db.Session create(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.Db:cn.hutool.db.Db use()",
            "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create()",
            "cn.hutool.db.DbUtil:javax.sql.DataSource getDs()",
            "cn.hutool.db.Session:cn.hutool.db.Session create()",
            "cn.hutool.db.DaoTemplate:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.db.Db:cn.hutool.db.Db use(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:javax.sql.DataSource getDs(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.LogFactory:cn.hutool.log.Log get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.log.StaticLog:cn.hutool.log.Log get(java.lang.String)"
        ]
    },
    "cn.hutool.log.LogFactory:cn.hutool.log.Log get(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.log.StaticLog:void error(java.lang.String,java.lang.Object[])",
            "cn.hutool.log.StaticLog:void trace(java.lang.String,java.lang.Object[])",
            "cn.hutool.log.StaticLog:cn.hutool.log.Log get()",
            "cn.hutool.log.StaticLog:void warn(java.lang.Throwable,java.lang.String,java.lang.Object[])",
            "cn.hutool.log.StaticLog:void debug(java.lang.String,java.lang.Object[])",
            "cn.hutool.log.StaticLog:boolean log(cn.hutool.log.level.Level,java.lang.Throwable,java.lang.String,java.lang.Object[])",
            "cn.hutool.log.LogFactory:cn.hutool.log.Log get()",
            "cn.hutool.log.StaticLog:void error(java.lang.Throwable,java.lang.String,java.lang.Object[])",
            "cn.hutool.log.StaticLog:void info(java.lang.String,java.lang.Object[])",
            "cn.hutool.log.StaticLog:cn.hutool.log.Log get(java.lang.Class)",
            "cn.hutool.log.StaticLog:void warn(java.lang.String,java.lang.Object[])",
            "cn.hutool.log.StaticLog:void error(java.lang.Throwable)"
        ]
    },
    "cn.hutool.db.Db:cn.hutool.db.Db use()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ActiveEntity:void <init>(java.lang.String)",
            "cn.hutool.db.ActiveEntity:void <init>(cn.hutool.db.Entity)",
            "cn.hutool.db.ActiveEntity:void <init>()",
            "cn.hutool.db.DbUtil:cn.hutool.db.Db use()"
        ]
    },
    "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:javax.sql.DataSource getDs()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.DbUtil:cn.hutool.db.SqlRunner newSqlRunner()",
            "cn.hutool.db.DbUtil:cn.hutool.db.Session newSession()"
        ]
    },
    "cn.hutool.db.Session:cn.hutool.db.Session create()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.DaoTemplate:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.log.StaticLog:cn.hutool.log.Log get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.StaticLog:void error(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.StaticLog:void trace(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.StaticLog:cn.hutool.log.Log get()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.setting.AbsSetting:void <clinit>()",
            "cn.hutool.extra.servlet.multipart.UploadSetting:void <clinit>()",
            "cn.hutool.db.nosql.mongo.MongoDS:void <clinit>()"
        ]
    },
    "cn.hutool.log.StaticLog:void warn(java.lang.Throwable,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.StaticLog:void debug(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.GlobalDSFactory$1:void run()",
            "cn.hutool.setting.Setting:void autoLoad(boolean)",
            "cn.hutool.db.dialect.DialectFactory:cn.hutool.db.dialect.Dialect newDialect(java.lang.String)",
            "cn.hutool.cron.Scheduler:cn.hutool.cron.Scheduler schedule(cn.hutool.setting.Setting)",
            "cn.hutool.extra.template.engine.EngineFactory:cn.hutool.extra.template.Engine create(cn.hutool.extra.template.TemplateConfig)",
            "cn.hutool.db.ds.GlobalDSFactory:cn.hutool.db.ds.DSFactory set(cn.hutool.db.ds.DSFactory)"
        ]
    },
    "cn.hutool.log.StaticLog:boolean log(cn.hutool.log.level.Level,java.lang.Throwable,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.LogFactory:cn.hutool.log.Log get()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:void <clinit>()",
            "cn.hutool.db.sql.SqlLog:void <clinit>()",
            "cn.hutool.cron.CronTimer:void <clinit>()",
            "cn.hutool.setting.dialect.Props:void <clinit>()",
            "cn.hutool.db.DbUtil:void <clinit>()",
            "cn.hutool.setting.SettingLoader:void <clinit>()",
            "cn.hutool.db.Session:void <clinit>()",
            "cn.hutool.aop.aspects.TimeIntervalAspect:void <clinit>()",
            "cn.hutool.extra.servlet.multipart.UploadFile:void <clinit>()",
            "cn.hutool.http.HttpConnection:void <clinit>()"
        ]
    },
    "cn.hutool.log.StaticLog:void error(java.lang.Throwable,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.cron.listener.TaskListenerManager:void notifyTaskFailed(cn.hutool.cron.TaskExecutor,java.lang.Throwable)"
        ]
    },
    "cn.hutool.log.StaticLog:void info(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.StaticLog:cn.hutool.log.Log get(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.log.StaticLog:void warn(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpRequest:cn.hutool.http.HttpResponse sendRedirectIfPosible()"
        ]
    },
    "cn.hutool.log.StaticLog:void error(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.Db:void quietSetAutoCommit(java.sql.Connection,java.lang.Boolean)",
            "cn.hutool.db.Db:void quietRollback(java.sql.Connection)"
        ]
    },
    "cn.hutool.db.ActiveEntity:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity create(java.lang.String)"
        ]
    },
    "cn.hutool.db.ActiveEntity:void <init>(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ActiveEntity:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity create()"
        ]
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.Db use()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.SqlRunner newSqlRunner()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.Session newSession()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.AbsSetting:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.multipart.UploadSetting:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ds.GlobalDSFactory$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.Setting:void autoLoad(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.dialect.DialectFactory:cn.hutool.db.dialect.Dialect newDialect(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.SqlRunner:void <init>(javax.sql.DataSource,java.lang.String)",
            "cn.hutool.db.dialect.DialectFactory:cn.hutool.db.dialect.Dialect newDialect(javax.sql.DataSource)",
            "cn.hutool.db.Db:void <init>(javax.sql.DataSource,java.lang.String)",
            "cn.hutool.db.Db:cn.hutool.db.Db use(javax.sql.DataSource,java.lang.String)",
            "cn.hutool.db.Session:void <init>(javax.sql.DataSource,java.lang.String)",
            "cn.hutool.db.SqlConnRunner:void <init>(java.lang.String)",
            "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create(javax.sql.DataSource,java.lang.String)",
            "cn.hutool.db.dialect.DialectFactory:cn.hutool.db.dialect.Dialect newDialect(java.sql.Connection)"
        ]
    },
    "cn.hutool.cron.Scheduler:cn.hutool.cron.Scheduler schedule(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.cron.CronUtil:void schedule(cn.hutool.setting.Setting)"
        ]
    },
    "cn.hutool.db.ds.GlobalDSFactory:cn.hutool.db.ds.DSFactory set(cn.hutool.db.ds.DSFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory setCurrentDSFactory(cn.hutool.db.ds.DSFactory)"
        ]
    },
    "cn.hutool.db.ds.DSFactory:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.sql.SqlLog:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.cron.CronTimer:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.dialect.Props:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.setting.SettingLoader:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.Session:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.aop.aspects.TimeIntervalAspect:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.multipart.UploadFile:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpConnection:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.cron.listener.TaskListenerManager:void notifyTaskFailed(cn.hutool.cron.TaskExecutor,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.cron.TaskExecutor:void run()"
        ]
    },
    "cn.hutool.http.HttpRequest:cn.hutool.http.HttpResponse sendRedirectIfPosible()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpRequest:cn.hutool.http.HttpResponse execute(boolean)"
        ]
    },
    "cn.hutool.db.Db:void quietSetAutoCommit(java.sql.Connection,java.lang.Boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.Db:cn.hutool.db.Db tx(cn.hutool.db.transaction.TransactionLevel,cn.hutool.db.transaction.TxFunc)"
        ]
    },
    "cn.hutool.db.Db:void quietRollback(java.sql.Connection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.Db:cn.hutool.db.Db tx(cn.hutool.db.transaction.TransactionLevel,cn.hutool.db.transaction.TxFunc)"
        ]
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity create(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parse(java.lang.Object)",
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parseWithUnderlineCase(java.lang.Object)",
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parse(java.lang.Object,boolean,boolean)"
        ]
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity create()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.SqlRunner:void <init>(javax.sql.DataSource,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.dialect.DialectFactory:cn.hutool.db.dialect.Dialect newDialect(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.dialect.DialectFactory:cn.hutool.db.dialect.Dialect getDialect(javax.sql.DataSource)"
        ]
    },
    "cn.hutool.db.Db:void <init>(javax.sql.DataSource,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.Db:cn.hutool.db.Db use(javax.sql.DataSource,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.Session:void <init>(javax.sql.DataSource,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.SqlConnRunner:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.SqlConnRunner:cn.hutool.db.SqlConnRunner create(java.lang.String)"
        ]
    },
    "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create(javax.sql.DataSource,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.dialect.DialectFactory:cn.hutool.db.dialect.Dialect newDialect(java.sql.Connection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.DbUtil:cn.hutool.db.SqlConnRunner newSqlConnRunner(java.sql.Connection)"
        ]
    },
    "cn.hutool.cron.CronUtil:void schedule(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.cron.CronUtil:void restart()",
            "cn.hutool.cron.CronUtil:void start(boolean)"
        ]
    },
    "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory setCurrentDSFactory(cn.hutool.db.ds.DSFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.cron.TaskExecutor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpRequest:cn.hutool.http.HttpResponse execute(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpRequest:cn.hutool.http.HttpResponse executeAsync()",
            "cn.hutool.http.HttpRequest:cn.hutool.http.HttpResponse execute()"
        ]
    },
    "cn.hutool.db.Db:cn.hutool.db.Db tx(cn.hutool.db.transaction.TransactionLevel,cn.hutool.db.transaction.TxFunc)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.Db:cn.hutool.db.Db tx(cn.hutool.db.transaction.TxFunc)"
        ]
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parse(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parseWithUnderlineCase(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parse(java.lang.Object,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.dialect.DialectFactory:cn.hutool.db.dialect.Dialect getDialect(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.SqlRunner:void <init>(javax.sql.DataSource)",
            "cn.hutool.db.SqlConnRunner:cn.hutool.db.SqlConnRunner create(javax.sql.DataSource)",
            "cn.hutool.db.Session:void <init>(javax.sql.DataSource)",
            "cn.hutool.db.Db:void <init>(javax.sql.DataSource)"
        ]
    },
    "cn.hutool.db.SqlConnRunner:cn.hutool.db.SqlConnRunner create(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.SqlConnRunner newSqlConnRunner(java.sql.Connection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.cron.CronUtil:void restart()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpRequest:cn.hutool.http.HttpResponse executeAsync()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,int,cn.hutool.core.io.StreamProgress)",
            "cn.hutool.http.HttpUtil:long download(java.lang.String,java.io.OutputStream,boolean,cn.hutool.core.io.StreamProgress)"
        ]
    },
    "cn.hutool.http.HttpRequest:cn.hutool.http.HttpResponse execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String,int)",
            "cn.hutool.http.HttpUtil:java.lang.String post(java.lang.String,java.util.Map,int)",
            "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String,java.util.Map)",
            "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String,java.util.Map,int)",
            "cn.hutool.http.HttpRequest:cn.hutool.http.HttpResponse sendRedirectIfPosible()",
            "cn.hutool.http.HttpUtil:java.lang.String post(java.lang.String,java.lang.String,int)",
            "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.db.Db:cn.hutool.db.Db tx(cn.hutool.db.transaction.TxFunc)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.SqlRunner:void <init>(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create(javax.sql.DataSource)"
        ]
    },
    "cn.hutool.db.SqlConnRunner:cn.hutool.db.SqlConnRunner create(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.DbUtil:cn.hutool.db.SqlConnRunner newSqlConnRunner(javax.sql.DataSource)"
        ]
    },
    "cn.hutool.db.Session:void <init>(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.Session:cn.hutool.db.Session create(java.lang.String)",
            "cn.hutool.db.Session:cn.hutool.db.Session create()",
            "cn.hutool.db.Session:cn.hutool.db.Session create(javax.sql.DataSource)"
        ]
    },
    "cn.hutool.db.Db:void <init>(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.Db:cn.hutool.db.Db use(javax.sql.DataSource)"
        ]
    },
    "cn.hutool.http.HttpUtil:long download(java.lang.String,java.io.OutputStream,boolean,cn.hutool.core.io.StreamProgress)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:java.lang.String downloadString(java.lang.String,java.nio.charset.Charset,cn.hutool.core.io.StreamProgress)",
            "cn.hutool.http.HttpUtil:long download(java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String)"
        ]
    },
    "cn.hutool.http.HttpUtil:java.lang.String post(java.lang.String,java.util.Map,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:java.lang.String post(java.lang.String,java.util.Map)"
        ]
    },
    "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String,java.util.Map,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:java.lang.String post(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:java.lang.String post(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create()",
            "cn.hutool.db.DbUtil:cn.hutool.db.SqlRunner newSqlRunner(javax.sql.DataSource)",
            "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create(java.lang.String)",
            "cn.hutool.db.DbUtil:cn.hutool.db.SqlRunner newSqlRunner()"
        ]
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.SqlConnRunner newSqlConnRunner(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.Session:cn.hutool.db.Session create(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.DbUtil:cn.hutool.db.Session newSession(javax.sql.DataSource)",
            "cn.hutool.db.DbUtil:cn.hutool.db.Session newSession()"
        ]
    },
    "cn.hutool.db.Db:cn.hutool.db.Db use(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.Db:cn.hutool.db.Db use()",
            "cn.hutool.db.DaoTemplate:void <init>(java.lang.String,java.lang.String,javax.sql.DataSource)",
            "cn.hutool.db.Db:cn.hutool.db.Db use(java.lang.String)",
            "cn.hutool.db.DbUtil:cn.hutool.db.Db use(javax.sql.DataSource)"
        ]
    },
    "cn.hutool.http.HttpUtil:java.lang.String downloadString(java.lang.String,java.nio.charset.Charset,cn.hutool.core.io.StreamProgress)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.http.HttpUtil:java.lang.String downloadString(java.lang.String,java.lang.String)",
            "cn.hutool.http.HttpUtil:java.lang.String downloadString(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.http.HttpUtil:long download(java.lang.String,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:java.lang.String get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:java.lang.String post(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:java.lang.String post(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.SqlRunner newSqlRunner(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.Session newSession(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:void <init>(java.lang.String,java.lang.String,javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.db.DaoTemplate:void <init>(java.lang.String,javax.sql.DataSource)",
            "cn.hutool.db.DaoTemplate:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.Db use(javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:java.lang.String downloadString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:java.lang.String downloadString(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:void <init>(java.lang.String,javax.sql.DataSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    }
}
{
    "org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource:org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource createConnectionSource(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource:org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource createConnectionSource(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:java.lang.String getContextName()",
            "org.apache.logging.log4j.core.appender.mom.JmsManager:javax.jms.Connection createConnection(org.apache.logging.log4j.core.net.JndiManager)",
            "org.apache.logging.log4j.core.appender.mom.JmsManager:javax.jms.Destination createDestination(org.apache.logging.log4j.core.net.JndiManager)",
            "org.apache.logging.log4j.core.appender.mom.JmsManager:java.lang.Object lookup(java.lang.String)",
            "org.apache.logging.log4j.core.lookup.JndiLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:java.lang.String getContextName()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:boolean hasContext(java.lang.String,java.lang.ClassLoader,boolean)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:void shutdown(java.lang.String,java.lang.ClassLoader,boolean,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:javax.jms.Connection createConnection(org.apache.logging.log4j.core.net.JndiManager)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager:javax.jms.Connection access$200(org.apache.logging.log4j.core.appender.mom.JmsManager,org.apache.logging.log4j.core.net.JndiManager)",
            "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:javax.jms.Destination createDestination(org.apache.logging.log4j.core.net.JndiManager)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager:javax.jms.Destination access$400(org.apache.logging.log4j.core.appender.mom.JmsManager,org.apache.logging.log4j.core.net.JndiManager)",
            "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:java.lang.Object lookup(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.lookup.JndiLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:boolean hasContext(java.lang.String,java.lang.ClassLoader,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:void shutdown(java.lang.String,java.lang.ClassLoader,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:javax.jms.Connection access$200(org.apache.logging.log4j.core.appender.mom.JmsManager,org.apache.logging.log4j.core.net.JndiManager)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager$Reconnector:void reconnect()"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration,org.apache.logging.log4j.core.appender.mom.JmsManager$1)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:javax.jms.Destination access$400(org.apache.logging.log4j.core.appender.mom.JmsManager,org.apache.logging.log4j.core.net.JndiManager)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager$Reconnector:void reconnect()"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager$Reconnector:void reconnect()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager:void send(org.apache.logging.log4j.core.LogEvent,java.io.Serializable)",
            "org.apache.logging.log4j.core.appender.mom.JmsManager$Reconnector:void run()"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration,org.apache.logging.log4j.core.appender.mom.JmsManager$1)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerFactory:org.apache.logging.log4j.core.appender.mom.JmsManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:void send(org.apache.logging.log4j.core.LogEvent,java.io.Serializable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager$Reconnector:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerFactory:org.apache.logging.log4j.core.appender.mom.JmsManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.OutputStreamManager:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(java.lang.String,java.lang.Object,org.apache.logging.log4j.core.appender.ManagerFactory)",
            "org.apache.logging.log4j.core.appender.mom.JmsManager:org.apache.logging.log4j.core.appender.mom.JmsManager getJmsManager(java.lang.String,java.util.Properties,java.lang.String,java.lang.String,java.lang.String,char[],boolean,long)",
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager$AbstractFactoryData,org.apache.logging.log4j.core.appender.ManagerFactory)",
            "org.apache.logging.log4j.core.appender.WriterManager:org.apache.logging.log4j.core.appender.WriterManager getManager(java.lang.String,java.lang.Object,org.apache.logging.log4j.core.appender.ManagerFactory)",
            "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqManager:org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqManager getJeroMqManager(java.lang.String,long,long,boolean,byte[],boolean,long,long,long,long,int,long,long,long,int,long,int,long,long,long,boolean,java.util.List)",
            "org.apache.logging.log4j.core.net.SmtpManager:org.apache.logging.log4j.core.net.SmtpManager getSmtpManager(org.apache.logging.log4j.core.config.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration)",
            "org.apache.logging.log4j.core.appender.mom.JmsAppender$Builder:org.apache.logging.log4j.core.appender.mom.JmsAppender build()",
            "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getDefaultManager(java.lang.String)",
            "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getDefaultManager()",
            "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getJndiManager(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)",
            "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getJndiManager(java.util.Properties)",
            "org.apache.logging.log4j.core.appender.mom.kafka.KafkaManager:org.apache.logging.log4j.core.appender.mom.kafka.KafkaManager getManager(org.apache.logging.log4j.core.LoggerContext,java.lang.String,java.lang.String,boolean,org.apache.logging.log4j.core.config.Property[],java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamManager:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(java.lang.String,java.lang.Object,org.apache.logging.log4j.core.appender.ManagerFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.FileManager:org.apache.logging.log4j.core.appender.FileManager getFileManager(java.lang.String,boolean,boolean,boolean,boolean,java.lang.String,org.apache.logging.log4j.core.Layout,int,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.net.DatagramSocketManager:org.apache.logging.log4j.core.net.DatagramSocketManager getSocketManager(java.lang.String,int,org.apache.logging.log4j.core.Layout,int)",
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager getDefaultManager(org.apache.logging.log4j.core.appender.ConsoleAppender$Target,boolean,boolean,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.OutputStreamAppender:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(java.io.OutputStream,boolean,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.RandomAccessFileManager:org.apache.logging.log4j.core.appender.RandomAccessFileManager getFileManager(java.lang.String,boolean,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.MemoryMappedFileManager:org.apache.logging.log4j.core.appender.MemoryMappedFileManager getFileManager(java.lang.String,boolean,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(org.apache.logging.log4j.core.appender.ConsoleAppender$Target,boolean,boolean,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.net.TcpSocketManager:org.apache.logging.log4j.core.net.TcpSocketManager getSocketManager(java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout,int,org.apache.logging.log4j.core.net.SocketOptions)",
            "org.apache.logging.log4j.core.net.SslSocketManager:org.apache.logging.log4j.core.net.SslSocketManager getSocketManager(org.apache.logging.log4j.core.net.ssl.SslConfiguration,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout,int,org.apache.logging.log4j.core.net.SocketOptions)",
            "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager getRollingRandomAccessFileManager(java.lang.String,java.lang.String,boolean,boolean,int,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:org.apache.logging.log4j.core.appender.rolling.RollingFileManager getFileManager(java.lang.String,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:org.apache.logging.log4j.core.appender.mom.JmsManager getJmsManager(java.lang.String,java.util.Properties,java.lang.String,java.lang.String,java.lang.String,char[],boolean,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager$AbstractFactoryData,org.apache.logging.log4j.core.appender.ManagerFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.nosql.NoSqlDatabaseManager:org.apache.logging.log4j.core.appender.nosql.NoSqlDatabaseManager getNoSqlDatabaseManager(java.lang.String,int,org.apache.logging.log4j.core.appender.nosql.NoSqlProvider)",
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getManager(java.lang.String,int,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[],org.apache.logging.log4j.core.appender.db.ColumnMapping[],boolean,long)",
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getManager(java.lang.String,int,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[],org.apache.logging.log4j.core.appender.db.ColumnMapping[])",
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getJDBCDatabaseManager(java.lang.String,int,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[])",
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getManager(java.lang.String,int,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[],org.apache.logging.log4j.core.appender.db.ColumnMapping[],boolean,long,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.appender.WriterManager:org.apache.logging.log4j.core.appender.WriterManager getManager(java.lang.String,java.lang.Object,org.apache.logging.log4j.core.appender.ManagerFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.WriterAppender:org.apache.logging.log4j.core.appender.WriterManager getManager(java.io.Writer,boolean,org.apache.logging.log4j.core.StringLayout)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqManager:org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqManager getJeroMqManager(java.lang.String,long,long,boolean,byte[],boolean,long,long,long,long,int,long,long,long,int,long,int,long,long,long,boolean,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender:void <init>(java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.Layout,boolean,java.util.List,long,long,boolean,byte[],boolean,long,long,long,long,int,long,long,long,int,long,int,long,long,long,boolean,org.apache.logging.log4j.core.config.Property[])"
        ]
    },
    "org.apache.logging.log4j.core.net.SmtpManager:org.apache.logging.log4j.core.net.SmtpManager getSmtpManager(org.apache.logging.log4j.core.config.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SmtpAppender:org.apache.logging.log4j.core.appender.SmtpAppender createAppender(org.apache.logging.log4j.core.config.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String)",
            "org.apache.logging.log4j.core.appender.SmtpAppender$Builder:org.apache.logging.log4j.core.appender.SmtpAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsAppender$Builder:org.apache.logging.log4j.core.appender.mom.JmsAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getDefaultManager(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getDefaultManager()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:java.lang.String getContextName()",
            "org.apache.logging.log4j.core.lookup.JndiLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getJndiManager(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getJndiManager(java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration:org.apache.logging.log4j.core.net.JndiManager getJndiManager()"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.kafka.KafkaManager:org.apache.logging.log4j.core.appender.mom.kafka.KafkaManager getManager(org.apache.logging.log4j.core.LoggerContext,java.lang.String,java.lang.String,boolean,org.apache.logging.log4j.core.config.Property[],java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender:org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,boolean,java.lang.String,org.apache.logging.log4j.core.config.Property[],org.apache.logging.log4j.core.config.Configuration,java.lang.String)",
            "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender$Builder:org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.FileManager:org.apache.logging.log4j.core.appender.FileManager getFileManager(java.lang.String,boolean,boolean,boolean,boolean,java.lang.String,org.apache.logging.log4j.core.Layout,int,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.FileAppender$Builder:org.apache.logging.log4j.core.appender.FileAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.net.DatagramSocketManager:org.apache.logging.log4j.core.net.DatagramSocketManager getSocketManager(java.lang.String,int,org.apache.logging.log4j.core.Layout,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout,int,org.apache.logging.log4j.core.net.SocketOptions)"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager getDefaultManager(org.apache.logging.log4j.core.appender.ConsoleAppender$Target,boolean,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createDefaultAppenderForLayout(org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamAppender:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(java.io.OutputStream,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.OutputStreamAppender:org.apache.logging.log4j.core.appender.OutputStreamAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.io.OutputStream,java.lang.String,boolean,boolean)",
            "org.apache.logging.log4j.core.appender.OutputStreamAppender:org.apache.logging.log4j.core.appender.OutputStreamManager access$000(java.io.OutputStream,boolean,org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileManager:org.apache.logging.log4j.core.appender.RandomAccessFileManager getFileManager(java.lang.String,boolean,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RandomAccessFileAppender$Builder:org.apache.logging.log4j.core.appender.RandomAccessFileAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileManager:org.apache.logging.log4j.core.appender.MemoryMappedFileManager getFileManager(java.lang.String,boolean,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender$Builder:org.apache.logging.log4j.core.appender.MemoryMappedFileAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(org.apache.logging.log4j.core.appender.ConsoleAppender$Target,boolean,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.appender.ConsoleAppender$Target,java.lang.String,boolean,boolean,boolean)",
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager access$300(org.apache.logging.log4j.core.appender.ConsoleAppender$Target,boolean,boolean,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.net.TcpSocketManager:org.apache.logging.log4j.core.net.TcpSocketManager getSocketManager(java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout,int,org.apache.logging.log4j.core.net.SocketOptions)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout,int,org.apache.logging.log4j.core.net.SocketOptions)",
            "org.apache.logging.log4j.core.net.TcpSocketManager:org.apache.logging.log4j.core.net.TcpSocketManager getSocketManager(java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout,int)"
        ]
    },
    "org.apache.logging.log4j.core.net.SslSocketManager:org.apache.logging.log4j.core.net.SslSocketManager getSocketManager(org.apache.logging.log4j.core.net.ssl.SslConfiguration,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout,int,org.apache.logging.log4j.core.net.SocketOptions)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout,int,org.apache.logging.log4j.core.net.SocketOptions)",
            "org.apache.logging.log4j.core.net.SslSocketManager:org.apache.logging.log4j.core.net.SslSocketManager getSocketManager(org.apache.logging.log4j.core.net.ssl.SslConfiguration,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout,int)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager getRollingRandomAccessFileManager(java.lang.String,java.lang.String,boolean,boolean,int,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender$Builder:org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:org.apache.logging.log4j.core.appender.rolling.RollingFileManager getFileManager(java.lang.String,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RollingFileAppender$Builder:org.apache.logging.log4j.core.appender.RollingFileAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.nosql.NoSqlDatabaseManager:org.apache.logging.log4j.core.appender.nosql.NoSqlDatabaseManager getNoSqlDatabaseManager(java.lang.String,int,org.apache.logging.log4j.core.appender.nosql.NoSqlProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender$Builder:org.apache.logging.log4j.core.appender.nosql.NoSqlAppender build()",
            "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender:org.apache.logging.log4j.core.appender.nosql.NoSqlAppender createAppender(java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,java.lang.String,org.apache.logging.log4j.core.appender.nosql.NoSqlProvider)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getManager(java.lang.String,int,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[],org.apache.logging.log4j.core.appender.db.ColumnMapping[],boolean,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getManager(java.lang.String,int,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[],org.apache.logging.log4j.core.appender.db.ColumnMapping[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getJDBCDatabaseManager(java.lang.String,int,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getManager(java.lang.String,int,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[],org.apache.logging.log4j.core.appender.db.ColumnMapping[],boolean,long,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$Builder:org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.WriterAppender:org.apache.logging.log4j.core.appender.WriterManager getManager(java.io.Writer,boolean,org.apache.logging.log4j.core.StringLayout)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.WriterAppender:org.apache.logging.log4j.core.appender.WriterAppender createAppender(org.apache.logging.log4j.core.StringLayout,org.apache.logging.log4j.core.Filter,java.io.Writer,java.lang.String,boolean,boolean)",
            "org.apache.logging.log4j.core.appender.WriterAppender:org.apache.logging.log4j.core.appender.WriterManager access$000(java.io.Writer,boolean,org.apache.logging.log4j.core.StringLayout)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender:void <init>(java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.Layout,boolean,java.util.List,long,long,boolean,byte[],boolean,long,long,long,long,int,long,long,long,int,long,int,long,long,long,boolean,org.apache.logging.log4j.core.config.Property[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender:org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender createAppender(java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.config.Property[],boolean,long,long,boolean,byte[],boolean,long,long,long,long,int,long,long,long,int,long,int,long,long,long,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.appender.SmtpAppender:org.apache.logging.log4j.core.appender.SmtpAppender createAppender(org.apache.logging.log4j.core.config.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SmtpAppender$Builder:org.apache.logging.log4j.core.appender.SmtpAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SmtpAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration:org.apache.logging.log4j.core.net.JndiManager getJndiManager()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager:org.apache.logging.log4j.core.net.JndiManager getJndiManager()",
            "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerConfiguration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender:org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,boolean,java.lang.String,org.apache.logging.log4j.core.config.Property[],org.apache.logging.log4j.core.config.Configuration,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender$Builder:org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.FileAppender$Builder:org.apache.logging.log4j.core.appender.FileAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.FileAppender$Builder:java.lang.Object build()",
            "org.apache.logging.log4j.core.appender.FileAppender:org.apache.logging.log4j.core.appender.FileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout,int,org.apache.logging.log4j.core.net.SocketOptions)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout,int)",
            "org.apache.logging.log4j.core.appender.SyslogAppender$Builder:org.apache.logging.log4j.core.appender.SyslogAppender build()",
            "org.apache.logging.log4j.core.appender.SocketAppender$Builder:org.apache.logging.log4j.core.appender.SocketAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createDefaultAppenderForLayout(org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void setToDefault()"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamAppender:org.apache.logging.log4j.core.appender.OutputStreamAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.io.OutputStream,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.OutputStreamAppender:org.apache.logging.log4j.core.appender.OutputStreamManager access$000(java.io.OutputStream,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.OutputStreamAppender$Builder:org.apache.logging.log4j.core.appender.OutputStreamAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileAppender$Builder:org.apache.logging.log4j.core.appender.RandomAccessFileAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RandomAccessFileAppender:org.apache.logging.log4j.core.appender.RandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.RandomAccessFileAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender$Builder:org.apache.logging.log4j.core.appender.MemoryMappedFileAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender$Builder:java.lang.Object build()",
            "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender:org.apache.logging.log4j.core.appender.MemoryMappedFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.appender.ConsoleAppender$Target,java.lang.String,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager access$300(org.apache.logging.log4j.core.appender.ConsoleAppender$Target,boolean,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:org.apache.logging.log4j.core.appender.ConsoleAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.net.TcpSocketManager:org.apache.logging.log4j.core.net.TcpSocketManager getSocketManager(java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.net.SslSocketManager:org.apache.logging.log4j.core.net.SslSocketManager getSocketManager(org.apache.logging.log4j.core.net.ssl.SslConfiguration,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender$Builder:org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.RollingFileAppender$Builder:org.apache.logging.log4j.core.appender.RollingFileAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RollingFileAppender:org.apache.logging.log4j.core.appender.RollingFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.RollingFileAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender$Builder:org.apache.logging.log4j.core.appender.nosql.NoSqlAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender:org.apache.logging.log4j.core.appender.nosql.NoSqlAppender createAppender(java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,java.lang.String,org.apache.logging.log4j.core.appender.nosql.NoSqlProvider)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$Builder:org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$Builder:java.lang.Object build()",
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender:org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender createAppender(java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[])"
        ]
    },
    "org.apache.logging.log4j.core.appender.WriterAppender:org.apache.logging.log4j.core.appender.WriterAppender createAppender(org.apache.logging.log4j.core.StringLayout,org.apache.logging.log4j.core.Filter,java.io.Writer,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.WriterAppender:org.apache.logging.log4j.core.appender.WriterManager access$000(java.io.Writer,boolean,org.apache.logging.log4j.core.StringLayout)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.WriterAppender$Builder:org.apache.logging.log4j.core.appender.WriterAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender:org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender createAppender(java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.config.Property[],boolean,long,long,boolean,byte[],boolean,long,long,long,long,int,long,long,long,int,long,int,long,long,long,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SmtpAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:org.apache.logging.log4j.core.net.JndiManager getJndiManager()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager$Reconnector:void reconnect()"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.FileAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.FileAppender:org.apache.logging.log4j.core.appender.FileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SyslogAppender$Builder:org.apache.logging.log4j.core.appender.SyslogAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SyslogAppender$Builder:java.lang.Object build()",
            "org.apache.logging.log4j.core.appender.SyslogAppender:org.apache.logging.log4j.core.appender.SyslogAppender createAppender(java.lang.String,int,java.lang.String,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,int,boolean,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.net.Facility,java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.config.Configuration,java.nio.charset.Charset,java.lang.String,org.apache.logging.log4j.core.layout.LoggerFields[],boolean)"
        ]
    },
    "org.apache.logging.log4j.core.appender.SocketAppender$Builder:org.apache.logging.log4j.core.appender.SocketAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.appender.SocketAppender createAppender(java.lang.String,int,org.apache.logging.log4j.core.net.Protocol,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,int,boolean,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,boolean,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.SocketAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void setToDefault()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.DefaultConfiguration:void <init>()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void doConfigure()"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamAppender$Builder:org.apache.logging.log4j.core.appender.OutputStreamAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.OutputStreamAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileAppender:org.apache.logging.log4j.core.appender.RandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender:org.apache.logging.log4j.core.appender.MemoryMappedFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:org.apache.logging.log4j.core.appender.ConsoleAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.RollingFileAppender:org.apache.logging.log4j.core.appender.RollingFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.RollingFileAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender:org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender createAppender(java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.WriterAppender$Builder:org.apache.logging.log4j.core.appender.WriterAppender build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.WriterAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.SyslogAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SyslogAppender:org.apache.logging.log4j.core.appender.SyslogAppender createAppender(java.lang.String,int,java.lang.String,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,int,boolean,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.net.Facility,java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.config.Configuration,java.nio.charset.Charset,java.lang.String,org.apache.logging.log4j.core.layout.LoggerFields[],boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.appender.SocketAppender createAppender(java.lang.String,int,org.apache.logging.log4j.core.net.Protocol,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,int,boolean,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,boolean,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.appender.SocketAppender createAppender(java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.SocketAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.DefaultConfiguration:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.layout.JsonLayout:org.apache.logging.log4j.core.layout.JsonLayout createDefaultLayout()",
            "org.apache.logging.log4j.core.appender.SmtpAppender:org.apache.logging.log4j.core.appender.SmtpAppender createAppender(org.apache.logging.log4j.core.config.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String)",
            "org.apache.logging.log4j.core.layout.YamlLayout:org.apache.logging.log4j.core.layout.AbstractJacksonLayout createDefaultLayout()",
            "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object,java.lang.String)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.LoggerContext,java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.layout.PatternLayout$Builder:org.apache.logging.log4j.core.layout.PatternLayout build()",
            "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void doConfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void initialize()"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.WriterAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.appender.SocketAppender createAppender(java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.JsonLayout:org.apache.logging.log4j.core.layout.JsonLayout createDefaultLayout()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.YamlLayout:org.apache.logging.log4j.core.layout.AbstractJacksonLayout createDefaultLayout()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.LoggerContext,java.lang.String,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.LoggerContext,java.lang.String,java.net.URI,java.lang.ClassLoader)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.util.List,java.lang.String)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)",
            "org.apache.logging.log4j.core.config.composite.CompositeConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()"
        ]
    },
    "org.apache.logging.log4j.core.layout.PatternLayout$Builder:org.apache.logging.log4j.core.layout.PatternLayout build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void setToDefault()",
            "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder:org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig build()",
            "org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder:org.apache.logging.log4j.core.appender.db.ColumnMapping build()",
            "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createLayout(java.lang.String,org.apache.logging.log4j.core.layout.PatternSelector,org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.pattern.RegexReplacement,java.nio.charset.Charset,boolean,boolean,java.lang.String,java.lang.String)",
            "org.apache.logging.log4j.core.appender.AbstractAppender$Builder:org.apache.logging.log4j.core.Layout getOrCreateLayout(java.nio.charset.Charset)",
            "org.apache.logging.log4j.core.layout.GelfLayout$Builder:org.apache.logging.log4j.core.layout.GelfLayout build()",
            "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createDefaultLayout()",
            "org.apache.logging.log4j.core.layout.PatternLayout$Builder:java.lang.Object build()",
            "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createDefaultLayout(org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object,java.net.URI)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.String,java.lang.Object,java.net.URI)",
            "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(org.osgi.framework.Bundle,java.net.URI)",
            "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String)",
            "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object)",
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext createContext(java.lang.String,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void initialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void start()",
            "org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder:org.apache.logging.log4j.core.config.builder.impl.BuiltConfiguration build(boolean)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.LoggerContext,java.lang.String,java.net.URI,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void reconfigure(java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.composite.CompositeConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder:org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig:org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig createColumnConfig(org.apache.logging.log4j.core.config.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder:org.apache.logging.log4j.core.appender.db.ColumnMapping build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createLayout(java.lang.String,org.apache.logging.log4j.core.layout.PatternSelector,org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.pattern.RegexReplacement,java.nio.charset.Charset,boolean,boolean,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.AbstractAppender$Builder:org.apache.logging.log4j.core.Layout getOrCreateLayout(java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:org.apache.logging.log4j.core.appender.ConsoleAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.layout.GelfLayout$Builder:org.apache.logging.log4j.core.layout.GelfLayout build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.layout.GelfLayout$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createDefaultLayout()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.WriterAppender:org.apache.logging.log4j.core.appender.WriterAppender createAppender(org.apache.logging.log4j.core.StringLayout,org.apache.logging.log4j.core.Filter,java.io.Writer,java.lang.String,boolean,boolean)",
            "org.apache.logging.log4j.core.appender.OutputStreamAppender$Builder:org.apache.logging.log4j.core.appender.OutputStreamAppender build()",
            "org.apache.logging.log4j.core.appender.AbstractAppender$Builder:org.apache.logging.log4j.core.Layout getOrCreateLayout()",
            "org.apache.logging.log4j.core.appender.OutputStreamAppender:org.apache.logging.log4j.core.appender.OutputStreamAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.io.OutputStream,java.lang.String,boolean,boolean)",
            "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender:org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender createAppender(java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.config.Property[],boolean,long,long,boolean,byte[],boolean,long,long,long,long,int,long,long,long,int,long,int,long,long,long,boolean)",
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.appender.ConsoleAppender$Target,java.lang.String,boolean,boolean,boolean)",
            "org.apache.logging.log4j.core.appender.WriterAppender$Builder:org.apache.logging.log4j.core.appender.WriterAppender build()",
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.layout.PatternLayout$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createDefaultLayout(org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:org.apache.logging.log4j.core.LoggerContext createContext(java.lang.String,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.String,java.lang.Object,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(org.osgi.framework.Bundle,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.BasicContextSelector:void <clinit>()",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:void <clinit>()",
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext createContext(java.lang.String,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getDefault()",
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.ClassLoader,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.config.Configuration setConfiguration(org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder:org.apache.logging.log4j.core.config.builder.impl.BuiltConfiguration build(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder:org.apache.logging.log4j.core.config.Configuration build(boolean)",
            "org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder:org.apache.logging.log4j.core.config.builder.impl.BuiltConfiguration build()"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void reconfigure(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void reconfigure()",
            "org.apache.logging.log4j.core.LoggerContext:void setConfigLocation(java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig:org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig createColumnConfig(org.apache.logging.log4j.core.config.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.GelfLayout$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.AbstractAppender$Builder:org.apache.logging.log4j.core.Layout getOrCreateLayout()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RandomAccessFileAppender$Builder:org.apache.logging.log4j.core.appender.RandomAccessFileAppender build()",
            "org.apache.logging.log4j.core.appender.RollingFileAppender$Builder:org.apache.logging.log4j.core.appender.RollingFileAppender build()",
            "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender$Builder:org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender build()",
            "org.apache.logging.log4j.core.appender.FileAppender$Builder:org.apache.logging.log4j.core.appender.FileAppender build()",
            "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender$Builder:org.apache.logging.log4j.core.appender.MemoryMappedFileAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:org.apache.logging.log4j.core.LoggerContext createContext(java.lang.String,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.selector.BasicContextSelector:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getDefault()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)",
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.ClassLoader,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.config.Configuration setConfiguration(org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void onChange(org.apache.logging.log4j.core.config.Reconfigurable)",
            "org.apache.logging.log4j.core.LoggerContext:void reconfigure(org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.LoggerContext:void start(org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.LoggerContext:void reconfigure(java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder:org.apache.logging.log4j.core.config.Configuration build(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationBuilder:org.apache.logging.log4j.core.config.properties.PropertiesConfiguration build()"
        ]
    },
    "org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder:org.apache.logging.log4j.core.config.builder.impl.BuiltConfiguration build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void reconfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void start()"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void setConfigLocation(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void onChange(org.apache.logging.log4j.core.config.Reconfigurable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:void reconfigure(org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:void start(org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void start(org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationBuilder:org.apache.logging.log4j.core.config.properties.PropertiesConfiguration build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory:org.apache.logging.log4j.core.config.properties.PropertiesConfiguration getConfiguration(org.apache.logging.log4j.core.LoggerContext,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationBuilder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void start()"
        ]
    },
    "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void start(org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory:org.apache.logging.log4j.core.config.properties.PropertiesConfiguration getConfiguration(org.apache.logging.log4j.core.LoggerContext,org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.LoggerContext,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.properties.PropertiesConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()"
        ]
    },
    "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationBuilder:java.lang.Object build()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.LoggerContext,org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.properties.PropertiesConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)"
        ],
        "vulCaller": []
    }
}
{
    "org.springframework.security.config.http.FilterChainMapBeanDefinitionDecorator:org.springframework.beans.factory.config.BeanDefinitionHolder decorate(org.w3c.dom.Node,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.http.FilterChainMapBeanDefinitionDecorator:org.springframework.beans.factory.config.BeanDefinitionHolder decorate(org.w3c.dom.Node,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.xml.ParserContext)"
        ],
        "vulCaller": [
            "org.springframework.security.config.SecurityNamespaceHandler:org.springframework.beans.factory.config.BeanDefinitionHolder decorate(org.w3c.dom.Node,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.xml.ParserContext)"
        ]
    },
    "org.springframework.security.config.SecurityNamespaceHandler:org.springframework.beans.factory.config.BeanDefinitionHolder decorate(org.w3c.dom.Node,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.security.config.http.FilterChainMapBeanDefinitionDecorator:org.springframework.beans.factory.config.BeanDefinitionHolder decorate(org.w3c.dom.Node,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.xml.ParserContext)"
        ],
        "vulCaller": []
    },
    "org.springframework.security.config.http.HttpConfigurationBuilder:org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForChannelSecurity()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.http.HttpConfigurationBuilder:org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForChannelSecurity()"
        ],
        "vulCaller": [
            "org.springframework.security.config.http.HttpConfigurationBuilder:void createChannelProcessingFilter()"
        ]
    },
    "org.springframework.security.config.http.HttpConfigurationBuilder:void createChannelProcessingFilter()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.security.config.http.HttpConfigurationBuilder:org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForChannelSecurity()"
        ],
        "vulCaller": [
            "org.springframework.security.config.http.HttpConfigurationBuilder:void <init>(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.config.BeanReference,org.springframework.beans.factory.config.BeanReference,org.springframework.beans.factory.config.BeanReference)"
        ]
    },
    "org.springframework.security.config.http.HttpSecurityBeanDefinitionParser:org.springframework.beans.factory.config.BeanReference createSecurityFilterChainBean(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.util.List)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.http.HttpSecurityBeanDefinitionParser:org.springframework.beans.factory.config.BeanReference createSecurityFilterChainBean(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.util.List)",
            "org.springframework.security.config.http.HttpConfigurationBuilder:void createFilterSecurityInterceptor(org.springframework.beans.factory.config.BeanReference)",
            "org.springframework.security.config.http.HttpConfigurationBuilder:org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForChannelSecurity()"
        ],
        "vulCaller": [
            "org.springframework.security.config.http.HttpSecurityBeanDefinitionParser:org.springframework.beans.factory.config.BeanReference createFilterChain(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)"
        ]
    },
    "org.springframework.security.config.http.HttpSecurityBeanDefinitionParser:org.springframework.beans.factory.config.BeanReference createFilterChain(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.security.config.http.HttpSecurityBeanDefinitionParser:org.springframework.beans.factory.config.BeanReference createSecurityFilterChainBean(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.util.List)",
            "org.springframework.security.config.http.HttpConfigurationBuilder:void createFilterSecurityInterceptor(org.springframework.beans.factory.config.BeanReference)",
            "org.springframework.security.config.http.HttpConfigurationBuilder:org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForChannelSecurity()"
        ],
        "vulCaller": [
            "org.springframework.security.config.http.HttpSecurityBeanDefinitionParser:org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)"
        ]
    },
    "org.springframework.security.config.http.FilterChainBeanDefinitionParser:org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.http.FilterChainBeanDefinitionParser:org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)"
        ],
        "vulCaller": []
    },
    "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry requiresChannel()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry requiresChannel()"
        ],
        "vulCaller": []
    },
    "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.CsrfConfigurer csrf()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.CsrfConfigurer csrf()",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:void <init>(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder,java.util.Map)",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()"
        ],
        "vulCaller": [
            "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:org.springframework.security.config.annotation.web.builders.HttpSecurity getHttp()"
        ]
    },
    "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:org.springframework.security.config.annotation.web.builders.HttpSecurity getHttp()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.CsrfConfigurer csrf()",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:void <init>(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder,java.util.Map)",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()"
        ],
        "vulCaller": [
            "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:void init(org.springframework.security.config.annotation.web.builders.WebSecurity)"
        ]
    },
    "org.springframework.security.config.annotation.web.builders.HttpSecurity:void <init>(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder,java.util.Map)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:void <init>(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder,java.util.Map)"
        ],
        "vulCaller": [
            "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:org.springframework.security.config.annotation.web.builders.HttpSecurity getHttp()"
        ]
    },
    "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()"
        ],
        "vulCaller": [
            "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"
        ]
    },
    "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()"
        ],
        "vulCaller": [
            "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:org.springframework.security.config.annotation.web.builders.HttpSecurity getHttp()"
        ]
    },
    "org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser:org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser:org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)"
        ],
        "vulCaller": []
    },
    "org.springframework.security.config.http.HttpConfigurationBuilder:void createFilterSecurityInterceptor(org.springframework.beans.factory.config.BeanReference)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.springframework.security.config.http.HttpConfigurationBuilder:void createFilterSecurityInterceptor(org.springframework.beans.factory.config.BeanReference)",
            "org.springframework.security.config.http.HttpConfigurationBuilder:org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForChannelSecurity()"
        ],
        "vulCaller": [
            "org.springframework.security.config.http.HttpConfigurationBuilder:void <init>(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.config.BeanReference,org.springframework.beans.factory.config.BeanReference,org.springframework.beans.factory.config.BeanReference)"
        ]
    },
    "org.springframework.security.config.http.HttpConfigurationBuilder:void <init>(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.config.BeanReference,org.springframework.beans.factory.config.BeanReference,org.springframework.beans.factory.config.BeanReference)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.security.config.http.HttpConfigurationBuilder:void createFilterSecurityInterceptor(org.springframework.beans.factory.config.BeanReference)",
            "org.springframework.security.config.http.HttpConfigurationBuilder:org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForChannelSecurity()"
        ],
        "vulCaller": [
            "org.springframework.security.config.http.HttpSecurityBeanDefinitionParser:org.springframework.beans.factory.config.BeanReference createFilterChain(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)"
        ]
    },
    "org.springframework.security.config.http.HttpSecurityBeanDefinitionParser:org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.security.config.http.HttpSecurityBeanDefinitionParser:org.springframework.beans.factory.config.BeanReference createSecurityFilterChainBean(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.util.List)",
            "org.springframework.security.config.http.HttpConfigurationBuilder:void createFilterSecurityInterceptor(org.springframework.beans.factory.config.BeanReference)",
            "org.springframework.security.config.http.HttpConfigurationBuilder:org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForChannelSecurity()"
        ],
        "vulCaller": []
    },
    "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:void init(org.springframework.security.config.annotation.web.builders.WebSecurity)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.CsrfConfigurer csrf()",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:void <init>(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder,java.util.Map)",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()"
        ],
        "vulCaller": [
            "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:void init(org.springframework.security.config.annotation.SecurityBuilder)"
        ]
    },
    "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter:void init(org.springframework.security.config.annotation.SecurityBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.CsrfConfigurer csrf()",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:void <init>(org.springframework.security.config.annotation.ObjectPostProcessor,org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder,java.util.Map)",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity:org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()"
        ],
        "vulCaller": []
    }
}
{
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void stopWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void stopWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void stop()"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performInjection(java.lang.Object,org.infinispan.factories.components.ComponentMetadata,boolean)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performInjection(java.lang.Object,org.infinispan.factories.components.ComponentMetadata,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void wireDependencies(java.lang.Object,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void wireWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void rewire()"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:java.lang.Object running()"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:java.lang.Object running()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.ComponentFactory findFactory(java.lang.String)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:java.lang.Object running()",
            "org.infinispan.factories.ComponentRegistry:java.lang.Object getComponent(java.lang.String,java.lang.String,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startDependencies(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:java.lang.Object getDependency(java.lang.String,java.lang.Class,boolean,boolean)",
            "org.infinispan.factories.AbstractComponentRegistry:void registerComponentInternal(java.lang.Object,java.lang.String,boolean)",
            "org.infinispan.factories.ComponentRegistry:java.lang.Object getOrCreateComponent(java.lang.Class,java.lang.String,boolean)",
            "org.infinispan.factories.ComponentRegistry:java.lang.Object getLocalComponent(java.lang.String,java.lang.String,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void replaceComponent(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performInjection(java.lang.Object,org.infinispan.factories.components.ComponentMetadata,boolean)"
        ]
    },
    "org.infinispan.interceptors.impl.SecurityActions:java.lang.Object doPrivileged(java.security.PrivilegedAction)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.infinispan.interceptors.impl.SecurityActions:java.lang.Object doPrivileged(java.security.PrivilegedAction)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.SecurityActions:boolean getBooleanProperty(java.lang.String)"
        ]
    },
    "org.infinispan.interceptors.impl.SecurityActions:boolean getBooleanProperty(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.interceptors.impl.SecurityActions:java.lang.Object doPrivileged(java.security.PrivilegedAction)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:void internalStop()"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void wireDependencies(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:void wireDependencies(java.lang.Object)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void wireWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:void wire()",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef tryAutoInstantiation(java.lang.String)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef registerComponent(java.lang.String,java.lang.Object,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef getComponent0(java.lang.String,java.lang.Class,boolean)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void rewire()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:void rewire()"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.ComponentFactory findFactory(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.ComponentFactory access$700(org.infinispan.factories.impl.BasicComponentRegistryImpl,java.lang.String)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef getComponent0(java.lang.String,java.lang.Class,boolean)"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:java.lang.Object getComponent(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startDependencies(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:java.lang.Object getDependency(java.lang.String,java.lang.Class,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:void registerComponentInternal(java.lang.Object,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:void registerNonVolatileComponent(java.lang.Object,java.lang.Class)",
            "org.infinispan.factories.AbstractComponentRegistry:void registerNonVolatileComponent(java.lang.Object,java.lang.String)",
            "org.infinispan.factories.AbstractComponentRegistry:void registerComponent(java.lang.Object,java.lang.String,boolean)"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:java.lang.Object getOrCreateComponent(java.lang.Class,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.ComponentRegistry:java.lang.Object getLocalComponent(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.ComponentRegistry:java.lang.Object getLocalComponent(java.lang.Class)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void replaceComponent(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:void internalStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:void stop()"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:void wireDependencies(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadOnlyManyCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.filter.CacheFilters$ConverterAsCacheEntryFunction:void inject(org.infinispan.container.impl.InternalEntryFactory,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.notifications.cachelistener.filter.KeyFilterAsCacheEventFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.ReadWriteKeyValueCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.stream.impl.local.LocalCacheStream mapToObj(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.intops.object.PeekOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.stream.impl.local.LocalDoubleCacheStream filter(java.util.function.DoublePredicate)",
            "org.infinispan.notifications.cachelistener.filter.CompositeCacheEventFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.filter.KeyFilterAsKeyValueFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.filter.KeyValueFilterAsKeyFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.ReadWriteManyCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.cache.impl.EncoderEntryMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.functions.MergeFunction:void inject(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.stream.impl.local.LocalLongCacheStream map(java.util.function.LongUnaryOperator)",
            "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.notifications.cachelistener.filter.KeyValueFilterAsCacheEventFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.intops.object.MapOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.ReadOnlyKeyCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.notifications.cachelistener.filter.CacheEventFilterAsKeyValueFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.WriteOnlyManyCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.notifications.cachelistener.filter.CacheEventConverterAsConverter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.filter.CompositeKeyFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.stream.impl.local.LocalLongCacheStream filter(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEach(java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.stream.impl.local.LocalCacheStream mapToObj(java.util.function.DoubleFunction)",
            "org.infinispan.compat.BiFunctionMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.stream.impl.local.LocalIntCacheStream filter(java.util.function.IntPredicate)",
            "org.infinispan.commands.write.ComputeIfAbsentCommand:void <init>(java.lang.Object,java.util.function.Function,int,long,org.infinispan.commands.CommandInvocationId,org.infinispan.metadata.Metadata,org.infinispan.notifications.cachelistener.CacheNotifier,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.stream.impl.local.LocalDoubleCacheStream map(java.util.function.DoubleUnaryOperator)",
            "org.infinispan.compat.FunctionMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.notifications.cachelistener.filter.CacheEventFilterConverterAsKeyValueFilterConverter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.filter.CompositeKeyValueFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.stream.impl.local.LocalCacheStream map(java.util.function.Function)",
            "org.infinispan.encoding.DataConversion:void overrideWrapper(java.lang.Class,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.write.ComputeCommand:void <init>(java.lang.Object,java.util.function.BiFunction,boolean,int,long,org.infinispan.commands.CommandInvocationId,org.infinispan.metadata.Metadata,org.infinispan.notifications.cachelistener.CacheNotifier,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.factories.InternalCacheFactory:org.infinispan.AdvancedCache createAndWire(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)",
            "org.infinispan.filter.CacheFilters$FilterConverterAsCacheEntryFunction:void inject(org.infinispan.container.impl.InternalEntryFactory,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.write.ComputeIfAbsentCommand:void init(org.infinispan.notifications.cachelistener.CacheNotifier,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.termop.object.ForEachBiOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.factories.InternalCacheFactory:void bootstrap(java.lang.String,org.infinispan.AdvancedCache,org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,org.infinispan.commons.marshall.StreamingMarshaller)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.stream.impl.local.LocalIntCacheStream map(java.util.function.IntUnaryOperator)",
            "org.infinispan.commands.write.ComputeCommand:void init(org.infinispan.notifications.cachelistener.CacheNotifier,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.WriteOnlyKeyCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.ReadWriteKeyCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.filter.CacheFilters$KeyValueFilterAsPredicate:void inject(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.stream.impl.local.LocalCacheStream mapToObj(java.util.function.LongFunction)",
            "org.infinispan.cache.impl.EncoderValueMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:void init(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.cache.impl.EncoderKeyMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.stream.impl.local.LocalCacheStream filter(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:void wire()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:java.lang.Object wired()",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:java.lang.Object running()"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef tryAutoInstantiation(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.ComponentFactory findFactory(java.lang.String)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef registerComponent(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.ComponentRegistry:void <init>(java.lang.String,org.infinispan.configuration.cache.Configuration,org.infinispan.AdvancedCache,org.infinispan.factories.GlobalComponentRegistry,java.lang.ClassLoader)",
            "org.infinispan.factories.impl.BasicComponentRegistry:org.infinispan.factories.impl.ComponentRef registerComponent(java.lang.Class,java.lang.Object,boolean)",
            "org.infinispan.factories.GlobalComponentRegistry:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.manager.EmbeddedCacheManager,java.util.Set)",
            "org.infinispan.factories.AbstractComponentRegistry:void registerComponentInternal(java.lang.Object,java.lang.String,boolean)",
            "org.infinispan.factories.InternalCacheFactory:void bootstrap(java.lang.String,org.infinispan.AdvancedCache,org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,org.infinispan.commons.marshall.StreamingMarshaller)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void replaceComponent(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef getComponent0(java.lang.String,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void addDynamicDependency(java.lang.String,java.lang.String)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:java.lang.Object getDependency(java.lang.String,java.lang.Class,boolean,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef getComponent(java.lang.String,java.lang.Class)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:void rewire()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.ComponentRegistry:void start()"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.ComponentFactory access$700(org.infinispan.factories.impl.BasicComponentRegistryImpl,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:void wire()"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:void registerNonVolatileComponent(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:void registerNonVolatileComponent(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.GlobalComponentRegistry:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.manager.EmbeddedCacheManager,java.util.Set)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:void registerComponent(java.lang.Object,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:void registerComponent(java.lang.Object,java.lang.String)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.configuration.cache.Configuration,boolean)",
            "org.infinispan.factories.AbstractComponentRegistry:void registerNullComponent(java.lang.String)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.parsing.ConfigurationBuilderHolder,boolean)",
            "org.infinispan.factories.InternalCacheFactory:void bootstrap(java.lang.String,org.infinispan.AdvancedCache,org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,org.infinispan.commons.marshall.StreamingMarshaller)",
            "org.infinispan.factories.AbstractComponentRegistry:void registerComponent(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:java.lang.Object getLocalComponent(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.ComponentRegistry:void start()",
            "org.infinispan.factories.GlobalComponentRegistry:void lambda$addShutdownHook$0()",
            "org.infinispan.manager.DefaultCacheManager:void stop()"
        ]
    },
    "org.infinispan.commands.functional.ReadOnlyManyCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadOnlyManyCommand:void <init>(java.util.Collection,java.util.function.Function,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.TxReadOnlyManyCommand:void init(org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.filter.CacheFilters$ConverterAsCacheEntryFunction:void inject(org.infinispan.container.impl.InternalEntryFactory,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.notifications.cachelistener.filter.KeyFilterAsCacheEventFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.ReadWriteKeyValueCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteKeyValueCommand:void <init>(java.lang.Object,java.lang.Object,java.util.function.BiFunction,int,org.infinispan.commands.CommandInvocationId,org.infinispan.commands.write.ValueMatcher,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.stream.impl.local.LocalCacheStream mapToObj(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.stream.Stream mapToObj(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)"
        ]
    },
    "org.infinispan.stream.impl.intops.object.PeekOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.BaseStream addIntermediateOperation(org.infinispan.stream.impl.intops.IntermediateOperation)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:void <init>(java.util.Map,java.util.function.BiConsumer,org.infinispan.functional.impl.Params,org.infinispan.commands.CommandInvocationId,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.stream.impl.local.LocalDoubleCacheStream filter(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.stream.DoubleStream filter(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.notifications.cachelistener.filter.CompositeCacheEventFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.filter.KeyFilterAsKeyValueFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.filter.KeyValueFilterAsKeyFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.ReadWriteManyCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteManyCommand:void <init>(java.util.Collection,java.util.function.Function,org.infinispan.functional.impl.Params,org.infinispan.commands.CommandInvocationId,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.cache.impl.EncoderEntryMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.functions.MergeFunction:void inject(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.stream.impl.local.LocalLongCacheStream map(java.util.function.LongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.stream.LongStream map(java.util.function.LongUnaryOperator)"
        ]
    },
    "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.notifications.cachelistener.filter.KeyValueFilterAsCacheEventFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.intops.object.MapOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void addIntermediateOperationMap(org.infinispan.stream.impl.intops.IntermediateOperation)"
        ]
    },
    "org.infinispan.commands.functional.ReadOnlyKeyCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadOnlyKeyCommand:void <init>(java.lang.Object,java.util.function.Function,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void init(org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.notifications.cachelistener.filter.CacheEventFilterAsKeyValueFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.WriteOnlyManyCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyManyCommand:void <init>(java.util.Collection,java.util.function.Consumer,org.infinispan.functional.impl.Params,org.infinispan.commands.CommandInvocationId,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.notifications.cachelistener.filter.CacheEventConverterAsConverter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.filter.CompositeKeyFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.stream.impl.local.LocalLongCacheStream filter(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.stream.LongStream filter(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:void forEach(java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:void forEach(java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.TerminalFunctions$ForEachBiConsumerFunction:java.lang.Void apply(org.infinispan.CacheStream)",
            "org.infinispan.stream.impl.IntermediateCacheStream:void forEach(java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.stream.impl.local.LocalCacheStream mapToObj(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.stream.Stream mapToObj(java.util.function.DoubleFunction)"
        ]
    },
    "org.infinispan.compat.BiFunctionMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.stream.impl.local.LocalIntCacheStream filter(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.stream.IntStream filter(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.commands.write.ComputeIfAbsentCommand:void <init>(java.lang.Object,java.util.function.Function,int,long,org.infinispan.commands.CommandInvocationId,org.infinispan.metadata.Metadata,org.infinispan.notifications.cachelistener.CacheNotifier,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.triangle.SingleKeyBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()",
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.write.ComputeIfAbsentCommand buildComputeIfAbsentCommand(java.lang.Object,java.util.function.Function,int,org.infinispan.metadata.Metadata,long)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.stream.impl.local.LocalDoubleCacheStream map(java.util.function.DoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.stream.DoubleStream map(java.util.function.DoubleUnaryOperator)",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)"
        ]
    },
    "org.infinispan.compat.FunctionMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.notifications.cachelistener.filter.CacheEventFilterConverterAsKeyValueFilterConverter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.filter.CompositeKeyValueFilter:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.stream.impl.local.LocalCacheStream map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.stream.Stream map(java.util.function.Function)",
            "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.CacheStream map(java.util.function.Function)",
            "org.infinispan.stream.impl.IntermediateCacheStream:org.infinispan.CacheStream map(java.util.function.Function)"
        ]
    },
    "org.infinispan.encoding.DataConversion:void overrideWrapper(java.lang.Class,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.write.ComputeCommand:void <init>(java.lang.Object,java.util.function.BiFunction,boolean,int,long,org.infinispan.commands.CommandInvocationId,org.infinispan.metadata.Metadata,org.infinispan.notifications.cachelistener.CacheNotifier,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.triangle.SingleKeyBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()",
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.write.ComputeCommand buildComputeCommand(java.lang.Object,java.util.function.BiFunction,boolean,int,org.infinispan.metadata.Metadata,long)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:void <init>(java.util.Map,java.util.function.BiFunction,org.infinispan.functional.impl.Params,org.infinispan.commands.CommandInvocationId,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.factories.InternalCacheFactory:org.infinispan.AdvancedCache createAndWire(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.InternalCacheFactory:org.infinispan.Cache createCache(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)"
        ]
    },
    "org.infinispan.filter.CacheFilters$FilterConverterAsCacheEntryFunction:void inject(org.infinispan.container.impl.InternalEntryFactory,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.write.ComputeIfAbsentCommand:void init(org.infinispan.notifications.cachelistener.CacheNotifier,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.termop.object.ForEachBiOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.factories.InternalCacheFactory:void bootstrap(java.lang.String,org.infinispan.AdvancedCache,org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,org.infinispan.commons.marshall.StreamingMarshaller)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.InternalCacheFactory:org.infinispan.AdvancedCache createAndWire(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.stream.impl.local.LocalIntCacheStream map(java.util.function.IntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.stream.IntStream map(java.util.function.IntUnaryOperator)"
        ]
    },
    "org.infinispan.commands.write.ComputeCommand:void init(org.infinispan.notifications.cachelistener.CacheNotifier,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.WriteOnlyKeyCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyKeyCommand:void <init>(java.lang.Object,java.util.function.Consumer,int,org.infinispan.commands.CommandInvocationId,org.infinispan.commands.write.ValueMatcher,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteKeyCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteKeyCommand:void <init>(java.lang.Object,java.util.function.Function,int,org.infinispan.commands.CommandInvocationId,org.infinispan.commands.write.ValueMatcher,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.filter.CacheFilters$KeyValueFilterAsPredicate:void inject(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.stream.impl.local.LocalCacheStream mapToObj(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.stream.Stream mapToObj(java.util.function.LongFunction)",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)"
        ]
    },
    "org.infinispan.cache.impl.EncoderValueMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:void <init>(java.lang.Object,java.lang.Object,java.util.function.BiConsumer,int,org.infinispan.commands.CommandInvocationId,org.infinispan.commands.write.ValueMatcher,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.cache.impl.EncoderKeyMapper:void injectDependencies(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.stream.impl.local.LocalCacheStream filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.stream.Stream filter(java.util.function.Predicate)",
            "org.infinispan.stream.impl.IntermediateCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)",
            "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:java.lang.Object wired()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper:java.lang.Object wired()",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void wireWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.factories.AbstractComponentFactory createComponentFactoryInternal(java.lang.Class,java.lang.String)",
            "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.factories.AbstractComponentFactory getFactory(java.lang.Class)",
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.Class,java.lang.String)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:java.lang.Object getDependency(java.lang.String,java.lang.Class,boolean,boolean)",
            "org.infinispan.factories.ComponentRegistry:void cacheComponents()",
            "org.infinispan.factories.ComponentRegistry:java.lang.Object getLocalComponent(java.lang.String,java.lang.String,boolean)",
            "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.factories.AbstractComponentRegistry$Component lookupComponent(java.lang.String,java.lang.String,boolean)",
            "org.infinispan.factories.AbstractComponentRegistry$Component:java.lang.Object getInstance()"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:void <init>(java.lang.String,org.infinispan.configuration.cache.Configuration,org.infinispan.AdvancedCache,org.infinispan.factories.GlobalComponentRegistry,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.InternalCacheFactory$1:void <init>(org.infinispan.factories.InternalCacheFactory,java.lang.String,org.infinispan.configuration.cache.Configuration,org.infinispan.AdvancedCache,org.infinispan.factories.GlobalComponentRegistry,java.lang.ClassLoader)",
            "org.infinispan.factories.InternalCacheFactory:void bootstrap(java.lang.String,org.infinispan.AdvancedCache,org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,org.infinispan.commons.marshall.StreamingMarshaller)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistry:org.infinispan.factories.impl.ComponentRef registerComponent(java.lang.Class,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void <init>(java.lang.ClassLoader,org.infinispan.factories.components.ComponentMetadataRepo,org.infinispan.factories.scopes.Scopes,org.infinispan.factories.impl.BasicComponentRegistry)",
            "org.infinispan.factories.ComponentRegistry:void <init>(java.lang.String,org.infinispan.configuration.cache.Configuration,org.infinispan.AdvancedCache,org.infinispan.factories.GlobalComponentRegistry,java.lang.ClassLoader)",
            "org.infinispan.factories.GlobalComponentRegistry:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.manager.EmbeddedCacheManager,java.util.Set)",
            "org.infinispan.factories.InternalCacheFactory:org.infinispan.AdvancedCache createSimpleCache(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)"
        ]
    },
    "org.infinispan.factories.GlobalComponentRegistry:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.manager.EmbeddedCacheManager,java.util.Set)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.configuration.cache.Configuration,boolean)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.parsing.ConfigurationBuilderHolder,boolean)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void addDynamicDependency(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef getComponent(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.ComponentFactory findFactory(java.lang.String)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void wireWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.factories.AbstractComponentFactory createComponentFactoryInternal(java.lang.Class,java.lang.String)",
            "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.factories.AbstractComponentFactory getFactory(java.lang.Class)",
            "org.infinispan.factories.ComponentRegistry:java.lang.Object getOrCreateComponent(java.lang.Class,java.lang.String,boolean)",
            "org.infinispan.factories.ComponentRegistry:java.lang.Object getLocalComponent(java.lang.String,java.lang.String,boolean)",
            "org.infinispan.factories.ComponentRegistry:java.lang.Object getComponent(java.lang.String,java.lang.String,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startDependencies(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.GlobalComponentRegistry:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.manager.EmbeddedCacheManager,java.util.Set)",
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.Class,java.lang.String)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:org.infinispan.factories.impl.ComponentRef getComponent0(java.lang.String,java.lang.Class,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistry:org.infinispan.factories.impl.ComponentRef getComponent(java.lang.Class)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void replaceComponent(java.lang.String,java.lang.Object,boolean)",
            "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.factories.AbstractComponentRegistry$Component lookupComponent(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:void registerComponent(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.configuration.cache.Configuration,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.configuration.cache.Configuration)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(boolean)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.cache.Configuration)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.cache.Configuration,boolean)",
            "org.infinispan.manager.DefaultCacheManager:void <init>()",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,boolean)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:void registerNullComponent(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.parsing.ConfigurationBuilderHolder,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void <init>(java.io.InputStream,boolean)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:void registerComponent(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.InternalCacheFactory$1:void bootstrapComponents()",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.configuration.cache.Configuration,boolean)",
            "org.infinispan.factories.ComponentRegistry:void registerVersionGenerator(org.infinispan.container.versioning.NumericVersionGenerator)",
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.ClassLoader registerDefaultClassLoader(java.lang.ClassLoader)",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:void <init>(org.infinispan.manager.EmbeddedCacheManager)",
            "org.infinispan.factories.GlobalComponentRegistry:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.manager.EmbeddedCacheManager,java.util.Set)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.parsing.ConfigurationBuilderHolder,boolean)",
            "org.infinispan.factories.InternalCacheFactory:org.infinispan.AdvancedCache createSimpleCache(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)"
        ]
    },
    "org.infinispan.factories.GlobalComponentRegistry:void lambda$addShutdownHook$0()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void close()"
        ]
    },
    "org.infinispan.commands.functional.ReadOnlyManyCommand:void <init>(java.util.Collection,java.util.function.Function,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyManyCommand:void <init>(java.util.Collection,java.util.List,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadOnlyManyCommand buildReadOnlyManyCommand(java.util.Collection,java.util.function.Function,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)"
        ]
    },
    "org.infinispan.commands.functional.TxReadOnlyManyCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyManyCommand:void <init>(java.util.Collection,java.util.List,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.ReadOnlyManyCommand:void <init>(java.util.Collection,java.util.function.Function,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteKeyValueCommand:void <init>(java.lang.Object,java.lang.Object,java.util.function.BiFunction,int,org.infinispan.commands.CommandInvocationId,org.infinispan.commands.write.ValueMatcher,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadWriteKeyValueCommand buildReadWriteKeyValueCommand(java.lang.Object,java.lang.Object,java.util.function.BiFunction,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)",
            "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:org.infinispan.commands.functional.ReadWriteKeyValueCommand createReadWriteKeyValueCommand()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.stream.Stream mapToObj(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.stream.Stream mapToObj(java.util.function.IntFunction)",
            "org.infinispan.IntCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableIntFunction)"
        ]
    },
    "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.BaseStream addIntermediateOperation(org.infinispan.stream.impl.intops.IntermediateOperation)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream limit(long)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream distinct()",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream limit(long)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream peek(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream peek(java.util.function.IntConsumer)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream limit(long)",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream peek(java.util.function.Consumer)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream flatMap(java.util.function.DoubleFunction)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream peek(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream limit(long)",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream distinct()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream flatMap(java.util.function.LongFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream flatMap(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream distinct()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream distinct()"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:void <init>(java.util.Map,java.util.function.BiConsumer,org.infinispan.functional.impl.Params,org.infinispan.commands.CommandInvocationId,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.WriteOnlyManyEntriesCommand buildWriteOnlyManyEntriesCommand(java.util.Map,java.util.function.BiConsumer,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)",
            "org.infinispan.commands.triangle.MultiEntriesFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.stream.DoubleStream filter(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.stream.DoubleStream filter(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.ReadWriteManyCommand:void <init>(java.util.Collection,java.util.function.Function,org.infinispan.functional.impl.Params,org.infinispan.commands.CommandInvocationId,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadWriteManyCommand buildReadWriteManyCommand(java.util.Collection,java.util.function.Function,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)",
            "org.infinispan.commands.triangle.MultiKeyFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.stream.LongStream map(java.util.function.LongUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.stream.LongStream map(java.util.function.LongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.AbstractCacheStream:void addIntermediateOperationMap(org.infinispan.stream.impl.intops.IntermediateOperation)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.DoubleCacheStream mapToDouble(java.util.function.ToDoubleFunction)",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.LongCacheStream mapToLong(java.util.function.ToLongFunction)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.CacheStream boxed()",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream map(java.util.function.Function)",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.IntCacheStream mapToInt(java.util.function.ToIntFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.LongCacheStream mapToLong(java.util.function.IntToLongFunction)",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.DoubleCacheStream flatMapToDouble(java.util.function.Function)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.DoubleCacheStream mapToDouble(java.util.function.LongToDoubleFunction)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.DoubleCacheStream asDoubleStream()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.DoubleCacheStream mapToDouble(java.util.function.IntToDoubleFunction)",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream flatMap(java.util.function.Function)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.CacheStream boxed()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.DoubleCacheStream asDoubleStream()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.LongCacheStream asLongStream()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.IntCacheStream mapToInt(java.util.function.LongToIntFunction)",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.LongCacheStream flatMapToLong(java.util.function.Function)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.IntCacheStream mapToInt(java.util.function.DoubleToIntFunction)",
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.IntCacheStream flatMapToInt(java.util.function.Function)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.CacheStream boxed()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.LongCacheStream mapToLong(java.util.function.DoubleToLongFunction)"
        ]
    },
    "org.infinispan.commands.functional.ReadOnlyKeyCommand:void <init>(java.lang.Object,java.util.function.Function,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void <init>(org.infinispan.commands.functional.ReadOnlyKeyCommand,java.util.List,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadOnlyKeyCommand buildReadOnlyKeyCommand(java.lang.Object,java.util.function.Function,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)",
            "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void <init>(java.lang.Object,java.util.List,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void init(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void <init>(org.infinispan.commands.functional.ReadOnlyKeyCommand,java.util.List,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.ReadOnlyKeyCommand:void <init>(java.lang.Object,java.util.function.Function,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void <init>(java.lang.Object,java.util.List,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyManyCommand:void <init>(java.util.Collection,java.util.function.Consumer,org.infinispan.functional.impl.Params,org.infinispan.commands.CommandInvocationId,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.WriteOnlyManyCommand buildWriteOnlyManyCommand(java.util.Collection,java.util.function.Consumer,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)",
            "org.infinispan.commands.triangle.MultiKeyFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.stream.LongStream filter(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.stream.LongStream filter(java.util.function.LongPredicate)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:void forEach(java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:void forEach(java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$ForEachBiConsumerFunction:java.lang.Void apply(org.infinispan.CacheStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$ForEachBiConsumerFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:void forEach(java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:void forEach(java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.stream.Stream mapToObj(java.util.function.DoubleFunction)",
            "org.infinispan.DoubleCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableDoubleFunction)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.stream.Stream mapToObj(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.stream.IntStream filter(java.util.function.IntPredicate)",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.stream.IntStream filter(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.triangle.SingleKeyBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.write.ComputeIfAbsentCommand buildComputeIfAbsentCommand(java.lang.Object,java.util.function.Function,int,org.infinispan.metadata.Metadata,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.stream.DoubleStream map(java.util.function.DoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.stream.DoubleStream map(java.util.function.DoubleUnaryOperator)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.util.stream.Stream map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:org.infinispan.functional.Traversable map(java.util.function.Function)",
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackStream(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.CacheStream map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.CacheStream:org.infinispan.CacheStream map(org.infinispan.util.function.SerializableFunction)",
            "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream getStream(org.infinispan.CacheStream)",
            "org.infinispan.util.AbstractDelegatingCacheStream:org.infinispan.CacheStream map(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:org.infinispan.CacheStream map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateCacheStream:java.util.stream.Stream map(java.util.function.Function)",
            "org.infinispan.util.AbstractDelegatingCacheStream:org.infinispan.CacheStream map(java.util.function.Function)"
        ]
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.write.ComputeCommand buildComputeCommand(java.lang.Object,java.util.function.BiFunction,boolean,int,org.infinispan.metadata.Metadata,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:void <init>(java.util.Map,java.util.function.BiFunction,org.infinispan.functional.impl.Params,org.infinispan.commands.CommandInvocationId,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.triangle.MultiEntriesFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()",
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadWriteManyEntriesCommand buildReadWriteManyEntriesCommand(java.util.Map,java.util.function.BiFunction,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)"
        ]
    },
    "org.infinispan.factories.InternalCacheFactory:org.infinispan.Cache createCache(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache wireAndStartCache(java.lang.String,java.lang.String)"
        ]
    },
    "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(java.util.function.ObjLongConsumer)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(java.util.function.ObjIntConsumer)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.DistributedCacheStream:void forEach(java.util.function.Consumer)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.DistributedCacheStream:void forEach(java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(java.util.function.IntConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.stream.IntStream map(java.util.function.IntUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.stream.IntStream map(java.util.function.IntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.WriteOnlyKeyCommand:void <init>(java.lang.Object,java.util.function.Consumer,int,org.infinispan.commands.CommandInvocationId,org.infinispan.commands.write.ValueMatcher,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()",
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.WriteOnlyKeyCommand buildWriteOnlyKeyCommand(java.lang.Object,java.util.function.Consumer,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteKeyCommand:void <init>(java.lang.Object,java.util.function.Function,int,org.infinispan.commands.CommandInvocationId,org.infinispan.commands.write.ValueMatcher,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()",
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadWriteKeyCommand buildReadWriteKeyCommand(java.lang.Object,java.util.function.Function,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.stream.Stream mapToObj(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)",
            "org.infinispan.LongCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableLongFunction)",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.stream.Stream mapToObj(java.util.function.LongFunction)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:void <init>(java.lang.Object,java.lang.Object,java.util.function.BiConsumer,int,org.infinispan.commands.CommandInvocationId,org.infinispan.commands.write.ValueMatcher,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.WriteOnlyKeyValueCommand buildWriteOnlyKeyValueCommand(java.lang.Object,java.lang.Object,java.util.function.BiConsumer,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)",
            "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.util.stream.Stream filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.Traversables$StreamTraversable:org.infinispan.functional.Traversable filter(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.util.stream.Stream filter(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)",
            "org.infinispan.CacheStream:org.infinispan.CacheStream filter(org.infinispan.util.function.SerializablePredicate)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.factories.AbstractComponentFactory createComponentFactoryInternal(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.factories.AbstractComponentFactory getFactory(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.manager.ClusterExecutor executor()",
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getOrCreateComponent(java.lang.Class,java.lang.String,boolean)",
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.String,java.lang.String,boolean)",
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.Class)",
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getOrCreateComponent(java.lang.Class)",
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getOrCreateComponent(java.lang.Class,java.lang.String)"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:void cacheComponents()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.ComponentRegistry:void preStart()"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.factories.AbstractComponentRegistry$Component lookupComponent(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry$Component:java.lang.Object getInstance()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object unwrapComponent(org.infinispan.factories.AbstractComponentRegistry$Component)"
        ]
    },
    "org.infinispan.factories.InternalCacheFactory$1:void <init>(org.infinispan.factories.InternalCacheFactory,java.lang.String,org.infinispan.configuration.cache.Configuration,org.infinispan.AdvancedCache,org.infinispan.factories.GlobalComponentRegistry,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.InternalCacheFactory:org.infinispan.AdvancedCache createSimpleCache(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistryImpl:void <init>(java.lang.ClassLoader,org.infinispan.factories.components.ComponentMetadataRepo,org.infinispan.factories.scopes.Scopes,org.infinispan.factories.impl.BasicComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:void <init>(org.infinispan.factories.components.ComponentMetadataRepo,java.lang.ClassLoader,org.infinispan.factories.scopes.Scopes,org.infinispan.factories.impl.BasicComponentRegistry)"
        ]
    },
    "org.infinispan.factories.InternalCacheFactory:org.infinispan.AdvancedCache createSimpleCache(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.InternalCacheFactory:org.infinispan.Cache createCache(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)"
        ]
    },
    "org.infinispan.factories.impl.BasicComponentRegistry:org.infinispan.factories.impl.ComponentRef getComponent(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.GlobalComponentRegistry:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.manager.EmbeddedCacheManager,java.util.Set)",
            "org.infinispan.factories.ComponentRegistry:void cacheComponents()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.configuration.cache.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.cache.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.cache.Configuration,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(java.io.InputStream,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void <init>(java.io.InputStream)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(java.lang.String,boolean)"
        ]
    },
    "org.infinispan.factories.InternalCacheFactory$1:void bootstrapComponents()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.ComponentRegistry:void <init>(java.lang.String,org.infinispan.configuration.cache.Configuration,org.infinispan.AdvancedCache,org.infinispan.factories.GlobalComponentRegistry,java.lang.ClassLoader)"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:void registerVersionGenerator(org.infinispan.container.versioning.NumericVersionGenerator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.ClassLoader registerDefaultClassLoader(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:void <init>(org.infinispan.manager.EmbeddedCacheManager)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.configuration.cache.Configuration,boolean)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.parsing.ConfigurationBuilderHolder,boolean)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.TxReadOnlyManyCommand:void <init>(java.util.Collection,java.util.List,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor$BaseFunctionalWriteHelper:org.infinispan.commands.functional.ReadOnlyManyCommand copyForRemote(org.infinispan.commands.functional.FunctionalCommand,java.util.List,org.infinispan.context.InvocationContext)"
        ]
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadOnlyManyCommand buildReadOnlyManyCommand(java.util.Collection,java.util.function.Function,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadWriteKeyValueCommand buildReadWriteKeyValueCommand(java.lang.Object,java.lang.Object,java.util.function.BiFunction,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:org.infinispan.commands.functional.ReadWriteKeyValueCommand createReadWriteKeyValueCommand()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.stream.Stream mapToObj(java.util.function.IntFunction)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.stream.Stream mapToObj(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.IntCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:org.infinispan.CacheStream boxed()"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream filter(java.util.function.Predicate)",
            "org.infinispan.CacheStream:org.infinispan.CacheStream filter(org.infinispan.util.function.SerializablePredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream limit(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream limit(long)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream filter(org.infinispan.util.function.SerializableLongPredicate)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream filter(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream filter(org.infinispan.util.function.SerializableDoublePredicate)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream filter(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream distinct()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream distinct()"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream limit(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream limit(long)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream peek(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream peek(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream peek(org.infinispan.util.function.SerializableLongConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream map(java.util.function.IntUnaryOperator)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream map(org.infinispan.util.function.SerializableIntUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream peek(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream peek(java.util.function.IntConsumer)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream peek(org.infinispan.util.function.SerializableIntConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream limit(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream limit(long)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream peek(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream peek(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream flatMap(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream flatMap(java.util.function.DoubleFunction)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream flatMap(org.infinispan.util.function.SerializableDoubleFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream peek(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream peek(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream peek(org.infinispan.util.function.SerializableDoubleConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream map(org.infinispan.util.function.SerializableLongUnaryOperator)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream map(java.util.function.LongUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream limit(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream limit(long)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream distinct()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream distinct()"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream flatMap(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream flatMap(java.util.function.LongFunction)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream flatMap(org.infinispan.util.function.SerializableLongFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream flatMap(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream flatMap(org.infinispan.util.function.SerializableIntFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream flatMap(java.util.function.IntFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream filter(org.infinispan.util.function.SerializableIntPredicate)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream filter(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream map(org.infinispan.util.function.SerializableDoubleUnaryOperator)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream map(java.util.function.DoubleUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream distinct()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream distinct()"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream distinct()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream distinct()"
        ]
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.WriteOnlyManyEntriesCommand buildWriteOnlyManyEntriesCommand(java.util.Map,java.util.function.BiConsumer,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.triangle.MultiEntriesFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.DoubleCacheStream filter(java.util.function.DoublePredicate)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.stream.DoubleStream filter(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.stream.DoubleStream filter(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadWriteManyCommand buildReadWriteManyCommand(java.util.Collection,java.util.function.Function,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.triangle.MultiKeyFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.LongCacheStream map(java.util.function.LongUnaryOperator)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.stream.LongStream map(java.util.function.LongUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.stream.LongStream map(java.util.function.LongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.DoubleCacheStream mapToDouble(java.util.function.ToDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.DoubleStream mapToDouble(java.util.function.ToDoubleFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.LongCacheStream mapToLong(java.util.function.ToLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.LongStream mapToLong(java.util.function.ToLongFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableLongFunction)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.Stream mapToObj(java.util.function.LongFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.CacheStream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.Stream boxed()"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream map(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.IntCacheStream mapToInt(java.util.function.ToIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.LongCacheStream mapToLong(java.util.function.IntToLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.LongStream mapToLong(java.util.function.IntToLongFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.LongCacheStream mapToLong(org.infinispan.util.function.SerializableIntToLongFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.DoubleCacheStream flatMapToDouble(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.DoubleStream flatMapToDouble(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.DoubleCacheStream mapToDouble(java.util.function.LongToDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.DoubleCacheStream mapToDouble(org.infinispan.util.function.SerializableLongToDoubleFunction)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.DoubleStream mapToDouble(java.util.function.LongToDoubleFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.Stream mapToObj(java.util.function.DoubleFunction)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableDoubleFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.DoubleCacheStream asDoubleStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.DoubleStream asDoubleStream()"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.DoubleCacheStream mapToDouble(java.util.function.IntToDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.DoubleCacheStream mapToDouble(org.infinispan.util.function.SerializableIntToDoubleFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.DoubleStream mapToDouble(java.util.function.IntToDoubleFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.CacheStream flatMap(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream flatMap(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.CacheStream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.Stream boxed()"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableIntFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.Stream mapToObj(java.util.function.IntFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.DoubleCacheStream asDoubleStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.DoubleStream asDoubleStream()"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.LongCacheStream asLongStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.LongStream asLongStream()"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.IntCacheStream mapToInt(java.util.function.LongToIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.IntCacheStream mapToInt(org.infinispan.util.function.SerializableLongToIntFunction)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.IntStream mapToInt(java.util.function.LongToIntFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.LongCacheStream flatMapToLong(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.LongStream flatMapToLong(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.IntCacheStream mapToInt(java.util.function.DoubleToIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.IntCacheStream mapToInt(org.infinispan.util.function.SerializableDoubleToIntFunction)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.IntStream mapToInt(java.util.function.DoubleToIntFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.IntCacheStream flatMapToInt(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.IntStream flatMapToInt(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.CacheStream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.Stream boxed()"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.LongCacheStream mapToLong(java.util.function.DoubleToLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.LongStream mapToLong(java.util.function.DoubleToLongFunction)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.LongCacheStream mapToLong(org.infinispan.util.function.SerializableDoubleToLongFunction)"
        ]
    },
    "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void <init>(org.infinispan.commands.functional.ReadOnlyKeyCommand,java.util.List,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:org.infinispan.commands.functional.ReadOnlyKeyCommand remoteReadOnlyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)"
        ]
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadOnlyKeyCommand buildReadOnlyKeyCommand(java.lang.Object,java.util.function.Function,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void <init>(java.lang.Object,java.util.List,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion,org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxFunctionalCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)"
        ]
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.WriteOnlyManyCommand buildWriteOnlyManyCommand(java.util.Collection,java.util.function.Consumer,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.stream.LongStream filter(java.util.function.LongPredicate)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.LongCacheStream filter(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.stream.LongStream filter(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$ForEachBiConsumerFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.stream.Stream mapToObj(java.util.function.DoubleFunction)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.stream.Stream mapToObj(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.DoubleCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:org.infinispan.CacheStream boxed()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.stream.IntStream filter(java.util.function.IntPredicate)",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.IntCacheStream filter(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.stream.IntStream filter(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.DoubleCacheStream map(java.util.function.DoubleUnaryOperator)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.stream.DoubleStream map(java.util.function.DoubleUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.stream.DoubleStream map(java.util.function.DoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:org.infinispan.functional.Traversable map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackStream(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.CacheStream:org.infinispan.CacheStream map(org.infinispan.util.function.SerializableFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.cache.impl.SimpleCacheImpl$Values:org.infinispan.CacheStream parallelStream()",
            "org.infinispan.cache.impl.SimpleCacheImpl$Values:org.infinispan.CacheStream stream()"
        ]
    },
    "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream getStream(org.infinispan.CacheStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream parallelStream()",
            "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream stream()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:org.infinispan.CacheStream map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.stream.Stream map(java.util.function.Function)",
            "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream getStream(org.infinispan.CacheStream)",
            "org.infinispan.util.AbstractDelegatingCacheStream:org.infinispan.CacheStream map(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.util.stream.Stream map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadWriteManyEntriesCommand buildReadWriteManyEntriesCommand(java.util.Map,java.util.function.BiFunction,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache wireAndStartCache(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache createCache(java.lang.String,java.lang.String)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(java.util.function.ObjLongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(org.infinispan.util.function.SerializableObjLongConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(java.util.function.ObjIntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(org.infinispan.util.function.SerializableObjIntConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(org.infinispan.util.function.SerializableLongConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:void forEach(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.object.ForEachOperation:void handleStreamForEach(java.util.stream.Stream,java.util.List)",
            "org.infinispan.stream.impl.DistributedCacheStream:void forEachOrdered(java.util.function.Consumer)",
            "org.infinispan.stream.impl.termop.object.ForEachBiOperation:void handleStreamForEach(java.util.stream.Stream,java.util.List)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object lambda$visitReadOnlyManyCommand$9(long,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.stream.impl.TerminalFunctions$ForEachFunction:java.lang.Void apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(org.infinispan.util.function.SerializableObjDoubleConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(org.infinispan.util.function.SerializableDoubleConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:void forEach(java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$ForEachBiConsumerFunction:java.lang.Void apply(org.infinispan.CacheStream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(org.infinispan.util.function.SerializableIntConsumer)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.stream.IntStream map(java.util.function.IntUnaryOperator)",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.IntCacheStream map(java.util.function.IntUnaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.stream.IntStream map(java.util.function.IntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.WriteOnlyKeyCommand buildWriteOnlyKeyCommand(java.lang.Object,java.util.function.Consumer,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.ReadWriteKeyCommand buildReadWriteKeyCommand(java.lang.Object,java.util.function.Function,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.stream.Stream mapToObj(java.util.function.LongFunction)"
        ]
    },
    "org.infinispan.LongCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:org.infinispan.CacheStream boxed()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.stream.Stream mapToObj(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.CommandsFactoryImpl:org.infinispan.commands.functional.WriteOnlyKeyValueCommand buildWriteOnlyKeyValueCommand(java.lang.Object,java.lang.Object,java.util.function.BiConsumer,int,org.infinispan.functional.impl.Params,org.infinispan.encoding.DataConversion,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:org.infinispan.functional.Traversable filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:org.infinispan.CacheStream filter(java.util.function.Predicate)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.stream.Stream filter(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.util.stream.Stream filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.CacheStream:org.infinispan.CacheStream filter(org.infinispan.util.function.SerializablePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.manager.ClusterExecutor executor()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getOrCreateComponent(java.lang.Class,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.String)",
            "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.String,java.lang.String)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:java.util.Set getListeners()",
            "org.infinispan.manager.DefaultCacheManager:void unregisterCacheMBean(org.infinispan.Cache)",
            "org.infinispan.stream.impl.DistributedCacheStream:void <init>(org.infinispan.remoting.transport.Address,boolean,org.infinispan.distribution.DistributionManager,java.util.function.Supplier,org.infinispan.stream.impl.ClusterStreamManager,boolean,int,java.util.concurrent.Executor,org.infinispan.factories.ComponentRegistry,java.util.function.Function)",
            "org.infinispan.factories.ComponentRegistry:org.infinispan.transaction.TransactionTable getTransactionTable()",
            "org.infinispan.factories.ComponentRegistry:void <init>(java.lang.String,org.infinispan.configuration.cache.Configuration,org.infinispan.AdvancedCache,org.infinispan.factories.GlobalComponentRegistry,java.lang.ClassLoader)",
            "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapDoubleOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.DistributedCacheStream:void <init>(org.infinispan.stream.impl.AbstractCacheStream)",
            "org.infinispan.stream.impl.local.LocalCacheStream:void injectCache(java.util.function.Consumer)",
            "org.infinispan.stream.impl.termop.primitive.ForEachObjDoubleOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.manager.DefaultCacheManager:java.util.Set getCacheConfigurationNames()",
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getCreatedCacheCount()",
            "org.infinispan.stream.impl.termop.primitive.ForEachLongOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.factories.AbstractComponentRegistry:java.util.Optional getOptionalComponent(java.lang.Class)",
            "org.infinispan.manager.DefaultCacheManager:void internalStart(boolean)",
            "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapObjDoubleOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapObjIntOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.manager.DefaultCacheManager:void removeListener(java.lang.Object)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:void forEach(java.util.function.ObjIntConsumer)",
            "org.infinispan.stream.impl.termop.primitive.ForEachIntOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.termop.object.ForEachBiOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.factories.InternalCacheFactory:void bootstrap(java.lang.String,org.infinispan.AdvancedCache,org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,org.infinispan.commons.marshall.StreamingMarshaller)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:void injectCache(java.util.function.IntConsumer)",
            "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapObjLongOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:void forEach(java.util.function.ObjLongConsumer)",
            "org.infinispan.atomic.impl.ApplyDelta$Externalizer:org.infinispan.atomic.impl.ApplyDelta readObject(java.io.ObjectInput)",
            "org.infinispan.stream.impl.termop.primitive.ForEachObjIntOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.termop.object.ForEachOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.manager.ClusterExecutor executor()",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:void injectCache(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapIntOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEach(java.util.function.BiConsumer)",
            "org.infinispan.manager.DefaultCacheManager:void addListener(java.lang.Object)",
            "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapLongOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getRunningCacheCount()",
            "org.infinispan.manager.DefaultCacheManager:void stop()",
            "org.infinispan.manager.DefaultCacheManagerAdmin:void <init>(org.infinispan.manager.EmbeddedCacheManager,org.infinispan.security.impl.AuthorizationHelper,java.util.EnumSet)",
            "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.configuration.cache.Configuration getConfiguration()",
            "org.infinispan.stream.impl.AbstractCacheStream:void <init>(org.infinispan.remoting.transport.Address,boolean,org.infinispan.distribution.DistributionManager,java.util.function.Supplier,org.infinispan.stream.impl.ClusterStreamManager,boolean,int,java.util.concurrent.Executor,org.infinispan.factories.ComponentRegistry,java.util.function.Function)",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.remoting.transport.Transport getTransport()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)",
            "org.infinispan.health.impl.ClusterHealthImpl:void <init>(org.infinispan.manager.EmbeddedCacheManager)",
            "org.infinispan.manager.DefaultCacheManager:java.util.Set getCacheNames()",
            "org.infinispan.stream.impl.termop.primitive.ForEachObjLongOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.factories.ComponentRegistry:org.infinispan.commons.marshall.StreamingMarshaller getCacheMarshaller()",
            "org.infinispan.stream.impl.termop.primitive.ForEachDoubleOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.factories.InternalCacheFactory:org.infinispan.AdvancedCache createSimpleCache(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)",
            "org.infinispan.commands.functional.Mutations$BaseMutation:void inject(org.infinispan.factories.ComponentRegistry)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void injectCache(java.util.function.DoubleConsumer)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getOrCreateComponent(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.GlobalComponentRegistry:org.infinispan.commons.time.TimeService getTimeService()",
            "org.infinispan.factories.InternalCacheFactory:org.infinispan.AdvancedCache createAndWire(org.infinispan.configuration.cache.Configuration,org.infinispan.factories.GlobalComponentRegistry,java.lang.String)",
            "org.infinispan.factories.InternalCacheFactory$1:void cacheComponents()"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getOrCreateComponent(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.ComponentRegistry:void preStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.AbstractComponentRegistry:void start()"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object unwrapComponent(org.infinispan.factories.AbstractComponentRegistry$Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:void <init>(org.infinispan.factories.components.ComponentMetadataRepo,java.lang.ClassLoader,org.infinispan.factories.scopes.Scopes,org.infinispan.factories.impl.BasicComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.ComponentRegistry:void <init>(java.lang.String,org.infinispan.configuration.cache.Configuration,org.infinispan.AdvancedCache,org.infinispan.factories.GlobalComponentRegistry,java.lang.ClassLoader)",
            "org.infinispan.factories.GlobalComponentRegistry:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.manager.EmbeddedCacheManager,java.util.Set)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void <init>(java.lang.String)"
        ]
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor$BaseFunctionalWriteHelper:org.infinispan.commands.functional.ReadOnlyManyCommand copyForRemote(org.infinispan.commands.functional.FunctionalCommand,java.util.List,org.infinispan.context.InvocationContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor$BaseFunctionalWriteHelper:org.infinispan.commands.functional.ReadOnlyManyCommand copyForRemote(java.lang.Object,java.util.List,org.infinispan.context.InvocationContext)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.stream.Stream mapToObj(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:org.infinispan.CacheStream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.stream.Stream boxed()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.CacheStream boxed()"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream limit(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream filter(org.infinispan.util.function.SerializableLongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream filter(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream filter(org.infinispan.util.function.SerializableDoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream filter(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream distinct()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream limit(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream peek(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream peek(org.infinispan.util.function.SerializableLongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream map(java.util.function.IntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream map(org.infinispan.util.function.SerializableIntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream peek(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream peek(org.infinispan.util.function.SerializableIntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream limit(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream peek(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.primitive.AbstractForEachIntOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)",
            "org.infinispan.stream.impl.termop.primitive.AbstractForEachLongOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)",
            "org.infinispan.stream.impl.termop.primitive.AbstractForEachDoubleOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)",
            "org.infinispan.stream.impl.termop.AbstractForEachOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream flatMap(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream flatMap(org.infinispan.util.function.SerializableDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream peek(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream peek(org.infinispan.util.function.SerializableDoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream map(org.infinispan.util.function.SerializableLongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream map(java.util.function.LongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream limit(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream distinct()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.LongStream flatMap(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.LongCacheStream flatMap(org.infinispan.util.function.SerializableLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream flatMap(org.infinispan.util.function.SerializableIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream flatMap(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.IntCacheStream filter(org.infinispan.util.function.SerializableIntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream filter(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.DoubleCacheStream map(org.infinispan.util.function.SerializableDoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream map(java.util.function.DoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.DoubleStream distinct()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.IntStream distinct()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.stream.DoubleStream filter(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.stream.LongStream map(java.util.function.LongUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.DoubleStream mapToDouble(java.util.function.ToDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.LongStream mapToLong(java.util.function.ToLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.Stream mapToObj(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.Stream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackStream(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.LongStream mapToLong(java.util.function.IntToLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.LongCacheStream mapToLong(org.infinispan.util.function.SerializableIntToLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.DoubleStream flatMapToDouble(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.DoubleCacheStream mapToDouble(org.infinispan.util.function.SerializableLongToDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.DoubleStream mapToDouble(java.util.function.LongToDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.Stream mapToObj(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.DoubleStream asDoubleStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.DoubleCacheStream mapToDouble(org.infinispan.util.function.SerializableIntToDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.DoubleStream mapToDouble(java.util.function.IntToDoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.Stream flatMap(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.Stream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.CacheStream mapToObj(org.infinispan.util.function.SerializableIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.Stream mapToObj(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.DoubleStream asDoubleStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.stream.LongStream asLongStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.IntCacheStream mapToInt(org.infinispan.util.function.SerializableLongToIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.stream.IntStream mapToInt(java.util.function.LongToIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.LongStream flatMapToLong(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.IntCacheStream mapToInt(org.infinispan.util.function.SerializableDoubleToIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.IntStream mapToInt(java.util.function.DoubleToIntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.stream.IntStream flatMapToInt(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.Stream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.stream.LongStream mapToLong(java.util.function.DoubleToLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.LongCacheStream mapToLong(org.infinispan.util.function.SerializableDoubleToLongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:org.infinispan.commands.functional.ReadOnlyKeyCommand remoteReadOnlyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxFunctionalCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.stream.LongStream filter(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:java.lang.Object performOperationRehashAware(java.util.function.Function,boolean,org.infinispan.stream.impl.AbstractCacheStream$ResultsAccumulator,java.util.function.Predicate)",
            "org.infinispan.stream.impl.AbstractCacheStream:java.lang.Object performOperation(java.util.function.Function,org.infinispan.stream.impl.AbstractCacheStream$ResultsAccumulator,java.util.function.Predicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.stream.Stream mapToObj(java.util.function.DoubleFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:org.infinispan.CacheStream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.stream.Stream boxed()",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.CacheStream boxed()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.stream.IntStream filter(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.stream.DoubleStream map(java.util.function.DoubleUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object lambda$handleDataWriteCommand$10(java.util.concurrent.CompletableFuture,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderVersionedEntryWrappingInterceptor:java.lang.Object prepareHandler(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.VersionedEntryWrappingInterceptor:java.lang.Object prepareHandler(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleRemoteWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStatisticsReadWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.AbstractWriteManyCommand)",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object lockAndRecordForManyKeysCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStatisticsReadWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleRemoteReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,java.util.Collection,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object remotePrimaryOwnerWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.distribution.DistributionInfo,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$BackupBuilder)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleNonTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStatisticsWriteOnly(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.impl.MultiSubCommandInvoker:java.lang.Object invokeEach(org.infinispan.context.InvocationContext,java.util.Iterator,org.infinispan.interceptors.BaseAsyncInterceptor,java.lang.Object)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object localPrimaryOwnerWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.distribution.DistributionInfo,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$BackupBuilder)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.MultiSubCommandInvoker:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object handleInvalidate(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.lang.Object[])",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleRemoteReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxFunctionalCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$PrimaryResponseHandler:java.lang.Object handleDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,boolean)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)"
        ]
    },
    "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.cache.impl.SimpleCacheImpl$Values:org.infinispan.CacheStream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream parallelStream()",
            "org.infinispan.cache.impl.SimpleCacheImpl$Values:java.util.stream.Stream parallelStream()"
        ]
    },
    "org.infinispan.cache.impl.SimpleCacheImpl$Values:org.infinispan.CacheStream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.cache.impl.SimpleCacheImpl$Values:java.util.stream.Stream stream()",
            "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream stream()"
        ]
    },
    "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream parallelStream()",
            "org.infinispan.util.WriteableCacheCollectionMapper:java.util.stream.Stream parallelStream()"
        ]
    },
    "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.WriteableCacheCollectionMapper:java.util.stream.Stream stream()",
            "org.infinispan.functional.impl.ReadOnlyMapImpl:org.infinispan.functional.Traversable keys()",
            "org.infinispan.util.WriteableCacheCollectionMapper:org.infinispan.CacheStream stream()",
            "org.infinispan.commands.read.SizeCommand:java.lang.Integer perform(org.infinispan.context.InvocationContext)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.util.stream.Stream map(java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.CollectionMapper:java.util.stream.Stream stream()",
            "org.infinispan.stream.impl.local.EntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:org.infinispan.functional.Traversable map(java.util.function.Function)",
            "org.infinispan.stream.impl.local.SegmentedEntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.PersistenceEntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.util.CollectionMapper:java.util.stream.Stream parallelStream()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache createCache(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache internalGetCache(java.lang.String,java.lang.String)",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache access$000(org.infinispan.manager.DefaultCacheManager,java.lang.String,java.lang.String)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(org.infinispan.util.function.SerializableObjLongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(org.infinispan.util.function.SerializableObjIntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(org.infinispan.util.function.SerializableLongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.termop.object.ForEachOperation:void handleStreamForEach(java.util.stream.Stream,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.object.ForEachOperation:void handleStreamForEach(java.util.stream.BaseStream,java.util.List)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:void forEachOrdered(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.termop.object.ForEachBiOperation:void handleStreamForEach(java.util.stream.Stream,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.object.ForEachBiOperation:void handleStreamForEach(java.util.stream.BaseStream,java.util.List)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object lambda$visitReadOnlyManyCommand$9(long,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$ForEachFunction:java.lang.Void apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$ForEachFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(org.infinispan.util.function.SerializableObjDoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(org.infinispan.util.function.SerializableDoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(org.infinispan.util.function.SerializableIntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.stream.IntStream map(java.util.function.IntUnaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.stream.Stream mapToObj(java.util.function.LongFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:org.infinispan.CacheStream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.CacheStream boxed()",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.stream.Stream boxed()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.util.stream.Stream filter(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.EntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.KeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:org.infinispan.functional.Traversable filter(java.util.function.Predicate)",
            "org.infinispan.stream.impl.local.SegmentedKeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.PersistenceKeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.SegmentedEntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.PersistenceEntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:org.reactivestreams.Publisher localPublisher(org.infinispan.commons.util.IntSet,org.infinispan.distribution.ch.ConsistentHash,java.util.Set,java.lang.Iterable,boolean)",
            "org.infinispan.stream.impl.tx.TxDistributedLongCacheStream:java.util.stream.Stream lambda$supplierForSegments$1(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.termop.primitive.AbstractForEachIntOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)",
            "org.infinispan.stream.impl.termop.primitive.AbstractForEachLongOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)",
            "org.infinispan.stream.impl.termop.primitive.AbstractForEachDoubleOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)",
            "org.infinispan.stream.impl.tx.TxDistributedDoubleCacheStream:java.util.stream.Stream lambda$supplierForSegments$1(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.tx.TxDistributedCacheStream:java.util.stream.Stream lambda$supplierForSegments$1(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()",
            "org.infinispan.stream.impl.tx.TxDistributedIntCacheStream:java.util.stream.Stream lambda$supplierForSegments$1(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object performOperation()",
            "org.infinispan.stream.impl.termop.AbstractForEachOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.lang.Object getComponent(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:java.util.Set getListeners()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void unregisterCacheMBean(org.infinispan.Cache)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void terminate(java.lang.String)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:void <init>(org.infinispan.remoting.transport.Address,boolean,org.infinispan.distribution.DistributionManager,java.util.function.Supplier,org.infinispan.stream.impl.ClusterStreamManager,boolean,int,java.util.concurrent.Executor,org.infinispan.factories.ComponentRegistry,java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.CacheStream stream()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:org.infinispan.CacheStream stream()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:org.infinispan.CacheStream parallelStream()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.CacheStream parallelStream()",
            "org.infinispan.stream.impl.tx.TxDistributedCacheStream:void <init>(org.infinispan.remoting.transport.Address,boolean,org.infinispan.distribution.DistributionManager,java.util.function.Supplier,org.infinispan.stream.impl.tx.TxClusterStreamManager,boolean,int,java.util.concurrent.Executor,org.infinispan.factories.ComponentRegistry,org.infinispan.context.impl.LocalTxInvocationContext,java.util.function.Function,java.util.function.Function)"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:org.infinispan.transaction.TransactionTable getTransactionTable()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapDoubleOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:void <init>(org.infinispan.stream.impl.AbstractCacheStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.PrimitiveIterator$OfDouble remoteIterator()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.PrimitiveIterator$OfInt remoteIterator()",
            "org.infinispan.stream.impl.tx.TxDistributedCacheStream:void <init>(org.infinispan.stream.impl.AbstractCacheStream,org.infinispan.remoting.transport.Address,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.context.impl.LocalTxInvocationContext,java.util.function.Function)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.PrimitiveIterator$OfLong remoteIterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:void injectCache(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEach(java.util.function.Consumer)",
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEachOrdered(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachObjDoubleOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.util.Set getCacheConfigurationNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getDefinedCacheConfigurationNames()",
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getDefinedCacheCount()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getCreatedCacheCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachLongOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:java.util.Optional getOptionalComponent(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void internalStart(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache internalGetCache(java.lang.String,java.lang.String)",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.manager.EmbeddedCacheManager startCaches(java.lang.String[])",
            "org.infinispan.manager.DefaultCacheManager:void start()"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapObjDoubleOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapObjIntOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:void removeListener(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:void forEach(java.util.function.ObjIntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEach(java.util.function.ObjIntConsumer)",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:void forEach(java.util.function.ObjIntConsumer)"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachIntOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:void injectCache(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalIntCacheStream:void forEach(java.util.function.IntConsumer)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapObjLongOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:void forEach(java.util.function.ObjLongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEach(java.util.function.ObjLongConsumer)",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:void forEach(java.util.function.ObjLongConsumer)"
        ]
    },
    "org.infinispan.atomic.impl.ApplyDelta$Externalizer:org.infinispan.atomic.impl.ApplyDelta readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.ApplyDelta$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachObjIntOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.termop.object.ForEachOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:void injectCache(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalLongCacheStream:void forEach(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapIntOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:void addListener(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachFlatMapLongOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getRunningCacheCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:void <init>(org.infinispan.manager.EmbeddedCacheManager,org.infinispan.security.impl.AuthorizationHelper,java.util.EnumSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.configuration.cache.Configuration,boolean)",
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.manager.EmbeddedCacheManagerAdmin withFlags(org.infinispan.commons.api.CacheContainerAdmin$AdminFlag[])",
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.manager.EmbeddedCacheManagerAdmin withFlags(java.util.EnumSet)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.parsing.ConfigurationBuilderHolder,boolean)"
        ]
    },
    "org.infinispan.factories.AbstractComponentRegistry:org.infinispan.configuration.cache.Configuration getConfiguration()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.AbstractCacheStream:void <init>(org.infinispan.remoting.transport.Address,boolean,org.infinispan.distribution.DistributionManager,java.util.function.Supplier,org.infinispan.stream.impl.ClusterStreamManager,boolean,int,java.util.concurrent.Executor,org.infinispan.factories.ComponentRegistry,java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:void <init>(org.infinispan.remoting.transport.Address,boolean,org.infinispan.distribution.DistributionManager,java.util.function.Supplier,org.infinispan.stream.impl.ClusterStreamManager,boolean,int,java.util.concurrent.Executor,org.infinispan.factories.ComponentRegistry,java.util.function.Function)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.remoting.transport.Transport getTransport()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getPhysicalAddresses()",
            "org.infinispan.manager.DefaultCacheManager:boolean isCoordinator()",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.remoting.transport.Address getAddress()",
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getCoordinatorAddress()",
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getClusterMembers()",
            "org.infinispan.manager.DefaultCacheManager:java.util.List getMembers()",
            "org.infinispan.manager.DefaultCacheManager:int getClusterSize()",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.remoting.transport.Address getCoordinator()",
            "org.infinispan.health.impl.ClusterHealthImpl:int getNumberOfNodes()",
            "org.infinispan.health.impl.ClusterHealthImpl:java.util.List getNodeNames()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)"
        ]
    },
    "org.infinispan.health.impl.ClusterHealthImpl:void <init>(org.infinispan.manager.EmbeddedCacheManager)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.health.impl.HealthImpl:org.infinispan.health.ClusterHealth getClusterHealth()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.util.Set getCacheNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.health.impl.HealthImpl:java.util.List getCacheHealth()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:java.util.Set getEnabledStats()",
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getDefinedCacheNames()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:java.util.Set getStats()",
            "org.infinispan.health.impl.ClusterHealthImpl:org.infinispan.health.HealthStatus getHealthStatus()"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachObjLongOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:org.infinispan.commons.marshall.StreamingMarshaller getCacheMarshaller()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.termop.primitive.ForEachDoubleOperation:void handleInjection(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.commands.functional.Mutations$BaseMutation:void inject(org.infinispan.factories.ComponentRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void injectCache(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)"
        ]
    },
    "org.infinispan.factories.GlobalComponentRegistry:org.infinispan.commons.time.TimeService getTimeService()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.ComponentRegistry:org.infinispan.commons.time.TimeService getTimeService()"
        ]
    },
    "org.infinispan.factories.InternalCacheFactory$1:void cacheComponents()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.factories.AbstractComponentRegistry:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.factories.ComponentRegistry:void start()",
            "org.infinispan.manager.DefaultCacheManager:void internalStart(boolean)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor$BaseFunctionalWriteHelper:org.infinispan.commands.functional.ReadOnlyManyCommand copyForRemote(java.lang.Object,java.util.List,org.infinispan.context.InvocationContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:org.infinispan.interceptors.distribution.MergingCompletableFuture fetchAndApplyValues(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper,java.util.Collection,java.util.List,java.util.Map)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyHandler:void handleMissingResponse(org.infinispan.remoting.responses.Response)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.stream.Stream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.CacheStream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.stream.Stream boxed()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:org.infinispan.CacheStream boxed()"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.AbstractForEachIntOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.AbstractForEachLongOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.termop.primitive.AbstractForEachDoubleOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.stream.impl.termop.AbstractForEachOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:void performRehashKeyTrackingOperation(java.util.function.Function)"
        ]
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object performOperation()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:java.lang.Object performOperationRehashAware(java.util.function.Function,boolean,org.infinispan.stream.impl.AbstractCacheStream$ResultsAccumulator,java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.AbstractCacheStream:java.lang.Object performOperationRehashAware(java.util.function.Function,boolean,org.infinispan.stream.impl.AbstractCacheStream$ResultsAccumulator,java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:java.lang.Object performOperation(java.util.function.Function,boolean,java.util.function.BinaryOperator,java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.AbstractCacheStream:java.lang.Object performOperation(java.util.function.Function,org.infinispan.stream.impl.AbstractCacheStream$ResultsAccumulator,java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:java.lang.Object performOperation(java.util.function.Function,boolean,java.util.function.BinaryOperator,java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.stream.Stream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.CacheStream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.stream.Stream boxed()",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:org.infinispan.CacheStream boxed()"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object lambda$handleDataWriteCommand$10(java.util.concurrent.CompletableFuture,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderVersionedEntryWrappingInterceptor:java.lang.Object prepareHandler(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object wrapEntriesForPrepareAndApply(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object applyModificationsAndThen(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.commands.write.WriteCommand[],int,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.VersionedEntryWrappingInterceptor:java.lang.Object prepareHandler(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object wrapEntriesForPrepareAndApply(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object applyModificationsAndThen(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.commands.write.WriteCommand[],int,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleRemoteWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)"
        ]
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStatisticsReadWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.AbstractWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object lockAndRecordForManyKeysCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Collection,boolean)"
        ]
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStatisticsReadWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleRemoteReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,java.util.Collection,org.infinispan.interceptors.InvocationSuccessFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleFunctionalReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object remotePrimaryOwnerWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.distribution.DistributionInfo,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$BackupBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleSingleKeyWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$BackupBuilder)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleNonTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStatisticsWriteOnly(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.MultiSubCommandInvoker:java.lang.Object invokeEach(org.infinispan.context.InvocationContext,java.util.Iterator,org.infinispan.interceptors.BaseAsyncInterceptor,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object lambda$handleWriteManyCommand$4(org.infinispan.context.InvocationContext,java.util.Iterator,java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object lambda$handleWriteManyCommand$5(java.util.concurrent.CompletableFuture,java.util.Iterator,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object localPrimaryOwnerWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.distribution.DistributionInfo,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$BackupBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object invokeRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand,org.infinispan.distribution.DistributionInfo)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleSingleKeyWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$BackupBuilder)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.MultiSubCommandInvoker:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object handleInvalidate(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleRemoteReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$PrimaryResponseHandler:java.lang.Object handleDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$PrimaryResponseHandler:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$PrimaryResponseHandler:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$PrimaryResponseHandler:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void accept(java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationStage:java.lang.Object andHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object thenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object thenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object andFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object andExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)"
        ]
    },
    "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationStage:java.lang.Object andHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object thenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object thenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object andFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)"
        ]
    },
    "org.infinispan.cache.impl.SimpleCacheImpl$Values:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.cache.impl.SimpleCacheImpl$Values:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.WriteableCacheCollectionMapper:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.CollectionMapper:java.util.stream.Stream parallelStream()"
        ]
    },
    "org.infinispan.util.WriteableCacheCollectionMapper:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.CollectionMapper:java.util.stream.Stream stream()"
        ]
    },
    "org.infinispan.functional.impl.ReadOnlyMapImpl:org.infinispan.functional.Traversable keys()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.read.SizeCommand:java.lang.Integer perform(org.infinispan.context.InvocationContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.read.SizeCommand:java.lang.Object perform(org.infinispan.context.InvocationContext)"
        ]
    },
    "org.infinispan.util.CollectionMapper:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.CollectionMapper:java.util.stream.Stream stream()",
            "org.infinispan.stream.impl.local.EntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.KeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.SegmentedKeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.PersistenceKeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.SegmentedEntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.PersistenceEntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.stream.impl.local.EntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.EntryStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.stream.impl.local.SegmentedEntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.SegmentedEntryStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.stream.impl.local.PersistenceEntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.PersistenceEntryStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.util.CollectionMapper:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.EntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.KeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.SegmentedKeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.PersistenceKeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.stream.impl.local.SegmentedEntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)",
            "org.infinispan.util.CollectionMapper:java.util.stream.Stream parallelStream()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache internalGetCache(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache(java.lang.String,java.lang.String)",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache access$000(org.infinispan.manager.DefaultCacheManager,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager$1:void run()"
        ]
    },
    "org.infinispan.stream.impl.termop.object.ForEachOperation:void handleStreamForEach(java.util.stream.BaseStream,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.AbstractForEachOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)"
        ]
    },
    "org.infinispan.stream.impl.termop.object.ForEachBiOperation:void handleStreamForEach(java.util.stream.BaseStream,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.AbstractForEachOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$ForEachFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.CacheStream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:org.infinispan.CacheStream boxed()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.stream.Stream boxed()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.stream.Stream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.KeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.KeyStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.stream.impl.local.SegmentedKeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.SegmentedKeyStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.stream.impl.local.PersistenceKeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.PersistenceKeyStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.reactivestreams.Publisher localPublisher(org.infinispan.commons.util.IntSet,org.infinispan.distribution.ch.ConsistentHash,java.util.Set,java.lang.Iterable,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.commons.util.CloseableIterator nonRehashRemoteIterator(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.function.IntFunction,org.infinispan.stream.impl.PublisherDecorator,java.lang.Iterable)"
        ]
    },
    "org.infinispan.stream.impl.tx.TxDistributedLongCacheStream:java.util.stream.Stream lambda$supplierForSegments$1(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.tx.TxDistributedDoubleCacheStream:java.util.stream.Stream lambda$supplierForSegments$1(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.tx.TxDistributedCacheStream:java.util.stream.Stream lambda$supplierForSegments$1(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:org.reactivestreams.Publisher localPublisher(org.infinispan.commons.util.IntSet,org.infinispan.distribution.ch.ConsistentHash,java.util.Set,java.lang.Iterable,boolean)",
            "org.infinispan.stream.impl.termop.primitive.AbstractForEachIntOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)",
            "org.infinispan.stream.impl.termop.primitive.AbstractForEachLongOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)",
            "org.infinispan.stream.impl.termop.primitive.AbstractForEachDoubleOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()",
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object performOperation()",
            "org.infinispan.stream.impl.termop.AbstractForEachOperation:java.util.Collection performForEachOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector)"
        ]
    },
    "org.infinispan.stream.impl.tx.TxDistributedIntCacheStream:java.util.stream.Stream lambda$supplierForSegments$1(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void terminate(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void stopCaches()"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.CacheStream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:java.util.stream.Stream stream()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:org.infinispan.CacheStream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:java.util.stream.Stream stream()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:org.infinispan.CacheStream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:java.util.stream.Stream parallelStream()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.CacheStream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:java.util.stream.Stream parallelStream()"
        ]
    },
    "org.infinispan.stream.impl.tx.TxDistributedCacheStream:void <init>(org.infinispan.remoting.transport.Address,boolean,org.infinispan.distribution.DistributionManager,java.util.function.Supplier,org.infinispan.stream.impl.tx.TxClusterStreamManager,boolean,int,java.util.concurrent.Executor,org.infinispan.factories.ComponentRegistry,org.infinispan.context.impl.LocalTxInvocationContext,java.util.function.Function,java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingEntrySet:org.infinispan.CacheStream stream()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingKeySet:org.infinispan.CacheStream stream()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingEntrySet:org.infinispan.CacheStream parallelStream()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingKeySet:org.infinispan.CacheStream parallelStream()"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.LongFunction)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:org.infinispan.CacheStream boxed()"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.CacheStream boxed()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.DoubleFunction)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.PrimitiveIterator$OfDouble remoteIterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.PrimitiveIterator$OfInt remoteIterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()"
        ]
    },
    "org.infinispan.stream.impl.tx.TxDistributedCacheStream:void <init>(org.infinispan.stream.impl.AbstractCacheStream,org.infinispan.remoting.transport.Address,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.context.impl.LocalTxInvocationContext,java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.tx.TxDistributedIntCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()",
            "org.infinispan.stream.impl.tx.TxDistributedLongCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()",
            "org.infinispan.stream.impl.tx.TxDistributedDoubleCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.CacheStream mapToObj(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:org.infinispan.CacheStream boxed()"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.PrimitiveIterator$OfLong remoteIterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:void forEach(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.object.ForEachOperation:void handleStreamForEach(java.util.stream.Stream,java.util.List)",
            "org.infinispan.stream.impl.termop.object.ForEachBiOperation:void handleStreamForEach(java.util.stream.Stream,java.util.List)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object lambda$visitReadOnlyManyCommand$9(long,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.util.AbstractDelegatingCacheStream:void forEach(java.util.function.Consumer)",
            "org.infinispan.stream.impl.TerminalFunctions$ForEachFunction:java.lang.Void apply(java.util.stream.Stream)",
            "org.infinispan.stream.impl.IntermediateCacheStream:void forEach(java.util.function.Consumer)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:void forEach(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:void forEachOrdered(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateCacheStream:void forEachOrdered(java.util.function.Consumer)",
            "org.infinispan.util.AbstractDelegatingCacheStream:void forEachOrdered(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getDefinedCacheConfigurationNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getDefinedCacheCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.manager.EmbeddedCacheManager startCaches(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.global.GlobalConfiguration,org.infinispan.configuration.cache.Configuration,boolean)",
            "org.infinispan.manager.DefaultCacheManager:void <init>(org.infinispan.configuration.parsing.ConfigurationBuilderHolder,boolean)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEach(java.util.function.ObjIntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEach(java.util.function.ObjIntConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:void forEach(java.util.function.ObjIntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEach(java.util.function.ObjIntConsumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:void forEach(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:void forEach(java.util.function.IntConsumer)",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEach(java.util.function.IntConsumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEach(java.util.function.ObjLongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEach(java.util.function.ObjLongConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:void forEach(java.util.function.ObjLongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEach(java.util.function.ObjLongConsumer)"
        ]
    },
    "org.infinispan.atomic.impl.ApplyDelta$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:void forEach(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:void forEach(java.util.function.LongConsumer)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEach(java.util.function.LongConsumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.manager.EmbeddedCacheManagerAdmin withFlags(org.infinispan.commons.api.CacheContainerAdmin$AdminFlag[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.CacheContainerAdmin withFlags(org.infinispan.commons.api.CacheContainerAdmin$AdminFlag[])"
        ]
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.manager.EmbeddedCacheManagerAdmin withFlags(java.util.EnumSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.CacheContainerAdmin withFlags(java.util.EnumSet)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getPhysicalAddresses()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:boolean isCoordinator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.remoting.transport.Address getAddress()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void internalStart(boolean)",
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getLogicalAddressString()",
            "org.infinispan.manager.DefaultCacheManager:java.lang.String toString()",
            "org.infinispan.manager.DefaultCacheManager:void stop()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getCoordinatorAddress()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getClusterMembers()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:java.util.List getMembers()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:int getClusterSize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.remoting.transport.Address getCoordinator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.health.impl.ClusterHealthImpl:int getNumberOfNodes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:int getNumberOfNodes()"
        ]
    },
    "org.infinispan.health.impl.ClusterHealthImpl:java.util.List getNodeNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)"
        ]
    },
    "org.infinispan.health.impl.HealthImpl:org.infinispan.health.ClusterHealth getClusterHealth()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:java.lang.String getClusterHealth()",
            "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:int getNumberOfNodes()",
            "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:java.lang.String getClusterName()"
        ]
    },
    "org.infinispan.health.impl.HealthImpl:java.util.List getCacheHealth()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:java.lang.String[] getCacheHealth()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:java.util.Set getEnabledStats()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateEvictions()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateTimeSinceStart()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateRemoveHits()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageReadTimeNanos()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageRemoveTimeNanos()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageReadTime()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:double calculateHitRatio()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateDataMemoryUsed()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:int getNumberOfEntries()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateHits()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageWriteTime()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:double calculateReadWriteRatio()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageWriteTimeNanos()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateOffHeapUsed()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateStores()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageRemoveTime()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateMisses()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:int getCurrentNumberOfEntriesInMemory()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateRemoveMisses()",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:void resetStatistics()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getDefinedCacheNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:java.util.Set getStats()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:int getRequiredMinimumNumberOfNodes()"
        ]
    },
    "org.infinispan.health.impl.ClusterHealthImpl:org.infinispan.health.HealthStatus getHealthStatus()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:java.lang.String getClusterHealth()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)"
        ]
    },
    "org.infinispan.factories.ComponentRegistry:org.infinispan.commons.time.TimeService getTimeService()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.triangle.SingleKeyBackupWriteCommand:org.infinispan.commands.write.WriteCommand createWriteCommand()"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:org.infinispan.interceptors.distribution.MergingCompletableFuture fetchAndApplyValues(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper,java.util.Collection,java.util.List,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.util.concurrent.CompletionStage lambda$handleFunctionalReadManyCommand$4(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper,java.util.Collection,java.util.List,java.util.Map,java.lang.Void)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleFunctionalReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyHandler:void handleMissingResponse(org.infinispan.remoting.responses.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.ClusteringInterceptor:org.infinispan.remoting.responses.SuccessfulResponse getSuccessfulResponseOrFail(java.util.Map,java.util.concurrent.CompletableFuture,java.util.function.Consumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.stream.Stream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.AbstractCacheStream:java.lang.Object performOperation(java.util.function.Function,boolean,java.util.function.BinaryOperator,java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:boolean allMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong max()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object[] toArray()",
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional min(java.util.Comparator)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:int sum()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.DistributedCacheStream:long count()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:boolean allMatch(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble findAny()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()",
            "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:int[] toArray()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:long count()",
            "org.infinispan.stream.impl.DistributedCacheStream:void forEach(java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:double[] toArray()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:long[] toArray()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble average()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:long count()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional max(java.util.Comparator)",
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional findAny()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:void forEach(java.util.function.ObjLongConsumer)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)",
            "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:long count()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object collect(java.util.stream.Collector)",
            "org.infinispan.stream.impl.DistributedCacheStream:boolean anyMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(java.util.function.ObjIntConsumer)",
            "org.infinispan.stream.impl.DistributedCacheStream:void forEach(java.util.function.Consumer)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:double sum()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)",
            "org.infinispan.stream.impl.DistributedCacheStream:boolean noneMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalDouble average()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt max()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong min()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt findAny()",
            "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:void forEach(java.util.function.IntConsumer)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:long sum()",
            "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalDouble average()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble max()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:boolean allMatch(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble min()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt min()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong findAny()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.stream.Stream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:void handleLocallyAvailableKeys(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.List,org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object handlePrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleNonTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.BiasedEntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object handleDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,boolean)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTxCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.TransactionBoundaryCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object retryWhenDone(java.util.concurrent.CompletableFuture,int,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.BiasedEntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleExceptionOnReadCommandReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object wrapEntriesForPrepareAndApply(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.interceptors.InvocationSuccessFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.VersionedEntryWrappingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderVersionedEntryWrappingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object applyModificationsAndThen(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.commands.write.WriteCommand[],int,org.infinispan.interceptors.InvocationSuccessFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object lambda$applyModificationsAndThen$8(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.commands.write.WriteCommand[],int,org.infinispan.interceptors.InvocationSuccessFunction,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object wrapEntriesForPrepareAndApply(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.interceptors.InvocationSuccessFunction)"
        ]
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Collection,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleFunctionalReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleSingleKeyWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$BackupBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object lambda$handleWriteManyCommand$4(org.infinispan.context.InvocationContext,java.util.Iterator,java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object lambda$handleWriteManyCommand$5(java.util.concurrent.CompletableFuture,java.util.Iterator,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object invokeRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand,org.infinispan.distribution.DistributionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$PrimaryResponseHandler:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.Visitor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.commands.write.RemoveCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$PrimaryResponseHandler:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.PutKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$PrimaryResponseHandler:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.ReplaceCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1LastChanceInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void accept(java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void accept(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationStage:java.lang.Object andHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object thenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object thenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object andFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.InvocationStage:java.lang.Object andExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)"
        ]
    },
    "org.infinispan.interceptors.InvocationStage:java.lang.Object andHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object retryWhenDone(java.util.concurrent.CompletableFuture,int,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.BiasedScatteredDistributionInterceptor:java.lang.Object singleWriteResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleExceptionOnReadCommandReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object invokeRemotely(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.remoting.transport.Address)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object syncLocalManyKeysWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$PrimaryOwnerClassifier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MergeResults,java.util.function.Supplier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.InvocationStage:java.lang.Object thenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object acquireLocalLockAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object lambda$handleDataWriteCommand$10(java.util.concurrent.CompletableFuture,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object lambda$visitRemoveExpiredCommand$11(org.infinispan.commands.write.RemoveExpiredCommand,java.lang.Object,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.distribution.DistributionInfo,org.infinispan.context.InvocationContext,int,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleRemoteReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxFunctionalCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object lambda$handleWriteManyCommand$5(java.util.concurrent.CompletableFuture,java.util.Iterator,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:org.infinispan.interceptors.InvocationStage retrieveRemoteValue(org.infinispan.context.InvocationContext,java.util.Collection,java.lang.Object,int,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object prefetchKeyIfNeededAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,java.lang.Object,boolean)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object acquireLocalLocksAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$visitRemoveExpiredCommand$17(org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,java.lang.Object,org.infinispan.commands.write.RemoveExpiredCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object applyModificationsAndThen(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.commands.write.WriteCommand[],int,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object asyncInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.concurrent.CompletionStage)",
            "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object asyncInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationStage)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:org.infinispan.interceptors.InvocationStage retrieveRemoteValues(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,java.util.List)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)"
        ]
    },
    "org.infinispan.interceptors.InvocationStage:java.lang.Object thenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object handlePrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)"
        ]
    },
    "org.infinispan.interceptors.InvocationStage:java.lang.Object andFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void handleLocalSegmentsForReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.interceptors.distribution.NonTxDistributionInterceptor$MutableInt,org.infinispan.commons.util.IntSet)",
            "org.infinispan.statetransfer.TransactionSynchronizerInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.InvocationStage:java.lang.Object andExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)"
        ]
    },
    "org.infinispan.commands.read.SizeCommand:java.lang.Object perform(org.infinispan.context.InvocationContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.EntryStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.AbstractLocalCacheStream:java.util.stream.BaseStream createStream()"
        ]
    },
    "org.infinispan.stream.impl.local.SegmentedEntryStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.AbstractLocalCacheStream:java.util.stream.BaseStream createStream()"
        ]
    },
    "org.infinispan.stream.impl.local.PersistenceEntryStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.AbstractLocalCacheStream:java.util.stream.BaseStream createStream()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache(java.lang.String)",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void startCache()",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.commons.api.BasicCache getCache()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.stream.Stream boxed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.local.KeyStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.AbstractLocalCacheStream:java.util.stream.BaseStream createStream()"
        ]
    },
    "org.infinispan.stream.impl.local.SegmentedKeyStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.AbstractLocalCacheStream:java.util.stream.BaseStream createStream()"
        ]
    },
    "org.infinispan.stream.impl.local.PersistenceKeyStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.AbstractLocalCacheStream:java.util.stream.BaseStream createStream()"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:org.infinispan.commons.util.CloseableIterator nonRehashRemoteIterator(org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,java.util.function.IntFunction,org.infinispan.stream.impl.PublisherDecorator,java.lang.Iterable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.Iterator iterator()",
            "org.infinispan.stream.impl.DistributedCacheStream$RehashIterator:java.lang.Object getNext()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:void stopCaches()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:void stop()"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableSpliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:java.util.Spliterator spliterator()",
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableSpliterator spliterator()"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableIterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:boolean hasNext()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:java.util.Iterator iterator()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator innerIterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:void <init>(org.infinispan.interceptors.impl.PrefetchInterceptor,org.infinispan.Cache,boolean,java.util.function.Supplier,java.util.function.Function)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.CacheStream getStream(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:org.infinispan.CacheStream stream()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:org.infinispan.CacheStream parallelStream()"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:boolean hasNext()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:void <init>(org.infinispan.interceptors.impl.PrefetchInterceptor,org.infinispan.Cache,boolean,java.util.function.Supplier,java.util.function.Function)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:org.infinispan.commons.util.CloseableIterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:boolean hasNext()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator innerIterator()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:java.util.Iterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:void <init>(org.infinispan.interceptors.impl.PrefetchInterceptor,org.infinispan.Cache,boolean,java.util.function.Supplier,java.util.function.Function)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingEntrySet:org.infinispan.CacheStream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingEntrySet:java.util.stream.Stream stream()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingKeySet:org.infinispan.CacheStream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingKeySet:java.util.stream.Stream stream()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingEntrySet:org.infinispan.CacheStream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingEntrySet:java.util.stream.Stream parallelStream()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingKeySet:org.infinispan.CacheStream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingKeySet:java.util.stream.Stream parallelStream()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()",
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.Iterator iterator()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.Spliterator$OfInt spliterator()"
        ]
    },
    "org.infinispan.stream.impl.tx.TxDistributedIntCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.tx.TxDistributedLongCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.tx.TxDistributedDoubleCacheStream:org.infinispan.stream.impl.DistributedCacheStream cacheStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.Iterator iterator()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.Spliterator$OfLong spliterator()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:void forEach(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEach(java.util.function.Consumer)",
            "org.infinispan.util.AbstractDelegatingCacheStream:void forEach(java.util.function.Consumer)",
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEach(java.util.function.BiConsumer)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:void forEach(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:void forEach(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:void forEach(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:void forEach(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:void forEachOrdered(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:void forEachOrdered(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:void forEachOrdered(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:void forEachOrdered(java.util.function.Consumer)",
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEachOrdered(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:void forEach(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEach(java.util.function.IntConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEach(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEach(java.util.function.IntConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readNonNullableObject(int,org.infinispan.marshall.core.BytesObjectInput)"
        ]
    },
    "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:void forEach(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEach(java.util.function.LongConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEach(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEach(java.util.function.LongConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.CacheContainerAdmin withFlags(org.infinispan.commons.api.CacheContainerAdmin$AdminFlag[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.CacheContainerAdmin withFlags(java.util.EnumSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getLogicalAddressString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:java.lang.String getNodeAddress()"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String toString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:int getNumberOfNodes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:java.lang.String getClusterHealth()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:java.lang.String getClusterName()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.health.impl.jmx.HealthJMXExposerImpl:java.lang.String[] getCacheHealth()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateEvictions()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getEvictions()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateTimeSinceStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getTimeSinceStart()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateRemoveHits()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getRemoveHits()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageReadTimeNanos()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageReadTimeNanos()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageRemoveTimeNanos()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageRemoveTimeNanos()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageReadTime()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageReadTime()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:double calculateHitRatio()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:double getHitRatio()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateDataMemoryUsed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getDataMemoryUsed()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:int getNumberOfEntries()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:int getCurrentNumberOfEntries()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateHits()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getHits()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageWriteTime()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageWriteTime()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:double calculateReadWriteRatio()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:double getReadWriteRatio()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageWriteTimeNanos()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageWriteTimeNanos()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateOffHeapUsed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getOffHeapMemoryUsed()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateStores()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getStores()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateAverageRemoveTime()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageRemoveTime()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateMisses()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getMisses()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:int getCurrentNumberOfEntriesInMemory()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long calculateRemoveMisses()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getRemoveMisses()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:void resetStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:void reset()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:int getRequiredMinimumNumberOfNodes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.util.concurrent.CompletionStage lambda$handleFunctionalReadManyCommand$4(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper,java.util.Collection,java.util.List,java.util.Map,java.lang.Void)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ClusteringInterceptor:org.infinispan.remoting.responses.SuccessfulResponse getSuccessfulResponseOrFail(java.util.Map,java.util.concurrent.CompletableFuture,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void handleGetAllResponse(java.util.Map,java.lang.Throwable,org.infinispan.context.InvocationContext,java.util.List,org.infinispan.interceptors.impl.ClusteringInterceptor$ClusteredGetAllFuture)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void lambda$handleSegmentsForWriteOnlyManyCommand$4(org.infinispan.interceptors.distribution.CountDownCompletableFuture,java.util.Map,java.lang.Throwable)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:org.infinispan.remoting.responses.SuccessfulResponse access$100(java.util.Map,java.util.concurrent.CompletableFuture,java.util.function.Consumer)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void lambda$handleRemoteSegmentsForReadWriteManyCommand$6(org.infinispan.interceptors.distribution.MergingCompletableFuture,int,java.util.Map,java.lang.Throwable)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void lambda$visitReadOnlyManyCommand$25(org.infinispan.interceptors.distribution.MergingCompletableFuture,int,java.util.Map,java.lang.Throwable)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:boolean allMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$AllMatchFunction:java.lang.Boolean apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleRemoteReadManyCommand$26(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadOnlyManyHelper:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.stream.impl.TerminalFunctions$ToArrayFunction:java.lang.Object[] apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional min(java.util.Comparator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$MinFunction:java.lang.Object apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:int sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:boolean anyMatch(org.infinispan.util.function.SerializableIntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$ReduceFunction:java.lang.Object apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:boolean noneMatch(org.infinispan.util.function.SerializableLongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$CountFunction:java.lang.Long apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:boolean allMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:boolean allMatch(org.infinispan.util.function.SerializableLongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble findFirst()"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble reduce(org.infinispan.util.function.SerializableDoubleBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$ToArrayGeneratorFunction:java.lang.Object[] apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:int[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:double reduce(double,org.infinispan.util.function.SerializableDoubleBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:double[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong reduce(org.infinispan.util.function.SerializableLongBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean anyMatch(org.infinispan.util.function.SerializableDoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:long[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean noneMatch(org.infinispan.util.function.SerializableDoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional max(java.util.Comparator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$MaxFunction:java.lang.Object apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional findFirst()",
            "org.infinispan.stream.impl.TerminalFunctions$FindAnyFunction:java.lang.Object apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:int reduce(int,org.infinispan.util.function.SerializableIntBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceCombinerFunction:java.lang.Object apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier,org.infinispan.util.function.SerializableObjLongConsumer,org.infinispan.util.function.SerializableBiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object collect(java.util.stream.Collector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadOnlyManyHelper:void applyLocalResult(org.infinispan.interceptors.distribution.MergingCompletableFuture,java.lang.Object)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void lambda$visitReadOnlyManyCommand$23(org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.stream.impl.TerminalFunctions$CollectorFunction:java.lang.Object apply(java.util.stream.Stream)",
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:boolean anyMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$AnyMatchFunction:java.lang.Boolean apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:double sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:boolean noneMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$NoneMatchFunction:java.lang.Boolean apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier,org.infinispan.util.function.SerializableObjDoubleConsumer,org.infinispan.util.function.SerializableBiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier,org.infinispan.util.function.SerializableObjIntConsumer,org.infinispan.util.function.SerializableBiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt findFirst()"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceFunction:java.lang.Object apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:boolean noneMatch(org.infinispan.util.function.SerializableIntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:long reduce(long,org.infinispan.util.function.SerializableLongBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt reduce(org.infinispan.util.function.SerializableIntBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:long sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$CollectFunction:java.lang.Object apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:boolean allMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedIntCacheStream:boolean allMatch(org.infinispan.util.function.SerializableIntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean allMatch(org.infinispan.util.function.SerializableDoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:boolean anyMatch(org.infinispan.util.function.SerializableLongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong findFirst()"
        ]
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:void handleLocallyAvailableKeys(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.List,org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:org.infinispan.interceptors.distribution.MergingCompletableFuture fetchAndApplyValues(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper,java.util.Collection,java.util.List,java.util.Map)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object handlePrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:org.infinispan.interceptors.InvocationStage replayRemoteTransactionIfNeeded(org.infinispan.context.impl.RemoteTxInvocationContext,int)"
        ]
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleNonTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.BiasedEntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object handleDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTxCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.TransactionBoundaryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)"
        ]
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object retryWhenDone(java.util.concurrent.CompletableFuture,int,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTxReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTxWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleLocalGetKeysInGroupReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleExceptionOnNonTxWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)"
        ]
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.BiasedEntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleExceptionOnReadCommandReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleReadCommandReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.tx.PrepareCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.VersionedEntryWrappingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderVersionedEntryWrappingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object lambda$applyModificationsAndThen$8(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.commands.write.WriteCommand[],int,org.infinispan.interceptors.InvocationSuccessFunction,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.Visitor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.RemoveExpiredCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.commands.write.RemoveCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.write.PutKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.write.ReplaceCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void accept(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BiasedScatteredDistributionInterceptor:java.lang.Object singleWriteResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BiasedScatteredDistributionInterceptor:java.lang.Object lambda$singleWriteResponse$4(java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object invokeRemotely(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.remoting.transport.Address)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleNonTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object syncLocalManyKeysWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$PrimaryOwnerClassifier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MergeResults,java.util.function.Supplier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleLocalManyKeysCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MergeResults,java.util.function.Supplier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)"
        ]
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object acquireLocalLockAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object lambda$visitDataWriteCommand$3(org.infinispan.commands.write.DataWriteCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object lambda$visitDataReadCommand$2(org.infinispan.commands.DataCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object lambda$visitRemoveExpiredCommand$11(org.infinispan.commands.write.RemoveExpiredCommand,java.lang.Object,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.distribution.DistributionInfo,org.infinispan.context.InvocationContext,int,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleRemoteReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:org.infinispan.interceptors.InvocationStage retrieveRemoteValue(org.infinispan.context.InvocationContext,java.util.Collection,java.lang.Object,int,org.infinispan.commands.DataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:org.infinispan.interceptors.InvocationStage lookupLocalAndRetrieveRemote(org.infinispan.context.InvocationContext,java.lang.Object,org.infinispan.commands.DataCommand,int)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object prefetchKeyIfNeededAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object lambda$prefetchKeyIfNeededAndInvokeNext$0(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object acquireLocalLocksAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object lockAndRecordForManyKeysCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object lambda$lockAndRecordForManyKeysCommand$4(org.infinispan.commands.FlagAffectedCommand,java.util.Collection,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$visitRemoveExpiredCommand$17(org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,java.lang.Object,org.infinispan.commands.write.RemoveExpiredCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object asyncInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.concurrent.CompletionStage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object lambda$handleDataWriteCommand$10(java.util.concurrent.CompletableFuture,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection,java.util.function.BiFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object remoteBackupOwnerWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,java.util.Map,java.util.function.BiFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object asyncInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object remotePrimaryManyKeysWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Set,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleNonTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.statetransfer.TransactionSynchronizerInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleRemoteReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object flushL1CachesAndInvokeNext(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxFunctionalCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object invokeNextWriteManyKeysInPrimary(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Set,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object retryWhenDone(java.util.concurrent.CompletableFuture,int,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void handleLocalSegmentsForReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.interceptors.distribution.NonTxDistributionInterceptor$MutableInt,org.infinispan.commons.util.IntSet)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleExceptionOnReadCommandReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object remoteBackupManyKeysWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object asyncInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationStage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object prefetchKeyIfNeededAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,java.lang.Object,boolean)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object prefetchKeysIfNeededAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection,boolean)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:org.infinispan.interceptors.InvocationStage retrieveRemoteValues(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object prefetchKeysIfNeededAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection,boolean)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.xsite.BaseBackupInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object finishCommit(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.xsite.BaseBackupInterceptor:java.lang.Object processBackupResponse(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.remoting.transport.BackupResponse)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object prepareHandler(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object handleSingleKeyWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.NotificationInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderVersionedEntryWrappingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.NotificationInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object commitSingleEntryOnReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.container.versioning.EntryVersion)",
            "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object handleMultipleKeysWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.NotificationInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)"
        ]
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWriteManyOnOrigin(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)",
            "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.VersionedEntryWrappingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.GroupingInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object handleDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Collection,boolean)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object performL1Lookup(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,boolean,java.lang.Object,boolean)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object verifyRemoteTransaction(org.infinispan.context.impl.RemoteTxInvocationContext,org.infinispan.commands.tx.AbstractTransactionBoundaryCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.locking.AbstractTxLockingInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderVersionedEntryWrappingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.locking.AbstractTxLockingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object lambda$new$1(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object lambda$nonTxLockAndInvokeNext$1(org.infinispan.interceptors.InvocationFinallyAction,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void handleLocalSegmentsForReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.interceptors.distribution.NonTxDistributionInterceptor$MutableInt,org.infinispan.commons.util.IntSet)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand,java.lang.Object)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void handleSegmentsForWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.interceptors.distribution.CountDownCompletableFuture,org.infinispan.remoting.transport.Address,org.infinispan.commons.util.IntSet)",
            "org.infinispan.interceptors.totalorder.TotalOrderInterceptor:java.lang.Object visitSecondPhaseCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.AbstractTransactionBoundaryCommand,boolean)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStoreStatistics(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.locking.AbstractTxLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)"
        ]
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void handleLocalSegmentsForReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.interceptors.distribution.NonTxDistributionInterceptor$MutableInt,org.infinispan.commons.util.IntSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)"
        ]
    },
    "org.infinispan.statetransfer.TransactionSynchronizerInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object lambda$visitRemoveExpiredCommand$0(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand,java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object localPrepare(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.InvocationContextInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object handleLocalPrepareReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.RetryingEntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.RetryingEntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)"
        ]
    },
    "org.infinispan.stream.impl.local.AbstractLocalCacheStream:java.util.stream.BaseStream createStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong findAny()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt findAny()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional findFirst()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:double[] toArray()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble average()",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:void forEach(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble min()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:void forEach(java.util.function.ObjIntConsumer)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional min(java.util.Comparator)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong findFirst()",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:void forEach(java.util.function.ObjLongConsumer)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional findAny()",
            "org.infinispan.stream.impl.local.LocalCacheStream:boolean allMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.Spliterator$OfLong spliterator()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional max(java.util.Comparator)",
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEach(java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:boolean allMatch(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:long count()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.Spliterator$OfInt spliterator()",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:void forEachOrdered(java.util.function.LongConsumer)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt min()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void forEach(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong max()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble max()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:void forEach(java.util.function.IntConsumer)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt max()",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:long sum()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:long count()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEach(java.util.function.Consumer)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:int[] toArray()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:int sum()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:long[] toArray()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong min()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.local.LocalCacheStream:boolean noneMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(java.util.function.Supplier)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:void forEachOrdered(java.util.function.IntConsumer)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalDouble average()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void forEachOrdered(java.util.function.DoubleConsumer)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:long count()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt findFirst()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:boolean allMatch(java.util.function.LongPredicate)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble findAny()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object[] toArray()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:void forEach(java.util.function.ObjDoubleConsumer)",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble findFirst()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:double sum()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()",
            "org.infinispan.stream.impl.local.LocalCacheStream:long count()",
            "org.infinispan.stream.impl.local.LocalCacheStream:boolean anyMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.local.LocalCacheStream:void forEachOrdered(java.util.function.Consumer)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalDouble average()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(java.util.stream.Collector)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.commons.api.BasicCache getCache(java.lang.String)",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:java.util.Set getEnabledStats()",
            "org.infinispan.health.impl.HealthImpl:org.infinispan.health.impl.CacheHealthImpl lambda$getCacheHealth$0(java.lang.String)",
            "org.infinispan.stats.impl.CacheContainerStatsImpl:java.util.Set getStats()",
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.Cache createCache(java.lang.String,java.lang.String)",
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.Cache getOrCreateCache(java.lang.String,org.infinispan.configuration.cache.Configuration)",
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.Cache getOrCreateCache(java.lang.String,java.lang.String)",
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache createCache(java.lang.String,org.infinispan.configuration.cache.Configuration)",
            "org.infinispan.manager.DefaultCacheManager:void startCache(java.lang.String)",
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.Cache createCache(java.lang.String,org.infinispan.configuration.cache.Configuration)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache(java.lang.String,boolean)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:void startCache()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.commons.api.BasicCache getCache()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.PrimitiveIterator$OfDouble remoteIterator()",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.PrimitiveIterator$OfInt remoteIterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()",
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.PrimitiveIterator$OfLong remoteIterator()",
            "org.infinispan.stream.impl.DistributedCacheStream:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream$RehashIterator:java.lang.Object getNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedCacheStream$CompletionListenerRehashIterator:java.lang.Object getNext()"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableSpliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:org.infinispan.CacheStream getStream(boolean)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableIterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:org.infinispan.commons.util.CloseableIterator innerIterator()",
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:java.util.Iterator iterator()",
            "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:org.infinispan.commons.util.CloseableIterator innerIterator()"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:boolean hasNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:java.lang.Object next()",
            "org.infinispan.interceptors.impl.TxInterceptor$TransactionAwareCloseableIterator:java.lang.Object getNextFromIterator()"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object lambda$updateStatisticsReadWrite$12(long,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.marshall.exts.CollectionExternalizer:void writeObject(java.io.ObjectOutput,java.util.Collection)",
            "org.infinispan.interceptors.distribution.MergingCompletableFuture:void moveListItemsToFuture(java.lang.Object,org.infinispan.interceptors.distribution.MergingCompletableFuture,int)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator innerIterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:org.infinispan.commons.util.CloseableSpliterator spliterator()"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:void <init>(org.infinispan.interceptors.impl.PrefetchInterceptor,org.infinispan.Cache,boolean,java.util.function.Supplier,java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingKeySet:org.infinispan.commons.util.CloseableIterator iterator()"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:org.infinispan.CacheStream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:int size()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:java.util.stream.Stream stream()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:org.infinispan.CacheStream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:java.util.stream.Stream parallelStream()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:org.infinispan.commons.util.CloseableSpliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object lambda$updateStatisticsReadWrite$12(long,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.marshall.exts.CollectionExternalizer:void writeObject(java.io.ObjectOutput,java.util.Collection)",
            "org.infinispan.interceptors.distribution.MergingCompletableFuture:void moveListItemsToFuture(java.lang.Object,org.infinispan.interceptors.distribution.MergingCompletableFuture,int)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingEntrySet:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingKeySet:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingEntrySet:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$TxBackingKeySet:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.IntermediateType$4:java.util.stream.BaseStream handleStream(org.infinispan.BaseCacheStream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.Spliterator$OfInt spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateType$2:java.util.stream.BaseStream handleStream(org.infinispan.BaseCacheStream)",
            "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.Spliterator$OfLong spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.IntermediateType$3:java.util.stream.BaseStream handleStream(org.infinispan.BaseCacheStream)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readNonNullableObject(int,org.infinispan.marshall.core.BytesObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readNullableObject(org.infinispan.marshall.core.BytesObjectInput)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:java.lang.String getNodeAddress()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getEvictions()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getTimeSinceStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getRemoveHits()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageReadTimeNanos()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageRemoveTimeNanos()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageReadTime()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:double getHitRatio()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getDataMemoryUsed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:int getCurrentNumberOfEntries()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getHits()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getRetrievals()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageWriteTime()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:double getReadWriteRatio()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageWriteTimeNanos()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getOffHeapMemoryUsed()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getStores()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getTotalNumberOfEntries()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getAverageRemoveTime()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getMisses()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stats.impl.CacheContainerStatsImpl:long getRetrievals()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getRemoveMisses()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:void reset()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void handleGetAllResponse(java.util.Map,java.lang.Throwable,org.infinispan.context.InvocationContext,java.util.List,org.infinispan.interceptors.impl.ClusteringInterceptor$ClusteredGetAllFuture)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void lambda$visitGetAllCommand$19(org.infinispan.context.InvocationContext,java.util.List,org.infinispan.interceptors.impl.ClusteringInterceptor$ClusteredGetAllFuture,java.util.Map,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void lambda$handleSegmentsForWriteOnlyManyCommand$4(org.infinispan.interceptors.distribution.CountDownCompletableFuture,java.util.Map,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:org.infinispan.remoting.responses.SuccessfulResponse access$100(java.util.Map,java.util.concurrent.CompletableFuture,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyHandler:void accept(java.util.Map,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void lambda$handleRemoteSegmentsForReadWriteManyCommand$6(org.infinispan.interceptors.distribution.MergingCompletableFuture,int,java.util.Map,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void lambda$visitReadOnlyManyCommand$25(org.infinispan.interceptors.distribution.MergingCompletableFuture,int,java.util.Map,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$AllMatchFunction:java.lang.Boolean apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$AllMatchFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleRemoteReadManyCommand$26(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadOnlyManyHelper:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$ToArrayFunction:java.lang.Object[] apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$ToArrayFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$MinFunction:java.lang.Object apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$MinFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:boolean anyMatch(org.infinispan.util.function.SerializableIntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$ReduceFunction:java.lang.Object apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$ReduceFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:boolean noneMatch(org.infinispan.util.function.SerializableLongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$CountFunction:java.lang.Long apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$CountFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:boolean allMatch(org.infinispan.util.function.SerializableLongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.OptionalDouble reduce(org.infinispan.util.function.SerializableDoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$ToArrayGeneratorFunction:java.lang.Object[] apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$ToArrayGeneratorFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:double reduce(double,org.infinispan.util.function.SerializableDoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong reduce(org.infinispan.util.function.SerializableLongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean anyMatch(org.infinispan.util.function.SerializableDoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean noneMatch(org.infinispan.util.function.SerializableDoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$MaxFunction:java.lang.Object apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$MaxFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.Optional findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$FindAnyFunction:java.lang.Object apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$FindAnyFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:int reduce(int,org.infinispan.util.function.SerializableIntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceCombinerFunction:java.lang.Object apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceCombinerFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier,org.infinispan.util.function.SerializableObjLongConsumer,org.infinispan.util.function.SerializableBiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadOnlyManyHelper:void applyLocalResult(org.infinispan.interceptors.distribution.MergingCompletableFuture,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object lambda$handleLocallyAvailableKeys$5(org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void lambda$visitReadOnlyManyCommand$23(org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.InvocationFinallyAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$CollectorFunction:java.lang.Object apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$CollectorFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$AnyMatchFunction:java.lang.Boolean apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$AnyMatchFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$NoneMatchFunction:java.lang.Boolean apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$NoneMatchFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier,org.infinispan.util.function.SerializableObjDoubleConsumer,org.infinispan.util.function.SerializableBiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier,org.infinispan.util.function.SerializableObjIntConsumer,org.infinispan.util.function.SerializableBiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceFunction:java.lang.Object apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:boolean noneMatch(org.infinispan.util.function.SerializableIntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:long reduce(long,org.infinispan.util.function.SerializableLongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.OptionalInt reduce(org.infinispan.util.function.SerializableIntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.TerminalFunctions$CollectFunction:java.lang.Object apply(java.util.stream.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$CollectFunction:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:boolean allMatch(org.infinispan.util.function.SerializableIntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:boolean allMatch(org.infinispan.util.function.SerializableDoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:boolean anyMatch(org.infinispan.util.function.SerializableLongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.OptionalLong findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:org.infinispan.interceptors.InvocationStage replayRemoteTransactionIfNeeded(org.infinispan.context.impl.RemoteTxInvocationContext,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)"
        ]
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteKeyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyKeyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.ComputeIfAbsentCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.PutKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.RemoveExpiredCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.ComputeCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.ReplaceCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)",
            "org.infinispan.commands.write.RemoveCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTxReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTxWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleLocalGetKeysInGroupReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleExceptionOnNonTxWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleNonTxWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteManyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.InvalidateCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyManyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.InvalidateL1Command:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.PutMapCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object handleReadCommandReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.BaseStateTransferInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.tx.PrepareCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.write.RemoveExpiredCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.RetryingEntryWrappingInterceptor:java.lang.Object handleDataWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.RetryingEntryWrappingInterceptor:java.lang.Object handleManyWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object handlePrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)",
            "org.infinispan.interceptors.xsite.BaseBackupInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object remoteBackupOwnerWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.TransactionalStoreInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStatisticsReadWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.AbstractWriteManyCommand)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Collection,boolean)",
            "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.locking.NonTransactionalLockingInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Collection,boolean)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStatisticsReadWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleLocalOnlyReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.xsite.OptimisticBackupInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleRemoteReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.impl.PassivationWriterInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleDefault(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.AbstractTopologyAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.locking.AbstractTxLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTopologyAffectedCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.remoting.transport.Address)",
            "org.infinispan.interceptors.impl.BatchingInterceptor:java.lang.Object handleDefault(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.BatchingInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object prefetchKeysIfNeededAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection,boolean)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object prefetchKeyIfNeededAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,java.lang.Object,boolean)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object asyncInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.BatchingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)",
            "org.infinispan.interceptors.impl.BatchingInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderVersionedDistributionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.TransactionalStoreInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxFunctionalCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleNonTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object lambda$retrieveRemoteValues$3(java.util.List,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitSizeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.SizeCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object handleDefault(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleLocalOnlyReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleRemoteWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object performL1Lookup(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,boolean,java.lang.Object,boolean)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object handleDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,boolean)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object performCommandWithL1WriteIfAble(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,boolean,boolean,boolean)",
            "org.infinispan.interceptors.impl.TransactionalStoreInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.locking.NonTransactionalLockingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderDistributionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleRemotelyPrefetchedEntry(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleNonTxWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.AbstractDataWriteCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStatisticsWriteOnly(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.NotificationInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object flushL1CachesAndInvokeNext(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.locking.NonTransactionalLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object handleDefault(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object lambda$new$0(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object remotePrepare(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.xsite.OptimisticBackupInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleSingleKeyWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$BackupBuilder)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStoreStatistics(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object handleInvalidate(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.lang.Object[])",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.xsite.BaseBackupInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object prepareHandler(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)",
            "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitNonTxDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object handleSingleKeyWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitManyDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.totalorder.TotalOrderVersionedDistributionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.statetransfer.TransactionSynchronizerInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.locking.AbstractTxLockingInterceptor:java.lang.Object lambda$new$0(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderDistributionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)",
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object handleMultipleKeysWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.InvalidationInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleSecondPhaseCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.TransactionBoundaryCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.BiasedScatteredDistributionInterceptor:java.lang.Object lambda$singleWriteResponse$4(java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleLocalManyKeysCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MergeResults,java.util.function.Supplier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object lambda$visitDataWriteCommand$3(org.infinispan.commands.write.DataWriteCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object lambda$visitDataReadCommand$2(org.infinispan.commands.DataCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:org.infinispan.interceptors.InvocationStage lookupLocalAndRetrieveRemote(org.infinispan.context.InvocationContext,java.lang.Object,org.infinispan.commands.DataCommand,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object prefetchKeyIfNeededAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,java.lang.Object,boolean)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitApplyDeltaCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ApplyDeltaCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object lambda$prefetchKeyIfNeededAndInvokeNext$0(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)"
        ]
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object lambda$lockAndRecordForManyKeysCommand$4(org.infinispan.commands.FlagAffectedCommand,java.util.Collection,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection,java.util.function.BiFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object remoteBackupOwnerWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleSingleKeyWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$BackupBuilder)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleTxWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,java.util.Map,java.util.function.BiFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object asyncInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object remotePrimaryManyKeysWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Set,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleRemoteManyKeysCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.function.Predicate,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object flushL1CachesAndInvokeNext(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object invokeNextWriteManyKeysInPrimary(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Set,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object syncLocalManyKeysWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$PrimaryOwnerClassifier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MergeResults,java.util.function.Supplier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object asyncLocalManyKeysWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$PrimaryOwnerClassifier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object remoteBackupManyKeysWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Set)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleRemoteManyKeysCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.function.Predicate,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object prefetchKeysIfNeededAndInvokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.AbstractTopologyAffectedCommand,java.util.Collection)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.util.concurrent.CompletionStage lambda$prefetchKeysIfNeededAndInvokeNext$2(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection,java.lang.Void)"
        ]
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.BaseBackupInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object finishCommit(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object lambda$visitCommitCommand$2(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.xsite.BaseBackupInterceptor:java.lang.Object processBackupResponse(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.remoting.transport.BackupResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.xsite.OptimisticBackupInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.interceptors.xsite.BaseBackupInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.xsite.OptimisticBackupInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object prepareHandler(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object wrapEntriesForPrepareAndApply(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object applyModificationsAndThen(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand,org.infinispan.commands.write.WriteCommand[],int,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)"
        ]
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object handleSingleKeyWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.NotificationInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.NotificationInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.ClearCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object commitSingleEntryOnReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.container.versioning.EntryVersion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$visitRemoveExpiredCommand$17(org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,java.lang.Object,org.infinispan.commands.write.RemoveExpiredCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.remote.GetKeysInGroupCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object handleMultipleKeysWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.locking.PessimisticLockingInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.NotificationInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWriteManyOnOrigin(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)"
        ]
    },
    "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.VersionedEntryWrappingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.GroupingInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.tx.CommitCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object handleDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Collection,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object performL1Lookup(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,boolean,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object performCommandWithL1WriteIfAble(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,boolean,boolean,boolean)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object verifyRemoteTransaction(org.infinispan.context.impl.RemoteTxInvocationContext,org.infinispan.commands.tx.AbstractTransactionBoundaryCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object lambda$visitLockControlCommand$5(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object lambda$handlePrepareCommand$0(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)"
        ]
    },
    "org.infinispan.interceptors.locking.AbstractTxLockingInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.read.GetAllCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderVersionedEntryWrappingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.AbstractTxLockingInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object lambda$new$1(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object lambda$nonTxLockAndInvokeNext$1(org.infinispan.interceptors.InvocationFinallyAction,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void handleSegmentsForWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.interceptors.distribution.CountDownCompletableFuture,org.infinispan.remoting.transport.Address,org.infinispan.commons.util.IntSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object handleWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.WriteManyCommandHelper)"
        ]
    },
    "org.infinispan.interceptors.totalorder.TotalOrderInterceptor:java.lang.Object visitSecondPhaseCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.AbstractTransactionBoundaryCommand,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.totalorder.TotalOrderInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object updateStoreStatistics(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.locking.AbstractTxLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object lambda$visitRemoveExpiredCommand$0(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand,java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object localPrepare(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.InvocationContextInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object handleLocalPrepareReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationExceptionFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.RetryingEntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.RetryingEntryWrappingInterceptor:java.lang.Object setSkipRemoteGetsAndInvokeNextForManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong findAny()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong findAny()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt findAny()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt findAny()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional findFirst()",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional findFirst()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.TerminalFunctions$CollectFunction:java.lang.Object apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()",
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.Iterator iterator()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:double[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:double[] toArray()",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double[] toArray()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble average()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble average()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble min()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble min()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceFunction:java.lang.Object apply(java.util.stream.Stream)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional min(java.util.Comparator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$MinFunction:java.lang.Object apply(java.util.stream.Stream)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional min(java.util.Comparator)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional min(java.util.Comparator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong findFirst()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong findFirst()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional findAny()",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.util.Optional findAny()",
            "org.infinispan.stream.impl.TerminalFunctions$FindAnyFunction:java.lang.Object apply(java.util.stream.Stream)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional findAny()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:boolean allMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$AllMatchFunction:java.lang.Boolean apply(java.util.stream.Stream)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:boolean allMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.IntermediateCacheStream:boolean allMatch(java.util.function.Predicate)",
            "org.infinispan.util.AbstractDelegatingCacheStream:boolean allMatch(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.Spliterator$OfLong spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.Spliterator$OfLong spliterator()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.Spliterator$OfLong spliterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional max(java.util.Comparator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$MaxFunction:java.lang.Object apply(java.util.stream.Stream)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional max(java.util.Comparator)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional max(java.util.Comparator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:boolean allMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean allMatch(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:boolean allMatch(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long count()",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:long count()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.Spliterator$OfInt spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.Spliterator$OfInt spliterator()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.Spliterator$OfInt spliterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt min()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt min()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong max()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong max()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble max()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble max()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:org.infinispan.commons.util.CloseableIterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Iterator iterator()",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt max()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt max()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:long sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long sum()",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:long sum()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:long count()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:long count()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:int[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:int[] toArray()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:int[] toArray()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:int sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:int sum()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:int sum()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.TerminalFunctions$ToArrayGeneratorFunction:java.lang.Object[] apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:long[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long[] toArray()",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:long[] toArray()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceCombinerFunction:java.lang.Object apply(java.util.stream.Stream)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalLong min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong min()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong min()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:boolean noneMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:boolean noneMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.IntermediateCacheStream:boolean noneMatch(java.util.function.Predicate)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:boolean noneMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.TerminalFunctions$NoneMatchFunction:java.lang.Boolean apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object collect(java.util.function.Supplier)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalDouble average()",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalDouble average()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:long count()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:long count()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt findFirst()",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt findFirst()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.TerminalFunctions$ReduceFunction:java.lang.Object apply(java.util.stream.Stream)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.util.Optional reduce(java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:boolean allMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:boolean allMatch(java.util.function.LongPredicate)",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean allMatch(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble findAny()",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble findAny()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleRemoteReadManyCommand$26(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadOnlyManyHelper:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.stream.impl.TerminalFunctions$ToArrayFunction:java.lang.Object[] apply(java.util.stream.Stream)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object[] toArray()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.OptionalDouble findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble findFirst()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble findFirst()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:double sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double sum()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:double sum()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()",
            "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:int size()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:int size()",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:long count()",
            "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:int size()",
            "org.infinispan.util.AbstractDelegatingCacheStream:long count()",
            "org.infinispan.stream.impl.IntermediateCacheStream:long count()",
            "org.infinispan.commands.read.SizeCommand:java.lang.Integer perform(org.infinispan.context.InvocationContext)",
            "org.infinispan.stream.impl.TerminalFunctions$CountFunction:java.lang.Long apply(java.util.stream.Stream)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:boolean anyMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateCacheStream:boolean anyMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.TerminalFunctions$AnyMatchFunction:java.lang.Boolean apply(java.util.stream.Stream)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:boolean anyMatch(java.util.function.Predicate)",
            "org.infinispan.util.AbstractDelegatingCacheStream:boolean anyMatch(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalDouble average()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalDouble average()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()",
            "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.Iterator iterator()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(java.util.stream.Collector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadOnlyManyHelper:void applyLocalResult(org.infinispan.interceptors.distribution.MergingCompletableFuture,java.lang.Object)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object collect(java.util.stream.Collector)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void lambda$visitReadOnlyManyCommand$23(org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.stream.impl.TerminalFunctions$CollectorFunction:java.lang.Object apply(java.util.stream.Stream)",
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object collect(java.util.stream.Collector)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object collect(java.util.stream.Collector)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.commons.api.BasicCache getCache(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.health.impl.HealthImpl:org.infinispan.health.impl.CacheHealthImpl lambda$getCacheHealth$0(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.Cache createCache(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.BasicCache createCache(java.lang.String,java.lang.String)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.Cache getOrCreateCache(java.lang.String,org.infinispan.configuration.cache.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.BasicCache getOrCreateCache(java.lang.String,org.infinispan.commons.configuration.BasicConfiguration)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.Cache getOrCreateCache(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.BasicCache getOrCreateCache(java.lang.String,java.lang.String)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache createCache(java.lang.String,org.infinispan.configuration.cache.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManager:void startCache(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.Cache createCache(java.lang.String,org.infinispan.configuration.cache.Configuration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.BasicCache createCache(java.lang.String,org.infinispan.commons.configuration.BasicConfiguration)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManager:org.infinispan.Cache getCache(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.health.impl.ClusterHealthImpl:org.infinispan.Cache lambda$getHealthStatus$0(java.lang.String)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateType$1:java.util.stream.BaseStream handleStream(org.infinispan.BaseCacheStream)"
        ]
    },
    "org.infinispan.stream.impl.DistributedCacheStream$CompletionListenerRehashIterator:java.lang.Object getNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:org.infinispan.commons.util.CloseableSpliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:org.infinispan.CacheStream getStream(boolean)"
        ]
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:org.infinispan.CacheStream getStream(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:org.infinispan.CacheStream parallelStream()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:org.infinispan.CacheStream stream()"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:org.infinispan.commons.util.CloseableSpliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableSpliterator spliterator()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:org.infinispan.CacheStream getStream(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:org.infinispan.CacheStream parallelStream()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:org.infinispan.CacheStream stream()"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:org.infinispan.commons.util.CloseableIterator innerIterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:org.infinispan.commons.util.CloseableIterator iterator()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:org.infinispan.commons.util.CloseableIterator innerIterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:org.infinispan.commons.util.CloseableSpliterator spliterator()"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TransactionAwareCloseableIterator:java.lang.Object getNextFromIterator()"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TransactionAwareCloseableIterator:java.lang.Object getNextFromIterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TransactionAwareCloseableIterator:boolean hasNext()",
            "org.infinispan.interceptors.impl.TxInterceptor$TransactionAwareCloseableIterator:java.lang.Object next()"
        ]
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object lambda$updateStatisticsReadWrite$12(long,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.marshall.exts.CollectionExternalizer:void writeObject(java.io.ObjectOutput,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.CollectionExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.distribution.MergingCompletableFuture:void moveListItemsToFuture(java.lang.Object,org.infinispan.interceptors.distribution.MergingCompletableFuture,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$LocalWriteManyHandler:void accept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void lambda$handleRemoteSegmentsForReadWriteManyCommand$6(org.infinispan.interceptors.distribution.MergingCompletableFuture,int,java.util.Map,java.lang.Throwable)",
            "org.infinispan.interceptors.distribution.MergingCompletableFuture:void lambda$moveListItemsToFuture$0(int,org.infinispan.interceptors.distribution.MergingCompletableFuture,java.lang.Object)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void lambda$handleWriteManyOnOrigin$28(org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.commands.write.WriteCommand,org.infinispan.remoting.transport.Address,int,org.infinispan.interceptors.distribution.WriteManyCommandHelper,java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.remoting.responses.ValidResponse,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:boolean hasNext()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator innerIterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:void <init>(org.infinispan.interceptors.impl.PrefetchInterceptor,org.infinispan.Cache,boolean,java.util.function.Supplier,java.util.function.Function)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:org.infinispan.commons.util.CloseableSpliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:java.util.Spliterator spliterator()",
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:java.util.stream.Stream lambda$supplier$6()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedKeySet:java.util.stream.Stream lambda$supplier$3()"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableIterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator iterator()",
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:boolean hasNext()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator innerIterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:void <init>(org.infinispan.interceptors.impl.PrefetchInterceptor,org.infinispan.Cache,boolean,java.util.function.Supplier,java.util.function.Function)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingKeySet:org.infinispan.commons.util.CloseableIterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:boolean hasNext()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator innerIterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingKeySet:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:void <init>(org.infinispan.interceptors.impl.PrefetchInterceptor,org.infinispan.Cache,boolean,java.util.function.Supplier,java.util.function.Function)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingKeySet:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:int size()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.StatsEnvelope:java.lang.Object unpackCollection(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingKeySet:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedDoubleCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateType$4:java.util.stream.BaseStream handleStream(org.infinispan.BaseCacheStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateCacheStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateType$2:java.util.stream.BaseStream handleStream(org.infinispan.BaseCacheStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateCacheStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.stream.impl.DistributedIntCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.DistributedLongCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateType$3:java.util.stream.BaseStream handleStream(org.infinispan.BaseCacheStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateCacheStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readNullableObject(org.infinispan.marshall.core.BytesObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object objectFromObjectInput(org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readArray(org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.BytesObjectInput:java.lang.Object readObject()"
        ]
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getRetrievals()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stats.impl.CacheContainerStatsImpl:long getTotalNumberOfEntries()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void lambda$visitGetAllCommand$19(org.infinispan.context.InvocationContext,java.util.List,org.infinispan.interceptors.impl.ClusteringInterceptor$ClusteredGetAllFuture,java.util.Map,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyHandler:void accept(java.util.Map,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyHandler:void accept(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$AllMatchFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$ToArrayFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$MinFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$ReduceFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$CountFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$ToArrayGeneratorFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$MaxFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$FindAnyFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceCombinerFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object lambda$handleLocallyAvailableKeys$5(org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.InvocationFinallyAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$CollectorFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$AnyMatchFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$NoneMatchFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$IdentityReduceFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.stream.impl.TerminalFunctions$CollectFunction:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.SegmentRetryingOperation:java.lang.Object innerPerformOperation(java.util.stream.BaseStream)",
            "org.infinispan.stream.impl.termop.SingleRunOperation:java.lang.Object performOperation()"
        ]
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.ReadWriteKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteKeyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyKeyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.write.ComputeIfAbsentCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.write.ComputeCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.EvictCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleNonTxWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteManyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.write.InvalidateCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyManyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.write.InvalidateL1Command:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.write.PutMapCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.RetryingEntryWrappingInterceptor:java.lang.Object handleDataWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.BiasedEntryWrappingInterceptor:java.lang.Object handleDataWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.InvocationExceptionFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.RetryingEntryWrappingInterceptor:java.lang.Object handleManyWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.BiasedEntryWrappingInterceptor:java.lang.Object handleManyWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.InvocationExceptionFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TransactionalStoreInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.NonTransactionalLockingInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.Collection,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleLocalOnlyReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)"
        ]
    },
    "org.infinispan.interceptors.xsite.OptimisticBackupInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PassivationWriterInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleDefault(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.AbstractTopologyAffectedCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleTopologyAffectedCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.remoting.transport.Address)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object handleDefault(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.BatchingInterceptor:java.lang.Object handleDefault(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.BatchingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.BatchingInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.BatchingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadOnlyManyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.BatchingInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderVersionedDistributionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TransactionalStoreInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object lambda$retrieveRemoteValues$3(java.util.List,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitSizeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.SizeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadOnlyKeyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object handleDefault(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object handleSingleWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitDistributedExecuteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.DistributedExecuteCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitSizeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.SizeCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitUnknownCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleLocalOnlyReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object handleFunctionalReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.TopologyAffectedCommand,org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyCommandHelper)"
        ]
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object performCommandWithL1WriteIfAble(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand,boolean)",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.TransactionalStoreInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.NonTransactionalLockingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderDistributionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleRemotelyPrefetchedEntry(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object handleWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)"
        ]
    },
    "org.infinispan.interceptors.locking.NonTransactionalLockingInterceptor:java.lang.Object handleReadManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object handleDefault(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object lambda$new$0(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object remotePrepare(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)"
        ]
    },
    "org.infinispan.interceptors.xsite.OptimisticBackupInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.BaseBackupInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.IsMarshallableInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.OptimisticLockingInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.DataCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitNonTxDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.interceptors.locking.NonTransactionalLockingInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitManyDataCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.totalorder.TotalOrderVersionedDistributionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object handleWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)"
        ]
    },
    "org.infinispan.interceptors.locking.AbstractTxLockingInterceptor:java.lang.Object lambda$new$0(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderDistributionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.statetransfer.StateTransferInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object handleSecondPhaseCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.TransactionBoundaryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitApplyDeltaCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ApplyDeltaCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleRemoteManyKeysCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.util.function.Predicate,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)",
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object asyncLocalManyKeysWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$PrimaryOwnerClassifier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.TriangleDistributionInterceptor:java.lang.Object handleLocalManyKeysCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$SubsetCommandCopy,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MergeResults,java.util.function.Supplier,org.infinispan.interceptors.distribution.TriangleDistributionInterceptor$MultiKeyBackupBuilder)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.util.concurrent.CompletionStage lambda$prefetchKeysIfNeededAndInvokeNext$2(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.util.Collection,java.lang.Void)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object lambda$visitCommitCommand$2(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.write.ClearCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.remote.GetKeysInGroupCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.read.GetCacheEntryCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.read.GetKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.xsite.NonTransactionalBackupInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.tx.CommitCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object lambda$visitLockControlCommand$5(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object lambda$handlePrepareCommand$0(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.read.GetAllCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.totalorder.TotalOrderInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.totalorder.TotalOrderStateTransferInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.InvocationExceptionFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong findAny()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong findAny()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt findAny()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt findAny()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional findFirst()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional findFirst()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional findFirst()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.Iterator iterator()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.Iterator iterator()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.PrimitiveIterator$OfLong iterator()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:int reduce(int,java.util.function.IntBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:double[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double[] toArray()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double[] toArray()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble average()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble average()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble min()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble min()"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean allMatch(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional min(java.util.Comparator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional min(java.util.Comparator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional min(java.util.Comparator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional min(java.util.Comparator)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional min(java.util.Comparator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong findFirst()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong findFirst()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional findAny()",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.util.Optional findAny()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional findAny()"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:java.util.Optional findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional findAny()"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:boolean allMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:boolean allMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:boolean allMatch(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:boolean allMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:boolean allMatch(java.util.function.Predicate)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:boolean allMatch(java.util.function.Predicate)",
            "org.infinispan.util.AbstractDelegatingCacheStream:boolean allMatch(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalLongCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.Spliterator$OfLong spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.Spliterator$OfLong spliterator()",
            "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.Spliterator$OfLong spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.Spliterator$OfLong spliterator()",
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional max(java.util.Comparator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional max(java.util.Comparator)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional max(java.util.Comparator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional max(java.util.Comparator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional max(java.util.Comparator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean allMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean allMatch(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:boolean allMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean allMatch(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong reduce(java.util.function.LongBinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long count()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long count()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.Spliterator$OfInt spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.Spliterator$OfInt spliterator()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.Spliterator$OfInt spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.Spliterator$OfInt spliterator()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt min()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt min()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.Spliterator$OfDouble spliterator()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong max()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong max()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble max()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble max()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean anyMatch(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt max()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt max()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt max()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:long sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long sum()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:long sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long sum()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:long count()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:long count()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean noneMatch(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:int[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:int[] toArray()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:int[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:int[] toArray()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:int sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:int sum()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:int sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:int sum()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object[] toArray(java.util.function.IntFunction)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.IntSummaryStatistics summaryStatistics()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:long[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long[] toArray()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:long[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long[] toArray()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalLong min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong min()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong min()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalLong min()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.lang.Object collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.LongSummaryStatistics summaryStatistics()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean noneMatch(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:boolean noneMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:boolean noneMatch(java.util.function.Predicate)",
            "org.infinispan.util.AbstractDelegatingCacheStream:boolean noneMatch(java.util.function.Predicate)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:boolean noneMatch(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:boolean noneMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:boolean noneMatch(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:boolean noneMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Spliterator spliterator()",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Spliterator spliterator()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object collect(java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble reduce(java.util.function.DoubleBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalDouble average()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.OptionalDouble average()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:boolean anyMatch(java.util.function.DoublePredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:long count()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:long count()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt findFirst()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt findFirst()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.DoubleSummaryStatistics summaryStatistics()"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:java.util.Optional reduce(java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.util.Optional reduce(java.util.function.BinaryOperator)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Optional reduce(java.util.function.BinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:boolean allMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean allMatch(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean allMatch(java.util.function.LongPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:boolean allMatch(java.util.function.LongPredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble findAny()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble findAny()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble findAny()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalInt reduce(java.util.function.IntBinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingLongCacheStream:long reduce(long,java.util.function.LongBinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object[] toArray()",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object[] toArray()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean noneMatch(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble findFirst()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.OptionalDouble findFirst()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.OptionalDouble findFirst()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double sum()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:double sum()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double sum()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:double reduce(double,java.util.function.DoubleBinaryOperator)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()",
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.PrimitiveIterator$OfInt iterator()",
            "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalIntCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:int size()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:int size()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.LocalCacheStream:long count()",
            "org.infinispan.functional.impl.Traversables$StreamTraversable:long count()",
            "org.infinispan.util.AbstractDelegatingCacheStream:long count()",
            "org.infinispan.commands.read.SizeCommand:java.lang.Integer perform(org.infinispan.context.InvocationContext)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:long count()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:long count()"
        ]
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:boolean anyMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:boolean anyMatch(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:boolean anyMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:boolean anyMatch(java.util.function.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.Traversables$StreamTraversable:boolean anyMatch(java.util.function.Predicate)",
            "org.infinispan.stream.impl.local.LocalCacheStream:boolean anyMatch(java.util.function.Predicate)",
            "org.infinispan.util.AbstractDelegatingCacheStream:boolean anyMatch(java.util.function.Predicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:boolean anyMatch(java.util.function.IntPredicate)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalDouble average()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalDouble average()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.OptionalDouble average()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()",
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.stream.impl.local.LocalDoubleCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.PrimitiveIterator$OfDouble iterator()",
            "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object collect(java.util.stream.Collector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateCacheStream:java.lang.Object collect(java.util.stream.Collector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object collect(java.util.stream.Collector)"
        ]
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object collect(java.util.stream.Collector)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.Traversables$StreamTraversable:java.lang.Object collect(java.util.stream.Collector)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(java.util.function.Supplier)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(org.infinispan.util.function.SerializableSupplier)",
            "org.infinispan.stream.impl.local.LocalCacheStream:java.lang.Object collect(java.util.stream.Collector)",
            "org.infinispan.util.AbstractDelegatingCacheStream:java.lang.Object collect(java.util.stream.Collector)"
        ]
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.BasicCache createCache(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.BasicCache getOrCreateCache(java.lang.String,org.infinispan.commons.configuration.BasicConfiguration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.BasicCache getOrCreateCache(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.manager.DefaultCacheManagerAdmin:org.infinispan.commons.api.BasicCache createCache(java.lang.String,org.infinispan.commons.configuration.BasicConfiguration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.health.impl.ClusterHealthImpl:org.infinispan.Cache lambda$getHealthStatus$0(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateType$1:java.util.stream.BaseStream handleStream(org.infinispan.BaseCacheStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.IntermediateCacheStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:org.infinispan.CacheStream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:java.util.stream.Stream parallelStream()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:org.infinispan.CacheStream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:java.util.stream.Stream stream()",
            "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:int size()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:org.infinispan.CacheStream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:java.util.stream.Stream parallelStream()"
        ]
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:org.infinispan.CacheStream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:int size()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:java.util.stream.Stream stream()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator lambda$iterator$0()",
            "org.infinispan.stream.impl.AbstractCacheStream:java.util.stream.Stream lambda$supplierForSegments$0(org.infinispan.commons.util.IntSet,java.util.Set)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:org.infinispan.commons.util.CloseableIterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:java.util.Iterator iterator()",
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:boolean hasNext()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator innerIterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:void <init>(org.infinispan.interceptors.impl.PrefetchInterceptor,org.infinispan.Cache,boolean,java.util.function.Supplier,java.util.function.Function)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:org.infinispan.commons.util.CloseableIterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableIterator iterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:boolean hasNext()",
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:org.infinispan.commons.util.CloseableIterator innerIterator()",
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingIterator:void <init>(org.infinispan.interceptors.impl.PrefetchInterceptor,org.infinispan.Cache,boolean,java.util.function.Supplier,java.util.function.Function)",
            "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TransactionAwareCloseableIterator:boolean hasNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.spliterators.IteratorAsSpliterator:java.util.Spliterator trySplit()",
            "org.infinispan.interceptors.impl.TxInterceptor$TransactionAwareCloseableIterator:java.lang.Object getNextFromIterator()",
            "org.infinispan.stream.impl.spliterators.IteratorAsSpliterator:boolean tryAdvance(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TransactionAwareCloseableIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.spliterators.IteratorAsSpliterator:java.util.Spliterator trySplit()",
            "org.infinispan.interceptors.impl.TxInterceptor$TransactionAwareCloseableIterator:java.lang.Object getNextFromIterator()",
            "org.infinispan.stream.impl.spliterators.IteratorAsSpliterator:boolean tryAdvance(java.util.function.Consumer)"
        ]
    },
    "org.infinispan.marshall.exts.CollectionExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor$LocalWriteManyHandler:void accept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.InvocationFinallyAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.MergingCompletableFuture:void lambda$moveListItemsToFuture$0(int,org.infinispan.interceptors.distribution.MergingCompletableFuture,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void lambda$createLocalInvocationHandler$8(org.infinispan.interceptors.distribution.CountDownCompletableFuture,java.util.function.BiConsumer,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,org.infinispan.interceptors.distribution.WriteManyCommandHelper,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:void lambda$handleWriteManyOnOrigin$28(org.infinispan.interceptors.distribution.MergingCompletableFuture,org.infinispan.commands.write.WriteCommand,org.infinispan.remoting.transport.Address,int,org.infinispan.interceptors.distribution.WriteManyCommandHelper,java.lang.Object,org.infinispan.context.InvocationContext,org.infinispan.remoting.responses.ValidResponse,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheMgmtInterceptor:java.lang.Object lambda$updateStatisticsReadWrite$12(long,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.marshall.exts.CollectionExternalizer:void writeObject(java.io.ObjectOutput,java.util.Collection)",
            "org.infinispan.interceptors.distribution.MergingCompletableFuture:void moveListItemsToFuture(java.lang.Object,org.infinispan.interceptors.distribution.MergingCompletableFuture,int)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$AbstractLoaderSet:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedEntrySet:java.util.stream.Stream lambda$supplier$6()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.EntryStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor$WrappedKeySet:java.util.stream.Stream lambda$supplier$3()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.KeyStreamSupplier:java.util.stream.Stream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:org.infinispan.commons.util.CloseableSpliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Spliterator spliterator()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:org.infinispan.CacheStream getStream(boolean)",
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableSpliterator spliterator()"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingKeySet:org.infinispan.commons.util.CloseableSpliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingKeySet:java.util.Spliterator spliterator()",
            "org.infinispan.util.AbstractDelegatingCloseableIteratorCollection:org.infinispan.commons.util.CloseableSpliterator spliterator()",
            "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:org.infinispan.CacheStream getStream(boolean)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingKeySet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateCacheStreamSupplier:java.util.stream.BaseStream buildStream(org.infinispan.commons.util.IntSet,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.local.AbstractLocalCacheStream:java.util.stream.BaseStream createStream()"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object objectFromObjectInput(org.infinispan.marshall.core.BytesObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object objectFromByteBuffer(byte[],int,int)",
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object objectFromByteBuffer(byte[])"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readArray(org.infinispan.marshall.core.BytesObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readNonNullableObject(int,org.infinispan.marshall.core.BytesObjectInput)"
        ]
    },
    "org.infinispan.marshall.core.BytesObjectInput:java.lang.Object readObject()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizer:org.infinispan.atomic.impl.AtomicKeySetImpl readObject(java.io.ObjectInput)",
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Remove:org.infinispan.atomic.impl.AtomicMapProxyImpl$Remove readFrom(java.io.ObjectInput)",
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Class getOrReadClass(org.infinispan.marshall.core.BytesObjectInput,org.infinispan.commons.marshall.AdvancedExternalizer)",
            "org.infinispan.functional.impl.StatsEnvelope$Externalizer:org.infinispan.functional.impl.StatsEnvelope readObject(java.io.ObjectInput)",
            "org.infinispan.stream.impl.termop.TerminalOperationExternalizer:org.infinispan.stream.impl.termop.BaseTerminalOperation readObject(java.io.ObjectInput)",
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveValue:org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveValue readFrom(java.io.ObjectInput)",
            "org.infinispan.remoting.responses.BiasRevocationResponse$Externalizer:org.infinispan.remoting.responses.BiasRevocationResponse readObject(java.io.ObjectInput)",
            "org.infinispan.commands.write.ExceptionAckCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.stream.impl.intops.IntermediateOperationExternalizer:org.infinispan.stream.impl.intops.IntermediateOperation readObject(java.io.ObjectInput)",
            "org.infinispan.encoding.DataConversion:org.infinispan.encoding.DataConversion readFrom(java.io.ObjectInput)",
            "org.infinispan.stream.StreamMarshalling$StreamMarshallingExternalizer:java.lang.Object readObject(java.io.ObjectInput)",
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Remove:org.infinispan.atomic.impl.AtomicKeySetImpl$Remove readFrom(java.io.ObjectInput)",
            "org.infinispan.compat.BiFunctionMapper$Externalizer:org.infinispan.compat.BiFunctionMapper readObject(java.io.ObjectInput)",
            "org.infinispan.interceptors.distribution.VersionedResults$Externalizer:org.infinispan.interceptors.distribution.VersionedResults readObject(java.io.ObjectInput)",
            "org.infinispan.functional.impl.EntryViews$NoValueReadOnlyViewExternalizer:org.infinispan.functional.impl.EntryViews$NoValueReadOnlyView readObject(java.io.ObjectInput)",
            "org.infinispan.marshall.exts.CollectionExternalizer:java.util.Collection readObject(java.io.ObjectInput)",
            "org.infinispan.container.entries.RemoteMetadata$Externalizer:org.infinispan.container.entries.RemoteMetadata readObject(java.io.ObjectInput)",
            "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter$Externalizer:org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter readObject(java.io.ObjectInput)",
            "org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotViewExternalizer:org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotView readObject(java.io.ObjectInput)",
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readAnnotated(org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.compat.FunctionMapper$Externalizer:org.infinispan.compat.FunctionMapper readObject(java.io.ObjectInput)",
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readArray(org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.interceptors.distribution.VersionedResult$Externalizer:org.infinispan.interceptors.distribution.VersionedResult readObject(java.io.ObjectInput)",
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Put:org.infinispan.atomic.impl.AtomicMapProxyImpl$Put readFrom(java.io.ObjectInput)",
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveCond:org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveCond readFrom(java.io.ObjectInput)",
            "org.infinispan.marshall.core.GlobalMarshaller:org.infinispan.commons.marshall.Externalizer readExternalizer(org.infinispan.marshall.core.BytesObjectInput,int)",
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Add:org.infinispan.atomic.impl.AtomicKeySetImpl$Add readFrom(java.io.ObjectInput)",
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Key:org.infinispan.atomic.impl.AtomicKeySetImpl$Key readFrom(java.io.ObjectInput)",
            "org.infinispan.commands.functional.functions.MergeFunction$Externalizer:org.infinispan.commands.functional.functions.MergeFunction readObject(java.io.ObjectInput)",
            "org.infinispan.filter.CacheFilters$CacheFiltersExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor$ReadManyHandler:void accept(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.write.EvictCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object lambda$handleWriteCommand$7(org.infinispan.distribution.DistributionInfo,org.infinispan.container.entries.RepeatableReadEntry,org.infinispan.context.InvocationContext,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.BiasedEntryWrappingInterceptor:java.lang.Object handleDataWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.impl.BiasedEntryWrappingInterceptor:java.lang.Object handleManyWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.ReadOnlyManyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.functional.ReadOnlyKeyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadOnlyManyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.Visitor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand)",
            "org.infinispan.commands.write.RemoveCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object invokeRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand,org.infinispan.distribution.DistributionInfo)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.PutMapCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitInvalidateL1Command(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateL1Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.InvalidateL1Command:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object handleSingleWrite(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)",
            "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.tx.CommitCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)",
            "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.read.EntrySetCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)",
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)",
            "org.infinispan.commands.write.ClearCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitDistributedExecuteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.DistributedExecuteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyManyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.remote.GetKeysInGroupCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.remote.GetKeysInGroupCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.EvictCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.EvictCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteKeyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.EntrySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.commands.tx.RollbackCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteManyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitSizeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.SizeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitSizeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.SizeCommand)",
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitSizeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.SizeCommand)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadOnlyKeyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitUnknownCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.ReplaceCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)",
            "org.infinispan.interceptors.impl.VersionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.read.GetCacheEntryCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TxInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)",
            "org.infinispan.interceptors.distribution.DistributionBulkInterceptor:java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.KeySetCommand)",
            "org.infinispan.commands.read.KeySetCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetAllCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.read.GetAllCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.PutKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.ComputeCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)",
            "org.infinispan.commands.write.InvalidateCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyKeyCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.read.GetKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.tx.PrepareCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)",
            "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.write.ComputeIfAbsentCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.control.LockControlCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.control.LockControlCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.AbstractDataCommand,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)",
            "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1TxInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitWriteOnlyKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitWriteOnlyKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.EntryWrappingInterceptor$EntryWrappingVisitor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.AbstractLockingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.locking.NonTransactionalLockingInterceptor:java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitWriteOnlyManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitWriteOnlyManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.WriteOnlyManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutMapCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadWriteManyEntriesCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyEntriesCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor:java.lang.Object visitReadWriteManyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteManyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.totalorder.TotalOrderVersionedDistributionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderDistributionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.TxDistributionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.totalorder.TotalOrderDistributionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)",
            "org.infinispan.interceptors.totalorder.TotalOrderVersionedDistributionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)"
        ]
    },
    "org.infinispan.commands.read.GetCacheEntryCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.commands.read.GetKeyValueCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateLongCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingLongCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.util.AbstractDelegatingCacheStream:java.util.Iterator iterator()"
        ]
    },
    "org.infinispan.util.AbstractDelegatingIntCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateIntCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.util.AbstractDelegatingDoubleCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.IntermediateDoubleCacheStream:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingEntryCacheSet:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:java.util.stream.Stream parallelStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxKeyCacheSet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TxInterceptor$TxEntryCacheSet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.spliterators.IteratorAsSpliterator:java.util.Spliterator trySplit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.stream.impl.spliterators.IteratorAsSpliterator:boolean tryAdvance(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeNonNullableObject(java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternalClean(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternalClean(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeNonNullableObject(java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)"
        ]
    },
    "org.infinispan.interceptors.distribution.NonTxDistributionInterceptor:void lambda$createLocalInvocationHandler$8(org.infinispan.interceptors.distribution.CountDownCompletableFuture,java.util.function.BiConsumer,org.infinispan.distribution.ch.ConsistentHash,org.infinispan.commons.util.IntSet,org.infinispan.interceptors.distribution.WriteManyCommandHelper,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.InvocationFinallyAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingEntrySet:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.PrefetchInterceptor$BackingKeySet:java.util.Spliterator spliterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object objectFromByteBuffer(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object objectFromInputStream(java.io.InputStream)",
            "org.infinispan.marshall.core.MarshalledEntryImpl:java.lang.Object unmarshall(org.infinispan.commons.io.ByteBuffer)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object objectFromByteBuffer(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizer:org.infinispan.atomic.impl.AtomicKeySetImpl readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$Remove:org.infinispan.atomic.impl.AtomicMapProxyImpl$Remove readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Class getOrReadClass(org.infinispan.marshall.core.BytesObjectInput,org.infinispan.commons.marshall.AdvancedExternalizer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readArray(org.infinispan.marshall.core.BytesObjectInput)"
        ]
    },
    "org.infinispan.functional.impl.StatsEnvelope$Externalizer:org.infinispan.functional.impl.StatsEnvelope readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.StatsEnvelope$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.stream.impl.termop.TerminalOperationExternalizer:org.infinispan.stream.impl.termop.BaseTerminalOperation readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.TerminalOperationExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveValue:org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveValue readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.remoting.responses.BiasRevocationResponse$Externalizer:org.infinispan.remoting.responses.BiasRevocationResponse readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.remoting.responses.BiasRevocationResponse$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.commands.write.ExceptionAckCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.TriangleAckExternalizer:org.infinispan.commands.write.ExceptionAckCommand exceptionAckCommand(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.stream.impl.intops.IntermediateOperationExternalizer:org.infinispan.stream.impl.intops.IntermediateOperation readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.intops.IntermediateOperationExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.encoding.DataConversion:org.infinispan.encoding.DataConversion readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.ReadWriteManyCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.cache.impl.EncoderKeyMapper$Externalizer:org.infinispan.cache.impl.EncoderKeyMapper readObject(java.io.ObjectInput)",
            "org.infinispan.compat.BiFunctionMapper$Externalizer:org.infinispan.compat.BiFunctionMapper readObject(java.io.ObjectInput)",
            "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.commands.functional.ReadOnlyManyCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.commands.triangle.FunctionalBackupWriteCommand:void readFunctionAndParams(java.io.ObjectInput)",
            "org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable$Externalizer:org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable readObject(java.io.ObjectInput)",
            "org.infinispan.commands.functional.WriteOnlyKeyCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.commands.functional.ReadOnlyKeyCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.commands.functional.Mutations:org.infinispan.commands.functional.Mutation readFrom(java.io.ObjectInput)",
            "org.infinispan.compat.FunctionMapper$Externalizer:org.infinispan.compat.FunctionMapper readObject(java.io.ObjectInput)",
            "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.encoding.DataConversion$Externalizer:org.infinispan.encoding.DataConversion readObject(java.io.ObjectInput)",
            "org.infinispan.cache.impl.EncoderValueMapper$Externalizer:org.infinispan.cache.impl.EncoderValueMapper readObject(java.io.ObjectInput)",
            "org.infinispan.commands.functional.ReadWriteKeyCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.commands.functional.WriteOnlyManyCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.cache.impl.EncoderEntryMapper$Externalizer:org.infinispan.cache.impl.EncoderEntryMapper readObject(java.io.ObjectInput)",
            "org.infinispan.commands.functional.ReadWriteKeyValueCommand:void readFrom(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.stream.StreamMarshalling$StreamMarshallingExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Remove:org.infinispan.atomic.impl.AtomicKeySetImpl$Remove readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizable readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.compat.BiFunctionMapper$Externalizer:org.infinispan.compat.BiFunctionMapper readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.compat.BiFunctionMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.interceptors.distribution.VersionedResults$Externalizer:org.infinispan.interceptors.distribution.VersionedResults readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.VersionedResults$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.functional.impl.EntryViews$NoValueReadOnlyViewExternalizer:org.infinispan.functional.impl.EntryViews$NoValueReadOnlyView readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.EntryViews$NoValueReadOnlyViewExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.marshall.exts.CollectionExternalizer:java.util.Collection readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.CollectionExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.container.entries.RemoteMetadata$Externalizer:org.infinispan.container.entries.RemoteMetadata readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.container.entries.RemoteMetadata$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter$Externalizer:org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotViewExternalizer:org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotView readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotViewExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readAnnotated(org.infinispan.marshall.core.BytesObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readNonNullableObject(int,org.infinispan.marshall.core.BytesObjectInput)"
        ]
    },
    "org.infinispan.compat.FunctionMapper$Externalizer:org.infinispan.compat.FunctionMapper readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.compat.FunctionMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.interceptors.distribution.VersionedResult$Externalizer:org.infinispan.interceptors.distribution.VersionedResult readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.VersionedResult$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$Put:org.infinispan.atomic.impl.AtomicMapProxyImpl$Put readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveCond:org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveCond readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:org.infinispan.commons.marshall.Externalizer readExternalizer(org.infinispan.marshall.core.BytesObjectInput,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readArray(org.infinispan.marshall.core.BytesObjectInput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Add:org.infinispan.atomic.impl.AtomicKeySetImpl$Add readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizable readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Key:org.infinispan.atomic.impl.AtomicKeySetImpl$Key readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizable readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.commands.functional.functions.MergeFunction$Externalizer:org.infinispan.commands.functional.functions.MergeFunction readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.functions.MergeFunction$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.filter.CacheFilters$CacheFiltersExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object invokeRemoveExpiredCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveExpiredCommand,org.infinispan.distribution.DistributionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object lambda$visitRemoveExpiredCommand$11(org.infinispan.commands.write.RemoveExpiredCommand,java.lang.Object,org.infinispan.distribution.LocalizedCacheTopology,org.infinispan.distribution.DistributionInfo,org.infinispan.context.InvocationContext,int,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.RemoveCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitComputeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitComputeIfAbsentCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ComputeIfAbsentCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.PutKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.partitionhandling.impl.PartitionHandlingInterceptor:java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.functional.ReadWriteKeyCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.CommitCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.read.EntrySetCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ClearCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitRollbackCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.RollbackCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.tx.RollbackCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheLoaderInterceptor:java.lang.Object visitSizeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.SizeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.BaseDistributionInterceptor:java.lang.Object visitSizeCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.SizeCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.VersionInterceptor:java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.ReplaceCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.read.KeySetCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.write.InvalidateCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.TransactionalExceptionEvictionInterceptor:java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext,org.infinispan.commands.tx.PrepareCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.control.LockControlCommand:java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext,org.infinispan.commands.Visitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndFinally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndHandle(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationFinallyFunction)",
            "org.infinispan.interceptors.distribution.ScatteredDistributionInterceptor:java.lang.Object handleWritePrimaryResponse(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.DDAsyncInterceptor:java.lang.Object visitCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextAndExceptionally(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationExceptionFunction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNext(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand)"
        ]
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetKeyValueCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.distribution.L1NonTxInterceptor:java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext,org.infinispan.commands.read.GetCacheEntryCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void writeNonNullableObject(java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeNullableObject(java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void writeExternalClean(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void lambda$findWriter$1(org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void writeInternalClean(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void lambda$findWriter$0(org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object objectFromInputStream(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:java.lang.Object unmarshall(org.infinispan.commons.io.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.metadata.InternalMetadata getMetadata()",
            "org.infinispan.marshall.core.MarshalledEntryImpl:java.lang.Object getKey()",
            "org.infinispan.marshall.core.MarshalledEntryImpl:java.lang.String toString()",
            "org.infinispan.marshall.core.MarshalledEntryImpl:java.lang.Object getValue()"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.functional.impl.StatsEnvelope$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.stream.impl.termop.TerminalOperationExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.remoting.responses.BiasRevocationResponse$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.marshall.exts.TriangleAckExternalizer:org.infinispan.commands.write.ExceptionAckCommand exceptionAckCommand(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.TriangleAckExternalizer:org.infinispan.commands.remote.CacheRpcCommand readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.stream.impl.intops.IntermediateOperationExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteManyCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.cache.impl.EncoderKeyMapper$Externalizer:org.infinispan.cache.impl.EncoderKeyMapper readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.cache.impl.EncoderKeyMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.commands.functional.ReadOnlyManyCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyManyCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.commands.triangle.FunctionalBackupWriteCommand:void readFunctionAndParams(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.triangle.MultiEntriesFunctionalBackupWriteCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.commands.triangle.MultiKeyFunctionalBackupWriteCommand:void readFrom(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable$Externalizer:org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyKeyCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.commands.functional.ReadOnlyKeyCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void readFrom(java.io.ObjectInput)",
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.commands.functional.Mutations:org.infinispan.commands.functional.Mutation readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyManyCommand:void readFrom(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.encoding.DataConversion$Externalizer:org.infinispan.encoding.DataConversion readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.encoding.DataConversion$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.cache.impl.EncoderValueMapper$Externalizer:org.infinispan.cache.impl.EncoderValueMapper readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.cache.impl.EncoderValueMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteKeyCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyManyCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.cache.impl.EncoderEntryMapper$Externalizer:org.infinispan.cache.impl.EncoderEntryMapper readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.cache.impl.EncoderEntryMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteKeyValueCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizable readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.compat.BiFunctionMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.interceptors.distribution.VersionedResults$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.functional.impl.EntryViews$NoValueReadOnlyViewExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.marshall.exts.CollectionExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.container.entries.RemoteMetadata$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotViewExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.compat.FunctionMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.interceptors.distribution.VersionedResult$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.commands.functional.functions.MergeFunction$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void writeNullableObject(java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.BytesObjectOutput:void writeObject(java.lang.Object)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeArray(java.lang.Class,java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:org.infinispan.marshall.core.BytesObjectOutput writeObjectOutput(java.lang.Object,int)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void lambda$findWriter$1(org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void lambda$findWriter$0(org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.metadata.InternalMetadata getMetadata()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:java.lang.Object getKey()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:java.lang.Object getValue()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:void storeEntry(org.infinispan.context.InvocationContext,java.lang.Object,org.infinispan.commands.FlagAffectedCommand)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.marshall.exts.TriangleAckExternalizer:org.infinispan.commands.remote.CacheRpcCommand readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.TriangleAckExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:org.infinispan.commands.ReplicableCommand readObject(java.io.ObjectInput)",
            "org.infinispan.marshall.exts.CacheRpcCommandExternalizer:org.infinispan.commands.remote.CacheRpcCommand readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.cache.impl.EncoderKeyMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.commands.functional.TxReadOnlyManyCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.commands.triangle.MultiEntriesFunctionalBackupWriteCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.commands.triangle.MultiKeyFunctionalBackupWriteCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void readFrom(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:void readCommandParameters(java.io.ObjectInput,org.infinispan.commands.ReplicableCommand)"
        ]
    },
    "org.infinispan.encoding.DataConversion$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.cache.impl.EncoderValueMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.cache.impl.EncoderEntryMapper$Externalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.marshall.core.BytesObjectOutput:void writeObject(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Add:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Put:void writeParams(java.io.ObjectOutput)",
            "org.infinispan.marshall.core.StreamBytesObjectOutput:void writeObject(java.lang.Object)",
            "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter)",
            "org.infinispan.functional.impl.StatsEnvelope$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.functional.impl.StatsEnvelope)",
            "org.infinispan.encoding.DataConversion:void writeTo(java.io.ObjectOutput,org.infinispan.encoding.DataConversion)",
            "org.infinispan.marshall.exts.CollectionExternalizer:void writeObject(java.io.ObjectOutput,java.util.Collection)",
            "org.infinispan.compat.BiFunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.compat.BiFunctionMapper)",
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Key:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.remoting.responses.BiasRevocationResponse$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.remoting.responses.BiasRevocationResponse)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeFlagsWithExternalizer(org.infinispan.marshall.core.BytesObjectOutput,java.lang.Class,boolean,org.infinispan.commons.marshall.AdvancedExternalizer,int,int)",
            "org.infinispan.stream.StreamMarshalling$StreamMarshallingExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeAnnotated(java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput,org.infinispan.commons.marshall.Externalizer)",
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicKeySetImpl)",
            "org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotViewExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotView)",
            "org.infinispan.commands.functional.functions.MergeFunction$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.commands.functional.functions.MergeFunction)",
            "org.infinispan.stream.impl.termop.TerminalOperationExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.stream.impl.termop.BaseTerminalOperation)",
            "org.infinispan.container.entries.RemoteMetadata$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.container.entries.RemoteMetadata)",
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveValue:void writeParams(java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeArray(java.lang.Class,java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)",
            "org.infinispan.commands.write.ExceptionAckCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.stream.impl.intops.IntermediateOperationExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.stream.impl.intops.IntermediateOperation)",
            "org.infinispan.compat.FunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.compat.FunctionMapper)",
            "org.infinispan.interceptors.distribution.VersionedResult$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.interceptors.distribution.VersionedResult)",
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Remove:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.interceptors.distribution.VersionedResults$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.interceptors.distribution.VersionedResults)",
            "org.infinispan.filter.CacheFilters$CacheFiltersExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)",
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveCond:void writeParams(java.io.ObjectOutput)",
            "org.infinispan.functional.impl.EntryViews$NoValueReadOnlyViewExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.functional.impl.EntryViews$NoValueReadOnlyView)",
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Remove:void writeParams(java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void writeArray(java.lang.Class,java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeNonNullableObject(java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:org.infinispan.marshall.core.BytesObjectOutput writeObjectOutput(java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:byte[] objectToByteBuffer(java.lang.Object,int)",
            "org.infinispan.marshall.core.GlobalMarshaller:org.infinispan.marshall.core.BytesObjectOutput writeObjectOutput(java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:void storeEntry(org.infinispan.context.InvocationContext,java.lang.Object,org.infinispan.commands.FlagAffectedCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:void storeAndUpdateStats(org.infinispan.context.InvocationContext,java.lang.Object,org.infinispan.commands.write.WriteCommand)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitWriteCommand$9(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object lambda$visitComputeIfAbsentCommand$6(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object handleManyWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object lambda$visitReplaceCommand$4(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitComputeCommand$3(org.infinispan.commands.write.ComputeCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitReplaceCommand$2(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitPutKeyValueCommand$1(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object lambda$visitPutKeyValueCommand$0(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object lambda$visitComputeCommand$5(org.infinispan.commands.write.ComputeCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:void lambda$handleManyWriteReturn$5(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitWriteManyCommand$10(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitComputeIfAbsentCommand$4(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.marshall.exts.TriangleAckExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:java.lang.Object readWithExternalizer(int,org.infinispan.marshall.core.ClassToExternalizerMap$IdToExternalizerMap,org.infinispan.marshall.core.BytesObjectInput)",
            "org.infinispan.marshall.core.JBossMarshaller$1:java.lang.Object readObject(org.jboss.marshalling.Unmarshaller)"
        ]
    },
    "org.infinispan.marshall.exts.ReplicableCommandExternalizer:org.infinispan.commands.ReplicableCommand readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.ReplicableCommandExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.marshall.exts.CacheRpcCommandExternalizer:org.infinispan.commands.remote.CacheRpcCommand readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.CacheRpcCommandExternalizer:java.lang.Object readObject(java.io.ObjectInput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Add:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizable)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$Put:void writeParams(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction)"
        ]
    },
    "org.infinispan.marshall.core.StreamBytesObjectOutput:void writeObject(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.functional.impl.StatsEnvelope$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.functional.impl.StatsEnvelope)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.StatsEnvelope$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.encoding.DataConversion:void writeTo(java.io.ObjectOutput,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.commands.functional.WriteOnlyKeyCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.commands.functional.ReadOnlyKeyCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.compat.BiFunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.compat.BiFunctionMapper)",
            "org.infinispan.compat.FunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.compat.FunctionMapper)",
            "org.infinispan.commands.triangle.FunctionalBackupWriteCommand:void writeFunctionAndParams(java.io.ObjectOutput)",
            "org.infinispan.cache.impl.EncoderKeyMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.cache.impl.EncoderKeyMapper)",
            "org.infinispan.commands.functional.Mutations:void writeTo(java.io.ObjectOutput,org.infinispan.commands.functional.Mutation)",
            "org.infinispan.encoding.DataConversion$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.encoding.DataConversion)",
            "org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable)",
            "org.infinispan.commands.functional.ReadWriteKeyValueCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.cache.impl.EncoderEntryMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.cache.impl.EncoderEntryMapper)",
            "org.infinispan.commands.functional.WriteOnlyManyCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.commands.functional.ReadOnlyManyCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.commands.functional.ReadWriteKeyCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.cache.impl.EncoderValueMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.cache.impl.EncoderValueMapper)",
            "org.infinispan.commands.functional.ReadWriteManyCommand:void writeTo(java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.compat.BiFunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.compat.BiFunctionMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.compat.BiFunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Key:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizable)"
        ]
    },
    "org.infinispan.remoting.responses.BiasRevocationResponse$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.remoting.responses.BiasRevocationResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.remoting.responses.BiasRevocationResponse$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void writeFlagsWithExternalizer(org.infinispan.marshall.core.BytesObjectOutput,java.lang.Class,boolean,org.infinispan.commons.marshall.AdvancedExternalizer,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeArray(java.lang.Class,java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)"
        ]
    },
    "org.infinispan.stream.StreamMarshalling$StreamMarshallingExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:void writeAnnotated(java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput,org.infinispan.commons.marshall.Externalizer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeNonNullableObject(java.lang.Object,org.infinispan.marshall.core.BytesObjectOutput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicKeySetImpl)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotViewExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotView)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotViewExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.commands.functional.functions.MergeFunction$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.commands.functional.functions.MergeFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.functions.MergeFunction$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.termop.TerminalOperationExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.stream.impl.termop.BaseTerminalOperation)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.termop.TerminalOperationExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.container.entries.RemoteMetadata$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.container.entries.RemoteMetadata)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.container.entries.RemoteMetadata$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveValue:void writeParams(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction)"
        ]
    },
    "org.infinispan.commands.write.ExceptionAckCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.TriangleAckExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.commands.remote.CacheRpcCommand)"
        ]
    },
    "org.infinispan.stream.impl.intops.IntermediateOperationExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.stream.impl.intops.IntermediateOperation)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.stream.impl.intops.IntermediateOperationExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.compat.FunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.compat.FunctionMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.compat.FunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.distribution.VersionedResult$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.interceptors.distribution.VersionedResult)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.VersionedResult$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Remove:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizable)"
        ]
    },
    "org.infinispan.interceptors.distribution.VersionedResults$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.interceptors.distribution.VersionedResults)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.distribution.VersionedResults$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.filter.CacheFilters$CacheFiltersExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$RemoveCond:void writeParams(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction)"
        ]
    },
    "org.infinispan.functional.impl.EntryViews$NoValueReadOnlyViewExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.functional.impl.EntryViews$NoValueReadOnlyView)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.functional.impl.EntryViews$NoValueReadOnlyViewExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$Remove:void writeParams(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:byte[] objectToByteBuffer(java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.GlobalMarshaller:org.infinispan.marshall.core.BytesObjectOutput writeObjectOutput(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:org.infinispan.commons.io.ByteBuffer objectToBuffer(java.lang.Object)",
            "org.infinispan.marshall.core.GlobalMarshaller:byte[] objectToByteBuffer(java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:void storeAndUpdateStats(org.infinispan.context.InvocationContext,java.lang.Object,org.infinispan.commands.write.WriteCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object handleDataWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)",
            "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:void lambda$handleDataWriteReturn$1(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,java.lang.Object)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitWriteCommand$9(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.InvocationSuccessAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object lambda$visitComputeIfAbsentCommand$6(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object handleManyWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object lambda$visitReplaceCommand$4(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitComputeCommand$3(org.infinispan.commands.write.ComputeCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.InvocationSuccessAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitReplaceCommand$2(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.InvocationSuccessAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitPutKeyValueCommand$1(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.InvocationSuccessAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object lambda$visitPutKeyValueCommand$0(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.DistCacheWriterInterceptor:java.lang.Object lambda$visitComputeCommand$5(org.infinispan.commands.write.ComputeCommand,org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:void lambda$handleManyWriteReturn$5(org.infinispan.context.InvocationContext,org.infinispan.commands.write.WriteCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitWriteManyCommand$10(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.InvocationSuccessAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.CacheWriterInterceptor:void lambda$visitComputeIfAbsentCommand$4(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenAccept(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessAction)",
            "org.infinispan.interceptors.InvocationSuccessAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.marshall.exts.ReplicableCommandExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.exts.CacheRpcCommandExternalizer:java.lang.Object readObject(java.io.ObjectInput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.atomic.impl.AtomicMapProxyImpl$ExternalizableFunction)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.notifications.cachelistener.filter.KeyValueFilterConverterAsCacheEventFilterConverter$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.functional.impl.StatsEnvelope$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyManyEntriesCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.WriteOnlyKeyCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.ReadOnlyKeyCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void writeTo(java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteManyEntriesCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.WriteOnlyKeyValueCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.triangle.FunctionalBackupWriteCommand:void writeFunctionAndParams(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.triangle.MultiKeyFunctionalBackupWriteCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:void writeTo(java.io.ObjectOutput)",
            "org.infinispan.commands.triangle.MultiEntriesFunctionalBackupWriteCommand:void writeTo(java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.cache.impl.EncoderKeyMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.cache.impl.EncoderKeyMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.cache.impl.EncoderKeyMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.commands.functional.Mutations:void writeTo(java.io.ObjectOutput,org.infinispan.commands.functional.Mutation)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyManyCommand:void writeTo(java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.encoding.DataConversion$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.encoding.DataConversion)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.encoding.DataConversion$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteKeyValueCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.cache.impl.EncoderEntryMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.cache.impl.EncoderEntryMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.cache.impl.EncoderEntryMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.commands.functional.WriteOnlyManyCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.functional.ReadOnlyManyCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.commands.functional.TxReadOnlyManyCommand:void writeTo(java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteKeyCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.cache.impl.EncoderValueMapper$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.cache.impl.EncoderValueMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.cache.impl.EncoderValueMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.commands.functional.ReadWriteManyCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.compat.BiFunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.remoting.responses.BiasRevocationResponse$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.functional.impl.EntryViews$ReadOnlySnapshotViewExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.commands.functional.functions.MergeFunction$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.stream.impl.termop.TerminalOperationExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.container.entries.RemoteMetadata$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.marshall.exts.TriangleAckExternalizer:void writeObject(java.io.ObjectOutput,org.infinispan.commands.remote.CacheRpcCommand)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.exts.TriangleAckExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.stream.impl.intops.IntermediateOperationExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.compat.FunctionMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.interceptors.distribution.VersionedResult$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.interceptors.distribution.VersionedResults$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.functional.impl.EntryViews$NoValueReadOnlyViewExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:org.infinispan.commons.io.ByteBuffer objectToBuffer(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:boolean isMarshallable(java.lang.Object)",
            "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.commons.io.ByteBuffer marshall(java.lang.Object)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:byte[] objectToByteBuffer(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:java.lang.Object handleDataWriteReturn(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.BaseAsyncInterceptor:java.lang.Object invokeNextThenApply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationSuccessFunction)",
            "org.infinispan.interceptors.InvocationSuccessFunction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.infinispan.interceptors.impl.ScatteredCacheWriterInterceptor:void lambda$handleDataWriteReturn$1(org.infinispan.context.InvocationContext,org.infinispan.commands.write.DataWriteCommand,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.interceptors.InvocationSuccessAction:java.lang.Object apply(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:void invokeQueuedHandlers(java.lang.Object,java.lang.Throwable)",
            "org.infinispan.interceptors.impl.QueueAsyncInvocationStage:java.lang.Object invokeDirectly(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.impl.SimpleAsyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)",
            "org.infinispan.interceptors.SyncInvocationStage:java.lang.Object addCallback(org.infinispan.context.InvocationContext,org.infinispan.commands.VisitableCommand,org.infinispan.interceptors.InvocationCallback)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicKeySetImpl$FunctionExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.atomic.impl.AtomicMapProxyImpl$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.commands.functional.TxReadOnlyKeyCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.triangle.MultiKeyFunctionalBackupWriteCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.triangle.SingleKeyFunctionalBackupWriteCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.commands.triangle.MultiEntriesFunctionalBackupWriteCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.cache.impl.EncoderKeyMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.commands.functional.TxReadOnlyManyCommand:void writeTo(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.encoding.DataConversion$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.notifications.cachelistener.cluster.ClusterListenerReplicateCallable$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.cache.impl.EncoderEntryMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.cache.impl.EncoderValueMapper$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.marshall.exts.TriangleAckExternalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.GlobalMarshaller:void writeExternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)",
            "org.infinispan.marshall.core.GlobalMarshaller:void writeInternal(java.lang.Object,org.infinispan.commons.marshall.AdvancedExternalizer,java.io.ObjectOutput)"
        ]
    },
    "org.infinispan.marshall.core.GlobalMarshaller:boolean isMarshallable(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.commons.io.ByteBuffer marshall(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.commons.io.ByteBuffer getKeyBytes()",
            "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.commons.io.ByteBuffer getValueBytes()",
            "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.commons.io.ByteBuffer getMetadataBytes()"
        ]
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.commons.io.ByteBuffer getKeyBytes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.MarshalledEntryImpl:boolean equals(java.lang.Object)",
            "org.infinispan.marshall.core.MarshalledEntryImpl:int hashCode()",
            "org.infinispan.marshall.core.MarshalledEntryImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.marshall.core.MarshalledEntryImpl)"
        ]
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.commons.io.ByteBuffer getValueBytes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.MarshalledEntryImpl:boolean equals(java.lang.Object)",
            "org.infinispan.marshall.core.MarshalledEntryImpl:int hashCode()",
            "org.infinispan.marshall.core.MarshalledEntryImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.marshall.core.MarshalledEntryImpl)"
        ]
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:org.infinispan.commons.io.ByteBuffer getMetadataBytes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.MarshalledEntryImpl:boolean equals(java.lang.Object)",
            "org.infinispan.marshall.core.MarshalledEntryImpl:int hashCode()",
            "org.infinispan.marshall.core.MarshalledEntryImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.marshall.core.MarshalledEntryImpl)"
        ]
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl:int hashCode()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl$Externalizer:void writeObject(java.io.ObjectOutput,org.infinispan.marshall.core.MarshalledEntryImpl)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": [
            "org.infinispan.marshall.core.MarshalledEntryImpl$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)"
        ]
    },
    "org.infinispan.marshall.core.MarshalledEntryImpl$Externalizer:void writeObject(java.io.ObjectOutput,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void setInjectionField(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectFieldMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void invokeInjectionMethod(java.lang.Object,org.infinispan.factories.components.ComponentMetadata$InjectMethodMetadata,boolean)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void startWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)",
            "org.infinispan.factories.impl.BasicComponentRegistryImpl:void performStop(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper)"
        ],
        "vulCaller": []
    }
}
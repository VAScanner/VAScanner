{
    "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleManager:void subscribeAppRule(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleManager:void subscribeAppRule(java.lang.String)",
            "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshAppRuleListener:void receiveConfigInfo(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleAddressListenerInterceptor:java.util.List notify(java.util.List,org.apache.dubbo.common.URL,org.apache.dubbo.rpc.cluster.Directory)"
        ]
    },
    "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleAddressListenerInterceptor:java.util.List notify(java.util.List,org.apache.dubbo.common.URL,org.apache.dubbo.rpc.cluster.Directory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleManager:void subscribeAppRule(java.lang.String)",
            "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshAppRuleListener:void receiveConfigInfo(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.registry.kubernetes.KubernetesServiceDiscovery:void doInitialize(org.apache.dubbo.common.URL)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.dubbo.registry.kubernetes.KubernetesServiceDiscovery:void doInitialize(org.apache.dubbo.common.URL)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkName(java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkPathLength(java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkKey(java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkLength(java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkMultiName(java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkNameHasSymbol(java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkPathName(java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkMethodName(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateRegistryConfig(org.apache.dubbo.config.RegistryConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateModuleConfig(org.apache.dubbo.config.ModuleConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateReferenceConfig(org.apache.dubbo.config.ReferenceConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateApplicationConfig(org.apache.dubbo.config.ApplicationConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkHost(java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProtocolConfig(org.apache.dubbo.config.ProtocolConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateMethodConfig(org.apache.dubbo.config.MethodConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkExtension(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateServiceConfig(org.apache.dubbo.config.ServiceConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateAbstractInterfaceConfig(org.apache.dubbo.config.AbstractInterfaceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkPathLength(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateRegistryConfig(org.apache.dubbo.config.RegistryConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkKey(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateReferenceConfig(org.apache.dubbo.config.ReferenceConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateServiceConfig(org.apache.dubbo.config.ServiceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkLength(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateRegistryConfig(org.apache.dubbo.config.RegistryConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateMethodConfig(org.apache.dubbo.config.MethodConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkMultiName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateApplicationConfig(org.apache.dubbo.config.ApplicationConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateAbstractInterfaceConfig(org.apache.dubbo.config.AbstractInterfaceConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkMultiExtension(java.util.List,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkNameHasSymbol(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateMethodConfig(org.apache.dubbo.config.MethodConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkParameterName(java.util.Map)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateAbstractInterfaceConfig(org.apache.dubbo.config.AbstractInterfaceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkPathName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProviderConfig(org.apache.dubbo.config.ProviderConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProtocolConfig(org.apache.dubbo.config.ProtocolConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateServiceConfig(org.apache.dubbo.config.ServiceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkMethodName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateMethodConfig(org.apache.dubbo.config.MethodConfig)"
        ]
    },
    "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshAppRuleListener:void receiveConfigInfo(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshAppRuleListener:void receiveConfigInfo(java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshAppRuleListener:void process(org.apache.dubbo.common.config.configcenter.ConfigChangedEvent)",
            "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleManager:void subscribeAppRule(java.lang.String)"
        ]
    },
    "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshAppRuleListener:void process(org.apache.dubbo.common.config.configcenter.ConfigChangedEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshAppRuleListener:void receiveConfigInfo(java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateRegistryConfig(org.apache.dubbo.config.RegistryConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateReferenceConfig(org.apache.dubbo.config.ReferenceConfig)",
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void validateConfig(org.apache.dubbo.config.AbstractConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateServiceConfig(org.apache.dubbo.config.ServiceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateModuleConfig(org.apache.dubbo.config.ModuleConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void validateConfig(org.apache.dubbo.config.AbstractConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateReferenceConfig(org.apache.dubbo.config.ReferenceConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.ReferenceConfig:void checkAndUpdateSubConfigs()"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateApplicationConfig(org.apache.dubbo.config.ApplicationConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void validateConfig(org.apache.dubbo.config.AbstractConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkHost(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProtocolConfig(org.apache.dubbo.config.ProtocolConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProtocolConfig(org.apache.dubbo.config.ProtocolConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void validateConfig(org.apache.dubbo.config.AbstractConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateServiceConfig(org.apache.dubbo.config.ServiceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateMethodConfig(org.apache.dubbo.config.MethodConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkExtension(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProviderConfig(org.apache.dubbo.config.ProviderConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProtocolConfig(org.apache.dubbo.config.ProtocolConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateMethodConfig(org.apache.dubbo.config.MethodConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateAbstractInterfaceConfig(org.apache.dubbo.config.AbstractInterfaceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateServiceConfig(org.apache.dubbo.config.ServiceConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.ServiceConfig:void checkAndUpdateSubConfigs()"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateAbstractInterfaceConfig(org.apache.dubbo.config.AbstractInterfaceConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateReferenceConfig(org.apache.dubbo.config.ReferenceConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateServiceConfig(org.apache.dubbo.config.ServiceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkMultiExtension(java.util.List,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkMultiExtension(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateAbstractInterfaceConfig(org.apache.dubbo.config.AbstractInterfaceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkParameterName(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateRegistryConfig(org.apache.dubbo.config.RegistryConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateApplicationConfig(org.apache.dubbo.config.ApplicationConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateMethodConfig(org.apache.dubbo.config.MethodConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateMonitorConfig(org.apache.dubbo.config.MonitorConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateConfigCenterConfig(org.apache.dubbo.config.ConfigCenterConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProviderConfig(org.apache.dubbo.config.ProviderConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void validateConfig(org.apache.dubbo.config.AbstractConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateServiceConfig(org.apache.dubbo.config.ServiceConfig)"
        ]
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:void validateConfig(org.apache.dubbo.config.AbstractConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void checkDefaultAndValidateConfigs(java.lang.Class)"
        ]
    },
    "org.apache.dubbo.config.ReferenceConfig:void checkAndUpdateSubConfigs()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.ReferenceConfig:void postProcessRefresh()"
        ]
    },
    "org.apache.dubbo.config.ServiceConfig:void checkAndUpdateSubConfigs()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.ServiceConfig:void init()",
            "org.apache.dubbo.config.ServiceConfig:void postProcessRefresh()"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkMultiExtension(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProviderConfig(org.apache.dubbo.config.ProviderConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateReferenceConfig(org.apache.dubbo.config.ReferenceConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateProtocolConfig(org.apache.dubbo.config.ProtocolConfig)",
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateServiceConfig(org.apache.dubbo.config.ServiceConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateMonitorConfig(org.apache.dubbo.config.MonitorConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void validateConfig(org.apache.dubbo.config.AbstractConfig)"
        ]
    },
    "org.apache.dubbo.config.utils.ConfigValidationUtils:void validateConfigCenterConfig(org.apache.dubbo.config.ConfigCenterConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void startConfigCenter()"
        ]
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:void checkDefaultAndValidateConfigs(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void checkGlobalConfigs()"
        ]
    },
    "org.apache.dubbo.config.ReferenceConfig:void postProcessRefresh()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.AbstractConfig:void refresh()"
        ]
    },
    "org.apache.dubbo.config.ServiceConfig:void init()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.ServiceConfig:void export()"
        ]
    },
    "org.apache.dubbo.config.ServiceConfig:void postProcessRefresh()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.AbstractConfig:void refresh()"
        ]
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:void startConfigCenter()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void initialize()"
        ]
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:void checkGlobalConfigs()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void initialize()"
        ]
    },
    "org.apache.dubbo.config.AbstractConfig:void refresh()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:boolean isEquals(org.apache.dubbo.config.AbstractConfig,org.apache.dubbo.config.AbstractConfig)",
            "org.apache.dubbo.config.ReferenceConfig:void init()",
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void startConfigCenter()",
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void loadConfigs(java.lang.Class)",
            "org.apache.dubbo.config.ServiceConfig:void export()",
            "org.apache.dubbo.config.ApplicationConfig:void refresh()"
        ]
    },
    "org.apache.dubbo.config.ServiceConfig:void export()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.metadata.ConfigurableMetadataServiceExporter:org.apache.dubbo.config.metadata.ConfigurableMetadataServiceExporter export()"
        ]
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:void initialize()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.ReferenceConfig:void init()",
            "org.apache.dubbo.config.ServiceConfig:void init()",
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:org.apache.dubbo.config.bootstrap.DubboBootstrap start()"
        ]
    },
    "org.apache.dubbo.config.context.ConfigManager:boolean isEquals(org.apache.dubbo.config.AbstractConfig,org.apache.dubbo.config.AbstractConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:org.apache.dubbo.config.AbstractConfig addIfAbsent(org.apache.dubbo.config.AbstractConfig,java.util.Map,boolean)",
            "org.apache.dubbo.config.context.ConfigManager:boolean lambda$addIfAbsent$14(org.apache.dubbo.config.AbstractConfig,org.apache.dubbo.config.AbstractConfig)"
        ]
    },
    "org.apache.dubbo.config.ReferenceConfig:void init()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.ReferenceConfig:java.lang.Object get()"
        ]
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:void loadConfigs(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void startConfigCenter()",
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void useRegistryAsConfigCenterIfNecessary()",
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void loadConfigsFromProps()"
        ]
    },
    "org.apache.dubbo.config.ApplicationConfig:void refresh()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:boolean isEquals(org.apache.dubbo.config.AbstractConfig,org.apache.dubbo.config.AbstractConfig)",
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void loadConfigs(java.lang.Class)"
        ]
    },
    "org.apache.dubbo.config.metadata.ConfigurableMetadataServiceExporter:org.apache.dubbo.config.metadata.ConfigurableMetadataServiceExporter export()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.metadata.ConfigurableMetadataServiceExporter:org.apache.dubbo.metadata.MetadataServiceExporter export()"
        ]
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:org.apache.dubbo.config.bootstrap.DubboBootstrap start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.spring.context.DubboBootstrapApplicationListener:void onContextRefreshedEvent(org.springframework.context.event.ContextRefreshedEvent)",
            "org.apache.dubbo.config.spring.context.DubboBootstrapServletContextListener:void contextInitialized(javax.servlet.ServletContextEvent)",
            "org.apache.dubbo.config.ServiceConfig:void export()"
        ]
    },
    "org.apache.dubbo.config.context.ConfigManager:org.apache.dubbo.config.AbstractConfig addIfAbsent(org.apache.dubbo.config.AbstractConfig,java.util.Map,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:org.apache.dubbo.config.AbstractConfig lambda$addConfig$5(org.apache.dubbo.config.AbstractConfig,boolean)"
        ]
    },
    "org.apache.dubbo.config.context.ConfigManager:boolean lambda$addIfAbsent$14(org.apache.dubbo.config.AbstractConfig,org.apache.dubbo.config.AbstractConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.ReferenceConfig:java.lang.Object get()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:void useRegistryAsConfigCenterIfNecessary()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void startConfigCenter()"
        ]
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:void loadConfigsFromProps()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void initialize()"
        ]
    },
    "org.apache.dubbo.config.metadata.ConfigurableMetadataServiceExporter:org.apache.dubbo.metadata.MetadataServiceExporter export()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:void exportMetadataService()"
        ]
    },
    "org.apache.dubbo.config.spring.context.DubboBootstrapApplicationListener:void onContextRefreshedEvent(org.springframework.context.event.ContextRefreshedEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.spring.context.DubboBootstrapApplicationListener:void onApplicationContextEvent(org.springframework.context.event.ApplicationContextEvent)"
        ]
    },
    "org.apache.dubbo.config.spring.context.DubboBootstrapServletContextListener:void contextInitialized(javax.servlet.ServletContextEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:org.apache.dubbo.config.AbstractConfig lambda$addConfig$5(org.apache.dubbo.config.AbstractConfig,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:java.lang.Object write(java.util.concurrent.Callable)"
        ]
    },
    "org.apache.dubbo.config.bootstrap.DubboBootstrap:void exportMetadataService()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.bootstrap.DubboBootstrap:org.apache.dubbo.config.bootstrap.DubboBootstrap start()"
        ]
    },
    "org.apache.dubbo.config.spring.context.DubboBootstrapApplicationListener:void onApplicationContextEvent(org.springframework.context.event.ApplicationContextEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:java.lang.Object write(java.util.concurrent.Callable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:void write(java.lang.Runnable)",
            "org.apache.dubbo.config.context.ConfigManager:org.apache.dubbo.config.AbstractConfig addConfig(org.apache.dubbo.config.AbstractConfig,boolean)"
        ]
    },
    "org.apache.dubbo.config.context.ConfigManager:void write(java.lang.Runnable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:void clear()",
            "org.apache.dubbo.config.context.ConfigManager:void refreshAll()"
        ]
    },
    "org.apache.dubbo.config.context.ConfigManager:org.apache.dubbo.config.AbstractConfig addConfig(org.apache.dubbo.config.AbstractConfig,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:void setMetrics(org.apache.dubbo.config.MetricsConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void setMonitor(org.apache.dubbo.config.MonitorConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void setModule(org.apache.dubbo.config.ModuleConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void setSsl(org.apache.dubbo.config.SslConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void addConfig(org.apache.dubbo.config.AbstractConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void setApplication(org.apache.dubbo.config.ApplicationConfig)"
        ]
    },
    "org.apache.dubbo.config.context.ConfigManager:void clear()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:void destroy()"
        ]
    },
    "org.apache.dubbo.config.context.ConfigManager:void refreshAll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void setMetrics(org.apache.dubbo.config.MetricsConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void setMonitor(org.apache.dubbo.config.MonitorConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void setModule(org.apache.dubbo.config.ModuleConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void setSsl(org.apache.dubbo.config.SslConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void addConfig(org.apache.dubbo.config.AbstractConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": [
            "org.apache.dubbo.config.context.ConfigManager:void addRegistry(org.apache.dubbo.config.RegistryConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void addConsumer(org.apache.dubbo.config.ConsumerConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void addService(org.apache.dubbo.config.ServiceConfigBase)",
            "org.apache.dubbo.config.context.ConfigManager:void addConfigCenter(org.apache.dubbo.config.ConfigCenterConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void addProtocol(org.apache.dubbo.config.ProtocolConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void addMetadataReport(org.apache.dubbo.config.MetadataReportConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void addProvider(org.apache.dubbo.config.ProviderConfig)",
            "org.apache.dubbo.config.context.ConfigManager:void addReference(org.apache.dubbo.config.ReferenceConfigBase)"
        ]
    },
    "org.apache.dubbo.config.context.ConfigManager:void setApplication(org.apache.dubbo.config.ApplicationConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void destroy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void addRegistry(org.apache.dubbo.config.RegistryConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void addConsumer(org.apache.dubbo.config.ConsumerConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void addService(org.apache.dubbo.config.ServiceConfigBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void addConfigCenter(org.apache.dubbo.config.ConfigCenterConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void addProtocol(org.apache.dubbo.config.ProtocolConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void addMetadataReport(org.apache.dubbo.config.MetadataReportConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void addProvider(org.apache.dubbo.config.ProviderConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    },
    "org.apache.dubbo.config.context.ConfigManager:void addReference(org.apache.dubbo.config.ReferenceConfigBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.dubbo.config.utils.ConfigValidationUtils:void checkProperty(java.lang.String,java.lang.String,int,java.util.regex.Pattern)"
        ],
        "vulCaller": []
    }
}
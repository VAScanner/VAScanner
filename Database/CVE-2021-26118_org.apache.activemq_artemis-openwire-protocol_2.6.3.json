{
    "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo,boolean)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo,boolean)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo,boolean)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo,boolean)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void addSessions(java.util.Set)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$SlowConsumerDetection:void onSlowConsumer(org.apache.activemq.artemis.core.server.ServerConsumer)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void addConsumer(org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$SlowConsumerDetection:void onSlowConsumer(org.apache.activemq.artemis.core.server.ServerConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void tempQueueDeleted(org.apache.activemq.artemis.api.core.SimpleString)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void removeDestination(org.apache.activemq.command.ActiveMQDestination)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void addConnection(org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection,org.apache.activemq.command.ConnectionInfo)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void addDestination(org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void addConsumer(org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddConsumer(org.apache.activemq.command.ConsumerInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo,boolean)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddSession(org.apache.activemq.command.SessionInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddSession(org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo,boolean)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void addSessions(java.util.Set)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void addSessions(java.util.Set)",
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo,boolean)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void addConnection(org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void addConnection(org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void addSessions(java.util.Set)",
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo,boolean)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void tempQueueDeleted(org.apache.activemq.artemis.api.core.SimpleString)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void removeDestination(org.apache.activemq.command.ActiveMQDestination)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processRemoveDestination(org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void addDestination(org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddProducer(org.apache.activemq.command.ProducerInfo)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddDestination(org.apache.activemq.command.DestinationInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddConsumer(org.apache.activemq.command.ConsumerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:void addSessions(java.util.Set)",
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.command.SessionInfo,boolean)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processRemoveDestination(org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddProducer(org.apache.activemq.command.ProducerInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection$CommandProcessor:org.apache.activemq.command.Response processAddDestination(org.apache.activemq.command.DestinationInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void fireAdvisory(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ActiveMQTopic,org.apache.activemq.command.Command,org.apache.activemq.command.ConsumerId,java.lang.String)"
        ],
        "vulCaller": []
    }
}
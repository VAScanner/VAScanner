{
    "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)"
        ]
    },
    "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.Uri:org.asynchttpclient.uri.Uri create(org.asynchttpclient.uri.Uri,java.lang.String)"
        ]
    },
    "org.asynchttpclient.uri.UriParser:void computeRegularPath()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void computePath(boolean)"
        ]
    },
    "org.asynchttpclient.uri.UriParser:void computePath(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)"
        ]
    },
    "org.asynchttpclient.uri.Uri:org.asynchttpclient.uri.Uri create(org.asynchttpclient.uri.Uri,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.netty.handler.intercept.Redirect30xInterceptor:boolean exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)",
            "org.asynchttpclient.uri.Uri:org.asynchttpclient.uri.Uri create(java.lang.String)"
        ]
    },
    "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)"
        ]
    },
    "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void parseAuthority()"
        ]
    },
    "org.asynchttpclient.uri.UriParser:void parseAuthority()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)"
        ]
    },
    "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)"
        ]
    },
    "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void parseAuthority()"
        ]
    },
    "org.asynchttpclient.uri.UriParser:void computeAuthority()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void parseAuthority()"
        ]
    },
    "org.asynchttpclient.uri.UriParser:void handleRelativePath()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()"
        ],
        "vulCaller": [
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()"
        ]
    },
    "org.asynchttpclient.netty.handler.intercept.Redirect30xInterceptor:boolean exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.netty.handler.intercept.Interceptors:boolean exitAfterIntercept(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.HttpResponseStatus,org.asynchttpclient.HttpResponseHeaders)"
        ]
    },
    "org.asynchttpclient.uri.Uri:org.asynchttpclient.uri.Uri create(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.RequestBuilderBase:void <clinit>()",
            "org.asynchttpclient.RequestBuilderBase:org.asynchttpclient.RequestBuilderBase setUrl(java.lang.String)"
        ]
    },
    "org.asynchttpclient.netty.handler.intercept.Interceptors:boolean exitAfterIntercept(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.HttpResponseStatus,org.asynchttpclient.HttpResponseHeaders)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.netty.handler.HttpHandler:void handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)",
            "org.asynchttpclient.netty.handler.WebSocketHandler:void handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"
        ]
    },
    "org.asynchttpclient.RequestBuilderBase:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.RequestBuilderBase:org.asynchttpclient.RequestBuilderBase setUrl(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder requestBuilder(java.lang.String,java.lang.String)",
            "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder request(java.lang.String,java.lang.String)"
        ]
    },
    "org.asynchttpclient.netty.handler.HttpHandler:void handleHttpResponse(io.netty.handler.codec.http.HttpResponse,io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,org.asynchttpclient.AsyncHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.netty.handler.HttpHandler:void handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)"
        ]
    },
    "org.asynchttpclient.netty.handler.WebSocketHandler:void handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder requestBuilder(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareGet(java.lang.String)",
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder preparePatch(java.lang.String)",
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareOptions(java.lang.String)",
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareTrace(java.lang.String)",
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder preparePost(java.lang.String)",
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder preparePut(java.lang.String)",
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareHead(java.lang.String)",
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareDelete(java.lang.String)",
            "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareConnect(java.lang.String)"
        ]
    },
    "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder request(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": [
            "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder trace(java.lang.String)",
            "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder get(java.lang.String)",
            "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder path(java.lang.String)",
            "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder post(java.lang.String)",
            "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder delete(java.lang.String)",
            "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder head(java.lang.String)",
            "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder put(java.lang.String)",
            "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder options(java.lang.String)"
        ]
    },
    "org.asynchttpclient.netty.handler.HttpHandler:void handleRead(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareGet(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder preparePatch(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareOptions(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareTrace(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder preparePost(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder preparePut(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareHead(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareDelete(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.DefaultAsyncHttpClient:org.asynchttpclient.BoundRequestBuilder prepareConnect(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder trace(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder get(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder path(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder post(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder delete(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder head(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder put(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    },
    "org.asynchttpclient.Dsl:org.asynchttpclient.RequestBuilder options(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.asynchttpclient.uri.UriParser:void computeInitialScheme(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void parse(org.asynchttpclient.uri.Uri,java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeFragment(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:boolean splitUrlAndQuery(java.lang.String)",
            "org.asynchttpclient.uri.UriParser:void computeRegularPath()",
            "org.asynchttpclient.uri.UriParser:void handleRelativePath()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith4Slashes()",
            "org.asynchttpclient.uri.UriParser:boolean currentPositionStartsWith2Slashes()",
            "org.asynchttpclient.uri.UriParser:void computeAuthority()"
        ],
        "vulCaller": []
    }
}
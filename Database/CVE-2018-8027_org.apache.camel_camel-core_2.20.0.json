{
    "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.validation.ValidatingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.validator.ValidatorProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.validator.ValidatorProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.BatchProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.SendDynamicProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RoutingSlip:void process(org.apache.camel.Exchange)",
            "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:void doProcessParallel(org.apache.camel.processor.ProcessorExchangePair)",
            "org.apache.camel.processor.ExchangePatternProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Enricher:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.SortProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.UnmarshalProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RollbackProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Pipeline:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.ChoiceProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.impl.SubscribeMethodProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.TryProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MarshalProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.ConvertBodyProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorHelper:boolean process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RemoveHeaderProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.WireTapProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.ScriptProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.StreamResequencer:void process(org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LogProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RemovePropertiesProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.PollEnricher:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RecipientList:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.loadbalancer.LoadBalancerSupport:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThreadsProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RemoveHeadersProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.CamelLogProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetHeaderProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.TransformProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetBodyProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.ThrowExceptionProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.ThroughputLogger:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultAsyncProducer:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.StopProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetPropertyProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.validation.ValidatingProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.CamelLogger:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.EvaluateExpressionProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.UnitOfWorkProducer:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RemovePropertyProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.SendProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.BatchProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.SendDynamicProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RoutingSlip:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MulticastProcessor:void doProcessParallel(org.apache.camel.processor.ProcessorExchangePair)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:void access$200(org.apache.camel.processor.MulticastProcessor,org.apache.camel.processor.ProcessorExchangePair)"
        ]
    },
    "org.apache.camel.processor.ExchangePatternProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.Enricher:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.SortProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.UnmarshalProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RestBindingAdvice:void unmarshal(org.apache.camel.Exchange,java.util.Map)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor$RestProducerBindingUnmarshalCallback:void doDone()"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.InterceptSendToEndpoint$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RollbackProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.Pipeline:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.InterceptSendToEndpoint$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.ChoiceProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SubscribeMethodProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.impl.ScheduledBatchPollingConsumer:void processEmptyMessage()",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.dataset.DataSetConsumer:void sendMessages(long,long)",
            "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.String,org.apache.camel.Exchange,java.lang.Throwable)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.component.ApiConsumerHelper:void processResult(org.apache.camel.impl.DefaultConsumer,java.lang.Object,java.lang.Object)",
            "org.apache.camel.impl.ScheduledPollConsumer:void processEmptyMessage()"
        ]
    },
    "org.apache.camel.processor.TryProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MarshalProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RestBindingAdvice:void marshal(org.apache.camel.Exchange,java.util.Map)"
        ]
    },
    "org.apache.camel.processor.ConvertBodyProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.SharedCamelInternalProcessor$InternalCallback:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.AsyncProcessorHelper:boolean process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RemoveHeaderProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.WireTapProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.ScriptProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.StreamResequencer:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.AbstractBeanProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeBean(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.LogProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RemovePropertiesProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.PollEnricher:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RecipientList:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.loadbalancer.LoadBalancerSupport:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.SimpleLoadBalancerSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.browse.BrowseEndpoint:void onExchange(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Throttler$1:void run()",
            "org.apache.camel.processor.Throttler:boolean processAsynchronously(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.ThreadsProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RemoveHeadersProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.CamelLogProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.impl.ProcessorEndpoint:void onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProcessorPollingConsumer:org.apache.camel.Exchange receive()",
            "org.apache.camel.processor.interceptor.TraceInterceptor:void logExchange(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.SetHeaderProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.TransformProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.SetBodyProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.ThrowExceptionProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.ThroughputLogger:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.dataset.DataSetConsumer:void sendMessages(long,long)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.impl.ProcessorEndpoint:void onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProcessorPollingConsumer:org.apache.camel.Exchange receive()",
            "org.apache.camel.component.mock.MockEndpoint:void onExchange(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.OnCompletionProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultAsyncProducer:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.NotifyBuilder$17:void sendToMock(org.apache.camel.Exchange)",
            "org.apache.camel.builder.NotifyBuilder$18:void sendToMock(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.idempotent.IdempotentConsumer:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.StopProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.SetPropertyProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.validation.ValidatingProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.CamelLogger:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.EvaluateExpressionProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.UnitOfWorkProducer:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RemovePropertyProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.SendProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.impl.validator.ProcessorValidator:void validate(org.apache.camel.Message,org.apache.camel.spi.DataType)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.transformer.ProcessorTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:void access$200(org.apache.camel.processor.MulticastProcessor,org.apache.camel.processor.ProcessorExchangePair)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$1:org.apache.camel.Exchange call()"
        ]
    },
    "org.apache.camel.processor.RestBindingAdvice:void unmarshal(org.apache.camel.Exchange,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RestBindingAdvice:java.util.Map before(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.rest.RestProducerBindingProcessor$RestProducerBindingUnmarshalCallback:void doDone()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestProducerBindingProcessor$RestProducerBindingUnmarshalCallback:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.SharedCamelInternalProcessor:void process(org.apache.camel.Exchange,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.impl.ProducerCache:boolean asyncDispatchExchange(org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.InterceptSendToEndpoint$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ScheduledPollConsumer:void doRun()"
        ]
    },
    "org.apache.camel.impl.ScheduledBatchPollingConsumer:void processEmptyMessage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ScheduledPollConsumer:void doRun()"
        ]
    },
    "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.scheduler.SchedulerConsumer:int poll()"
        ]
    },
    "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.timer.TimerConsumer$1:void run()",
            "org.apache.camel.component.timer.TimerConsumer$2:void run()"
        ]
    },
    "org.apache.camel.component.dataset.DataSetConsumer:void sendMessages(long,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.dataset.DataSetConsumer$1:void run()",
            "org.apache.camel.component.dataset.DataSetConsumer:void doStart()"
        ]
    },
    "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.String,org.apache.camel.Exchange,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.String,java.lang.Throwable)",
            "org.apache.camel.component.timer.TimerConsumer$3:void done(boolean)",
            "org.apache.camel.util.component.ApiConsumerHelper:void processResult(org.apache.camel.impl.DefaultConsumer,java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.scheduler.SchedulerConsumer$1:void done(boolean)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)"
        ]
    },
    "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileConsumer:int processBatch(java.util.Queue)"
        ]
    },
    "org.apache.camel.util.component.ApiConsumerHelper:void processResult(org.apache.camel.impl.DefaultConsumer,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.component.ApiConsumerHelper:int getResultsProcessed(org.apache.camel.impl.DefaultConsumer,java.lang.Object,boolean)"
        ]
    },
    "org.apache.camel.impl.ScheduledPollConsumer:void processEmptyMessage()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ScheduledPollConsumer:void doRun()"
        ]
    },
    "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RestBindingAdvice:void marshal(org.apache.camel.Exchange,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RestBindingAdvice:void after(org.apache.camel.Exchange,java.util.Map)"
        ]
    },
    "org.apache.camel.processor.SharedCamelInternalProcessor$InternalCallback:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.MDCUnitOfWork$MDCCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.bean.BeanProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeBean(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.SimpleLoadBalancerSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.browse.BrowseEndpoint:void onExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.browse.BrowseEndpoint$1:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.Throttler$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.Throttler:boolean processAsynchronously(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.ProcessorEndpoint:void onExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.xslt.XsltEndpoint:void onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.impl.ProcessorEndpoint$2:void process(org.apache.camel.Exchange)",
            "org.apache.camel.impl.ProcessorEndpoint$1:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.ProcessorPollingConsumer:org.apache.camel.Exchange receive()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()",
            "org.apache.camel.impl.ProcessorPollingConsumer:org.apache.camel.Exchange receive(long)",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receive(org.apache.camel.Endpoint)",
            "org.apache.camel.impl.ProcessorPollingConsumer:org.apache.camel.Exchange receiveNoWait()",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:void logExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor$1:void done(boolean)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:void traceIntercept(org.apache.camel.model.InterceptDefinition,org.apache.camel.spi.TracedRouteNodes,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:void traceDoCatch(org.apache.camel.spi.TracedRouteNodes,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:void traceDoFinally(org.apache.camel.spi.TracedRouteNodes,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:void traceOnException(org.apache.camel.spi.TracedRouteNodes,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint:void onExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint:void handle(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.builder.NotifyBuilder$17:void sendToMock(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.NotifyBuilder$17:boolean onExchangeCreated(org.apache.camel.Exchange)",
            "org.apache.camel.builder.NotifyBuilder$17:boolean onExchangeFailed(org.apache.camel.Exchange)",
            "org.apache.camel.builder.NotifyBuilder$17:boolean onExchangeCompleted(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.NotifyBuilder$18:void sendToMock(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.NotifyBuilder$18:boolean onExchangeFailed(org.apache.camel.Exchange)",
            "org.apache.camel.builder.NotifyBuilder$18:boolean onExchangeCompleted(org.apache.camel.Exchange)",
            "org.apache.camel.builder.NotifyBuilder$18:boolean onExchangeCreated(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.validator.ProcessorValidator:void validate(org.apache.camel.Message,org.apache.camel.spi.DataType)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.transformer.ProcessorTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MulticastProcessor$1:org.apache.camel.Exchange call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$1:java.lang.Object call()"
        ]
    },
    "org.apache.camel.processor.RestBindingAdvice:java.util.Map before(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RestBindingAdvice:java.lang.Object before(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.rest.RestProducerBindingProcessor$RestProducerBindingUnmarshalCallback:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor$RestProducerBindingUnmarshalCallback:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Object call()"
        ]
    },
    "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.seda.SedaConsumer:void doRun()"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:boolean access$900(org.apache.camel.processor.MulticastProcessor,org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)"
        ]
    },
    "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.NoErrorHandlerBuilder$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Pipeline:boolean access$100(org.apache.camel.processor.Pipeline,org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)"
        ]
    },
    "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)"
        ]
    },
    "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.LoopProcessor$1:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean access$300(org.apache.camel.processor.loadbalancer.FailOverLoadBalancer,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)"
        ]
    },
    "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:void processAsyncErrorHandler(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean closeCircuit(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean halfOpenCircuit(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor$1:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)"
        ]
    },
    "org.apache.camel.processor.DelegateAsyncProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()",
            "org.apache.camel.processor.OnCompletionProcessor:void doProcess(org.apache.camel.Processor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.impl.ScheduledBatchPollingConsumer:void processEmptyMessage()",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.processor.WireTapProcessor$1:org.apache.camel.Exchange call()",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.BatchProcessor:void processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor$1:void run()",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.dataset.DataSetConsumer:void sendMessages(long,long)",
            "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.String,org.apache.camel.Exchange,java.lang.Throwable)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.component.ApiConsumerHelper:void processResult(org.apache.camel.impl.DefaultConsumer,java.lang.Object,java.lang.Object)",
            "org.apache.camel.processor.DelegateSyncProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.StreamResequencer:void sendElement(org.apache.camel.Exchange)",
            "org.apache.camel.impl.ScheduledPollConsumer:void processEmptyMessage()"
        ]
    },
    "org.apache.camel.processor.SharedCamelInternalProcessor:void process(org.apache.camel.Exchange,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache$1:org.apache.camel.Exchange doInProducer(org.apache.camel.Producer,org.apache.camel.Exchange,org.apache.camel.ExchangePattern)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:boolean asyncDispatchExchange(org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:void lambda$null$0(org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.impl.ScheduledPollConsumer:void doRun()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ScheduledPollConsumer:void run()"
        ]
    },
    "org.apache.camel.component.scheduler.SchedulerConsumer:int poll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ScheduledPollConsumer:void doRun()"
        ]
    },
    "org.apache.camel.component.timer.TimerConsumer$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.timer.TimerConsumer$2:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.dataset.DataSetConsumer$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.dataset.DataSetConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ScheduledPollConsumer:void doRun()",
            "org.apache.camel.impl.DefaultConsumer:void handleException(java.lang.String,java.lang.Throwable)",
            "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.Throwable)"
        ]
    },
    "org.apache.camel.component.timer.TimerConsumer$3:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.scheduler.SchedulerConsumer$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.file.GenericFileConsumer:int processBatch(java.util.Queue)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileConsumer:int poll()"
        ]
    },
    "org.apache.camel.util.component.ApiConsumerHelper:int getResultsProcessed(org.apache.camel.impl.DefaultConsumer,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.component.AbstractApiConsumer:int poll()"
        ]
    },
    "org.apache.camel.processor.RestBindingAdvice:void after(org.apache.camel.Exchange,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RestBindingAdvice:void after(org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:java.util.concurrent.CompletableFuture asyncSendExchange(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor,org.apache.camel.Exchange,java.util.concurrent.CompletableFuture)",
            "org.apache.camel.processor.RoutingSlip:boolean processExchange(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.processor.RoutingSlip$RoutingSlipIterator)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.MDCUnitOfWork$MDCCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RecipientList:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean openCircuit(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.MDCUnitOfWork$MDCCallback:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.SendProcessor$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.impl.EventNotifierCallback:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.processor.SendProcessor$2$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.SendDynamicProcessor$1$1:void done(boolean)",
            "org.apache.camel.processor.SharedCamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:boolean asyncDispatchExchange(org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.Pipeline$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RoutingSlip$2:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlip(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$2:void done(boolean)",
            "org.apache.camel.processor.MulticastProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.language.bean.BeanExpression:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.bean.BeanExpression:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.browse.BrowseEndpoint$1:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.xslt.XsltEndpoint:void onExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProcessorEndpoint$2:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.ProcessorEndpoint$2:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProcessorEndpoint:void onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.impl.ProcessorPollingConsumer:org.apache.camel.Exchange receive()"
        ]
    },
    "org.apache.camel.impl.ProcessorEndpoint$1:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.binding.BindingEndpoint:void pipelineBindingProcessor(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Processor)",
            "org.apache.camel.builder.ExpressionBuilder$83:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultRestRegistry:java.lang.String apiDocAsJson()",
            "org.apache.camel.impl.DeferProducer:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.ProcessorPollingConsumer:org.apache.camel.Exchange receive(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()",
            "org.apache.camel.util.EndpointHelper:void pollEndpoint(org.apache.camel.Endpoint,org.apache.camel.Processor,long)",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receive(org.apache.camel.Endpoint,long)",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receive(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.ProcessorPollingConsumer:org.apache.camel.Exchange receiveNoWait()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receiveNoWait(org.apache.camel.Endpoint)",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:void traceIntercept(org.apache.camel.model.InterceptDefinition,org.apache.camel.spi.TracedRouteNodes,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:void traceDoCatch(org.apache.camel.spi.TracedRouteNodes,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:void traceDoFinally(org.apache.camel.spi.TracedRouteNodes,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:void traceOnException(org.apache.camel.spi.TracedRouteNodes,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint:void handle(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.NotifyBuilder$17:boolean onExchangeCreated(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.NotifyBuilder$17:boolean onExchangeFailed(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.NotifyBuilder$17:boolean onExchangeCompleted(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.NotifyBuilder$18:boolean onExchangeFailed(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.NotifyBuilder$18:boolean onExchangeCompleted(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.NotifyBuilder$18:boolean onExchangeCreated(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MulticastProcessor$1:java.lang.Object call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RestBindingAdvice:java.lang.Object before(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Object call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.seda.SedaConsumer:void doRun()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.seda.SedaConsumer:void run()"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:boolean access$900(org.apache.camel.processor.MulticastProcessor,org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$2:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.builder.NoErrorHandlerBuilder$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.Pipeline:boolean access$100(org.apache.camel.processor.Pipeline,org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Pipeline$1:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.LoopProcessor$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean access$300(org.apache.camel.processor.loadbalancer.FailOverLoadBalancer,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:void processAsyncErrorHandler(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$2:void done(boolean)",
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask$1:void done(boolean)",
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask$2:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean closeCircuit(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean calculateState(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean halfOpenCircuit(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean calculateState(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.TryProcessor$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.OnCompletionProcessor:void doProcess(org.apache.camel.Processor,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onComplete(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onFailure(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer:void onAfterRoute(org.apache.camel.Route,org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer$1:org.apache.camel.Exchange call()",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer$1:org.apache.camel.Exchange call()",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer$2:org.apache.camel.Exchange call()"
        ]
    },
    "org.apache.camel.processor.WireTapProcessor$1:org.apache.camel.Exchange call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.WireTapProcessor$1:java.lang.Object call()"
        ]
    },
    "org.apache.camel.processor.BatchProcessor:void processExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.BatchProcessor$BatchSender:void sendExchanges()"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DelegateSyncProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateSyncProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.StreamResequencer:void sendElement(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.StreamResequencer:void sendElement(java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.ProducerCache$1:org.apache.camel.Exchange doInProducer(org.apache.camel.Producer,org.apache.camel.Exchange,org.apache.camel.ExchangePattern)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache$1:java.lang.Object doInProducer(org.apache.camel.Producer,org.apache.camel.Exchange,org.apache.camel.ExchangePattern)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:void lambda$null$0(org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.ScheduledPollConsumer:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ReferenceCount:void retain()",
            "org.apache.camel.util.ReferenceCount:void release()"
        ]
    },
    "org.apache.camel.support.ServiceSupport:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedService:void start()",
            "org.apache.camel.impl.DefaultRoute:void start()",
            "org.apache.camel.builder.xml.XPathBuilder:javax.xml.xpath.XPathExpression createXPathExpression()",
            "org.apache.camel.main.MainSupport:void run()",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void <init>(org.apache.camel.ha.CamelClusterService,org.apache.camel.ha.CamelClusterService$Selector,java.lang.String)",
            "org.apache.camel.builder.ExpressionBuilder$83:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultCamelContext:void startService(org.apache.camel.Service)",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.PollingConsumer doGetPollingConsumer(org.apache.camel.Endpoint,boolean)",
            "org.apache.camel.util.ServiceHelper:void startService(org.apache.camel.Service)",
            "org.apache.camel.impl.SupervisingRouteController:void <init>()",
            "org.apache.camel.impl.DefaultCamelContext:void start()"
        ]
    },
    "org.apache.camel.impl.DefaultConsumer:void handleException(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumer:void handleException(java.lang.Throwable)"
        ]
    },
    "org.apache.camel.component.file.GenericFileConsumer:int poll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ScheduledPollConsumer:void doRun()"
        ]
    },
    "org.apache.camel.util.component.AbstractApiConsumer:int poll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RestBindingAdvice:void after(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ProducerCache:java.util.concurrent.CompletableFuture asyncSendExchange(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor,org.apache.camel.Exchange,java.util.concurrent.CompletableFuture)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:java.util.concurrent.CompletableFuture asyncSend(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor,java.util.concurrent.CompletableFuture)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture lambda$asyncSendExchange$3(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor,org.apache.camel.Exchange,java.util.concurrent.CompletableFuture)"
        ]
    },
    "org.apache.camel.processor.RoutingSlip:boolean processExchange(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.processor.RoutingSlip$RoutingSlipIterator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.SendDynamicProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:boolean execute(org.apache.camel.cloud.ServiceDefinition,org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.RecipientList:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean openCircuit(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean calculateState(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.bean.BeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.BeanProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.EventNotifierCallback:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.impl.EventNotifierCallback:void done(boolean)",
            "org.apache.camel.processor.SharedCamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean asyncDispatchExchange(org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.SendProcessor$2$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.SendDynamicProcessor$1$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlip(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RoutingSlip:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor$2:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask:java.lang.Boolean call()",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.processor.interceptor.HandleFaultInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendDynamicProcessor$1:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateAsyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SamplingThrottler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ProducerCache:boolean lambda$asyncSendExchange$1(org.apache.camel.ExchangePattern,org.apache.camel.impl.AsyncCallbackToCompletableFutureAdapter,org.apache.camel.Processor,org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FinallyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.Debug$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.rest.RestProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.StreamCachingInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.management.InstrumentationProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean processExchange(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Exchange,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,org.apache.camel.AsyncCallback,java.util.List)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean processDelay(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,long)",
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport$ProcessCall:void run()",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.log.LogProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelayProcessorSupport:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,java.util.Iterator,org.apache.camel.AsyncProcessor,java.lang.Object)",
            "org.apache.camel.processor.SendProcessor$2:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Splitter:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.language.bean.BeanExpression:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.model.language.ExpressionDefinition:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onFailure(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer:void onAfterRoute(org.apache.camel.Route,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.validation.PredicateValidatingProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onComplete(org.apache.camel.Exchange)",
            "org.apache.camel.processor.FilterProcessor:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.CatchProcessor:boolean handles(org.apache.camel.Exchange)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor$1:void done(boolean)",
            "org.apache.camel.model.WhenSkipSendToEndpointDefinition$1:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.CatchProcessor:boolean matchesWhen(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.language.bean.BeanExpression:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$67:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SetBodyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$65:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Splitter:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)",
            "org.apache.camel.processor.WireTapProcessor:org.apache.camel.Exchange configureExchange(org.apache.camel.Exchange,org.apache.camel.ExchangePattern)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doProcess(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint:void assertNoDuplicates(org.apache.camel.Expression)",
            "org.apache.camel.builder.ExpressionBuilder$41:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.TransformProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Delayer:long calculateDelay(org.apache.camel.Exchange)",
            "org.apache.camel.processor.loadbalancer.StickyLoadBalancer:org.apache.camel.Processor chooseProcessor(java.util.List,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetHeaderProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean isValid(org.apache.camel.Exchange)",
            "org.apache.camel.processor.BatchProcessor:boolean isValid(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$16:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$74:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:java.lang.Long getSequenceNumber(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$72:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.NotifyBuilder$5:boolean onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.ExpressionComparator:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$64:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ProcessorBuilder$5:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.DynamicRouter$DynamicRoutingSlipIterator:boolean hasNext(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint$8:void run()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SortProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.EvaluateExpressionProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.mock.MockEndpoint:void assertMessagesSorted(org.apache.camel.Expression,boolean)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$71:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.ScriptProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ValueBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.ref.RefLanguage$1:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$75:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.processor.RecipientList:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void trackTimeout(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetPropertyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:void calculateAndSetMaxRequestsPerPeriod(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$73:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RoutingSlip:org.apache.camel.processor.RoutingSlip$RoutingSlipIterator createRoutingSlipIterator(org.apache.camel.Exchange,org.apache.camel.Expression)",
            "org.apache.camel.builder.ExpressionBuilder$63:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$19:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ProcessorBuilder$3:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.binding.BindingEndpoint:void pipelineBindingProcessor(org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.binding.BindingProducer:void process(org.apache.camel.Exchange)",
            "org.apache.camel.component.binding.BindingConsumerProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$83:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultRestRegistry:java.lang.String apiDocAsJson()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DeferProducer:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractCamelInvocationHandler$1:java.lang.Object call()"
        ]
    },
    "org.apache.camel.util.EndpointHelper:void pollEndpoint(org.apache.camel.Endpoint,org.apache.camel.Processor,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.EndpointHelper:void pollEndpoint(org.apache.camel.Endpoint,org.apache.camel.Processor)",
            "org.apache.camel.component.test.TestEndpoint:void doStart()"
        ]
    },
    "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receive(org.apache.camel.Endpoint,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(java.lang.String,long)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,java.lang.Class)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String)",
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receiveNoWait(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receiveNoWait(java.lang.String)"
        ]
    },
    "org.apache.camel.component.seda.SedaConsumer:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ReferenceCount:void retain()",
            "org.apache.camel.util.ReferenceCount:void release()"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler$2:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask$2:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean calculateState(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onComplete(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onFailure(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer:void onAfterRoute(org.apache.camel.Route,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer$1:org.apache.camel.Exchange call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer$1:java.lang.Object call()"
        ]
    },
    "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer$1:org.apache.camel.Exchange call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer$1:java.lang.Object call()"
        ]
    },
    "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer$2:org.apache.camel.Exchange call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer$2:java.lang.Object call()"
        ]
    },
    "org.apache.camel.processor.WireTapProcessor$1:java.lang.Object call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.BatchProcessor$BatchSender:void sendExchanges()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.BatchProcessor$BatchSender:void run()"
        ]
    },
    "org.apache.camel.processor.StreamResequencer:void sendElement(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ResequencerEngine:boolean deliverNext()"
        ]
    },
    "org.apache.camel.impl.ProducerCache$1:java.lang.Object doInProducer(org.apache.camel.Producer,org.apache.camel.Exchange,org.apache.camel.ExchangePattern)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:java.lang.Object doInProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.ProducerCallback)"
        ]
    },
    "org.apache.camel.util.ReferenceCount:void retain()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ReferenceCounted:void retain()",
            "org.apache.camel.impl.ha.AbstractCamelClusterService$ViewHolder:org.apache.camel.ha.CamelClusterView retain()",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void onInit(org.apache.camel.Route)",
            "org.apache.camel.util.ReferenceCounted:void <init>()"
        ]
    },
    "org.apache.camel.util.ReferenceCount:void release()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.AbstractCamelClusterService$ViewHolder:void release()",
            "org.apache.camel.util.ReferenceCounted:void release()",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void doShutdown()"
        ]
    },
    "org.apache.camel.management.mbean.ManagedService:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRoute:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.xml.XPathBuilder:javax.xml.xpath.XPathExpression createXPathExpression()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluateAs(org.apache.camel.Exchange,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.camel.main.MainSupport:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.main.MainSupport:void run(java.lang.String[])"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void <init>(org.apache.camel.ha.CamelClusterService,org.apache.camel.ha.CamelClusterService$Selector,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(org.apache.camel.CamelContext,org.apache.camel.ha.CamelClusterService$Selector,java.lang.String)",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(org.apache.camel.ha.CamelClusterService,java.lang.String)",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(org.apache.camel.ha.CamelClusterService$Selector,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void startService(org.apache.camel.Service)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.ProducerTemplate createProducerTemplate(int)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.spi.Language resolveLanguage(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void startServices(java.util.Collection)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.ConsumerTemplate createConsumerTemplate(int)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Component initComponent(java.lang.String,boolean,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.FluentProducerTemplate createFluentProducerTemplate(int)",
            "org.apache.camel.impl.DefaultCamelContext:void doStartOrResumeRouteConsumers(java.util.Map,boolean,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Endpoint addEndpoint(java.lang.String,org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.impl.ConsumerCache:org.apache.camel.PollingConsumer doGetPollingConsumer(org.apache.camel.Endpoint,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.PollingConsumer getConsumer(org.apache.camel.Endpoint)",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.PollingConsumer acquirePollingConsumer(org.apache.camel.Endpoint)",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receiveNoWait(org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.util.ServiceHelper:void startService(org.apache.camel.Service)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void deferStartService(java.lang.Object,boolean)",
            "org.apache.camel.impl.DeferServiceStartupListener:void onCamelContextStarted(org.apache.camel.CamelContext,boolean)",
            "org.apache.camel.impl.DefaultConsumerTemplate:void doStart()",
            "org.apache.camel.processor.RoutingSlip:void doStart()",
            "org.apache.camel.management.DefaultManagementMBeanAssembler:void doStart()",
            "org.apache.camel.component.file.GenericFileEndpoint:java.util.List getExchanges()",
            "org.apache.camel.component.bean.PojoProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.Class[])",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientListProcessor:void doStart()",
            "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void doStart()",
            "org.apache.camel.impl.EmptyProducerCache:org.apache.camel.Producer acquireProducer(org.apache.camel.Endpoint)",
            "org.apache.camel.impl.EmptyConsumerCache:org.apache.camel.PollingConsumer acquirePollingConsumer(org.apache.camel.Endpoint)",
            "org.apache.camel.util.EndpointHelper:void pollEndpoint(org.apache.camel.Endpoint,org.apache.camel.Processor,long)",
            "org.apache.camel.impl.DefaultCamelContext:void doAddService(java.lang.Object,boolean,boolean)",
            "org.apache.camel.impl.CamelPostProcessorHelper:void startService(org.apache.camel.Service,org.apache.camel.CamelContext,java.lang.Object,java.lang.String)",
            "org.apache.camel.impl.DefaultScheduledPollConsumer:void doStart()",
            "org.apache.camel.processor.SendDynamicProcessor:void doStart()",
            "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:org.apache.camel.Producer getTraceEventProducer(org.apache.camel.Exchange)",
            "org.apache.camel.impl.InterceptSendToEndpoint$1:void start()",
            "org.apache.camel.util.ServiceHelper:void startService(java.lang.Object)",
            "org.apache.camel.component.seda.SedaEndpoint:org.apache.camel.processor.MulticastProcessor getConsumerMulticastProcessor()",
            "org.apache.camel.impl.RouteService:void startChildService(org.apache.camel.Route,java.util.List)",
            "org.apache.camel.impl.DeferProducer:void doStart()",
            "org.apache.camel.processor.SendProcessor:void doStart()",
            "org.apache.camel.management.DefaultManagementStrategy:void doStartManagementStrategy()",
            "org.apache.camel.management.PublishEventNotifier:void doStart()",
            "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:void doStart()",
            "org.apache.camel.impl.ScheduledPollConsumer:long beforePoll(long)",
            "org.apache.camel.impl.ScheduledPollConsumer:void doStart()",
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()",
            "org.apache.camel.support.RoutePolicySupport:boolean startConsumer(org.apache.camel.Consumer)",
            "org.apache.camel.support.RoutePolicySupport:boolean resumeOrStartConsumer(org.apache.camel.Consumer)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:void doStart()",
            "org.apache.camel.impl.RouteService:void doWarmUp()",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DefaultProducerTemplate:void doStart()",
            "org.apache.camel.processor.interceptor.BacklogDebugger:void enableDebugger()",
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ServiceHelper:void startService(org.apache.camel.Service)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumer:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.dataset.DataSetConsumer:void sendMessages(long,long)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean customProcessExchange(org.apache.camel.Exchange,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:java.util.concurrent.CompletableFuture asyncSend(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor,java.util.concurrent.CompletableFuture)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture lambda$asyncSendExchange$3(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor,org.apache.camel.Exchange,java.util.concurrent.CompletableFuture)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:boolean execute(org.apache.camel.cloud.ServiceDefinition,org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:java.lang.Boolean lambda$process$0(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.cloud.ServiceDefinition)"
        ]
    },
    "org.apache.camel.component.bean.BeanProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.Splitter:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.ref.RefLanguage$1:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object access$200(org.apache.camel.component.mock.MockEndpoint,org.apache.camel.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.model.language.ExpressionDefinition:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.model.language.ExpressionDefinition:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onFailure(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer:void onAfterRoute(org.apache.camel.Route,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.validation.PredicateValidatingProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onComplete(org.apache.camel.Exchange)",
            "org.apache.camel.processor.FilterProcessor:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.model.language.ExpressionDefinition:void assertMatches(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.CatchProcessor:boolean handles(org.apache.camel.Exchange)",
            "org.apache.camel.processor.exceptionpolicy.DefaultExceptionPolicyStrategy:boolean matchesWhen(org.apache.camel.model.OnExceptionDefinition,org.apache.camel.Exchange)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor$1:void done(boolean)",
            "org.apache.camel.model.WhenSkipSendToEndpointDefinition$1:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.CatchProcessor:boolean matchesWhen(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.util.List doAggregation(java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.validation.PredicateValidatingProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.validator.ProcessorValidator:void validate(org.apache.camel.Message,org.apache.camel.spi.DataType)"
        ]
    },
    "org.apache.camel.processor.FilterProcessor:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FilterProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.CatchProcessor:boolean handles(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.model.language.ExpressionDefinition:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onFailure(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer:void onAfterRoute(org.apache.camel.Route,org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$1:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.validation.PredicateValidatingProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ValueBuilder:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onComplete(org.apache.camel.Exchange)",
            "org.apache.camel.processor.FilterProcessor:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.language.simple.ast.BinaryExpression$3:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.processor.RedeliveryPolicy:boolean shouldRedeliver(org.apache.camel.Exchange,int,org.apache.camel.Predicate)",
            "org.apache.camel.processor.CatchProcessor:boolean handles(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$3:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor$1:void done(boolean)",
            "org.apache.camel.model.WhenSkipSendToEndpointDefinition$1:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$2:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.CatchProcessor:boolean matchesWhen(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.model.WhenSkipSendToEndpointDefinition$1:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.CatchProcessor:boolean matchesWhen(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CatchProcessor:java.lang.Throwable catches(org.apache.camel.Exchange,java.lang.Throwable)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$67:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.SetBodyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$65:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.Splitter:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.WireTapProcessor:org.apache.camel.Exchange configureExchange(org.apache.camel.Exchange,org.apache.camel.ExchangePattern)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.WireTapProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void doProcess(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AggregateProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint:void assertNoDuplicates(org.apache.camel.Expression)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint$16:void run()",
            "org.apache.camel.component.mock.MockEndpoint$17:void run()"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$41:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.TransformProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.Delayer:long calculateDelay(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.loadbalancer.StickyLoadBalancer:org.apache.camel.Processor chooseProcessor(java.util.List,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.SetHeaderProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean isValid(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean isValid(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.BatchProcessor:boolean isValid(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.BatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$16:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.simple.ast.BinaryExpression$1:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.simple.ast.BinaryExpression$3:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$1:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$74:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.resequencer.DefaultExchangeComparator:java.lang.Long getSequenceNumber(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean successor(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean predecessor(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$72:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.NotifyBuilder$5:boolean onExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ExpressionComparator:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ExpressionComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.mock.MockEndpoint:void assertMessagesSorted(org.apache.camel.Expression,boolean)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$64:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$67:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SetBodyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$65:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Splitter:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)",
            "org.apache.camel.processor.WireTapProcessor:org.apache.camel.Exchange configureExchange(org.apache.camel.Exchange,org.apache.camel.ExchangePattern)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doProcess(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint:void assertNoDuplicates(org.apache.camel.Expression)",
            "org.apache.camel.builder.ExpressionBuilder$41:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.TransformProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Delayer:long calculateDelay(org.apache.camel.Exchange)",
            "org.apache.camel.processor.loadbalancer.StickyLoadBalancer:org.apache.camel.Processor chooseProcessor(java.util.List,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetHeaderProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean isValid(org.apache.camel.Exchange)",
            "org.apache.camel.processor.BatchProcessor:boolean isValid(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$16:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$74:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:java.lang.Long getSequenceNumber(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$72:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.NotifyBuilder$5:boolean onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.ExpressionComparator:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$64:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ProcessorBuilder$5:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.DynamicRouter$DynamicRoutingSlipIterator:boolean hasNext(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint$8:void run()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SortProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.EvaluateExpressionProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.mock.MockEndpoint:void assertMessagesSorted(org.apache.camel.Expression,boolean)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$71:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.ScriptProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ValueBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.ref.RefLanguage$1:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$75:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.processor.RecipientList:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void trackTimeout(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetPropertyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:void calculateAndSetMaxRequestsPerPeriod(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$73:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RoutingSlip:org.apache.camel.processor.RoutingSlip$RoutingSlipIterator createRoutingSlipIterator(org.apache.camel.Exchange,org.apache.camel.Expression)",
            "org.apache.camel.builder.ExpressionBuilder$63:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$19:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ProcessorBuilder$3:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.builder.ProcessorBuilder$5:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DynamicRouter$DynamicRoutingSlipIterator:boolean hasNext(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint$8:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.SortProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.EvaluateExpressionProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint:void assertMessagesSorted(org.apache.camel.Expression,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint:void assertMessagesDescending(org.apache.camel.Expression)",
            "org.apache.camel.component.mock.MockEndpoint:void assertMessagesAscending(org.apache.camel.Expression)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$71:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.ScriptProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ValueBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Throttler:void calculateAndSetMaxRequestsPerPeriod(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.language.ref.RefLanguage$1:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$75:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void trackTimeout(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.util.List doAggregation(java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.SetPropertyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.Throttler:void calculateAndSetMaxRequestsPerPeriod(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Throttler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$73:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.RoutingSlip:org.apache.camel.processor.RoutingSlip$RoutingSlipIterator createRoutingSlipIterator(org.apache.camel.Exchange,org.apache.camel.Expression)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$63:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$19:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.simple.ast.BinaryExpression$2:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.simple.ast.BinaryExpression$3:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$1:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ProcessorBuilder$3:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateSyncProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.binding.BindingProducer:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.binding.BindingConsumerProcessor:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()",
            "org.apache.camel.component.dataset.DataSetConsumer:void sendMessages(long,long)",
            "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.String,org.apache.camel.Exchange,java.lang.Throwable)",
            "org.apache.camel.impl.ScheduledBatchPollingConsumer:void processEmptyMessage()",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.file.GenericFileConsumer:boolean processExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.component.ApiConsumerHelper:void processResult(org.apache.camel.impl.DefaultConsumer,java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.component.timer.TimerConsumer:void sendTimerExchange(long)",
            "org.apache.camel.impl.ScheduledPollConsumer:void processEmptyMessage()"
        ]
    },
    "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$67:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$66:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$69:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SetBodyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$65:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.support.ExpressionSupport:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Splitter:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)",
            "org.apache.camel.processor.WireTapProcessor:org.apache.camel.Exchange configureExchange(org.apache.camel.Exchange,org.apache.camel.ExchangePattern)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doProcess(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint:void assertNoDuplicates(org.apache.camel.Expression)",
            "org.apache.camel.builder.ExpressionBuilder$25:java.lang.Object getKeyedEntity(org.apache.camel.Exchange,java.lang.String)",
            "org.apache.camel.processor.SendDynamicProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$41:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.language.simple.ast.SimpleFunctionStart$1:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.processor.TransformProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Delayer:long calculateDelay(org.apache.camel.Exchange)",
            "org.apache.camel.processor.loadbalancer.StickyLoadBalancer:org.apache.camel.Processor chooseProcessor(java.util.List,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetHeaderProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$8:java.lang.Object getKeyedEntity(org.apache.camel.Exchange,java.lang.String)",
            "org.apache.camel.support.TokenPairExpressionIterator:java.util.Iterator createIterator(org.apache.camel.Exchange,java.io.InputStream,java.lang.String)",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean isValid(org.apache.camel.Exchange)",
            "org.apache.camel.processor.BatchProcessor:boolean isValid(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$16:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$68:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.support.ExpressionSupport:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$101:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$74:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$45:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$18:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.controlbus.ControlBusProducer$ActionTask:void run()",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:java.lang.Long getSequenceNumber(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$88:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$47:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$72:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$5:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.NotifyBuilder$5:boolean onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$28:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.util.ExpressionComparator:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$64:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.support.TokenXMLPairExpressionIterator:java.util.Iterator createIterator(org.apache.camel.Exchange,java.io.InputStream,java.lang.String)",
            "org.apache.camel.builder.ExpressionBuilder$33:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ProcessorBuilder$5:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.DynamicRouter$DynamicRoutingSlipIterator:boolean hasNext(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$23:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint$8:void run()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SortProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseBestPossibleMethodInfo(org.apache.camel.Exchange,java.util.Collection,java.lang.Object,java.util.List,java.util.List,java.util.List)",
            "org.apache.camel.processor.EvaluateExpressionProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.mock.MockEndpoint:void assertMessagesSorted(org.apache.camel.Expression,boolean)",
            "org.apache.camel.support.TokenXMLExpressionIterator:java.util.Iterator createIterator(org.apache.camel.Exchange,java.io.InputStream,java.lang.String)",
            "org.apache.camel.builder.ExpressionBuilder$98:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$7:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$83:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$71:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.ScriptProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$24:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$10:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ValueBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ExpressionBuilder$30:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$102:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$89:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.language.ref.RefLanguage$1:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$75:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.processor.RecipientList:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void trackTimeout(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetPropertyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$48:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$6:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Throttler:void calculateAndSetMaxRequestsPerPeriod(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$73:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$100:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RoutingSlip:org.apache.camel.processor.RoutingSlip$RoutingSlipIterator createRoutingSlipIterator(org.apache.camel.Exchange,org.apache.camel.Expression)",
            "org.apache.camel.builder.ExpressionBuilder$63:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$34:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$19:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$29:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ProcessorBuilder$3:void process(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$46:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.bean.AbstractCamelInvocationHandler$1:java.lang.Object call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.EndpointHelper:void pollEndpoint(org.apache.camel.Endpoint,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.test.TestEndpoint:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(java.lang.String,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,long,java.lang.Class)",
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(org.apache.camel.Endpoint,long)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,long)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(org.apache.camel.Endpoint,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receiveNoWait(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receiveNoWait(org.apache.camel.Endpoint)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(java.lang.String,java.lang.Class)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(java.lang.String)"
        ]
    },
    "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer$1:java.lang.Object call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer$1:java.lang.Object call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer$2:java.lang.Object call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.BatchProcessor$BatchSender:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.resequencer.ResequencerEngine:boolean deliverNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ResequencerEngine:void deliver()"
        ]
    },
    "org.apache.camel.impl.ProducerCache:java.lang.Object doInProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.ProducerCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:org.apache.camel.Exchange sendExchange(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.ReferenceCounted:void retain()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.AbstractCamelClusterService$ViewHolder:org.apache.camel.ha.CamelClusterView retain()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.AbstractCamelClusterService:org.apache.camel.ha.CamelClusterView lambda$getView$3(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void onInit(org.apache.camel.Route)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ReferenceCounted:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.AbstractCamelClusterService$ViewHolder:void release()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ReferenceCounted:void release()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluateAs(org.apache.camel.Exchange,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.xml.XPathBuilder:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.main.MainSupport:void run(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.main.Main:void main(java.lang.String[])"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(org.apache.camel.CamelContext,org.apache.camel.ha.CamelClusterService$Selector,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicyFactory:org.apache.camel.spi.RoutePolicy createRoutePolicy(org.apache.camel.CamelContext,java.lang.String,org.apache.camel.model.RouteDefinition)",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(org.apache.camel.CamelContext,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(org.apache.camel.ha.CamelClusterService,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicyFactory:org.apache.camel.spi.RoutePolicy createRoutePolicy(org.apache.camel.CamelContext,java.lang.String,org.apache.camel.model.RouteDefinition)",
            "org.apache.camel.impl.ha.ClusteredRouteController$PolicyFactory:org.apache.camel.spi.RoutePolicy createRoutePolicy(org.apache.camel.CamelContext,java.lang.String,org.apache.camel.model.RouteDefinition)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(org.apache.camel.ha.CamelClusterService$Selector,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.ProducerTemplate createProducerTemplate(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.ProducerTemplate createProducerTemplate()",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.ProducerTemplate template()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.spi.Language resolveLanguage(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileEndpoint:org.apache.camel.Expression createFileLanguageExpression(java.lang.String)",
            "org.apache.camel.builder.ExpressionBuilder$101:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$102:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$69:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseMethodWithMatchingParameters(org.apache.camel.Exchange,java.lang.String,java.util.Collection)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.impl.SubscribeMethodProcessor:void addMethod(java.lang.Object,java.lang.reflect.Method,org.apache.camel.Endpoint,java.lang.String)",
            "org.apache.camel.builder.SimpleBuilder:org.apache.camel.Expression createExpression(org.apache.camel.Exchange)",
            "org.apache.camel.component.file.GenericFileDefaultSorter:java.util.Comparator sortByFileLanguage(org.apache.camel.CamelContext,java.lang.String,boolean,boolean,java.util.Comparator)",
            "org.apache.camel.builder.ExpressionBuilder$82:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$81:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.file.GenericFileEndpoint:org.apache.camel.Predicate createFileLanguagePredicate(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void forceLazyInitialization()",
            "org.apache.camel.processor.interceptor.BacklogDebugger:void addConditionalBreakpoint(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.camel.component.language.LanguageEndpoint:org.apache.camel.Producer createProducer()",
            "org.apache.camel.component.language.LanguageComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.controlbus.ControlBusComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluateParameterValue(org.apache.camel.Exchange,int,java.lang.Object,java.lang.Class)",
            "org.apache.camel.builder.SimpleBuilder:org.apache.camel.Predicate createPredicate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.BacklogTracer:void setTraceFilter(java.lang.String)",
            "org.apache.camel.util.ResourceHelper:java.io.InputStream resolveMandatoryResourceAsInputStream(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.builder.ExpressionBuilder$68:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void startServices(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.ConsumerTemplate createConsumerTemplate(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.ConsumerTemplate createConsumerTemplate()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Component initComponent(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Component lambda$getComponent$0(java.lang.String,boolean,boolean,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void access$000(org.apache.camel.impl.DefaultCamelContext)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.FluentProducerTemplate createFluentProducerTemplate(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.FluentProducerTemplate createFluentProducerTemplate()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void doStartOrResumeRouteConsumers(java.util.Map,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doResumeRouteConsumers(java.util.Map,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:void doStartRouteConsumers(java.util.Map,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Endpoint addEndpoint(java.lang.String,org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.ref.RefEndpoint:void doStart()"
        ]
    },
    "org.apache.camel.impl.ConsumerCache:org.apache.camel.PollingConsumer getConsumer(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ConsumerCache:org.apache.camel.PollingConsumer acquirePollingConsumer(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receive(org.apache.camel.Endpoint,long)",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receive(org.apache.camel.Endpoint)",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void deferStartService(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doAddService(java.lang.Object,boolean,boolean)",
            "org.apache.camel.impl.CamelPostProcessorHelper:void startService(org.apache.camel.Service,org.apache.camel.CamelContext,java.lang.Object,java.lang.String)",
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,boolean,java.lang.ClassLoader,java.lang.Class[],org.apache.camel.component.bean.MethodInfoCache)",
            "org.apache.camel.processor.DeferServiceFactory:org.apache.camel.Producer createProducer(org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.impl.DeferServiceStartupListener:void onCamelContextStarted(org.apache.camel.CamelContext,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.RoutingSlip:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.management.DefaultManagementMBeanAssembler:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:java.util.List getExchanges()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.PojoProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RecipientListProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.EmptyProducerCache:org.apache.camel.Producer acquireProducer(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientListProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.EmptyConsumerCache:org.apache.camel.PollingConsumer acquirePollingConsumer(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void doAddService(java.lang.Object,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void addService(java.lang.Object,boolean,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:void addService(java.lang.Object,boolean)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:void startService(org.apache.camel.Service,org.apache.camel.CamelContext,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.PollingConsumer createInjectionPollingConsumer(org.apache.camel.Endpoint,java.lang.Object,java.lang.String)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.FluentProducerTemplate createInjectionFluentProducerTemplate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.ConsumerTemplate createInjectionConsumerTemplate(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.ProducerTemplate createInjectionProducerTemplate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.CamelPostProcessorHelper:void subscribeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultScheduledPollConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.SendDynamicProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:org.apache.camel.Producer getTraceEventProducer(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:void traceExchange(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.InterceptSendToEndpoint$1:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ServiceHelper:void startService(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ServiceHelper:boolean resumeService(java.lang.Object)",
            "org.apache.camel.component.log.LogEndpoint:void doStart()",
            "org.apache.camel.processor.WrapProcessor:void doStart()",
            "org.apache.camel.impl.cloud.DefaultServiceLoadBalancer:void doStart()",
            "org.apache.camel.impl.ProcessorPollingConsumer:void doStart()",
            "org.apache.camel.component.file.GenericFileProducer:void doStart()",
            "org.apache.camel.component.log.LogEndpoint:org.apache.camel.Producer createProducer()",
            "org.apache.camel.impl.validator.ProcessorValidator:void doStart()",
            "org.apache.camel.processor.aggregate.AggregationStrategyBeanAdapter:void doStart()",
            "org.apache.camel.component.bean.AbstractBeanProcessor:void doStart()",
            "org.apache.camel.impl.InterceptSendToEndpoint$1:void start()",
            "org.apache.camel.component.validator.ValidatorProducer:void doStart()",
            "org.apache.camel.management.DefaultManagementAgent:void doStart()",
            "org.apache.camel.impl.transformer.ProcessorTransformer:void doStart()",
            "org.apache.camel.component.rest.RestApiProducer:void doStart()",
            "org.apache.camel.processor.UnitOfWorkProducer:void start()",
            "org.apache.camel.component.bean.BeanProducer:void doStart()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doStart()",
            "org.apache.camel.management.DefaultManagementStrategy:void doStartManagementStrategy()",
            "org.apache.camel.processor.OnCompletionProcessor:void doStart()",
            "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:void doStart()",
            "org.apache.camel.processor.DelegateSyncProcessor:void doStart()",
            "org.apache.camel.management.mbean.ManagedProcessor:void start()",
            "org.apache.camel.builder.NotifyBuilder:void <init>(org.apache.camel.CamelContext)",
            "org.apache.camel.util.ServiceHelper:void startServices(java.util.Collection)",
            "org.apache.camel.main.MainSupport:void postProcessCamelContext(org.apache.camel.CamelContext)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:void doStart()",
            "org.apache.camel.processor.WireTapProcessor:void doStart()",
            "org.apache.camel.processor.FilterProcessor:void doStart()",
            "org.apache.camel.impl.DefaultDebugger:void start()",
            "org.apache.camel.impl.RouteService:void doStart()"
        ]
    },
    "org.apache.camel.component.seda.SedaEndpoint:org.apache.camel.processor.MulticastProcessor getConsumerMulticastProcessor()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.seda.SedaConsumer:void sendToConsumers(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.RouteService:void startChildService(org.apache.camel.Route,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.RouteService:void doWarmUp()"
        ]
    },
    "org.apache.camel.impl.DeferProducer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.SendProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.management.DefaultManagementStrategy:void doStartManagementStrategy()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementStrategy:void doStart()",
            "org.apache.camel.management.ManagedManagementStrategy:void doStart()"
        ]
    },
    "org.apache.camel.management.PublishEventNotifier:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ScheduledPollConsumer:long beforePoll(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:long beforePoll(long)"
        ]
    },
    "org.apache.camel.impl.ScheduledPollConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:void doStart()",
            "org.apache.camel.support.ServiceSupport:void start()",
            "org.apache.camel.component.file.GenericFileConsumer:void doStart()",
            "org.apache.camel.component.scheduler.SchedulerConsumer:void doStart()"
        ]
    },
    "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.support.RoutePolicySupport:boolean startConsumer(org.apache.camel.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.RoutePolicySupport:boolean resumeOrStartConsumer(org.apache.camel.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void startConsumer(int,org.apache.camel.Consumer)",
            "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void halfOpenCircuit(org.apache.camel.Route)",
            "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void closeCircuit(org.apache.camel.Route)"
        ]
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.RouteService:void doWarmUp()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.RouteService:void warmUp()"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.interceptor.BacklogDebugger:void enableDebugger()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedBacklogDebugger:void enableDebugger()"
        ]
    },
    "org.apache.camel.component.file.GenericFileConsumer:boolean customProcessExchange(org.apache.camel.Exchange,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileConsumer:int processBatch(java.util.Queue)"
        ]
    },
    "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:java.lang.Boolean lambda$process$0(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.cloud.ServiceDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint:java.lang.Object access$200(org.apache.camel.component.mock.MockEndpoint,org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint$5:void run()",
            "org.apache.camel.component.mock.MockEndpoint$2:void run()",
            "org.apache.camel.component.mock.MockEndpoint$4:void run()",
            "org.apache.camel.component.mock.MockEndpoint$6:void run()",
            "org.apache.camel.component.mock.MockEndpoint$3:void run()"
        ]
    },
    "org.apache.camel.model.language.ExpressionDefinition:void assertMatches(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.exceptionpolicy.DefaultExceptionPolicyStrategy:boolean matchesWhen(org.apache.camel.model.OnExceptionDefinition,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.exceptionpolicy.DefaultExceptionPolicyStrategy:boolean findMatchedExceptionPolicy(java.util.Map,org.apache.camel.Exchange,java.lang.Throwable,java.util.Map)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:java.util.List doAggregation(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doProcess(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$1:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.simple.ast.BinaryExpression$1:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.simple.ast.BinaryExpression$2:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.simple.ast.BinaryExpression$3:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.simple.ast.BinaryExpression$4:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.simple.ast.BinaryExpression$5:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$1:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ValueBuilder:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.language.simple.ast.BinaryExpression$3:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RedeliveryPolicy:boolean shouldRedeliver(org.apache.camel.Exchange,int,org.apache.camel.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean isExhausted(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$3:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.PredicateBuilder$3:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.language.simple.ast.LogicalExpression$2:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$2:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.simple.ast.BinaryExpression$4:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$1:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$2:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.language.simple.ast.LogicalExpression$1:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.CatchProcessor:java.lang.Throwable catches(org.apache.camel.Exchange,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.WireTapProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint$16:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$17:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean isValid(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ElementComparator:boolean isValid(org.apache.camel.processor.resequencer.Element)"
        ]
    },
    "org.apache.camel.processor.BatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.language.simple.ast.BinaryExpression$1:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.resequencer.DefaultExchangeComparator:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean successor(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean successor(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean predecessor(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean predecessor(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.util.ExpressionComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Resequencer$1:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.Resequencer$2:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$41:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$42:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$15:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$48:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$KeyedOgnlExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$46:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$43:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$40:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint:void assertMessagesDescending(org.apache.camel.Expression)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint$15:void run()",
            "org.apache.camel.component.mock.MockEndpoint$14:void run()"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint:void assertMessagesAscending(org.apache.camel.Expression)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint$12:void run()",
            "org.apache.camel.component.mock.MockEndpoint$13:void run()"
        ]
    },
    "org.apache.camel.builder.BinaryPredicateSupport:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.AssertionClause$1:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.language.simple.ast.BinaryExpression$3:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.simple.ast.BinaryExpression$5:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$1:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$2:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.language.simple.ast.BinaryExpression$2:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.ExpressionBuilder$66:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$69:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.support.ExpressionSupport:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.support.ExpressionSupport:void assertMatches(java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$25:java.lang.Object getKeyedEntity(org.apache.camel.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$KeyedOgnlExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.language.simple.ast.SimpleFunctionStart$1:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.ExpressionBuilder$8:java.lang.Object getKeyedEntity(org.apache.camel.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$KeyedOgnlExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.support.TokenPairExpressionIterator:java.util.Iterator createIterator(org.apache.camel.Exchange,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.TokenPairExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$68:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.support.ExpressionSupport:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$101:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$45:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$18:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.controlbus.ControlBusProducer$ActionTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.controlbus.ControlBusProducer:void processByAction(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$88:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$47:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$5:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$28:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.TokenXMLPairExpressionIterator:java.util.Iterator createIterator(org.apache.camel.Exchange,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.ExpressionBuilder$33:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$23:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseBestPossibleMethodInfo(org.apache.camel.Exchange,java.util.Collection,java.lang.Object,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseMethodWithMatchingBody(org.apache.camel.Exchange,java.util.Collection,java.util.List)"
        ]
    },
    "org.apache.camel.support.TokenXMLExpressionIterator:java.util.Iterator createIterator(org.apache.camel.Exchange,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.TokenXMLExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$98:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$7:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$24:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$10:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$30:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$102:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$89:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$48:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$6:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.ExpressionBuilder$100:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$34:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$29:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$46:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,long,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(org.apache.camel.Endpoint,long,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(org.apache.camel.Endpoint,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(org.apache.camel.Endpoint,long)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(org.apache.camel.Endpoint,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receiveNoWait(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(org.apache.camel.Endpoint,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.processor.resequencer.ResequencerEngine:void deliver()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.StreamResequencer$Delivery:void run()"
        ]
    },
    "org.apache.camel.impl.ProducerCache:org.apache.camel.Exchange sendExchange(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:void send(org.apache.camel.Endpoint,org.apache.camel.Exchange)",
            "org.apache.camel.impl.ProducerCache:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor)",
            "org.apache.camel.impl.ProducerCache:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.Processor)",
            "org.apache.camel.impl.ProducerCache:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.impl.ha.AbstractCamelClusterService:org.apache.camel.ha.CamelClusterView lambda$getView$3(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.concurrent.LockHelper:java.lang.Object callWithWriteLock(java.util.concurrent.locks.StampedLock,java.util.concurrent.Callable)"
        ]
    },
    "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.xml.XPathBuilder:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:boolean matches(org.apache.camel.CamelContext,java.lang.Object)"
        ]
    },
    "org.apache.camel.main.Main:void main(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicyFactory:org.apache.camel.spi.RoutePolicy createRoutePolicy(org.apache.camel.CamelContext,java.lang.String,org.apache.camel.model.RouteDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRouteController$PolicyFactory:org.apache.camel.spi.RoutePolicy createRoutePolicy(org.apache.camel.CamelContext,java.lang.String,org.apache.camel.model.RouteDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.ProducerTemplate createProducerTemplate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.ProducerTemplate template()"
        ]
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.ProducerTemplate template()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.Exchange send()",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:void doStart()",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:java.util.concurrent.Future asyncSend()",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:java.lang.Object request(java.lang.Class)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:java.util.concurrent.Future asyncRequest(java.lang.Class)"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:org.apache.camel.Expression createFileLanguageExpression(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileEndpoint:void setMoveExisting(java.lang.String)",
            "org.apache.camel.component.file.GenericFileEndpoint:void setMoveFailed(java.lang.String)",
            "org.apache.camel.component.file.GenericFileEndpoint:void setPreMove(java.lang.String)",
            "org.apache.camel.component.file.GenericFileEndpoint:void setMove(java.lang.String)",
            "org.apache.camel.component.file.GenericFileEndpoint:void setTempFileName(java.lang.String)",
            "org.apache.camel.component.file.GenericFileEndpoint:void setIdempotentKey(java.lang.String)",
            "org.apache.camel.component.file.GenericFileEndpoint:void setFileName(java.lang.String)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseMethodWithMatchingParameters(org.apache.camel.Exchange,java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseMethod(java.lang.Object,org.apache.camel.Exchange,java.lang.String)"
        ]
    },
    "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.XQueryExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.component.mock.AssertionClause:org.apache.camel.builder.ValueBuilder expression(org.apache.camel.model.language.ExpressionDefinition)",
            "org.apache.camel.model.language.JsonPathExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.XPathExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.model.cloud.ServiceCallExpressionConfiguration:org.apache.camel.Expression newInstance(org.apache.camel.CamelContext)",
            "org.apache.camel.builder.ExpressionClauseSupport:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.impl.SubscribeMethodProcessor:void addMethod(java.lang.Object,java.lang.reflect.Method,org.apache.camel.Endpoint,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:void subscribeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.camel.builder.SimpleBuilder:org.apache.camel.Expression createExpression(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.SimpleBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.file.GenericFileDefaultSorter:java.util.Comparator sortByFileLanguage(org.apache.camel.CamelContext,java.lang.String,boolean,boolean,java.util.Comparator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileDefaultSorter:java.util.Comparator sortByFileLanguage(org.apache.camel.CamelContext,java.lang.String,boolean,boolean)",
            "org.apache.camel.component.file.GenericFileDefaultSorter:java.util.Comparator sortByFileLanguage(org.apache.camel.CamelContext,java.lang.String,boolean)",
            "org.apache.camel.component.file.GenericFileComponent:java.util.Comparator createSortByComparator(java.util.Iterator)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$82:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$81:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:org.apache.camel.Predicate createFileLanguagePredicate(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileEndpoint:void setFilterFile(java.lang.String)",
            "org.apache.camel.component.file.GenericFileEndpoint:void setFilterDirectory(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void forceLazyInitialization()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()"
        ]
    },
    "org.apache.camel.processor.interceptor.BacklogDebugger:void addConditionalBreakpoint(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedBacklogDebugger:void addConditionalBreakpoint(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.camel.component.language.LanguageEndpoint:org.apache.camel.Producer createProducer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.language.LanguageComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.controlbus.ControlBusComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.language.ExpressionDefinition:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)",
            "org.apache.camel.model.validator.PredicateValidatorDefinition:org.apache.camel.spi.Validator doCreateValidator(org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.XPathExpression:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluateParameterValue(org.apache.camel.Exchange,int,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object[] evaluateParameterExpressions(org.apache.camel.Exchange,java.lang.Object,boolean,java.util.Iterator)"
        ]
    },
    "org.apache.camel.builder.SimpleBuilder:org.apache.camel.Predicate createPredicate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.SimpleBuilder:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.interceptor.BacklogTracer:void setTraceFilter(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedBacklogTracer:void setTraceFilter(java.lang.String)"
        ]
    },
    "org.apache.camel.util.ResourceHelper:java.io.InputStream resolveMandatoryResourceAsInputStream(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:java.lang.String getInputUri()",
            "org.apache.camel.builder.xml.XsltUriResolver:javax.xml.transform.Source resolve(java.lang.String,java.lang.String)",
            "org.apache.camel.support.LanguageSupport:java.lang.String loadResource(java.lang.String)",
            "org.apache.camel.processor.validation.SchemaReader:byte[] readSchemaResource()",
            "org.apache.camel.component.ResourceEndpoint:java.io.InputStream loadResource(java.lang.String)",
            "org.apache.camel.util.ResourceHelper:java.lang.String resolveOptionalExternalScript(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.component.language.LanguageProducer:void process(org.apache.camel.Exchange)",
            "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:java.io.InputStream getByteStream()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.ConsumerTemplate createConsumerTemplate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Component lambda$getComponent$0(java.lang.String,boolean,boolean,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void access$000(org.apache.camel.impl.DefaultCamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext$2:java.lang.Void call()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.FluentProducerTemplate createFluentProducerTemplate()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void doResumeRouteConsumers(java.util.Map,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void safelyStartRouteServices(boolean,boolean,boolean,boolean,java.util.Collection)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void doStartRouteConsumers(java.util.Map,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void safelyStartRouteServices(boolean,boolean,boolean,boolean,java.util.Collection)"
        ]
    },
    "org.apache.camel.component.ref.RefEndpoint:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,boolean,java.lang.ClassLoader,java.lang.Class[],org.apache.camel.component.bean.MethodInfoCache)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.ClassLoader,java.lang.Class,org.apache.camel.component.bean.MethodInfoCache)",
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,boolean,java.lang.ClassLoader,java.lang.Class[])",
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,boolean,java.lang.ClassLoader,java.lang.Class,org.apache.camel.component.bean.MethodInfoCache)",
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.ClassLoader,java.lang.Class[],org.apache.camel.component.bean.MethodInfoCache)"
        ]
    },
    "org.apache.camel.processor.DeferServiceFactory:org.apache.camel.Producer createProducer(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,boolean,java.lang.ClassLoader,java.lang.Class[],org.apache.camel.component.bean.MethodInfoCache)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Producer createInjectionProducer(org.apache.camel.Endpoint,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.camel.processor.RecipientListProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void addService(java.lang.Object,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.UnmarshalProcessor:void doStart()",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.TypeConverter getTypeConverter()",
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()",
            "org.apache.camel.impl.DefaultCamelContext:void setTypeConverter(org.apache.camel.TypeConverter)",
            "org.apache.camel.processor.MarshalProcessor:void doStart()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void addService(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileEndpoint:void doStart()",
            "org.apache.camel.impl.DefaultCamelContext:void addService(java.lang.Object)",
            "org.apache.camel.processor.RestBindingAdvice:void <init>(org.apache.camel.CamelContext,org.apache.camel.spi.DataFormat,org.apache.camel.spi.DataFormat,org.apache.camel.spi.DataFormat,org.apache.camel.spi.DataFormat,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.util.Map,java.util.Map)",
            "org.apache.camel.impl.DefaultRestRegistry:java.lang.String apiDocAsJson()",
            "org.apache.camel.impl.CamelPostProcessorHelper:void subscribeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.camel.impl.ProducerCache:org.apache.camel.Producer doGetProducer(org.apache.camel.Endpoint,boolean)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.PollingConsumer createInjectionPollingConsumer(org.apache.camel.Endpoint,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.FluentProducerTemplate createInjectionFluentProducerTemplate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.ConsumerTemplate createInjectionConsumerTemplate(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.ProducerTemplate createInjectionProducerTemplate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:void subscribeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:void consumerInjection(java.lang.reflect.Method,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:void traceExchange(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:void traceExchangeOut(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:java.lang.Object traceExchangeIn(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.ServiceHelper:boolean resumeService(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.RoutePolicySupport:boolean resumeOrStartConsumer(org.apache.camel.Consumer)",
            "org.apache.camel.impl.DefaultCamelContext:void resumeRoute(java.lang.String)",
            "org.apache.camel.util.ServiceHelper:void resumeServices(java.util.Collection)",
            "org.apache.camel.impl.ScheduledPollConsumer:long beforePoll(long)",
            "org.apache.camel.impl.DefaultCamelContext:void doStartOrResumeRouteConsumers(java.util.Map,boolean,boolean)"
        ]
    },
    "org.apache.camel.component.log.LogEndpoint:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.WrapProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.cloud.DefaultServiceLoadBalancer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ProcessorPollingConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.file.GenericFileProducer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.log.LogEndpoint:org.apache.camel.Producer createProducer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.validator.ProcessorValidator:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.AggregationStrategyBeanAdapter:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.AbstractBeanProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanProcessor:void doStart()"
        ]
    },
    "org.apache.camel.component.validator.ValidatorProducer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.DefaultManagementAgent:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.transformer.ProcessorTransformer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.rest.RestApiProducer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.UnitOfWorkProducer:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanProducer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.OnCompletionProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DelegateSyncProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.management.mbean.ManagedProcessor:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.NotifyBuilder:void <init>(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ServiceHelper:void startServices(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ServiceHelper:void startServices(java.lang.Object[])",
            "org.apache.camel.impl.ConsumerCache:void doStart()",
            "org.apache.camel.support.ChildServiceSupport:void start(boolean)",
            "org.apache.camel.processor.loadbalancer.LoadBalancerSupport:void doStart()",
            "org.apache.camel.impl.ProducerCache:void doStart()",
            "org.apache.camel.util.ServiceHelper:void startService(java.lang.Object)",
            "org.apache.camel.impl.SubscribeMethodProcessor:void doStart()",
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()"
        ]
    },
    "org.apache.camel.main.MainSupport:void postProcessCamelContext(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.main.MainSupport:void postProcessContext()"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.WireTapProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.FilterProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.DefaultDebugger:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ServiceHelper:void startService(org.apache.camel.Service)"
        ]
    },
    "org.apache.camel.impl.RouteService:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ChildServiceSupport:void start(boolean)"
        ]
    },
    "org.apache.camel.management.DefaultManagementStrategy:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.management.ManagedManagementStrategy:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.EventDrivenPollingConsumer:long beforePoll(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:org.apache.camel.Exchange receive()",
            "org.apache.camel.impl.EventDrivenPollingConsumer:org.apache.camel.Exchange receive(long)"
        ]
    },
    "org.apache.camel.component.file.GenericFileConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.scheduler.SchedulerConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void startConsumer(int,org.apache.camel.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void throttle(org.apache.camel.Route,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void halfOpenCircuit(org.apache.camel.Route)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void calculateState(org.apache.camel.Route)"
        ]
    },
    "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void closeCircuit(org.apache.camel.Route)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void calculateState(org.apache.camel.Route)"
        ]
    },
    "org.apache.camel.impl.RouteService:void warmUp()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.RouteService:void doStart()"
        ]
    },
    "org.apache.camel.management.mbean.ManagedBacklogDebugger:void enableDebugger()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$5:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$2:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$4:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$6:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$3:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.exceptionpolicy.DefaultExceptionPolicyStrategy:boolean findMatchedExceptionPolicy(java.util.Map,org.apache.camel.Exchange,java.lang.Throwable,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.exceptionpolicy.DefaultExceptionPolicyStrategy:org.apache.camel.model.OnExceptionDefinition getExceptionPolicy(java.util.Map,org.apache.camel.Exchange,java.lang.Throwable)"
        ]
    },
    "org.apache.camel.language.simple.ast.BinaryExpression$4:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.language.simple.ast.BinaryExpression$5:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:boolean isExhausted(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:void processAsyncErrorHandler(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData)"
        ]
    },
    "org.apache.camel.language.simple.ast.LogicalExpression$2:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.language.simple.ast.LogicalExpression$1:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.resequencer.ElementComparator:boolean isValid(org.apache.camel.processor.resequencer.Element)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ElementComparator:boolean isValid(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.DefaultExchangeComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ElementComparator:int compare(org.apache.camel.processor.resequencer.Element,org.apache.camel.processor.resequencer.Element)"
        ]
    },
    "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean successor(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ElementComparator:boolean successor(org.apache.camel.processor.resequencer.Element,org.apache.camel.processor.resequencer.Element)"
        ]
    },
    "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean predecessor(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ElementComparator:boolean predecessor(org.apache.camel.processor.resequencer.Element,org.apache.camel.processor.resequencer.Element)"
        ]
    },
    "org.apache.camel.processor.Resequencer$1:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Resequencer$1:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.Resequencer$2:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Resequencer$2:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$42:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$15:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$KeyedOgnlExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$43:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$40:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint$15:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$14:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$12:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$13:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.AssertionClause$1:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.ExpressionSupport:void assertMatches(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.TokenPairExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.TokenPairExpressionIterator:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.support.TokenPairExpressionIterator:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.controlbus.ControlBusProducer:void processByAction(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.controlbus.ControlBusProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseMethodWithMatchingBody(org.apache.camel.Exchange,java.util.Collection,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseMethod(java.lang.Object,org.apache.camel.Exchange,java.lang.String)"
        ]
    },
    "org.apache.camel.support.TokenXMLExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.TokenXMLExpressionIterator:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.support.TokenXMLExpressionIterator:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(org.apache.camel.Endpoint,long,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(org.apache.camel.Endpoint,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(org.apache.camel.Endpoint,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.StreamResequencer$Delivery:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ProducerCache:void send(org.apache.camel.Endpoint,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(org.apache.camel.Endpoint,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(org.apache.camel.Endpoint,java.lang.Object,java.util.Map,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.util.concurrent.LockHelper:java.lang.Object callWithWriteLock(java.util.concurrent.locks.StampedLock,java.util.concurrent.Callable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.AbstractCamelClusterService:org.apache.camel.ha.CamelClusterView getView(java.lang.String)"
        ]
    },
    "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.String evaluate(org.apache.camel.CamelContext,java.lang.Object)",
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluate(org.apache.camel.CamelContext,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.xml.XPathBuilder:boolean matches(org.apache.camel.CamelContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.Exchange send()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:java.util.concurrent.Future asyncSend()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:java.lang.Object request(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.DefaultFluentProducerTemplate:java.lang.Object request()"
        ]
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:java.util.concurrent.Future asyncRequest(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.DefaultFluentProducerTemplate:java.util.concurrent.Future asyncRequest()"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setMoveExisting(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setMoveFailed(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setPreMove(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setMove(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setTempFileName(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileEndpoint:void setTempPrefix(java.lang.String)"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setIdempotentKey(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setFileName(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseMethod(java.lang.Object,org.apache.camel.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInvocation createInvocation(java.lang.Object,org.apache.camel.Exchange,java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.model.language.XQueryExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.builder.ExpressionClauseSupport:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RecipientListDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.LoopDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.SetHeaderDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.AggregateDefinition:org.apache.camel.processor.aggregate.AggregateProcessor createAggregator(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ExpressionSubElementDefinition:org.apache.camel.Expression createExpression(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.SetOutHeaderDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ThrottleDefinition:org.apache.camel.Expression createMaxRequestsPerPeriodExpression(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.PollEnrichDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.TransformDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ResequenceDefinition:org.apache.camel.processor.StreamResequencer createStreamResequencer(org.apache.camel.spi.RouteContext,org.apache.camel.model.config.StreamResequencerConfig)",
            "org.apache.camel.model.SetPropertyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.SetBodyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ScriptDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ResequenceDefinition:org.apache.camel.processor.Resequencer createBatchResequencer(org.apache.camel.spi.RouteContext,org.apache.camel.model.config.BatchResequencerConfig)",
            "org.apache.camel.model.IdempotentConsumerDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.DelayDefinition:org.apache.camel.Expression createAbsoluteTimeDelayExpression(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.DynamicRouterDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.RoutingSlipDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.EnrichDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.SortDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.SplitDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.SetFaultBodyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.component.mock.AssertionClause:org.apache.camel.builder.ValueBuilder expression(org.apache.camel.model.language.ExpressionDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.AssertionClause:java.lang.Object expression(org.apache.camel.model.language.ExpressionDefinition)"
        ]
    },
    "org.apache.camel.model.language.JsonPathExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.builder.ExpressionClauseSupport:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.XPathExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ExpressionClauseSupport:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallExpressionConfiguration:org.apache.camel.Expression newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallExpressionConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Expression lambda$retrieveExpression$29(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.builder.ExpressionClauseSupport:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.NotifyBuilder$5:boolean onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint$15:void run()",
            "org.apache.camel.component.mock.MockEndpoint$8:void run()",
            "org.apache.camel.component.mock.MockEndpoint$13:void run()",
            "org.apache.camel.component.mock.MockEndpoint$17:void run()"
        ]
    },
    "org.apache.camel.builder.SimpleBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$67:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SetBodyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$65:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Splitter:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)",
            "org.apache.camel.processor.WireTapProcessor:org.apache.camel.Exchange configureExchange(org.apache.camel.Exchange,org.apache.camel.ExchangePattern)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doProcess(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint:void assertNoDuplicates(org.apache.camel.Expression)",
            "org.apache.camel.builder.ExpressionBuilder$41:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.TransformProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Delayer:long calculateDelay(org.apache.camel.Exchange)",
            "org.apache.camel.processor.loadbalancer.StickyLoadBalancer:org.apache.camel.Processor chooseProcessor(java.util.List,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetHeaderProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:boolean isValid(org.apache.camel.Exchange)",
            "org.apache.camel.processor.BatchProcessor:boolean isValid(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$16:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$74:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.resequencer.DefaultExchangeComparator:java.lang.Long getSequenceNumber(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$72:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.NotifyBuilder$5:boolean onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.ExpressionComparator:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$64:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ProcessorBuilder$5:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.DynamicRouter$DynamicRoutingSlipIterator:boolean hasNext(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint$8:void run()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SortProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.EvaluateExpressionProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.mock.MockEndpoint:void assertMessagesSorted(org.apache.camel.Expression,boolean)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$71:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.ScriptProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ValueBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.ref.RefLanguage$1:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.builder.ExpressionBuilder$75:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.processor.RecipientList:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void trackTimeout(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.SetPropertyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Throttler:void calculateAndSetMaxRequestsPerPeriod(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$73:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RoutingSlip:org.apache.camel.processor.RoutingSlip$RoutingSlipIterator createRoutingSlipIterator(org.apache.camel.Exchange,org.apache.camel.Expression)",
            "org.apache.camel.builder.ExpressionBuilder$63:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.PredicateBuilder$19:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ProcessorBuilder$3:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.file.GenericFileDefaultSorter:java.util.Comparator sortByFileLanguage(org.apache.camel.CamelContext,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileDefaultSorter:java.util.Comparator sortByFileLanguage(org.apache.camel.CamelContext,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileEndpoint:void setSortBy(java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.component.file.GenericFileComponent:java.util.Comparator createSortByComparator(java.util.Iterator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileComponent:org.apache.camel.component.file.GenericFileEndpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.file.GenericFileComponent:java.util.Comparator createSortByComparator(java.util.Iterator)"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setFilterFile(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setFilterDirectory(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedBacklogDebugger:void addConditionalBreakpoint(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.LoopDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.OnCompletionDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ExpressionNode:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ExpressionSubElementDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.CatchDefinition:org.apache.camel.processor.CatchProcessor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.OnExceptionDefinition:org.apache.camel.processor.CatchProcessor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ValidateDefinition:org.apache.camel.processor.validation.PredicateValidatingProcessor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.validator.PredicateValidatorDefinition:org.apache.camel.spi.Validator doCreateValidator(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.language.XPathExpression:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.language.ExpressionDefinition:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)",
            "org.apache.camel.model.validator.PredicateValidatorDefinition:org.apache.camel.spi.Validator doCreateValidator(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object[] evaluateParameterExpressions(org.apache.camel.Exchange,java.lang.Object,boolean,java.util.Iterator)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.SimpleBuilder:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.model.language.ExpressionDefinition:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onFailure(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationBeforeConsumer:void onAfterRoute(org.apache.camel.Route,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.validation.PredicateValidatingProcessor:void process(org.apache.camel.Exchange)",
            "org.apache.camel.processor.OnCompletionProcessor$OnCompletionSynchronizationAfterConsumer:void onComplete(org.apache.camel.Exchange)",
            "org.apache.camel.processor.FilterProcessor:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.CatchProcessor:boolean handles(org.apache.camel.Exchange)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.LoopProcessor$1:void done(boolean)",
            "org.apache.camel.model.WhenSkipSendToEndpointDefinition$1:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.processor.CatchProcessor:boolean matchesWhen(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedBacklogTracer:void setTraceFilter(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:java.lang.String getInputUri()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:void <init>(org.apache.camel.component.validator.DefaultLSResourceResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.camel.builder.xml.XsltUriResolver:javax.xml.transform.Source resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.xslt.XsltEndpoint:void loadResource(java.lang.String)",
            "org.apache.camel.builder.xml.XsltUriResolver:javax.xml.transform.Source resolve(java.lang.String,java.lang.String)",
            "org.apache.camel.util.toolbox.XsltAggregationStrategy:void loadResource(java.lang.String)"
        ]
    },
    "org.apache.camel.support.LanguageSupport:java.lang.String loadResource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.xpath.XPathLanguage:org.apache.camel.Predicate createPredicate(java.lang.String)",
            "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression createExpression(java.lang.String)",
            "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Predicate createPredicate(java.lang.String)",
            "org.apache.camel.language.xpath.XPathLanguage:org.apache.camel.Expression createExpression(java.lang.String)"
        ]
    },
    "org.apache.camel.processor.validation.SchemaReader:byte[] readSchemaResource()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.SchemaReader:javax.xml.validation.Schema createSchema()"
        ]
    },
    "org.apache.camel.component.ResourceEndpoint:java.io.InputStream loadResource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.ResourceEndpoint:java.io.InputStream getResourceAsInputStreamWithoutCache()",
            "org.apache.camel.component.language.LanguageEndpoint:java.lang.String resolveScript(java.lang.String)"
        ]
    },
    "org.apache.camel.util.ResourceHelper:java.lang.String resolveOptionalExternalScript(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)",
            "org.apache.camel.builder.SimpleBuilder:org.apache.camel.Expression createExpression(org.apache.camel.Exchange)",
            "org.apache.camel.builder.SimpleBuilder:org.apache.camel.Predicate createPredicate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.language.LanguageProducer:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:java.io.InputStream getByteStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:java.lang.String getStringData()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext$2:java.lang.Void call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext$2:java.lang.Object call()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void safelyStartRouteServices(boolean,boolean,boolean,boolean,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void safelyStartRouteServices(boolean,boolean,boolean,boolean,boolean,org.apache.camel.impl.RouteService[])",
            "org.apache.camel.impl.DefaultCamelContext:void doStartOrResumeRoutes(java.util.Map,boolean,boolean,boolean,boolean)"
        ]
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.ClassLoader,java.lang.Class,org.apache.camel.component.bean.MethodInfoCache)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,boolean,java.lang.ClassLoader,java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.ClassLoader,java.lang.Class[])",
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.ClassLoader,java.lang.Class)",
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,boolean,java.lang.Class[])"
        ]
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,boolean,java.lang.ClassLoader,java.lang.Class,org.apache.camel.component.bean.MethodInfoCache)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.ClassLoader,java.lang.Class[],org.apache.camel.component.bean.MethodInfoCache)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Producer createInjectionProducer(org.apache.camel.Endpoint,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.processor.UnmarshalProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.TypeConverter getTypeConverter()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluateParameterBinding(org.apache.camel.Exchange,org.apache.camel.Expression,int,java.lang.Class)",
            "org.apache.camel.builder.RouteBuilder:java.lang.Object propertyInject(java.lang.String,java.lang.Class)",
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionPropertyValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)",
            "org.apache.camel.util.ExchangeHelper:java.lang.Object convertToType(org.apache.camel.Exchange,java.lang.Class,java.lang.Object)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(org.apache.camel.Endpoint,java.lang.Object,java.lang.Class)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean continueProcessing(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultCamelContext:void forceLazyInitialization()",
            "org.apache.camel.util.GroupTokenIterator:java.lang.Object doNext()",
            "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.lang.Class)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String)",
            "org.apache.camel.util.component.AbstractApiProducer:boolean processInBody(org.apache.camel.Exchange,java.util.Map)",
            "org.apache.camel.management.mbean.ManagedRoute:java.lang.String dumpRouteAsXml(boolean)",
            "org.apache.camel.builder.PredicateBuilder$18:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.bean.AbstractCamelInvocationHandler:java.lang.Object invokeProxy(java.lang.reflect.Method,org.apache.camel.ExchangePattern,java.lang.Object[],boolean)",
            "org.apache.camel.impl.DefaultStreamCachingStrategy:void doStart()",
            "org.apache.camel.impl.ZipDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object lambda$asyncRequestBody$1(java.lang.Class,java.lang.Object)",
            "org.apache.camel.impl.MessageSupport:void setBody(java.lang.Object,java.lang.Class)",
            "org.apache.camel.component.language.LanguageProducer:void process(org.apache.camel.Exchange)",
            "org.apache.camel.impl.ScheduledPollConsumer:void doStart()",
            "org.apache.camel.impl.DefaultExchange:java.lang.Object getIn(java.lang.Class)",
            "org.apache.camel.impl.GzipDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:java.lang.Object request(java.lang.Class)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(java.lang.String,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$7:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractValueForLogging(java.lang.Object,org.apache.camel.Message,java.lang.String,boolean,boolean,int)",
            "org.apache.camel.builder.ExpressionBuilder$80:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveOrResolveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,java.lang.Class)",
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.spi.TypeConverterRegistry getTypeConverterRegistry()",
            "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.util.function.Supplier,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$6:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.file.FileOperations:boolean storeFile(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.util.EndpointHelper:void setProperties(org.apache.camel.CamelContext,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.util.IntrospectionSupport:boolean isPropertyPlaceholder(org.apache.camel.CamelContext,java.lang.Object)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object lookupResult(org.apache.camel.Exchange,java.lang.String,java.lang.Object,boolean,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(org.apache.camel.Endpoint,java.lang.Object,java.util.Map,java.lang.Class)",
            "org.apache.camel.util.ExchangeHelper:java.lang.Object convertToMandatoryType(org.apache.camel.Exchange,java.lang.Class,java.lang.Object)",
            "org.apache.camel.impl.MessageSupport:java.lang.Object getMandatoryBody(java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$11:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.processor.validation.ValidatingProcessor:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.ConfigurationHelper:void setConfigurationField(org.apache.camel.CamelContext,org.apache.camel.EndpointConfiguration,java.lang.String,java.lang.Object)",
            "org.apache.camel.builder.PredicateBuilder$9:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.ObjectHelper:java.util.Scanner getScanner(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluateParameterValue(org.apache.camel.Exchange,int,java.lang.Object,java.lang.Class)",
            "org.apache.camel.processor.DefaultExchangeFormatter:int getMaxChars(org.apache.camel.Message)",
            "org.apache.camel.processor.TryProcessor:boolean continueRouting(java.util.Iterator,org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.Object,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$17:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint doGetEndpointInjection(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.camel.builder.ExpressionBuilder$66:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.FluentProducerTemplate withBodyAs(java.lang.Object,java.lang.Class)",
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String,boolean,boolean)",
            "org.apache.camel.builder.PredicateBuilder$8:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean continueProcessing(org.apache.camel.Exchange,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.util.ResourceHelper:java.lang.String resolveOptionalExternalScript(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.UriComponentConfiguration:java.lang.Object validatePropertyValue(java.lang.String,java.lang.Object)",
            "org.apache.camel.processor.Pipeline:boolean continueRouting(java.util.Iterator,org.apache.camel.Exchange)",
            "org.apache.camel.util.ResourceHelper:java.io.InputStream resolveMandatoryResourceAsInputStream(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.impl.MessageSupport:java.lang.Object getBody(java.lang.Class,java.lang.Object)",
            "org.apache.camel.util.CamelContextHelper:java.lang.Long parseLong(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.model.rest.RestBindingDefinition:org.apache.camel.processor.RestBindingAdvice createRestBindingAdvice(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.util.CamelContextHelper:java.lang.Object tryConvertTo(org.apache.camel.CamelContext,java.lang.Class,java.lang.Object)",
            "org.apache.camel.builder.PredicateBuilder$14:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.language.LanguageEndpoint:java.lang.String resolveScript(java.lang.String)",
            "org.apache.camel.impl.DefaultExchange:java.lang.Object getOut(java.lang.Class)",
            "org.apache.camel.util.ExchangeHelper:java.lang.Object doExtractFutureBody(org.apache.camel.CamelContext,java.lang.Object,java.lang.Class)",
            "org.apache.camel.builder.xml.XsltBuilder:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.util.CamelContextHelper:java.lang.Integer parseInteger(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:java.lang.String getStringData()",
            "org.apache.camel.builder.xml.XPathBuilder:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$15:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class)",
            "org.apache.camel.util.CamelContextHelper:java.lang.Object convertTo(org.apache.camel.CamelContext,java.lang.Class,java.lang.Object)",
            "org.apache.camel.model.ProcessorDefinitionHelper:void resolvePropertyPlaceholders(org.apache.camel.CamelContext,java.lang.Object)",
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseBestPossibleMethodInfo(org.apache.camel.Exchange,java.util.Collection,java.lang.Object,java.util.List,java.util.List,java.util.List)",
            "org.apache.camel.builder.PredicateBuilder$10:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.rest.RestProducer:org.apache.camel.AsyncProcessor createBindingProcessor()",
            "org.apache.camel.builder.ExpressionBuilder$98:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.util.EndpointHelper:void setReferenceProperties(org.apache.camel.CamelContext,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,long,java.lang.Class)",
            "org.apache.camel.processor.PipelineHelper:boolean continueProcessing(org.apache.camel.Exchange,java.lang.String,org.slf4j.Logger)",
            "org.apache.camel.management.DefaultManagementAgent:void finalizeSettings()",
            "org.apache.camel.processor.SendDynamicProcessor:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object doGetDocument(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractValueForLogging(java.lang.Object,org.apache.camel.Message)",
            "org.apache.camel.component.rest.RestComponent:org.apache.camel.spi.RestConfiguration mergeConfigurations(org.apache.camel.spi.RestConfiguration,org.apache.camel.spi.RestConfiguration)",
            "org.apache.camel.builder.PredicateBuilder$5:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.CamelContextHelper:void resolvePropertyPlaceholders(org.apache.camel.CamelContext,java.lang.Object)",
            "org.apache.camel.impl.MappedEndpointConfiguration:java.lang.String toUriString(org.apache.camel.EndpointConfiguration$UriFormat)",
            "org.apache.camel.component.mock.MockEndpoint$10:void run()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void setTypeConverter(org.apache.camel.TypeConverter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MarshalProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void addService(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EmptyConsumerCache:org.apache.camel.PollingConsumer acquirePollingConsumer(org.apache.camel.Endpoint)",
            "org.apache.camel.impl.DefaultRouteContext:void commit()",
            "org.apache.camel.component.properties.PropertiesEndpoint:void doStart()",
            "org.apache.camel.impl.DefaultValidatorRegistry:void <init>(org.apache.camel.CamelContext,java.util.List)",
            "org.apache.camel.impl.DefaultDebugger:void start()",
            "org.apache.camel.impl.DefaultTransformerRegistry:void <init>(org.apache.camel.CamelContext,java.util.List)",
            "org.apache.camel.impl.DefaultRouteContext:org.apache.camel.Endpoint resolveEndpoint(java.lang.String,java.lang.String)",
            "org.apache.camel.management.DefaultManagementLifecycleStrategy$TimerListenerManagerStartupListener:void onCamelContextStarted(org.apache.camel.CamelContext,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Endpoint getEndpoint(java.lang.String)",
            "org.apache.camel.component.bean.MethodInfo:void <init>(org.apache.camel.CamelContext,java.lang.Class,java.lang.reflect.Method,java.util.List,java.util.List,boolean,boolean)",
            "org.apache.camel.impl.EmptyProducerCache:org.apache.camel.Producer acquireProducer(org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.processor.RestBindingAdvice:void <init>(org.apache.camel.CamelContext,org.apache.camel.spi.DataFormat,org.apache.camel.spi.DataFormat,org.apache.camel.spi.DataFormat,org.apache.camel.spi.DataFormat,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.rest.RestBindingDefinition:org.apache.camel.processor.RestBindingAdvice createRestBindingAdvice(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:org.apache.camel.Producer doGetProducer(org.apache.camel.Endpoint,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.impl.ProducerCache:org.apache.camel.Producer acquireProducer(org.apache.camel.Endpoint)",
            "org.apache.camel.impl.ProducerCache:java.lang.Object doInProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.ProducerCallback)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectField(java.lang.reflect.Field,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)",
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:void consumerInjection(java.lang.reflect.Method,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor$2:void doWith(java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:void traceExchangeOut(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:java.lang.Object traceExchangeIn(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void resumeRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedSuspendableRoute:void resume()",
            "org.apache.camel.component.controlbus.ControlBusProducer$ActionTask:void run()",
            "org.apache.camel.impl.DefaultRouteController:void resumeRoute(java.lang.String)"
        ]
    },
    "org.apache.camel.util.ServiceHelper:void resumeServices(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.util.ServiceHelper:void startServices(java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileEndpoint:void doStart()",
            "org.apache.camel.component.binding.BindingProducer:void doStart()",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:void doStart()",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void start()",
            "org.apache.camel.impl.ProducerCache:void doStart()",
            "org.apache.camel.processor.Enricher:void doStart()",
            "org.apache.camel.processor.RedeliveryErrorHandler:void doStart()",
            "org.apache.camel.processor.interceptor.DefaultChannel:void doStart()",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void doStart()",
            "org.apache.camel.component.binding.BindingEndpoint:void doStart()",
            "org.apache.camel.processor.ChoiceProcessor:void doStart()",
            "org.apache.camel.component.binding.BindingConsumerProcessor:void doStart()",
            "org.apache.camel.processor.RecipientList:void doStart()",
            "org.apache.camel.processor.MulticastProcessor:void doStart()",
            "org.apache.camel.processor.RoutingSlip:org.apache.camel.AsyncProcessor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Exchange,org.apache.camel.AsyncProcessor,org.apache.camel.Endpoint)",
            "org.apache.camel.impl.InterceptSendToEndpoint:void start()",
            "org.apache.camel.processor.DelegateAsyncProcessor:void doStart()",
            "org.apache.camel.processor.MulticastProcessor:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Exchange,org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultConsumer:void doStart()",
            "org.apache.camel.processor.TryProcessor:void doStart()",
            "org.apache.camel.component.dataformat.DataFormatEndpoint:void doStart()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doStart()",
            "org.apache.camel.processor.BatchProcessor:void doStart()",
            "org.apache.camel.component.rest.RestProducer:void doStart()",
            "org.apache.camel.impl.DefaultRuntimeEndpointRegistry:void doStart()",
            "org.apache.camel.impl.DefaultCamelContext:void start()",
            "org.apache.camel.processor.PollEnricher:void doStart()",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:void doStart()",
            "org.apache.camel.processor.DelegateProcessor:void doStart()",
            "org.apache.camel.processor.StreamResequencer:void doStart()"
        ]
    },
    "org.apache.camel.impl.ConsumerCache:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.support.ChildServiceSupport:void start(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ChildServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.loadbalancer.LoadBalancerSupport:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:void doStart()",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:void doStart()",
            "org.apache.camel.processor.loadbalancer.WeightedLoadBalancer:void doStart()"
        ]
    },
    "org.apache.camel.impl.ProducerCache:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.SubscribeMethodProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.main.MainSupport:void postProcessContext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.main.Main:void doStart()"
        ]
    },
    "org.apache.camel.impl.EventDrivenPollingConsumer:org.apache.camel.Exchange receive()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()"
        ]
    },
    "org.apache.camel.impl.EventDrivenPollingConsumer:org.apache.camel.Exchange receive(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()",
            "org.apache.camel.impl.EventDrivenPollingConsumer:org.apache.camel.Exchange receiveNoWait()"
        ]
    },
    "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void throttle(org.apache.camel.Route,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void onExchangeDone(org.apache.camel.Route,org.apache.camel.Exchange)",
            "org.apache.camel.impl.ThrottlingInflightRoutePolicy$ContextScopedEventNotifier:void notify(java.util.EventObject)"
        ]
    },
    "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void calculateState(org.apache.camel.Route)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void access$000(org.apache.camel.impl.ThrottlingExceptionRoutePolicy,org.apache.camel.Route)",
            "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void onExchangeDone(org.apache.camel.Route,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.exceptionpolicy.DefaultExceptionPolicyStrategy:org.apache.camel.model.OnExceptionDefinition getExceptionPolicy(java.util.Map,org.apache.camel.Exchange,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.ErrorHandlerSupport:org.apache.camel.model.OnExceptionDefinition getExceptionPolicy(org.apache.camel.Exchange,java.lang.Throwable)"
        ]
    },
    "org.apache.camel.processor.resequencer.ElementComparator:boolean isValid(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ResequencerEngine:void insert(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.ElementComparator:int compare(org.apache.camel.processor.resequencer.Element,org.apache.camel.processor.resequencer.Element)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ElementComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.ElementComparator:boolean successor(org.apache.camel.processor.resequencer.Element,org.apache.camel.processor.resequencer.Element)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ElementComparator:boolean successor(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.ElementComparator:boolean predecessor(org.apache.camel.processor.resequencer.Element,org.apache.camel.processor.resequencer.Element)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ElementComparator:boolean predecessor(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.Resequencer$1:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Resequencer$2:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.Resequencer$2:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Resequencer$2:int compare(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.support.TokenPairExpressionIterator:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.support.TokenPairExpressionIterator:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.controlbus.ControlBusProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.TokenXMLExpressionIterator:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.support.TokenXMLExpressionIterator:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.Exchange send()",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(org.apache.camel.Endpoint,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.DefaultFluentProducerTemplate:java.lang.Object request(java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(org.apache.camel.Endpoint,java.lang.Object,java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeaders(org.apache.camel.Endpoint,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(java.lang.String,org.apache.camel.Processor)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.Exchange send()",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndProperty(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBody(org.apache.camel.Endpoint,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeader(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndHeader(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBody(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndHeaders(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(java.lang.String,org.apache.camel.ExchangePattern,org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndProperty(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange request(org.apache.camel.Endpoint,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.impl.ha.AbstractCamelClusterService:org.apache.camel.ha.CamelClusterView getView(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.xml.XPathBuilder:java.lang.String evaluate(org.apache.camel.CamelContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluate(org.apache.camel.CamelContext,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:java.lang.Object request()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:java.util.concurrent.Future asyncRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setTempPrefix(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInvocation createInvocation(java.lang.Object,org.apache.camel.Exchange,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInvocation createInvocation(java.lang.Object,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.model.RecipientListDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.LoopDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.SetHeaderDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.AggregateDefinition:org.apache.camel.processor.aggregate.AggregateProcessor createAggregator(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.AggregateDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.ExpressionSubElementDefinition:org.apache.camel.Expression createExpression(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.loadbalancer.StickyLoadBalancerDefinition:org.apache.camel.processor.loadbalancer.LoadBalancer createLoadBalancer(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.AggregateDefinition:org.apache.camel.processor.aggregate.AggregateProcessor createAggregator(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.WireTapDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.SetOutHeaderDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ThrottleDefinition:org.apache.camel.Expression createMaxRequestsPerPeriodExpression(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ThrottleDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.PollEnrichDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.TransformDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ResequenceDefinition:org.apache.camel.processor.StreamResequencer createStreamResequencer(org.apache.camel.spi.RouteContext,org.apache.camel.model.config.StreamResequencerConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ResequenceDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.SetPropertyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.SetBodyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ScriptDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ResequenceDefinition:org.apache.camel.processor.Resequencer createBatchResequencer(org.apache.camel.spi.RouteContext,org.apache.camel.model.config.BatchResequencerConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ResequenceDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.IdempotentConsumerDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.DelayDefinition:org.apache.camel.Expression createAbsoluteTimeDelayExpression(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DelayDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.DynamicRouterDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.RoutingSlipDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.EnrichDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.SortDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.SplitDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.SetFaultBodyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.AssertionClause:java.lang.Object expression(org.apache.camel.model.language.ExpressionDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.cloud.ServiceCallExpressionConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Expression lambda$retrieveExpression$29(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.function.Suppliers:java.util.Optional firstNotNull(org.apache.camel.util.function.ThrowingSupplier[])"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setSortBy(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileEndpoint:void setSortBy(java.lang.String)"
        ]
    },
    "org.apache.camel.component.file.GenericFileComponent:org.apache.camel.component.file.GenericFileEndpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.model.OnCompletionDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ExpressionNode:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ExpressionNode:org.apache.camel.processor.FilterProcessor createFilterProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.FilterDefinition:org.apache.camel.processor.FilterProcessor createFilterProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.WhenSkipSendToEndpointDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.ExpressionSubElementDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.AggregateDefinition:org.apache.camel.processor.aggregate.AggregateProcessor createAggregator(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.OnExceptionDefinition:void setHandledFromExpressionType(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.OnExceptionDefinition:void setContinuedFromExpressionType(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.CatchDefinition:org.apache.camel.processor.CatchProcessor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.OnExceptionDefinition:void setRetryWhileFromExpressionType(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.OnExceptionDefinition:org.apache.camel.processor.CatchProcessor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.CatchDefinition:org.apache.camel.processor.CatchProcessor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.CatchDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.OnExceptionDefinition:org.apache.camel.processor.CatchProcessor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.OnExceptionDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.ValidateDefinition:org.apache.camel.processor.validation.PredicateValidatingProcessor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ValidateDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfo:org.apache.camel.component.bean.MethodInvocation createMethodInvocation(java.lang.Object,boolean,org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.MethodInfo$DynamicRouterExpression:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:void <init>(org.apache.camel.component.validator.DefaultLSResourceResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:void <init>(org.apache.camel.component.validator.DefaultLSResourceResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.camel.component.validator.DefaultLSResourceResolver$1)"
        ]
    },
    "org.apache.camel.component.xslt.XsltEndpoint:void loadResource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.xslt.XsltEndpoint:void onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.component.xslt.XsltEndpoint:void doStart()"
        ]
    },
    "org.apache.camel.util.toolbox.XsltAggregationStrategy:void loadResource(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.toolbox.XsltAggregationStrategy:void initialize(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.language.xpath.XPathLanguage:org.apache.camel.Predicate createPredicate(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression createExpression(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression expression(java.lang.String)",
            "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression createExpression(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Predicate createPredicate(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression createExpression(java.lang.String,java.lang.Class)",
            "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Predicate predicate(java.lang.String)"
        ]
    },
    "org.apache.camel.language.xpath.XPathLanguage:org.apache.camel.Expression createExpression(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.validation.SchemaReader:javax.xml.validation.Schema createSchema()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:javax.xml.validation.Schema createSchema()",
            "org.apache.camel.processor.validation.SchemaReader:javax.xml.validation.Schema getSchema()",
            "org.apache.camel.processor.validation.SchemaReader:void loadSchema()"
        ]
    },
    "org.apache.camel.component.ResourceEndpoint:java.io.InputStream getResourceAsInputStreamWithoutCache()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.ResourceEndpoint:java.io.InputStream getResourceAsInputStream()"
        ]
    },
    "org.apache.camel.component.language.LanguageEndpoint:java.lang.String resolveScript(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.language.LanguageEndpoint:org.apache.camel.Producer createProducer()",
            "org.apache.camel.component.language.LanguageProducer:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:java.lang.String getStringData()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext$2:java.lang.Object call()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:java.lang.Object doWithDefinedClassLoader(java.util.concurrent.Callable)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void safelyStartRouteServices(boolean,boolean,boolean,boolean,boolean,org.apache.camel.impl.RouteService[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void resumeRouteService(org.apache.camel.impl.RouteService)",
            "org.apache.camel.impl.DefaultCamelContext:void startRouteService(org.apache.camel.impl.RouteService,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void doStartOrResumeRoutes(java.util.Map,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doResume()",
            "org.apache.camel.impl.DefaultCamelContext:void startAllRoutes()",
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()",
            "org.apache.camel.impl.DefaultCamelContext:void start()"
        ]
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.ClassLoader,java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.ClassLoader,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,boolean,java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)",
            "org.apache.camel.builder.ProxyBuilder:java.lang.Object build(java.lang.Class[])",
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.Class)",
            "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.Class[])"
        ]
    },
    "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluateParameterBinding(org.apache.camel.Exchange,org.apache.camel.Expression,int,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object[] evaluateParameterExpressions(org.apache.camel.Exchange,java.lang.Object,boolean,java.util.Iterator)"
        ]
    },
    "org.apache.camel.builder.RouteBuilder:java.lang.Object propertyInject(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionPropertyValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void setterPropertyInjection(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)",
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectFieldProperty(java.lang.reflect.Field,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.camel.util.ExchangeHelper:java.lang.Object convertToType(org.apache.camel.Exchange,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultExchange:java.lang.Object getProperty(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.StringDataFormat:java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)",
            "org.apache.camel.impl.StringDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)",
            "org.apache.camel.impl.DefaultExchange:java.lang.Object getProperty(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.CamelInternalProcessor:boolean continueProcessing(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.util.GroupTokenIterator:java.lang.Object doNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.GroupTokenIterator:java.lang.Object next()"
        ]
    },
    "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInvocation createInvocation(java.lang.Object,org.apache.camel.Exchange,java.lang.reflect.Method)",
            "org.apache.camel.builder.ExpressionBuilder$96:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$80:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.impl.MDCUnitOfWork:void <init>(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$94:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.support.ServiceCallExpressionSupport:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$95:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object doInEvaluateAs(javax.xml.xpath.XPathExpression,org.apache.camel.Exchange,javax.xml.namespace.QName)",
            "org.apache.camel.builder.ExpressionBuilder$85:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$86:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.file.FileOperations:boolean storeFile(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$7:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$97:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.dataset.DataSetEndpoint:void assertMessageExpected(long,org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.component.file.FileOperations:void keepLastModified(org.apache.camel.Exchange,java.io.File)",
            "org.apache.camel.builder.ExpressionBuilder$84:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.util.IOHelper:java.lang.String getCharsetName(org.apache.camel.Exchange,boolean)",
            "org.apache.camel.builder.ExpressionBuilder$87:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.impl.DefaultUnitOfWork:void <init>(org.apache.camel.Exchange,org.slf4j.Logger)",
            "org.apache.camel.builder.ExpressionBuilder$91:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.validation.ValidatingProcessor:java.lang.Object getContentToValidate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ExpressionBuilder$90:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.dataset.DataSetEndpoint:void performAssertions(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy$HeaderInjector:java.util.Collection getValueAsCollection(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ExpressionBuilder$93:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.util.ExchangeHelper:java.lang.Object getMandatoryHeader(org.apache.camel.Exchange,java.lang.String,java.lang.Class)",
            "org.apache.camel.builder.ExpressionBuilder$92:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.DefaultTraceFormatter:java.lang.Object format(org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.model.ProcessorDefinition,org.apache.camel.Exchange)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message)",
            "org.apache.camel.processor.interceptor.DefaultTraceEventMessage:void <init>(java.util.Date,org.apache.camel.model.ProcessorDefinition,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.component.AbstractApiProducer:boolean processInBody(org.apache.camel.Exchange,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.component.AbstractApiProducer:org.apache.camel.util.component.ApiMethod findMethod(org.apache.camel.Exchange,java.util.Map)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedRoute:java.lang.String dumpRouteAsXml(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedRoute:java.lang.String dumpRouteAsXml()"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$18:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.bean.AbstractCamelInvocationHandler:java.lang.Object invokeProxy(java.lang.reflect.Method,org.apache.camel.ExchangePattern,java.lang.Object[],boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.CamelInvocationHandler:java.lang.Object doInvokeProxy(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.camel.impl.DefaultStreamCachingStrategy:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.ZipDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)",
            "org.apache.camel.processor.MarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object lambda$asyncRequestBody$1(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.MessageSupport:void setBody(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultExchange:java.lang.Object getIn(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.GzipDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)",
            "org.apache.camel.processor.MarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$7:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.MessageHelper:java.lang.String extractValueForLogging(java.lang.Object,org.apache.camel.Message,java.lang.String,boolean,boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String,boolean,boolean,int)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractValueForLogging(java.lang.Object,org.apache.camel.Message)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$80:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveOrResolveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.seda.SedaComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveOrResolveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.spi.TypeConverterRegistry getTypeConverterRegistry()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void forceLazyInitialization()",
            "org.apache.camel.processor.validation.ValidatingProcessor:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.processor.validation.ValidatingProcessor:boolean isInputStreamNeeded(org.apache.camel.Exchange)",
            "org.apache.camel.builder.xml.XsltBuilder:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.model.ModelHelper:org.apache.camel.converter.jaxp.XmlConverter newXmlConverter(org.apache.camel.CamelContext)",
            "org.apache.camel.builder.xml.XsltBuilder:boolean isInputStreamNeeded(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.util.function.Supplier,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.PredicateBuilder$6:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.file.FileOperations:boolean storeFile(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileProducer:void writeFile(org.apache.camel.Exchange,java.lang.String)"
        ]
    },
    "org.apache.camel.util.EndpointHelper:void setProperties(org.apache.camel.CamelContext,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestProducer:void setAdditionalConfiguration(org.apache.camel.spi.RestConfiguration,org.apache.camel.CamelContext,org.apache.camel.spi.DataFormat,java.lang.String)",
            "org.apache.camel.component.dataformat.DataFormatComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.impl.DefaultComponent:void setProperties(org.apache.camel.CamelContext,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultEndpoint:void configureConsumer(org.apache.camel.Consumer)",
            "org.apache.camel.impl.ScheduledPollEndpoint:void configurePollingConsumer(org.apache.camel.PollingConsumer)",
            "org.apache.camel.model.rest.RestBindingDefinition:void setAdditionalConfiguration(org.apache.camel.spi.RestConfiguration,org.apache.camel.CamelContext,org.apache.camel.spi.DataFormat,java.lang.String)",
            "org.apache.camel.impl.DefaultEndpoint:void setProperties(java.lang.Object,java.util.Map)",
            "org.apache.camel.util.component.AbstractApiEndpoint:void configureProperties(java.util.Map)"
        ]
    },
    "org.apache.camel.util.IntrospectionSupport:boolean isPropertyPlaceholder(org.apache.camel.CamelContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.IntrospectionSupport:boolean setProperty(org.apache.camel.CamelContext,org.apache.camel.TypeConverter,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.language.bean.BeanExpression:java.lang.Object lookupResult(org.apache.camel.Exchange,java.lang.String,java.lang.Object,boolean,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.ExchangeHelper:java.lang.Object convertToMandatoryType(org.apache.camel.Exchange,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.SerializationDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)",
            "org.apache.camel.impl.SerializationDataFormat:java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)"
        ]
    },
    "org.apache.camel.impl.MessageSupport:java.lang.Object getMandatoryBody(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.TokenXMLExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)",
            "org.apache.camel.builder.ExpressionBuilder$47:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.support.XMLTokenExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)",
            "org.apache.camel.support.TokenPairExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)",
            "org.apache.camel.component.controlbus.ControlBusProducer$LanguageTask:void run()",
            "org.apache.camel.component.file.FileOperations:boolean storeFile(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.AbstractCamelInvocationHandler:java.lang.Object getBody(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ExpressionBuilder$48:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.UnmarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ConvertBodyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$11:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.validation.ValidatingProcessor:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.ConfigurationHelper:void setConfigurationField(org.apache.camel.CamelContext,org.apache.camel.EndpointConfiguration,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultEndpointConfiguration:void setParameter(java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.ConfigurationHelper$FieldParameterSetter:void set(org.apache.camel.CamelContext,org.apache.camel.EndpointConfiguration,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$9:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.ObjectHelper:java.util.Scanner getScanner(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$67:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$65:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.util.ObjectHelper:java.util.Scanner getScanner(org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.DefaultExchangeFormatter:int getMaxChars(org.apache.camel.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.DefaultExchangeFormatter:java.lang.String getBodyAsString(org.apache.camel.Message)"
        ]
    },
    "org.apache.camel.processor.TryProcessor:boolean continueRouting(java.util.Iterator,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.TryProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.TryProcessor$1:void done(boolean)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$17:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint doGetEndpointInjection(java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint doGetEndpointInjection(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint getEndpointInjection(java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.FluentProducerTemplate withBodyAs(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$8:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.SharedCamelInternalProcessor:boolean continueProcessing(org.apache.camel.Exchange,org.apache.camel.AsyncProcessor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProcessor,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.impl.UriComponentConfiguration:java.lang.Object validatePropertyValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.Pipeline:boolean continueRouting(java.util.Iterator,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.MessageSupport:java.lang.Object getBody(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.MessageSupport:java.lang.Object getBody(java.lang.Class)"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:java.lang.Long parseLong(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinition:org.apache.camel.spi.RouteContext addRoutes(org.apache.camel.CamelContext,java.util.Collection,org.apache.camel.model.FromDefinition)",
            "org.apache.camel.model.RedeliveryPolicyDefinition:org.apache.camel.processor.RedeliveryPolicy createRedeliveryPolicy(org.apache.camel.CamelContext,org.apache.camel.processor.RedeliveryPolicy)"
        ]
    },
    "org.apache.camel.model.rest.RestBindingDefinition:org.apache.camel.processor.RestBindingAdvice createRestBindingAdvice(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultRouteContext:void commit()"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:java.lang.Object tryConvertTo(org.apache.camel.CamelContext,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.CamelContextHelper:java.lang.Object lookupAndConvert(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$14:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultExchange:java.lang.Object getOut(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ExchangeHelper:java.lang.Object doExtractFutureBody(org.apache.camel.CamelContext,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ExchangeHelper:java.lang.Object extractFutureBody(org.apache.camel.CamelContext,java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,java.lang.Class)",
            "org.apache.camel.util.ExchangeHelper:java.lang.Object extractFutureBody(org.apache.camel.CamelContext,java.util.concurrent.Future,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.xml.XsltBuilder:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XsltBuilder:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doProcess(org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:java.lang.Integer parseInteger(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.rest.RestConfigurationDefinition:org.apache.camel.spi.RestConfiguration asRestConfiguration(org.apache.camel.CamelContext)",
            "org.apache.camel.builder.ExpressionBuilder$103:org.apache.camel.spi.ExchangeFormatter getOrCreateExchangeFormatter(org.apache.camel.CamelContext)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean determineIfRedeliveryIsEnabled()",
            "org.apache.camel.processor.RedeliveryErrorHandler:void <init>(org.apache.camel.CamelContext,org.apache.camel.Processor,org.apache.camel.util.CamelLogger,org.apache.camel.Processor,org.apache.camel.processor.RedeliveryPolicy,org.apache.camel.Processor,java.lang.String,boolean,boolean,org.apache.camel.Predicate,java.util.concurrent.ScheduledExecutorService,org.apache.camel.Processor,org.apache.camel.Processor)",
            "org.apache.camel.model.RedeliveryPolicyDefinition:org.apache.camel.processor.RedeliveryPolicy createRedeliveryPolicy(org.apache.camel.CamelContext,org.apache.camel.processor.RedeliveryPolicy)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$15:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:java.lang.Object convertTo(org.apache.camel.CamelContext,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.ConstantBeanHolder:org.apache.camel.Processor getProcessor()",
            "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.util.Optional getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.camel.util.CamelContextHelper:java.lang.Object mandatoryLookupAndConvert(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)",
            "org.apache.camel.util.ResolverHelper:org.apache.camel.Component lookupComponentInRegistryWithFallback(org.apache.camel.CamelContext,java.lang.String,org.apache.camel.util.ResolverHelper$LookupExceptionHandler)",
            "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)",
            "org.apache.camel.util.CamelContextHelper:java.lang.Object mandatoryConvertTo(org.apache.camel.CamelContext,java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.camel.model.ProcessorDefinitionHelper:void resolvePropertyPlaceholders(org.apache.camel.CamelContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ProcessorDefinitionHelper:void resolvePropertyPlaceholders(org.apache.camel.spi.RouteContext,java.lang.Object)",
            "org.apache.camel.model.RouteDefinitionHelper:void initRouteInputs(org.apache.camel.CamelContext,java.util.List)",
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createOutputsProcessorImpl(org.apache.camel.spi.RouteContext,java.util.Collection)",
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor makeProcessorImpl(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.rest.RestDefinition:void addRouteDefinition(org.apache.camel.CamelContext,java.util.List,java.lang.String)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$10:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.rest.RestProducer:org.apache.camel.AsyncProcessor createBindingProcessor()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestProducer:void doStart()"
        ]
    },
    "org.apache.camel.util.EndpointHelper:void setReferenceProperties(org.apache.camel.CamelContext,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestProducer:void setAdditionalConfiguration(org.apache.camel.spi.RestConfiguration,org.apache.camel.CamelContext,org.apache.camel.spi.DataFormat,java.lang.String)",
            "org.apache.camel.component.dataformat.DataFormatComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.impl.DefaultComponent:void setProperties(org.apache.camel.CamelContext,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultEndpoint:void configureConsumer(org.apache.camel.Consumer)",
            "org.apache.camel.impl.ScheduledPollEndpoint:void configurePollingConsumer(org.apache.camel.PollingConsumer)",
            "org.apache.camel.model.rest.RestBindingDefinition:void setAdditionalConfiguration(org.apache.camel.spi.RestConfiguration,org.apache.camel.CamelContext,org.apache.camel.spi.DataFormat,java.lang.String)",
            "org.apache.camel.impl.DefaultEndpoint:void setProperties(java.lang.Object,java.util.Map)",
            "org.apache.camel.util.component.AbstractApiEndpoint:void configureProperties(java.util.Map)"
        ]
    },
    "org.apache.camel.processor.PipelineHelper:boolean continueProcessing(org.apache.camel.Exchange,java.lang.String,org.slf4j.Logger)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.processor.MulticastProcessor$2:void done(boolean)",
            "org.apache.camel.processor.ChoiceProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.InterceptSendToEndpoint$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.LoopProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor$AggregateOnTheFlyTask:void aggregateOnTheFly()",
            "org.apache.camel.processor.LoopProcessor$1:void done(boolean)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor$1:org.apache.camel.Exchange call()"
        ]
    },
    "org.apache.camel.management.DefaultManagementAgent:void finalizeSettings()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementAgent:void doStart()"
        ]
    },
    "org.apache.camel.processor.SendDynamicProcessor:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.SendDynamicProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object doGetDocument(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object getDocument(org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.util.MessageHelper:java.lang.String extractValueForLogging(java.lang.Object,org.apache.camel.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConversionException createTypeConversionException(org.apache.camel.Exchange,java.lang.Class,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.apache.camel.component.rest.RestComponent:org.apache.camel.spi.RestConfiguration mergeConfigurations(org.apache.camel.spi.RestConfiguration,org.apache.camel.spi.RestConfiguration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$5:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:void resolvePropertyPlaceholders(org.apache.camel.CamelContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultComponent:void doStart()"
        ]
    },
    "org.apache.camel.impl.MappedEndpointConfiguration:java.lang.String toUriString(org.apache.camel.EndpointConfiguration$UriFormat)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.mock.MockEndpoint$10:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRouteContext:void commit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinition:org.apache.camel.spi.RouteContext addRoutes(org.apache.camel.CamelContext,java.util.Collection,org.apache.camel.model.FromDefinition)"
        ]
    },
    "org.apache.camel.component.properties.PropertiesEndpoint:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultValidatorRegistry:void <init>(org.apache.camel.CamelContext,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()",
            "org.apache.camel.impl.DefaultValidatorRegistry:void <init>(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.impl.DefaultTransformerRegistry:void <init>(org.apache.camel.CamelContext,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultTransformerRegistry:void <init>(org.apache.camel.CamelContext)",
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()"
        ]
    },
    "org.apache.camel.impl.DefaultRouteContext:org.apache.camel.Endpoint resolveEndpoint(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.FromDefinition:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy$TimerListenerManagerStartupListener:void onCamelContextStarted(org.apache.camel.CamelContext,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void addStartupListener(org.apache.camel.StartupListener)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Endpoint getEndpoint(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.properties.PropertiesComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint doGetEndpointInjection(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.FluentProducerTemplate to(java.lang.String)",
            "org.apache.camel.impl.DeferProducer:void doStart()",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Endpoint resolveMandatoryEndpoint(java.lang.String)",
            "org.apache.camel.util.CamelContextHelper:org.apache.camel.Endpoint getEndpointInjection(org.apache.camel.CamelContext,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Endpoint getEndpoint(java.lang.String,java.lang.Class)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:void setDefaultEndpointUri(java.lang.String)",
            "org.apache.camel.impl.DefaultProducerTemplate:void setDefaultEndpointUri(java.lang.String)",
            "org.apache.camel.builder.BuilderSupport:org.apache.camel.Endpoint endpoint(java.lang.String)",
            "org.apache.camel.util.CamelContextHelper:org.apache.camel.Endpoint getMandatoryEndpoint(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.impl.DefaultProducerTemplate:void doStart()",
            "org.apache.camel.builder.ExpressionBuilder$83:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultRestRegistry:java.lang.String apiDocAsJson()"
        ]
    },
    "org.apache.camel.component.bean.MethodInfo:void <init>(org.apache.camel.CamelContext,java.lang.Class,java.lang.reflect.Method,java.util.List,java.util.List,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInvocation createInvocation(java.lang.Object,org.apache.camel.Exchange,java.lang.reflect.Method)",
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo createMethodInfo(java.lang.Class,java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:org.apache.camel.Producer acquireProducer(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void startProducer(org.apache.camel.Endpoint)",
            "org.apache.camel.processor.SendProcessor:void doStart()",
            "org.apache.camel.processor.RecipientListProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectField(java.lang.reflect.Field,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectField(java.lang.reflect.Field,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)",
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor$1:void doWith(java.lang.reflect.Field)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void setterInjection(java.lang.reflect.Method,java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor$2:void doWith(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ReflectionHelper:void doWithMethods(java.lang.Class,org.apache.camel.util.ReflectionHelper$MethodCallback)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedSuspendableRoute:void resume()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRouteController:void resumeRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void resumeRoute(java.lang.String)",
            "org.apache.camel.impl.ha.ClusteredRouteController:void resumeRoute(java.lang.String)"
        ]
    },
    "org.apache.camel.component.binding.BindingProducer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.rest.RestProducerBindingProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.Enricher:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.DefaultChannel:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.binding.BindingEndpoint:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.ChoiceProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.binding.BindingConsumerProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RecipientList:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()",
            "org.apache.camel.processor.RecipientListProcessor:void doStart()"
        ]
    },
    "org.apache.camel.processor.RoutingSlip:org.apache.camel.AsyncProcessor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Exchange,org.apache.camel.AsyncProcessor,org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.InterceptSendToEndpoint:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DelegateAsyncProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.WrapProcessor:void doStart()",
            "org.apache.camel.support.ServiceSupport:void start()",
            "org.apache.camel.processor.interceptor.TraceInterceptor:void doStart()",
            "org.apache.camel.processor.DelayProcessorSupport:void doStart()",
            "org.apache.camel.processor.FilterProcessor:void doStart()",
            "org.apache.camel.processor.Throttler:void doStart()"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Exchange,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:org.apache.camel.processor.ProcessorExchangePair createProcessorExchangePair(int,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.spi.RouteContext)",
            "org.apache.camel.processor.RecipientListProcessor:org.apache.camel.processor.ProcessorExchangePair createProcessorExchangePair(int,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Exchange,org.apache.camel.ExchangePattern)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.LoadBalancerConsumer:void doStart()",
            "org.apache.camel.component.direct.DirectConsumer:void doStart()",
            "org.apache.camel.component.directvm.DirectVmConsumer:void doStart()",
            "org.apache.camel.component.dataset.DataSetConsumer:void doStart()",
            "org.apache.camel.impl.ScheduledPollConsumer:void doStart()",
            "org.apache.camel.component.timer.TimerConsumer:void doStart()"
        ]
    },
    "org.apache.camel.processor.TryProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.dataformat.DataFormatEndpoint:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.BatchProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.rest.RestProducer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRuntimeEndpointRegistry:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.PollEnricher:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.idempotent.IdempotentConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.DelegateProcessor:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.StreamResequencer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.support.ChildServiceSupport:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void startRouteService(org.apache.camel.impl.RouteService,boolean)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.loadbalancer.WeightedLoadBalancer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.main.Main:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.EventDrivenPollingConsumer:org.apache.camel.Exchange receiveNoWait()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultScheduledPollConsumer:int poll()"
        ]
    },
    "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void onExchangeDone(org.apache.camel.Route,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ThrottlingInflightRoutePolicy$ContextScopedEventNotifier:void notify(java.util.EventObject)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void access$000(org.apache.camel.impl.ThrottlingExceptionRoutePolicy,org.apache.camel.Route)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingExceptionRoutePolicy$HalfOpenTask:void run()"
        ]
    },
    "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void onExchangeDone(org.apache.camel.Route,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.ErrorHandlerSupport:org.apache.camel.model.OnExceptionDefinition getExceptionPolicy(org.apache.camel.Exchange,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:void handleException(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,boolean)"
        ]
    },
    "org.apache.camel.processor.resequencer.ResequencerEngine:void insert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.StreamResequencer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.resequencer.ElementComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.Sequence:java.lang.Object higher(java.lang.Object)",
            "org.apache.camel.processor.resequencer.Sequence:java.lang.Object lower(java.lang.Object)",
            "org.apache.camel.processor.resequencer.ResequencerEngine:boolean beforeLastDelivered(org.apache.camel.processor.resequencer.Element)"
        ]
    },
    "org.apache.camel.processor.resequencer.ElementComparator:boolean successor(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ResequencerEngine:boolean successorOfLastDelivered(org.apache.camel.processor.resequencer.Element)",
            "org.apache.camel.processor.resequencer.Sequence:java.lang.Object successor(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.ElementComparator:boolean predecessor(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.Sequence:java.lang.Object predecessor(java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeaders(org.apache.camel.Endpoint,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeaders(java.lang.Object,java.util.Map)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(java.lang.String,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndProperty(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndProperty(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBody(org.apache.camel.Endpoint,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBody(java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBody(java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeader(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeader(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndHeader(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBody(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBody(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(org.apache.camel.Endpoint,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndHeaders(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(org.apache.camel.Endpoint,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndHeaders(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object,java.util.Map)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(java.lang.String,org.apache.camel.ExchangePattern,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndProperty(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange request(java.lang.String,org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndHeader(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndProperty(org.apache.camel.Endpoint,org.apache.camel.ExchangePattern,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange request(org.apache.camel.Endpoint,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.DefaultFluentProducerTemplate:java.lang.Object request(java.lang.Class)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInvocation createInvocation(java.lang.Object,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.model.AggregateDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.loadbalancer.StickyLoadBalancerDefinition:org.apache.camel.processor.loadbalancer.LoadBalancer createLoadBalancer(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.LoadBalanceDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.WireTapDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ThrottleDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ResequenceDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.DelayDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.function.Suppliers:java.util.Optional firstNotNull(org.apache.camel.util.function.ThrowingSupplier[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceChooser retrieveServiceChooser(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceLoadBalancer retrieveLoadBalancer(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceFilter retrieveServiceFilter(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceDiscovery retrieveServiceDiscovery(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Expression retrieveExpression(org.apache.camel.CamelContext,java.lang.String)"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void setSortBy(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ExpressionNode:org.apache.camel.processor.FilterProcessor createFilterProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.WhenDefinition:org.apache.camel.processor.FilterProcessor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.FilterDefinition:org.apache.camel.processor.FilterProcessor createFilterProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.FilterDefinition:org.apache.camel.processor.FilterProcessor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.WhenSkipSendToEndpointDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.OnExceptionDefinition:void setHandledFromExpressionType(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.OnExceptionDefinition:void addRoutes(org.apache.camel.spi.RouteContext,java.util.Collection)"
        ]
    },
    "org.apache.camel.model.OnExceptionDefinition:void setContinuedFromExpressionType(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.OnExceptionDefinition:void addRoutes(org.apache.camel.spi.RouteContext,java.util.Collection)"
        ]
    },
    "org.apache.camel.model.OnExceptionDefinition:void setRetryWhileFromExpressionType(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.OnExceptionDefinition:void addRoutes(org.apache.camel.spi.RouteContext,java.util.Collection)"
        ]
    },
    "org.apache.camel.model.CatchDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.OnExceptionDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ValidateDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.MethodInfo:org.apache.camel.component.bean.MethodInvocation createMethodInvocation(java.lang.Object,boolean,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInvocation createInvocation(java.lang.Object,org.apache.camel.Exchange,java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfo$DynamicRouterExpression:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:void <init>(org.apache.camel.component.validator.DefaultLSResourceResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.camel.component.validator.DefaultLSResourceResolver$1)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.validator.DefaultLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.camel.component.xslt.XsltEndpoint:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.toolbox.XsltAggregationStrategy:void initialize(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.toolbox.XsltAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression expression(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.TokenXMLExpressionIterator:java.util.Iterator createIterator(org.apache.camel.Exchange,java.io.InputStream,java.lang.String)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.support.TokenPairExpressionIterator:java.util.Iterator createIterator(org.apache.camel.Exchange,java.io.InputStream,java.lang.String)",
            "org.apache.camel.support.TokenXMLPairExpressionIterator:java.util.Iterator createIterator(org.apache.camel.Exchange,java.io.InputStream,java.lang.String)",
            "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression simple(java.lang.String)"
        ]
    },
    "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression createExpression(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression simple(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Predicate predicate(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.validation.ValidatingProcessor:javax.xml.validation.Schema createSchema()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.validation.SchemaReader:javax.xml.validation.Schema getSchema()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:javax.xml.validation.Schema getSchema()"
        ]
    },
    "org.apache.camel.processor.validation.SchemaReader:void loadSchema()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void loadSchema()",
            "org.apache.camel.component.validator.ValidatorEndpoint:org.apache.camel.Producer createProducer()"
        ]
    },
    "org.apache.camel.component.ResourceEndpoint:java.io.InputStream getResourceAsInputStream()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.language.LanguageProducer:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:java.lang.Object doWithDefinedClassLoader(java.util.concurrent.Callable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void addRoutes(org.apache.camel.RoutesBuilder)",
            "org.apache.camel.impl.DefaultCamelContext:void doStart()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void resumeRouteService(org.apache.camel.impl.RouteService)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void resumeRoute(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void startRouteService(org.apache.camel.impl.RouteService,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void startRouteService(org.apache.camel.impl.RouteService,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:void startRoute(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void resumeRouteService(org.apache.camel.impl.RouteService)",
            "org.apache.camel.impl.DefaultCamelContext:void startRoute(org.apache.camel.model.RouteDefinition)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void doResume()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void resume()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void startAllRoutes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.ProxyBuilder:java.lang.Object build(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ProxyBuilder:java.lang.Object build(java.lang.Class)"
        ]
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.ProxyHelper:java.lang.Object createProxy(org.apache.camel.Endpoint,java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void setterPropertyInjection(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void setterInjection(java.lang.reflect.Method,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectFieldProperty(java.lang.reflect.Field,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor$1:void doWith(java.lang.reflect.Field)"
        ]
    },
    "org.apache.camel.impl.DefaultExchange:java.lang.Object getProperty(java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.MulticastProcessor:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Exchange,org.apache.camel.Processor)",
            "org.apache.camel.util.EventHelper:boolean notifyExchangeSending(org.apache.camel.CamelContext,org.apache.camel.Exchange,org.apache.camel.Endpoint)",
            "org.apache.camel.util.EventHelper:boolean notifyExchangeFailed(org.apache.camel.CamelContext,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.lang.String isCompleted(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.component.scheduler.SchedulerConsumer:int sendTimerExchange()",
            "org.apache.camel.util.ExchangeHelper:boolean isFailureHandled(org.apache.camel.Exchange)",
            "org.apache.camel.util.EventHelper:boolean notifyExchangeSent(org.apache.camel.CamelContext,org.apache.camel.Exchange,org.apache.camel.Endpoint,long)",
            "org.apache.camel.util.EventHelper:boolean notifyExchangeCreated(org.apache.camel.CamelContext,org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultExchange:java.lang.Boolean isExternalRedelivered()",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.ExchangeHelper:boolean isRedeliveryExhausted(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RoutingSlip:org.apache.camel.AsyncProcessor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Exchange,org.apache.camel.AsyncProcessor,org.apache.camel.Endpoint)",
            "org.apache.camel.util.EventHelper:boolean notifyExchangeDone(org.apache.camel.CamelContext,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.StringDataFormat:java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)",
            "org.apache.camel.processor.UnmarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.StringDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)",
            "org.apache.camel.processor.MarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.DefaultExchange:java.lang.Object getProperty(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.builder.ExpressionBuilder$80:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.DefaultExchangeFormatter:java.lang.String format(org.apache.camel.Exchange)",
            "org.apache.camel.impl.MDCUnitOfWork:void <init>(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:org.apache.camel.Processor createUnitOfWorkProcessor(org.apache.camel.spi.RouteContext,org.apache.camel.Processor,org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:java.util.LinkedList getMessageHistories()",
            "org.apache.camel.builder.ExpressionBuilder$22:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void onSubmitCompletion(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AbstractListAggregationStrategy:java.util.List getList(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$21:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.converter.NIOConverter:java.nio.ByteBuffer toByteBuffer(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultExchange:java.util.Date getCreated()",
            "org.apache.camel.component.mock.TimeClause:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.management.event.ExchangeRedeliveryEvent:java.lang.String toString()",
            "org.apache.camel.processor.MulticastProcessor:org.apache.camel.processor.aggregate.AggregationStrategy getAggregationStrategy(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$7:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Exchange,org.apache.camel.Processor)",
            "org.apache.camel.util.IOHelper:java.lang.String getCharsetName(org.apache.camel.Exchange,boolean)",
            "org.apache.camel.processor.MulticastProcessor:void removeAggregationStrategyFromExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.MessageHelper:java.lang.String doDumpMessageHistoryStacktrace(org.apache.camel.Exchange,org.apache.camel.spi.ExchangeFormatter,boolean)",
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy$PropertyInjector:java.util.Collection getValueAsCollection(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ExpressionBuilder$13:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:java.lang.Integer getExchangeIndex(org.apache.camel.Exchange)",
            "org.apache.camel.converter.stream.FileInputStreamCache$TempFileManager:void addExchange(org.apache.camel.Exchange)",
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:java.util.Collection safeInsertIntoCollection(org.apache.camel.Exchange,java.util.Collection,java.lang.Object)",
            "org.apache.camel.processor.BatchProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.ObjectHelper:java.util.Scanner getScanner(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.builder.ExpressionBuilder$15:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.processor.Splitter:java.lang.Integer getExchangeIndex(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.GroupTokenIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Splitter$SplitterIterable$1:org.apache.camel.processor.ProcessorExchangePair next()",
            "org.apache.camel.util.ObjectHelper:boolean containsIgnoreCase(java.lang.Object,java.lang.Object)",
            "org.apache.camel.builder.xml.DefaultNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.camel.component.bean.BeanInfo:boolean matchMethod(java.lang.reflect.Method,java.lang.String)",
            "org.apache.camel.processor.RoutingSlip$1:java.lang.Object next(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$66:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseMethodWithMatchingParameters(org.apache.camel.Exchange,java.lang.String,java.util.Collection)",
            "org.apache.camel.component.test.TestEndpoint$1:void process(org.apache.camel.Exchange)",
            "org.apache.camel.converter.jaxp.DomConverter:java.util.List toList(org.w3c.dom.NodeList)",
            "org.apache.camel.language.simple.ast.BinaryExpression$3:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.processor.DynamicRouter$DynamicRoutingSlipIterator:java.lang.Object next(org.apache.camel.Exchange)",
            "org.apache.camel.util.GroupTokenIterator:java.lang.Object doNext()",
            "org.apache.camel.util.GroupIterator:java.lang.Object doNext()",
            "org.apache.camel.processor.RecipientListProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object[] evaluateParameterExpressions(org.apache.camel.Exchange,java.lang.Object,boolean,java.util.Iterator)",
            "org.apache.camel.util.ObjectHelper:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.file.GenericFileComponent:java.util.Comparator createSortByComparator(java.util.Iterator)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$96:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.MDCUnitOfWork:void <init>(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultUnitOfWorkFactory:org.apache.camel.spi.UnitOfWork createUnitOfWork(org.apache.camel.Exchange)",
            "org.apache.camel.impl.MDCUnitOfWork:org.apache.camel.spi.UnitOfWork newInstance(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$94:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.support.ServiceCallExpressionSupport:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$95:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object doInEvaluateAs(javax.xml.xpath.XPathExpression,org.apache.camel.Exchange,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluateAs(org.apache.camel.Exchange,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$85:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$86:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$97:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.dataset.DataSetEndpoint:void assertMessageExpected(long,org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.dataset.DataSetEndpoint:void performAssertions(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.file.FileOperations:void keepLastModified(org.apache.camel.Exchange,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.FileOperations:boolean storeFile(java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$84:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.util.IOHelper:java.lang.String getCharsetName(org.apache.camel.Exchange,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.jaxp.StaxConverter:java.io.InputStream createInputStream(javax.xml.stream.XMLStreamReader,org.apache.camel.Exchange)",
            "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:java.io.BufferedWriter toWriter(java.io.File)",
            "org.apache.camel.util.IOHelper:java.lang.String getCharsetName(org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:java.lang.String getCharsetName(org.apache.camel.Exchange,boolean)",
            "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$87:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultUnitOfWork:void <init>(org.apache.camel.Exchange,org.slf4j.Logger)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.MDCUnitOfWork:void <init>(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultUnitOfWork:void <init>(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$91:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.validation.ValidatingProcessor:java.lang.Object getContentToValidate(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$90:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.dataset.DataSetEndpoint:void performAssertions(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint:void onExchange(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.toolbox.FlexibleAggregationStrategy$HeaderInjector:java.util.Collection getValueAsCollection(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:void injectAsCollection(org.apache.camel.Exchange,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$93:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.util.ExchangeHelper:java.lang.Object getMandatoryHeader(org.apache.camel.Exchange,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XsltBuilder:void process(org.apache.camel.Exchange)",
            "org.apache.camel.builder.xml.FileResultHandlerFactory:org.apache.camel.builder.xml.ResultHandler createResult(org.apache.camel.Exchange)",
            "org.apache.camel.component.dataset.DataSetEndpoint:void assertMessageExpected(long,org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.support.ServiceCallExpressionSupport:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$92:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.interceptor.DefaultTraceFormatter:java.lang.Object format(org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.model.ProcessorDefinition,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.TraceInterceptor:java.lang.String format(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.DefaultTraceEventMessage:void <init>(java.util.Date,org.apache.camel.model.ProcessorDefinition,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:void traceExchange(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.component.AbstractApiProducer:org.apache.camel.util.component.ApiMethod findMethod(org.apache.camel.Exchange,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.component.AbstractApiProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedRoute:java.lang.String dumpRouteAsXml()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.CamelInvocationHandler:java.lang.Object doInvokeProxy(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.component.dataformat.DataFormatEndpoint$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String,boolean,boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.JMXNotificationTraceEventHandler:void traceExchange(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)",
            "org.apache.camel.processor.DefaultExchangeFormatter:java.lang.String getBodyAsString(org.apache.camel.Message)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String,boolean,boolean)",
            "org.apache.camel.util.MessageHelper:java.lang.String dumpAsXml(org.apache.camel.Message,boolean,int,boolean,boolean,int)"
        ]
    },
    "org.apache.camel.component.rest.RestComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.seda.SedaComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.vm.VmComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveOrResolveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.timer.TimerComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.log.LogComponent:org.slf4j.Logger getLogger(java.util.Map)"
        ]
    },
    "org.apache.camel.processor.validation.ValidatingProcessor:boolean isInputStreamNeeded(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.model.ModelHelper:org.apache.camel.converter.jaxp.XmlConverter newXmlConverter(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ModelHelper:org.apache.camel.NamedNode modelToXml(org.apache.camel.CamelContext,java.io.InputStream,java.lang.String,java.lang.Class)",
            "org.apache.camel.model.ModelHelper:java.lang.String dumpModelAsXml(org.apache.camel.CamelContext,org.apache.camel.NamedNode)",
            "org.apache.camel.model.ModelHelper:org.apache.camel.model.RoutesDefinition loadRoutesDefinition(org.apache.camel.CamelContext,java.io.InputStream)"
        ]
    },
    "org.apache.camel.builder.xml.XsltBuilder:boolean isInputStreamNeeded(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XsltBuilder:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.file.GenericFileProducer:void writeFile(org.apache.camel.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileProducer:void processExchange(org.apache.camel.Exchange,java.lang.String)"
        ]
    },
    "org.apache.camel.component.rest.RestProducer:void setAdditionalConfiguration(org.apache.camel.spi.RestConfiguration,org.apache.camel.CamelContext,org.apache.camel.spi.DataFormat,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestProducer:org.apache.camel.AsyncProcessor createBindingProcessor()"
        ]
    },
    "org.apache.camel.component.dataformat.DataFormatComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultComponent:void setProperties(org.apache.camel.CamelContext,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultComponent:void setProperties(java.lang.Object,java.util.Map)"
        ]
    },
    "org.apache.camel.impl.DefaultEndpoint:void configureConsumer(org.apache.camel.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.direct.DirectEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultPollingEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.seda.SedaEndpoint:org.apache.camel.PollingConsumer createPollingConsumer()",
            "org.apache.camel.component.timer.TimerEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultEndpoint:void configurePollingConsumer(org.apache.camel.PollingConsumer)",
            "org.apache.camel.component.dataset.DataSetEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.directvm.DirectVmEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.scheduler.SchedulerEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.rest.RestApiEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.rest.RestEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.file.FileEndpoint:org.apache.camel.component.file.FileConsumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.browse.BrowseEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.impl.ScheduledPollEndpoint:void configurePollingConsumer(org.apache.camel.PollingConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProcessorEndpoint:org.apache.camel.PollingConsumer createPollingConsumer()"
        ]
    },
    "org.apache.camel.model.rest.RestBindingDefinition:void setAdditionalConfiguration(org.apache.camel.spi.RestConfiguration,org.apache.camel.CamelContext,org.apache.camel.spi.DataFormat,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.rest.RestBindingDefinition:org.apache.camel.processor.RestBindingAdvice createRestBindingAdvice(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.impl.DefaultEndpoint:void setProperties(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanEndpoint:void doStart()"
        ]
    },
    "org.apache.camel.util.component.AbstractApiEndpoint:void configureProperties(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperty(org.apache.camel.CamelContext,org.apache.camel.TypeConverter,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.IntrospectionSupport:boolean setProperty(java.lang.Object,java.lang.String,java.lang.Object,boolean)",
            "org.apache.camel.util.IntrospectionSupport:boolean setProperty(org.apache.camel.CamelContext,org.apache.camel.TypeConverter,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.lang.Object setProperties(java.lang.Object,java.util.Map)",
            "org.apache.camel.util.IntrospectionSupport:boolean setProperty(org.apache.camel.CamelContext,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.util.EndpointHelper:void setReferenceProperties(org.apache.camel.CamelContext,java.lang.Object,java.util.Map)",
            "org.apache.camel.model.DataFormatDefinition:void setProperty(org.apache.camel.CamelContext,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.util.IntrospectionSupport:boolean setProperty(org.apache.camel.TypeConverter,java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.SerializationDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)",
            "org.apache.camel.processor.MarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.SerializationDataFormat:java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)",
            "org.apache.camel.processor.UnmarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.support.XMLTokenExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.XMLTokenExpressionIterator:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.support.XMLTokenExpressionIterator:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.controlbus.ControlBusProducer$LanguageTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.controlbus.ControlBusProducer:void processByLanguage(org.apache.camel.Exchange,org.apache.camel.spi.Language)"
        ]
    },
    "org.apache.camel.component.bean.AbstractCamelInvocationHandler:java.lang.Object getBody(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.AbstractCamelInvocationHandler:java.lang.Object afterInvoke(java.lang.reflect.Method,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,boolean)"
        ]
    },
    "org.apache.camel.processor.UnmarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)",
            "org.apache.camel.component.dataformat.DataFormatEndpoint$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.ConvertBodyProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultEndpointConfiguration:void setParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ConfigurationHelper$FieldParameterSetter:void set(org.apache.camel.CamelContext,org.apache.camel.EndpointConfiguration,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ConfigurationHelper:void populateFromURI(org.apache.camel.CamelContext,org.apache.camel.EndpointConfiguration,org.apache.camel.impl.ConfigurationHelper$ParameterSetter)"
        ]
    },
    "org.apache.camel.processor.DefaultExchangeFormatter:java.lang.String getBodyAsString(org.apache.camel.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.DefaultExchangeFormatter:java.lang.String format(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint getEndpointInjection(java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String,boolean)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.FluentProducerTemplate createInjectionFluentProducerTemplate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.ProducerTemplate createInjectionProducerTemplate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.CamelPostProcessorHelper:void subscribeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.MessageSupport:java.lang.Object getBody(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$45:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$44:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionClause$7:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ProcessClause:void lambda$body$2(java.util.function.Consumer,java.lang.Class,org.apache.camel.Exchange)",
            "org.apache.camel.component.mock.MockEndpoint:void performAssertions(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.component.test.TestEndpoint$1:void process(org.apache.camel.Exchange)",
            "org.apache.camel.builder.AggregationStrategyClause:org.apache.camel.Exchange lambda$body$1(java.util.function.BiFunction,java.lang.Class,java.lang.Class,org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object doInEvaluateAs(javax.xml.xpath.XPathExpression,org.apache.camel.Exchange,javax.xml.namespace.QName)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.xml.XPathBuilder:void logNamespaces(org.apache.camel.Exchange)",
            "org.apache.camel.processor.validation.ValidatingProcessor:java.lang.Object getContentToValidate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.xml.XsltBuilder:void process(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$56:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy$BodyInjector:java.util.Collection getValueAsCollection(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ExpressionClause$11:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionClause$6:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ProcessClause:void lambda$body$4(java.util.function.BiConsumer,java.lang.Class,org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$46:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionClause$10:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultRestRegistry:java.lang.String apiDocAsJson()",
            "org.apache.camel.builder.ExpressionBuilder$54:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.model.RouteDefinition:org.apache.camel.spi.RouteContext addRoutes(org.apache.camel.CamelContext,java.util.Collection,org.apache.camel.model.FromDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinition:java.util.List addRoutes(org.apache.camel.model.ModelCamelContext,java.util.Collection)"
        ]
    },
    "org.apache.camel.model.RedeliveryPolicyDefinition:org.apache.camel.processor.RedeliveryPolicy createRedeliveryPolicy(org.apache.camel.CamelContext,org.apache.camel.processor.RedeliveryPolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.OnExceptionDefinition:org.apache.camel.processor.RedeliveryPolicy createRedeliveryPolicy(org.apache.camel.CamelContext,org.apache.camel.processor.RedeliveryPolicy)"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:java.lang.Object lookupAndConvert(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.EndpointHelper:java.lang.Object resolveReferenceParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class,boolean)"
        ]
    },
    "org.apache.camel.util.ExchangeHelper:java.lang.Object extractFutureBody(org.apache.camel.CamelContext,java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object extractFutureBody(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,java.lang.Class)"
        ]
    },
    "org.apache.camel.util.ExchangeHelper:java.lang.Object extractFutureBody(org.apache.camel.CamelContext,java.util.concurrent.Future,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object extractFutureBody(java.util.concurrent.Future,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.xml.XsltBuilder:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.toolbox.XsltAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.impl.ProcessorEndpoint:void onExchange(org.apache.camel.Exchange)",
            "org.apache.camel.impl.ProcessorPollingConsumer:org.apache.camel.Exchange receive()",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.model.rest.RestConfigurationDefinition:org.apache.camel.spi.RestConfiguration asRestConfiguration(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.ExpressionBuilder$103:org.apache.camel.spi.ExchangeFormatter getOrCreateExchangeFormatter(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ExpressionBuilder$103:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:boolean determineIfRedeliveryIsEnabled()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:void doStart()"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:void <init>(org.apache.camel.CamelContext,org.apache.camel.Processor,org.apache.camel.util.CamelLogger,org.apache.camel.Processor,org.apache.camel.processor.RedeliveryPolicy,org.apache.camel.Processor,java.lang.String,boolean,boolean,org.apache.camel.Predicate,java.util.concurrent.ScheduledExecutorService,org.apache.camel.Processor,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.DefaultErrorHandler:void <init>(org.apache.camel.CamelContext,org.apache.camel.Processor,org.apache.camel.util.CamelLogger,org.apache.camel.Processor,org.apache.camel.processor.RedeliveryPolicy,org.apache.camel.processor.exceptionpolicy.ExceptionPolicyStrategy,org.apache.camel.Predicate,java.util.concurrent.ScheduledExecutorService,org.apache.camel.Processor,org.apache.camel.Processor)",
            "org.apache.camel.processor.DeadLetterChannel:void <init>(org.apache.camel.CamelContext,org.apache.camel.Processor,org.apache.camel.util.CamelLogger,org.apache.camel.Processor,org.apache.camel.processor.RedeliveryPolicy,org.apache.camel.processor.exceptionpolicy.ExceptionPolicyStrategy,org.apache.camel.Processor,java.lang.String,boolean,boolean,org.apache.camel.Predicate,java.util.concurrent.ScheduledExecutorService,org.apache.camel.Processor,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.component.bean.ConstantBeanHolder:org.apache.camel.Processor getProcessor()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.AbstractBeanProcessor:void doStart()"
        ]
    },
    "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.util.Optional getOption(java.util.Map,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.lang.Object getMandatoryOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class,java.util.function.Supplier)"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:java.lang.Object mandatoryLookupAndConvert(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.EndpointHelper:java.lang.Object resolveReferenceParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class,boolean)"
        ]
    },
    "org.apache.camel.util.ResolverHelper:org.apache.camel.Component lookupComponentInRegistryWithFallback(org.apache.camel.CamelContext,java.lang.String,org.apache.camel.util.ResolverHelper$LookupExceptionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ResolverHelper:org.apache.camel.Component lookupComponentInRegistryWithFallback(org.apache.camel.CamelContext,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveParameter(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.camel.component.log.LogComponent:org.apache.camel.LoggingLevel getLoggingLevel(java.util.Map)"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:java.lang.Object mandatoryConvertTo(org.apache.camel.CamelContext,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ProcessorDefinitionHelper:void resolvePropertyPlaceholders(org.apache.camel.spi.RouteContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.RouteDefinitionHelper:void initRouteInputs(org.apache.camel.CamelContext,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinitionHelper:void prepareRouteImp(org.apache.camel.model.ModelCamelContext,org.apache.camel.model.RouteDefinition,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext,org.apache.camel.model.DataFormatDefinition,java.lang.String)"
        ]
    },
    "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createOutputsProcessorImpl(org.apache.camel.spi.RouteContext,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createOutputsProcessor(org.apache.camel.spi.RouteContext,java.util.Collection)"
        ]
    },
    "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor makeProcessorImpl(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor makeProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.rest.RestDefinition:void addRouteDefinition(org.apache.camel.CamelContext,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.rest.RestDefinition:java.util.List asRouteDefinition(org.apache.camel.CamelContext)",
            "org.apache.camel.model.rest.RestDefinition:java.util.List asRouteDefinition(org.apache.camel.CamelContext,org.apache.camel.spi.RestConfiguration)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor$AggregateOnTheFlyTask:void aggregateOnTheFly()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$AggregateOnTheFlyTask:void run()"
        ]
    },
    "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object getDocument(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object doInEvaluateAs(javax.xml.xpath.XPathExpression,org.apache.camel.Exchange,javax.xml.namespace.QName)",
            "org.apache.camel.builder.xml.XPathBuilder:void logNamespaces(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConversionException createTypeConversionException(org.apache.camel.Exchange,java.lang.Class,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object mandatoryConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultComponent:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.properties.PropertiesComponent:void doStart()",
            "org.apache.camel.component.vm.VmComponent:void doStart()",
            "org.apache.camel.component.directvm.DirectVmComponent:void doStart()"
        ]
    },
    "org.apache.camel.impl.DefaultValidatorRegistry:void <init>(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultTransformerRegistry:void <init>(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.FromDefinition:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultRouteContext:org.apache.camel.Endpoint getEndpoint()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void addStartupListener(org.apache.camel.StartupListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void setCamelContext(org.apache.camel.CamelContext)",
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void doStart()",
            "org.apache.camel.impl.SupervisingRouteController:void doStart()",
            "org.apache.camel.impl.DefaultCamelContext:void startService(org.apache.camel.Service)"
        ]
    },
    "org.apache.camel.component.properties.PropertiesComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.FluentProducerTemplate to(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Endpoint resolveMandatoryEndpoint(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncCallbackSendBody(java.lang.String,java.lang.Object,org.apache.camel.spi.Synchronization)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndProperty(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncCallbackRequestBody(java.lang.String,java.lang.Object,org.apache.camel.spi.Synchronization)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncSend(java.lang.String,org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncCallback(java.lang.String,org.apache.camel.Processor,org.apache.camel.spi.Synchronization)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncCallback(java.lang.String,org.apache.camel.Exchange,org.apache.camel.spi.Synchronization)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBody(java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(java.lang.String,org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBody(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncSend(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(java.lang.String,org.apache.camel.ExchangePattern,org.apache.camel.Processor)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBody(java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBody(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncSendBody(java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange send(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndHeaders(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object,java.util.Map)"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:org.apache.camel.Endpoint getEndpointInjection(org.apache.camel.CamelContext,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint doGetEndpointInjection(java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Endpoint getEndpoint(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.xslt.XsltEndpoint:org.apache.camel.component.xslt.XsltEndpoint findOrCreateEndpoint(java.lang.String,java.lang.String)",
            "org.apache.camel.builder.BuilderSupport:org.apache.camel.Endpoint endpoint(java.lang.String,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Endpoint getResolvedEndpoint(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:void setDefaultEndpointUri(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void setDefaultEndpointUri(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.BuilderSupport:org.apache.camel.Endpoint endpoint(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BuilderSupport:java.util.List endpoints(java.lang.String[])",
            "org.apache.camel.builder.BuilderSupport:org.apache.camel.builder.DeadLetterChannelBuilder deadLetterChannel(java.lang.String)"
        ]
    },
    "org.apache.camel.util.CamelContextHelper:org.apache.camel.Endpoint getMandatoryEndpoint(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.binding.BindingEndpoint:void doStart()",
            "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.impl.DefaultProducerTemplate newInstance(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.component.test.TestComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Endpoint resolveMandatoryEndpoint(java.lang.String)",
            "org.apache.camel.model.RouteDefinition:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.util.ExchangeHelper:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.model.RouteDefinitionHelper:void doInitInterceptors(org.apache.camel.CamelContext,org.apache.camel.model.RouteDefinition,java.util.List,java.util.List,java.util.List,java.util.List)",
            "org.apache.camel.component.binding.BindingComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.util.CamelContextHelper:org.apache.camel.Endpoint getMandatoryEndpoint(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo createMethodInfo(java.lang.Class,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo introspect(java.lang.Class,java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:void startProducer(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectField(java.lang.reflect.Field,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor$1:void doWith(java.lang.reflect.Field)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor$1:void doWith(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ReflectionHelper:void doWithFields(java.lang.Class,org.apache.camel.util.ReflectionHelper$FieldCallback)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void setterInjection(java.lang.reflect.Method,java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void setterInjection(java.lang.reflect.Method,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.camel.util.ReflectionHelper:void doWithMethods(java.lang.Class,org.apache.camel.util.ReflectionHelper$MethodCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectMethods(java.lang.Object,java.lang.String)",
            "org.apache.camel.util.ReflectionHelper:void doWithMethods(java.lang.Class,org.apache.camel.util.ReflectionHelper$MethodCallback)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void resumeRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRouteController:void resumeRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DelayProcessorSupport:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.Throttler:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:org.apache.camel.processor.ProcessorExchangePair createProcessorExchangePair(int,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Splitter$SplitterIterable$1:org.apache.camel.processor.ProcessorExchangePair next()",
            "org.apache.camel.processor.MulticastProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.RecipientListProcessor:org.apache.camel.processor.ProcessorExchangePair createProcessorExchangePair(int,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Exchange,org.apache.camel.ExchangePattern)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RecipientListProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.LoadBalancerConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.direct.DirectConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()",
            "org.apache.camel.component.direct.DirectConsumer:void doResume()"
        ]
    },
    "org.apache.camel.component.directvm.DirectVmConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.timer.TimerConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.ThrottlingExceptionRoutePolicy$HalfOpenTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:void handleException(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:void processAsyncErrorHandler(org.apache.camel.Exchange,org.apache.camel.AsyncCallback,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData)"
        ]
    },
    "org.apache.camel.processor.StreamResequencer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.AsyncProcessorHelper:void process(org.apache.camel.AsyncProcessor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.resequencer.Sequence:java.lang.Object higher(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.Sequence:java.lang.Object successor(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.Sequence:java.lang.Object lower(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.Sequence:java.lang.Object predecessor(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.ResequencerEngine:boolean beforeLastDelivered(org.apache.camel.processor.resequencer.Element)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ResequencerEngine:void insert(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.ResequencerEngine:boolean successorOfLastDelivered(org.apache.camel.processor.resequencer.Element)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ResequencerEngine:void insert(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.Sequence:java.lang.Object successor(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ResequencerEngine:void insert(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.resequencer.Sequence:java.lang.Object predecessor(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.resequencer.ResequencerEngine:void insert(java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeaders(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndProperty(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBody(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBody(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeader(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void sendBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBody(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(org.apache.camel.Endpoint,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(org.apache.camel.Endpoint,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndHeaders(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndProperty(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Exchange request(java.lang.String,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object sendBodyAndHeader(java.lang.String,org.apache.camel.ExchangePattern,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.model.LoadBalanceDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceChooser retrieveServiceChooser(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceLoadBalancer retrieveLoadBalancer(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceFilter retrieveServiceFilter(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceDiscovery retrieveServiceDiscovery(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Expression retrieveExpression(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.WhenDefinition:org.apache.camel.processor.FilterProcessor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.WhenDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.FilterDefinition:org.apache.camel.processor.FilterProcessor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.FilterDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.OnExceptionDefinition:void addRoutes(org.apache.camel.spi.RouteContext,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.validator.DefaultLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.toolbox.XsltAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression simple(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.language.simple.SimpleLanguage:org.apache.camel.Expression simple(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.validation.ValidatingProcessor:javax.xml.validation.Schema getSchema()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.validation.ValidatingProcessor:void loadSchema()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.validator.ValidatorEndpoint:org.apache.camel.Producer createProducer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void addRoutes(org.apache.camel.RoutesBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.RouteBuilder:void includeRoutes(org.apache.camel.RoutesBuilder)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultRouteController:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void startRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void resumeRoute(java.lang.String)",
            "org.apache.camel.component.controlbus.ControlBusProducer$ActionTask:void run()",
            "org.apache.camel.impl.DefaultRouteController:void startRoute(java.lang.String)",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void doStartManagedRoutes()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void startRoute(org.apache.camel.model.RouteDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void startRouteDefinitions(java.util.Collection)"
        ]
    },
    "org.apache.camel.support.ServiceSupport:void resume()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ServiceHelper:boolean resumeService(java.lang.Object)",
            "org.apache.camel.impl.DefaultCamelContext:void resumeRouteService(org.apache.camel.impl.RouteService)",
            "org.apache.camel.management.mbean.ManagedService:void resume()",
            "org.apache.camel.impl.DefaultCamelContext:void resume()"
        ]
    },
    "org.apache.camel.builder.ProxyBuilder:java.lang.Object build(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void setterInjection(java.lang.reflect.Method,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor$2:void doWith(java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.util.EventHelper:boolean notifyExchangeSending(org.apache.camel.CamelContext,org.apache.camel.Exchange,org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,java.util.Iterator,org.apache.camel.processor.ProcessorExchangePair,org.apache.camel.AsyncCallback,java.util.concurrent.atomic.AtomicInteger)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doProcessParallel(org.apache.camel.processor.ProcessorExchangePair)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.EventNotifierCallback:void <init>(org.apache.camel.AsyncCallback,org.apache.camel.Exchange,org.apache.camel.Endpoint)",
            "org.apache.camel.impl.ProducerCache$1:org.apache.camel.Exchange doInProducer(org.apache.camel.Producer,org.apache.camel.Exchange,org.apache.camel.ExchangePattern)"
        ]
    },
    "org.apache.camel.util.EventHelper:boolean notifyExchangeFailed(org.apache.camel.CamelContext,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultUnitOfWork:void done(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.ExchangeHelper:boolean isFailureHandled(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:void handleException(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,boolean)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean isDone(org.apache.camel.Exchange)",
            "org.apache.camel.management.mbean.ManagedPerformanceCounter:void completedExchange(org.apache.camel.Exchange,long)",
            "org.apache.camel.processor.idempotent.IdempotentOnCompletion:void onComplete(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.EventHelper:boolean notifyExchangeSent(org.apache.camel.CamelContext,org.apache.camel.Exchange,org.apache.camel.Endpoint,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventNotifierCallback:void done(boolean)",
            "org.apache.camel.processor.MulticastProcessor$2:void done(boolean)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.MulticastProcessor:void doProcessParallel(org.apache.camel.processor.ProcessorExchangePair)",
            "org.apache.camel.processor.Enricher$1:void done(boolean)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache$1:org.apache.camel.Exchange doInProducer(org.apache.camel.Producer,org.apache.camel.Exchange,org.apache.camel.ExchangePattern)"
        ]
    },
    "org.apache.camel.util.EventHelper:boolean notifyExchangeCreated(org.apache.camel.CamelContext,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultUnitOfWork:void <init>(org.apache.camel.Exchange,org.slf4j.Logger)"
        ]
    },
    "org.apache.camel.impl.DefaultExchange:java.lang.Boolean isExternalRedelivered()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultUnitOfWork:void <init>(org.apache.camel.Exchange,org.slf4j.Logger)"
        ]
    },
    "org.apache.camel.util.ExchangeHelper:boolean isRedeliveryExhausted(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean isDone(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)"
        ]
    },
    "org.apache.camel.util.EventHelper:boolean notifyExchangeDone(org.apache.camel.CamelContext,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultUnitOfWork:void done(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.DefaultExchangeFormatter:java.lang.String format(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.MessageHelper:java.lang.String doDumpMessageHistoryStacktrace(org.apache.camel.Exchange,org.apache.camel.spi.ExchangeFormatter,boolean)",
            "org.apache.camel.processor.CamelLogProcessor:void process(org.apache.camel.Exchange,java.lang.String)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelLogProcessor:void process(org.apache.camel.Exchange,java.lang.Throwable)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:org.apache.camel.Processor createUnitOfWorkProcessor(org.apache.camel.spi.RouteContext,org.apache.camel.Processor,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Exchange,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:java.util.LinkedList getMessageHistories()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:org.apache.camel.MessageHistory getLastMessageHistory()"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$22:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void onSubmitCompletion(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AggregateProcessor:void access$1900(org.apache.camel.processor.aggregate.AggregateProcessor,java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:int forceCompletionOfAllGroups()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doProcess(org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:int forceCompletionOfGroup(java.lang.String)"
        ]
    },
    "org.apache.camel.processor.aggregate.AbstractListAggregationStrategy:java.util.List getList(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AbstractListAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$21:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.converter.NIOConverter:java.nio.ByteBuffer toByteBuffer(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.NIOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultExchange:java.util.Date getCreated()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.MessageHelper:java.lang.String doDumpMessageHistoryStacktrace(org.apache.camel.Exchange,org.apache.camel.spi.ExchangeFormatter,boolean)"
        ]
    },
    "org.apache.camel.component.mock.TimeClause:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.management.event.ExchangeRedeliveryEvent:java.lang.String toString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MulticastProcessor:org.apache.camel.processor.aggregate.AggregationStrategy getAggregationStrategy(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$2:void done(boolean)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor$ParallelAggregateTask:void run()",
            "org.apache.camel.processor.MulticastProcessor$ParallelAggregateTimeoutTask:void run()",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:void removeAggregationStrategyFromExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)"
        ]
    },
    "org.apache.camel.util.MessageHelper:java.lang.String doDumpMessageHistoryStacktrace(org.apache.camel.Exchange,org.apache.camel.spi.ExchangeFormatter,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.MessageHelper:java.lang.String dumpMessageHistoryStacktrace(org.apache.camel.Exchange,org.apache.camel.spi.ExchangeFormatter,boolean)"
        ]
    },
    "org.apache.camel.util.toolbox.FlexibleAggregationStrategy$PropertyInjector:java.util.Collection getValueAsCollection(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:void injectAsCollection(org.apache.camel.Exchange,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$13:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:java.lang.Integer getExchangeIndex(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$AggregateOnTheFlyTask:void aggregateOnTheFly()",
            "org.apache.camel.processor.MulticastProcessor$1:org.apache.camel.Exchange call()"
        ]
    },
    "org.apache.camel.converter.stream.FileInputStreamCache$TempFileManager:void addExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.stream.FileInputStreamCache:org.apache.camel.StreamCache copy(org.apache.camel.Exchange)",
            "org.apache.camel.converter.stream.CachedOutputStream:void <init>(org.apache.camel.Exchange,boolean)"
        ]
    },
    "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:java.util.Collection safeInsertIntoCollection(org.apache.camel.Exchange,java.util.Collection,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:void injectAsCollection(org.apache.camel.Exchange,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.Splitter:java.lang.Integer getExchangeIndex(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$AggregateOnTheFlyTask:void aggregateOnTheFly()",
            "org.apache.camel.processor.MulticastProcessor$1:org.apache.camel.Exchange call()"
        ]
    },
    "org.apache.camel.processor.Splitter$SplitterIterable$1:org.apache.camel.processor.ProcessorExchangePair next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Splitter$SplitterIterable$1:java.lang.Object next()"
        ]
    },
    "org.apache.camel.util.ObjectHelper:boolean containsIgnoreCase(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.PredicateBuilder$13:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.builder.xml.DefaultNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanInfo:boolean matchMethod(java.lang.reflect.Method,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:boolean lambda$removeNonMatchingMethods$0(java.lang.String,org.apache.camel.component.bean.MethodInfo)"
        ]
    },
    "org.apache.camel.processor.RoutingSlip$1:java.lang.Object next(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RoutingSlip:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.processor.RoutingSlip$RoutingSlipIterator,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.test.TestEndpoint$1:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.EndpointHelper:void pollEndpoint(org.apache.camel.Endpoint,org.apache.camel.Processor,long)"
        ]
    },
    "org.apache.camel.converter.jaxp.DomConverter:java.util.List toList(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DynamicRouter$DynamicRoutingSlipIterator:java.lang.Object next(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RoutingSlip:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.processor.RoutingSlip$RoutingSlipIterator,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.GroupIterator:java.lang.Object doNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.GroupIterator:java.lang.Object next()"
        ]
    },
    "org.apache.camel.util.ObjectHelper:boolean contains(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.PredicateBuilder$12:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultUnitOfWorkFactory:org.apache.camel.spi.UnitOfWork createUnitOfWork(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumer:org.apache.camel.spi.UnitOfWork createUoW(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.MDCUnitOfWork:org.apache.camel.spi.UnitOfWork newInstance(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.jaxp.StaxConverter:java.io.InputStream createInputStream(javax.xml.stream.XMLStreamReader,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.jaxp.XmlConverter:javax.xml.transform.stax.StAXSource toStAXSource(byte[],org.apache.camel.Exchange)",
            "org.apache.camel.converter.jaxp.XmlConverter:javax.xml.transform.stax.StAXSource toStAXSource(java.io.File,org.apache.camel.Exchange)",
            "org.apache.camel.converter.jaxp.XmlConverter:javax.xml.transform.stax.StAXSource toStAXSource(java.io.InputStream,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.io.BufferedWriter toWriter(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.IOHelper:java.lang.String getCharsetName(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:java.io.BufferedReader toReader(java.io.File,org.apache.camel.Exchange)",
            "org.apache.camel.support.TokenPairExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)",
            "org.apache.camel.converter.IOConverter:java.io.Reader toReader(java.io.InputStream,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:java.io.Writer toWriter(java.io.OutputStream,org.apache.camel.Exchange)",
            "org.apache.camel.support.TokenXMLExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(byte[],org.apache.camel.Exchange)",
            "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.File,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,org.apache.camel.Exchange)",
            "org.apache.camel.support.XMLTokenExpressionIterator:java.lang.Object doEvaluate(org.apache.camel.Exchange,boolean)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.ByteArrayOutputStream,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:java.io.BufferedWriter toWriter(java.io.File,org.apache.camel.Exchange)",
            "org.apache.camel.util.GroupTokenIterator:java.lang.Object doNext()",
            "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.File,org.apache.camel.Exchange)",
            "org.apache.camel.converter.jaxp.DomConverter:byte[] toByteArray(org.w3c.dom.NodeList,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.lang.String getCharsetName(org.apache.camel.Exchange,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverter:java.lang.String getCharsetName(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultUnitOfWork:void <init>(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultUnitOfWorkFactory:org.apache.camel.spi.UnitOfWork createUnitOfWork(org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultUnitOfWork:org.apache.camel.spi.UnitOfWork newInstance(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:void injectAsCollection(org.apache.camel.Exchange,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.xml.FileResultHandlerFactory:org.apache.camel.builder.xml.ResultHandler createResult(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XsltBuilder:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:java.lang.String format(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelLogProcessor:void process(org.apache.camel.Exchange,java.lang.String)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelLogProcessor:void process(org.apache.camel.Exchange,java.lang.Throwable)"
        ]
    },
    "org.apache.camel.util.component.AbstractApiProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.dataformat.DataFormatEndpoint$1:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.JMXNotificationTraceEventHandler:void traceExchange(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.JMXNotificationTraceEventHandler:java.lang.Object traceExchangeIn(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.MessageHelper:java.lang.String dumpAsXml(org.apache.camel.Message,boolean,int,boolean,boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.MessageHelper:java.lang.String dumpAsXml(org.apache.camel.Message,boolean,int)",
            "org.apache.camel.processor.CamelInternalProcessor$BacklogTracerAdvice:java.lang.Object before(org.apache.camel.Exchange)",
            "org.apache.camel.processor.interceptor.BacklogDebugger$NodeBreakpoint:void beforeProcess(org.apache.camel.Exchange,org.apache.camel.Processor,org.apache.camel.model.ProcessorDefinition)",
            "org.apache.camel.processor.interceptor.BacklogDebugger$StepBreakpoint:void beforeProcess(org.apache.camel.Exchange,org.apache.camel.Processor,org.apache.camel.model.ProcessorDefinition)"
        ]
    },
    "org.apache.camel.component.vm.VmComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.timer.TimerComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.log.LogComponent:org.slf4j.Logger getLogger(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.log.LogComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.model.ModelHelper:org.apache.camel.NamedNode modelToXml(org.apache.camel.CamelContext,java.io.InputStream,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ModelHelper:org.apache.camel.NamedNode createModelFromXml(org.apache.camel.CamelContext,java.io.InputStream,java.lang.Class)",
            "org.apache.camel.model.ModelHelper:org.apache.camel.NamedNode createModelFromXml(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.model.ModelHelper:java.lang.String dumpModelAsXml(org.apache.camel.CamelContext,org.apache.camel.NamedNode)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedRoute:java.lang.String dumpRouteAsXml(boolean)",
            "org.apache.camel.management.mbean.ManagedProcessor:java.lang.String dumpProcessorAsXml()",
            "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRestsAsXml(boolean)",
            "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRoutesAsXml(boolean)"
        ]
    },
    "org.apache.camel.model.ModelHelper:org.apache.camel.model.RoutesDefinition loadRoutesDefinition(org.apache.camel.CamelContext,java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.model.RoutesDefinition loadRoutesDefinition(java.io.InputStream)"
        ]
    },
    "org.apache.camel.component.file.GenericFileProducer:void processExchange(org.apache.camel.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileProducer:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultComponent:void setProperties(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.rest.RestApiComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.timer.TimerComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.browse.BrowseComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.properties.PropertiesComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.dataformat.DataFormatComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.impl.DefaultComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String)",
            "org.apache.camel.component.ref.RefComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.file.GenericFileComponent:org.apache.camel.component.file.GenericFileEndpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.scheduler.SchedulerComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.direct.DirectComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.log.LogComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.directvm.DirectVmComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.util.component.AbstractApiComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.bean.BeanComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.beanclass.ClassComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.language.LanguageComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.controlbus.ControlBusComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.test.TestComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.validator.ValidatorComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.xslt.XsltComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.component.direct.DirectEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()"
        ]
    },
    "org.apache.camel.impl.DefaultPollingEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenConsumerRoute:void addServices(java.util.List)",
            "org.apache.camel.component.binding.BindingEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.properties.PropertiesEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.impl.CamelPostProcessorHelper:void subscribeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()"
        ]
    },
    "org.apache.camel.component.seda.SedaEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()"
        ]
    },
    "org.apache.camel.component.seda.SedaEndpoint:org.apache.camel.PollingConsumer createPollingConsumer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.timer.TimerEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()"
        ]
    },
    "org.apache.camel.impl.DefaultEndpoint:void configurePollingConsumer(org.apache.camel.PollingConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.dataset.DataSetEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()"
        ]
    },
    "org.apache.camel.component.directvm.DirectVmEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()"
        ]
    },
    "org.apache.camel.component.scheduler.SchedulerEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()"
        ]
    },
    "org.apache.camel.component.rest.RestApiEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.rest.RestEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.FileEndpoint:org.apache.camel.component.file.FileConsumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.FileEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)",
            "org.apache.camel.component.file.FileEndpoint:org.apache.camel.component.file.GenericFileConsumer createConsumer(org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.component.browse.BrowseEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()"
        ]
    },
    "org.apache.camel.impl.ProcessorEndpoint:org.apache.camel.PollingConsumer createPollingConsumer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EmptyConsumerCache:org.apache.camel.PollingConsumer acquirePollingConsumer(org.apache.camel.Endpoint)",
            "org.apache.camel.util.EndpointHelper:void pollEndpoint(org.apache.camel.Endpoint,org.apache.camel.Processor,long)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.PollingConsumer createInjectionPollingConsumer(org.apache.camel.Endpoint,java.lang.Object,java.lang.String)",
            "org.apache.camel.impl.DefaultScheduledPollConsumer:void doStart()",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.PollingConsumer doGetPollingConsumer(org.apache.camel.Endpoint,boolean)"
        ]
    },
    "org.apache.camel.component.bean.BeanEndpoint:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperty(java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.IntrospectionSupport:boolean setProperties(java.lang.Object,java.util.Map,java.lang.String,boolean)",
            "org.apache.camel.util.IntrospectionSupport:boolean setProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperty(org.apache.camel.CamelContext,org.apache.camel.TypeConverter,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.IntrospectionSupport:boolean setProperties(org.apache.camel.CamelContext,org.apache.camel.TypeConverter,java.lang.Object,java.util.Map)"
        ]
    },
    "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.lang.Object setProperties(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.lang.Object setProperties(java.lang.Object,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperty(org.apache.camel.CamelContext,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.DataFormatDefinition:void setProperty(org.apache.camel.CamelContext,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.dataformat.Base64DataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.IcalDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.dataformat.XMLSecurityDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.SoapJaxbDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.MimeMultipartDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.UniVocityFixedWidthDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.CryptoDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.BeanioDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.ProtobufDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.FlatpackDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.XmlJsonDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.ASN1DataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.BindyDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.TarFileDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.YAMLDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.dataformat.HL7DataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.CsvDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.JaxbDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.JacksonXMLDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.CryptoDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.dataformat.BoonDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.UniVocityTsvDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.JibxDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.BarcodeDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.TidyMarkupDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.JsonDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.dataformat.YAMLDataFormat:void setProperty(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext,java.lang.String,java.lang.Object)",
            "org.apache.camel.model.dataformat.XStreamDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.dataformat.LZFDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.YAMLDataFormat:void setPropertyRef(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext,java.lang.String,java.lang.String)",
            "org.apache.camel.model.dataformat.UniVocityCsvDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.ThriftDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.XmlRpcDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.UniVocityAbstractDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.FlatpackDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.dataformat.CastorDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.PGPDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.XStreamDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.DataFormatDefinition:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.model.dataformat.ZipFileDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.AvroDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.JsonDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperty(org.apache.camel.TypeConverter,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:void traceExchange(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)",
            "org.apache.camel.util.CamelContextHelper:void resolvePropertyPlaceholders(org.apache.camel.CamelContext,java.lang.Object)",
            "org.apache.camel.impl.ConfigurationHelper:void setConfigurationField(org.apache.camel.CamelContext,org.apache.camel.EndpointConfiguration,java.lang.String,java.lang.Object)",
            "org.apache.camel.component.rest.RestProducer:org.apache.camel.AsyncProcessor createBindingProcessor()",
            "org.apache.camel.model.rest.RestBindingDefinition:org.apache.camel.processor.RestBindingAdvice createRestBindingAdvice(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ProcessorDefinitionHelper:void resolvePropertyPlaceholders(org.apache.camel.CamelContext,java.lang.Object)"
        ]
    },
    "org.apache.camel.support.XMLTokenExpressionIterator:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.support.XMLTokenExpressionIterator:boolean matches(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.ExpressionToPredicateAdapter:boolean matches(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.controlbus.ControlBusProducer:void processByLanguage(org.apache.camel.Exchange,org.apache.camel.spi.Language)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.controlbus.ControlBusProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.bean.AbstractCamelInvocationHandler:java.lang.Object afterInvoke(java.lang.reflect.Method,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.AbstractCamelInvocationHandler$1:java.lang.Object call()"
        ]
    },
    "org.apache.camel.impl.ConfigurationHelper:void populateFromURI(org.apache.camel.CamelContext,org.apache.camel.EndpointConfiguration,org.apache.camel.impl.ConfigurationHelper$ParameterSetter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultEndpointConfiguration:void parseURI()",
            "org.apache.camel.impl.MappedEndpointConfiguration:void parseURI()"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$44:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionClause$7:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ProcessClause:void lambda$body$2(java.util.function.Consumer,java.lang.Class,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ProcessClause:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint:void performAssertions(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint:void onExchange(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.AggregationStrategyClause:org.apache.camel.Exchange lambda$body$1(java.util.function.BiFunction,java.lang.Class,java.lang.Class,org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.xml.XPathBuilder:void logNamespaces(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluateAs(org.apache.camel.Exchange,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$56:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.util.toolbox.FlexibleAggregationStrategy$BodyInjector:java.util.Collection getValueAsCollection(org.apache.camel.Exchange,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy:void injectAsCollection(org.apache.camel.Exchange,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionClause$11:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionClause$6:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ProcessClause:void lambda$body$4(java.util.function.BiConsumer,java.lang.Class,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ProcessClause:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.builder.ExpressionClause$10:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ExpressionBuilder$54:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.model.RouteDefinition:java.util.List addRoutes(org.apache.camel.model.ModelCamelContext,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void startRoute(org.apache.camel.model.RouteDefinition)"
        ]
    },
    "org.apache.camel.model.OnExceptionDefinition:org.apache.camel.processor.RedeliveryPolicy createRedeliveryPolicy(org.apache.camel.CamelContext,org.apache.camel.processor.RedeliveryPolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.EndpointHelper:java.lang.Object resolveReferenceParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.EndpointHelper:java.lang.Object resolveReferenceParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object extractFutureBody(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object extractFutureBody(java.util.concurrent.Future,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.ExpressionBuilder$103:java.lang.Object evaluate(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)"
        ]
    },
    "org.apache.camel.processor.DefaultErrorHandler:void <init>(org.apache.camel.CamelContext,org.apache.camel.Processor,org.apache.camel.util.CamelLogger,org.apache.camel.Processor,org.apache.camel.processor.RedeliveryPolicy,org.apache.camel.processor.exceptionpolicy.ExceptionPolicyStrategy,org.apache.camel.Predicate,java.util.concurrent.ScheduledExecutorService,org.apache.camel.Processor,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.DefaultErrorHandlerBuilder:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Processor)",
            "org.apache.camel.processor.LoggingErrorHandler:void <init>(org.apache.camel.CamelContext,org.apache.camel.Processor,org.apache.camel.util.CamelLogger,org.apache.camel.processor.RedeliveryPolicy,org.apache.camel.processor.exceptionpolicy.ExceptionPolicyStrategy)"
        ]
    },
    "org.apache.camel.processor.DeadLetterChannel:void <init>(org.apache.camel.CamelContext,org.apache.camel.Processor,org.apache.camel.util.CamelLogger,org.apache.camel.Processor,org.apache.camel.processor.RedeliveryPolicy,org.apache.camel.processor.exceptionpolicy.ExceptionPolicyStrategy,org.apache.camel.Processor,java.lang.String,boolean,boolean,org.apache.camel.Predicate,java.util.concurrent.ScheduledExecutorService,org.apache.camel.Processor,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.DeadLetterChannelBuilder:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.lang.Object getMandatoryOption(java.util.Map,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class,java.util.function.Supplier)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ResolverHelper:org.apache.camel.Component lookupComponentInRegistryWithFallback(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultComponentResolver:org.apache.camel.Component resolveComponent(java.lang.String,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveParameter(java.util.Map,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.properties.PropertiesComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveOrResolveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)",
            "org.apache.camel.impl.DefaultComponent:java.lang.Object resolveAndRemoveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)",
            "org.apache.camel.component.file.GenericFileComponent:org.apache.camel.component.file.GenericFileEndpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.test.TestComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.impl.DefaultComponent:java.util.List resolveAndRemoveReferenceListParameter(java.util.Map,java.lang.String,java.lang.Class,java.util.List)",
            "org.apache.camel.component.mock.MockComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.component.log.LogComponent:org.apache.camel.LoggingLevel getLoggingLevel(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.log.LogComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.model.RouteDefinitionHelper:void prepareRouteImp(org.apache.camel.model.ModelCamelContext,org.apache.camel.model.RouteDefinition,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinitionHelper:void prepareRoute(org.apache.camel.model.ModelCamelContext,org.apache.camel.model.RouteDefinition,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext,org.apache.camel.model.DataFormatDefinition,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.UnmarshalDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.MarshalDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.dataformat.CustomDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.impl.transformer.DataFormatTransformer:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createOutputsProcessor(org.apache.camel.spi.RouteContext,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createOutputsProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.TryDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.AOPDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor makeProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ProcessorDefinition:void addRoutes(org.apache.camel.spi.RouteContext,java.util.Collection)"
        ]
    },
    "org.apache.camel.model.rest.RestDefinition:java.util.List asRouteDefinition(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.rest.RestDefinition:java.util.List asRouteDefinition(org.apache.camel.CamelContext,org.apache.camel.spi.RestConfiguration)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MulticastProcessor$AggregateOnTheFlyTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object mandatoryConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.component.AbstractApiProducer:boolean processInBody(org.apache.camel.Exchange,java.util.Map)",
            "org.apache.camel.impl.MessageSupport:java.lang.Object getMandatoryBody(java.lang.Class)",
            "org.apache.camel.builder.ExpressionBuilder$80:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object mandatoryConvertTo(java.lang.Class,java.lang.Object)",
            "org.apache.camel.processor.SendDynamicProcessor:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.GzipDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)",
            "org.apache.camel.impl.ZipDataFormat:void marshal(org.apache.camel.Exchange,java.lang.Object,java.io.OutputStream)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluateParameterValue(org.apache.camel.Exchange,int,java.lang.Object,java.lang.Class)",
            "org.apache.camel.util.ExchangeHelper:java.lang.Object convertToMandatoryType(org.apache.camel.Exchange,java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ExchangeHelper:java.lang.Object convertToType(org.apache.camel.Exchange,java.lang.Class,java.lang.Object)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,java.lang.Class)",
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.support.ExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object convertTo(java.lang.Class,java.lang.Object)",
            "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.util.function.Supplier,java.lang.Class)",
            "org.apache.camel.impl.converter.FutureTypeConverter:java.lang.Object doConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.lang.Class)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String)",
            "org.apache.camel.util.PredicateToExpressionAdapter:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,long,java.lang.Class)",
            "org.apache.camel.processor.PipelineHelper:boolean continueProcessing(org.apache.camel.Exchange,java.lang.String,org.slf4j.Logger)",
            "org.apache.camel.component.mock.MockEndpoint:java.lang.Object extractActualValue(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.impl.MessageSupport:java.lang.Object getBody(java.lang.Class,java.lang.Object)",
            "org.apache.camel.impl.MessageSupport:void setBody(java.lang.Object,java.lang.Class)",
            "org.apache.camel.builder.xml.XPathBuilder:java.lang.Object doGetDocument(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.component.language.LanguageProducer:void process(org.apache.camel.Exchange)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractValueForLogging(java.lang.Object,org.apache.camel.Message)",
            "org.apache.camel.impl.DefaultExchange:java.lang.Object getIn(java.lang.Class)",
            "org.apache.camel.impl.DefaultExchange:java.lang.Object getOut(java.lang.Class)",
            "org.apache.camel.util.ExchangeHelper:java.lang.Object doExtractFutureBody(org.apache.camel.CamelContext,java.lang.Object,java.lang.Class)",
            "org.apache.camel.util.ObjectHelper:java.util.Scanner getScanner(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluateParameterValue(org.apache.camel.Exchange,int,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.properties.PropertiesComponent:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.vm.VmComponent:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.directvm.DirectVmComponent:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRouteContext:org.apache.camel.Endpoint getEndpoint()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultRouteContext:void commit()",
            "org.apache.camel.model.RouteDefinition:org.apache.camel.spi.RouteContext addRoutes(org.apache.camel.CamelContext,java.util.Collection,org.apache.camel.model.FromDefinition)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void setCamelContext(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:org.apache.camel.impl.ha.ClusteredRoutePolicy forNamespace(org.apache.camel.CamelContext,org.apache.camel.ha.CamelClusterService$Selector,java.lang.String)",
            "org.apache.camel.impl.ha.ClusteredRouteController$PolicyFactory:org.apache.camel.spi.RoutePolicy createRoutePolicy(org.apache.camel.CamelContext,java.lang.String,org.apache.camel.model.RouteDefinition)"
        ]
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncCallbackSendBody(java.lang.String,java.lang.Object,org.apache.camel.spi.Synchronization)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncCallbackRequestBody(java.lang.String,java.lang.Object,org.apache.camel.spi.Synchronization)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncSend(java.lang.String,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncCallback(java.lang.String,org.apache.camel.Processor,org.apache.camel.spi.Synchronization)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncCallback(java.lang.String,org.apache.camel.Exchange,org.apache.camel.spi.Synchronization)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBody(java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncSend(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBody(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncSendBody(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.util.concurrent.CompletableFuture asyncRequestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint doGetEndpointInjection(java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint getEndpointInjection(java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.component.xslt.XsltEndpoint:org.apache.camel.component.xslt.XsltEndpoint findOrCreateEndpoint(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.BuilderSupport:org.apache.camel.Endpoint endpoint(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.Endpoint getResolvedEndpoint(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.BuilderSupport:java.util.List endpoints(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.BuilderSupport:org.apache.camel.builder.DeadLetterChannelBuilder deadLetterChannel(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:org.apache.camel.impl.DefaultProducerTemplate newInstance(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.test.TestComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Endpoint resolveMandatoryEndpoint(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(java.lang.String)",
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receiveNoWait(java.lang.String)",
            "org.apache.camel.impl.DefaultConsumerTemplate:org.apache.camel.Exchange receive(java.lang.String,long)"
        ]
    },
    "org.apache.camel.model.RouteDefinition:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultRouteContext:org.apache.camel.Endpoint resolveEndpoint(java.lang.String)"
        ]
    },
    "org.apache.camel.util.ExchangeHelper:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Enricher:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.processor.RecipientListProcessor:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.processor.PollEnricher:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.processor.SendDynamicProcessor:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.processor.RoutingSlip:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.processor.RoutingSlip$RoutingSlipIterator,org.apache.camel.Exchange)",
            "org.apache.camel.processor.RecipientList:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.model.RouteDefinitionHelper:void doInitInterceptors(org.apache.camel.CamelContext,org.apache.camel.model.RouteDefinition,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinitionHelper:void initInterceptors(org.apache.camel.CamelContext,org.apache.camel.model.RouteDefinition,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.camel.component.binding.BindingComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.CamelContextHelper:org.apache.camel.Endpoint getMandatoryEndpoint(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.mock.MockEndpoint:org.apache.camel.component.mock.MockEndpoint resolve(org.apache.camel.CamelContext,java.lang.String)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo introspect(java.lang.Class,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:void introspect(java.lang.Class)",
            "org.apache.camel.component.bean.BeanInfo:void <init>(org.apache.camel.CamelContext,java.lang.Class,java.lang.reflect.Method,org.apache.camel.component.bean.ParameterMappingStrategy)"
        ]
    },
    "org.apache.camel.util.ReflectionHelper:void doWithFields(java.lang.Class,org.apache.camel.util.ReflectionHelper$FieldCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.UriEndpointComponent:void populateParameterConfigurationMap(java.util.SortedMap,java.lang.Class,java.lang.String)",
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectFields(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectMethods(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.component.direct.DirectConsumer:void doResume()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.WhenDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.FilterDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.RouteBuilder:void includeRoutes(org.apache.camel.RoutesBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.RouteBuilder:void addRoutes(org.apache.camel.RoutesBuilder)"
        ]
    },
    "org.apache.camel.impl.DefaultRouteController:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedRoute:boolean stop(java.lang.Long,java.lang.Boolean)",
            "org.apache.camel.impl.ha.ClusteredRouteController:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)",
            "org.apache.camel.impl.SupervisingRouteController:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)",
            "org.apache.camel.impl.SupervisingRouteController:void lambda$stopRoute$7(java.util.concurrent.atomic.AtomicBoolean,long,java.util.concurrent.TimeUnit,boolean,org.apache.camel.impl.SupervisingRouteController$RouteHolder)"
        ]
    },
    "org.apache.camel.impl.DefaultRouteController:void startRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void startRoute(java.lang.String)",
            "org.apache.camel.impl.SupervisingRouteController:void access$1501(org.apache.camel.impl.SupervisingRouteController,java.lang.String)",
            "org.apache.camel.impl.SupervisingRouteController:void lambda$startRoute$1(java.lang.String,org.apache.camel.impl.SupervisingRouteController$RouteHolder)",
            "org.apache.camel.management.mbean.ManagedRoute:void start()",
            "org.apache.camel.impl.ha.ClusteredRouteController:void startRoute(java.lang.String)",
            "org.apache.camel.impl.SupervisingRouteController:void lambda$resumeRoute$13(java.lang.String,org.apache.camel.impl.SupervisingRouteController$RouteHolder)",
            "org.apache.camel.impl.SupervisingRouteController:void access$701(org.apache.camel.impl.SupervisingRouteController,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void doStartManagedRoutes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void stopManagedRoutes()",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void startManagedRoutes()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void startRouteDefinitions(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void addRouteDefinitions(java.util.Collection)",
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()"
        ]
    },
    "org.apache.camel.management.mbean.ManagedService:void resume()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void resume()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.EventNotifierCallback:void <init>(org.apache.camel.AsyncCallback,org.apache.camel.Exchange,org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:boolean asyncDispatchExchange(org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.DefaultUnitOfWork:void done(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.UnitOfWorkHelper:void doneUow(org.apache.camel.spi.UnitOfWork,org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultConsumerTemplate:void doneUoW(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:boolean isDone(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler$2:void done(boolean)",
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask$1:void done(boolean)",
            "org.apache.camel.processor.RedeliveryErrorHandler$AsyncRedeliveryTask$2:void done(boolean)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedPerformanceCounter:void completedExchange(org.apache.camel.Exchange,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.CompositePerformanceCounter:void completedExchange(org.apache.camel.Exchange,long)"
        ]
    },
    "org.apache.camel.processor.idempotent.IdempotentOnCompletion:void onComplete(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.idempotent.IdempotentConsumer$IdempotentConsumerCallback:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.Enricher$1:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.CamelLogProcessor:void process(org.apache.camel.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.TraceInterceptor:void logException(org.apache.camel.Exchange,java.lang.Throwable)"
        ]
    },
    "org.apache.camel.processor.CamelLogProcessor:void process(org.apache.camel.Exchange,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.TraceInterceptor:void logException(org.apache.camel.Exchange,java.lang.Throwable)"
        ]
    },
    "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:org.apache.camel.MessageHistory getLastMessageHistory()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:org.apache.camel.NamedNode getNode()",
            "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:java.lang.String getRouteId()"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void access$1900(org.apache.camel.processor.aggregate.AggregateProcessor,java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AggregateProcessor$RecoverTask:void run()",
            "org.apache.camel.processor.aggregate.AggregateProcessor$AggregationTimeoutMap:boolean onEviction(java.lang.String,java.lang.String)",
            "org.apache.camel.processor.aggregate.AggregateProcessor$AggregationIntervalTask:void run()"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:int forceCompletionOfAllGroups()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.DefaultAggregateController:int forceCompletionOfAllGroups()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doForceCompletionOnStop()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doProcess(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:int forceCompletionOfGroup(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.DefaultAggregateController:int forceCompletionOfGroup(java.lang.String)"
        ]
    },
    "org.apache.camel.processor.aggregate.AbstractListAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.GroupedMessageAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.GroupedExchangeAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.NIOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.OptimisedTypeConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor$ParallelAggregateTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$AggregateOnTheFlyTask:void aggregateOnTheFly()"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor$ParallelAggregateTimeoutTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$AggregateOnTheFlyTask:void aggregateOnTheFly()"
        ]
    },
    "org.apache.camel.util.MessageHelper:java.lang.String dumpMessageHistoryStacktrace(org.apache.camel.Exchange,org.apache.camel.spi.ExchangeFormatter,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager:void interrupt(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RedeliveryErrorHandler:void logFailedDelivery(boolean,boolean,boolean,boolean,boolean,org.apache.camel.Exchange,java.lang.String,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,java.lang.Throwable)",
            "org.apache.camel.builder.ExpressionBuilder$103:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.stream.FileInputStreamCache:org.apache.camel.StreamCache copy(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.stream.StreamSourceCache:org.apache.camel.StreamCache copy(org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)",
            "org.apache.camel.processor.WireTapProcessor:org.apache.camel.Exchange configureExchange(org.apache.camel.Exchange,org.apache.camel.ExchangePattern)"
        ]
    },
    "org.apache.camel.converter.stream.CachedOutputStream:void <init>(org.apache.camel.Exchange,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.stream.CachedOutputStream:void <init>(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.Splitter$SplitterIterable$1:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$2:void done(boolean)",
            "org.apache.camel.processor.MulticastProcessor:void doProcessParallel(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,boolean,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Splitter:java.lang.Iterable createProcessorExchangePairsList(org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$13:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:boolean lambda$removeNonMatchingMethods$0(java.lang.String,org.apache.camel.component.bean.MethodInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RoutingSlip:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.processor.RoutingSlip$RoutingSlipIterator,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.util.GroupIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Splitter$SplitterIterable$1:org.apache.camel.processor.ProcessorExchangePair next()",
            "org.apache.camel.util.ObjectHelper:boolean containsIgnoreCase(java.lang.Object,java.lang.Object)",
            "org.apache.camel.builder.xml.DefaultNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.camel.component.bean.BeanInfo:boolean matchMethod(java.lang.reflect.Method,java.lang.String)",
            "org.apache.camel.processor.RoutingSlip$1:java.lang.Object next(org.apache.camel.Exchange)",
            "org.apache.camel.builder.ExpressionBuilder$66:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseMethodWithMatchingParameters(org.apache.camel.Exchange,java.lang.String,java.util.Collection)",
            "org.apache.camel.component.test.TestEndpoint$1:void process(org.apache.camel.Exchange)",
            "org.apache.camel.converter.jaxp.DomConverter:java.util.List toList(org.w3c.dom.NodeList)",
            "org.apache.camel.language.simple.ast.BinaryExpression$3:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.processor.DynamicRouter$DynamicRoutingSlipIterator:java.lang.Object next(org.apache.camel.Exchange)",
            "org.apache.camel.util.GroupTokenIterator:java.lang.Object doNext()",
            "org.apache.camel.util.GroupIterator:java.lang.Object doNext()",
            "org.apache.camel.processor.RecipientListProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object[] evaluateParameterExpressions(org.apache.camel.Exchange,java.lang.Object,boolean,java.util.Iterator)",
            "org.apache.camel.util.ObjectHelper:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.file.GenericFileComponent:java.util.Comparator createSortByComparator(java.util.Iterator)"
        ]
    },
    "org.apache.camel.builder.PredicateBuilder$12:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.BinaryPredicateSupport:java.lang.String matchesReturningFailureMessage(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumer:org.apache.camel.spi.UnitOfWork createUoW(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.String,org.apache.camel.Exchange,java.lang.Throwable)"
        ]
    },
    "org.apache.camel.converter.jaxp.XmlConverter:javax.xml.transform.stax.StAXSource toStAXSource(byte[],org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.jaxp.XmlConverter:javax.xml.transform.stax.StAXSource toStAXSource(java.io.File,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.jaxp.XmlConverter:javax.xml.transform.stax.StAXSource toStAXSource(java.io.InputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.lang.String)",
            "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.io.BufferedReader,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.lang.StringBuilder,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.lang.StringBuffer,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.io.BufferedReader toReader(java.io.File,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.component.file.GenericFileConverter:java.io.BufferedReader genericFileToReader(org.apache.camel.component.file.GenericFile,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.File,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.io.Reader toReader(java.io.InputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.InputStream,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:java.io.Reader toReader(java.io.InputStream)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.io.Writer toWriter(java.io.OutputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:java.io.Writer toWriter(java.io.OutputStream)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(byte[],org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(byte[])",
            "org.apache.camel.converter.NIOConverter:java.lang.String toString(java.nio.ByteBuffer,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.File,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.lang.String,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.io.BufferedReader,org.apache.camel.Exchange)",
            "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.lang.String)"
        ]
    },
    "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.ByteArrayOutputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.ByteArrayOutputStream)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.io.BufferedWriter toWriter(java.io.File,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.converter.jaxp.StaxConverter:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.File,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.jaxp.DomConverter:byte[] toByteArray(org.w3c.dom.NodeList,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.jaxp.DomConverter:java.io.InputStream toInputStream(org.w3c.dom.NodeList,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.lang.String getCharsetName(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultUnitOfWork:org.apache.camel.spi.UnitOfWork newInstance(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultUnitOfWork:org.apache.camel.spi.UnitOfWork createChildUnitOfWork(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.management.mbean.JMXNotificationTraceEventHandler:java.lang.Object traceExchangeIn(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.MessageHelper:java.lang.String dumpAsXml(org.apache.camel.Message,boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.MessageHelper:java.lang.String dumpAsXml(org.apache.camel.Message,boolean)"
        ]
    },
    "org.apache.camel.processor.CamelInternalProcessor$BacklogTracerAdvice:java.lang.Object before(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.BacklogDebugger$NodeBreakpoint:void beforeProcess(org.apache.camel.Exchange,org.apache.camel.Processor,org.apache.camel.model.ProcessorDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.BacklogDebugger$StepBreakpoint:void beforeProcess(org.apache.camel.Exchange,org.apache.camel.Processor,org.apache.camel.model.ProcessorDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.log.LogComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ModelHelper:org.apache.camel.NamedNode createModelFromXml(org.apache.camel.CamelContext,java.io.InputStream,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ModelHelper:org.apache.camel.NamedNode createModelFromXml(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedRoute:java.lang.String dumpRouteAsXml(boolean)",
            "org.apache.camel.management.mbean.ManagedRoute:void updateRouteFromXml(java.lang.String)",
            "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRestsAsXml(boolean)",
            "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRoutesAsXml(boolean)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedProcessor:java.lang.String dumpProcessorAsXml()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRestsAsXml(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRestsAsXml()"
        ]
    },
    "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRoutesAsXml(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRoutesAsXml()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.model.RoutesDefinition loadRoutesDefinition(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileProducer:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.rest.RestApiComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.browse.BrowseComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ComponentConfigurationSupport:org.apache.camel.Endpoint createEndpoint()"
        ]
    },
    "org.apache.camel.component.ref.RefComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.scheduler.SchedulerComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.direct.DirectComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.directvm.DirectVmComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.component.AbstractApiComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.beanclass.ClassComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.validator.ValidatorComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.xslt.XsltComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.EventDrivenConsumerRoute:void addServices(java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.binding.BindingEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.properties.PropertiesEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.FileEndpoint:org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStart()"
        ]
    },
    "org.apache.camel.component.file.FileEndpoint:org.apache.camel.component.file.GenericFileConsumer createConsumer(org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperties(java.lang.Object,java.util.Map,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.IntrospectionSupport:boolean setProperties(java.lang.Object,java.util.Map,java.lang.String)"
        ]
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.LoadBalancerDefinition:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.model.ProcessorDefinitionHelper:void resolveKnownConstantFields(java.lang.Object)",
            "org.apache.camel.impl.UriEndpointConfiguration:void setParameter(java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.UriComponentConfiguration:void setEndpointParameter(org.apache.camel.Endpoint,java.lang.String,java.lang.Object)",
            "org.apache.camel.model.language.ExpressionDefinition:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultComponentConfiguration:void setEndpointParameter(org.apache.camel.Endpoint,java.lang.String,java.lang.Object)",
            "org.apache.camel.model.DataFormatDefinition:void setProperty(org.apache.camel.CamelContext,java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperties(org.apache.camel.CamelContext,org.apache.camel.TypeConverter,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.IntrospectionSupport:boolean setProperties(org.apache.camel.TypeConverter,java.lang.Object,java.util.Map)",
            "org.apache.camel.model.ProcessorDefinitionHelper$1:void run()",
            "org.apache.camel.component.rest.RestComponent:org.apache.camel.spi.RestConfiguration mergeConfigurations(org.apache.camel.spi.RestConfiguration,org.apache.camel.spi.RestConfiguration)"
        ]
    },
    "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.lang.Object setProperties(java.lang.Object,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.Base64DataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.IcalDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.XMLSecurityDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.SoapJaxbDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.MimeMultipartDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.UniVocityFixedWidthDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.CryptoDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.BeanioDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.ProtobufDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.FlatpackDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.XmlJsonDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.ASN1DataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.BindyDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.TarFileDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.YAMLDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.HL7DataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.CsvDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.JaxbDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.JacksonXMLDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.CryptoDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.BoonDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.UniVocityTsvDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.JibxDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.BarcodeDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.TidyMarkupDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.JsonDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.YAMLDataFormat:void setProperty(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.dataformat.YAMLDataFormat:void configureSnakeDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.dataformat.XStreamDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.LZFDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.YAMLDataFormat:void setPropertyRef(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.dataformat.YAMLDataFormat:void configureSnakeDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.dataformat.UniVocityCsvDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.ThriftDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.XmlRpcDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.UniVocityAbstractDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.dataformat.UniVocityCsvDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.UniVocityTsvDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)",
            "org.apache.camel.model.dataformat.UniVocityFixedWidthDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.dataformat.FlatpackDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.CastorDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.PGPDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.XStreamDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.DataFormatDefinition:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.ZipFileDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.AvroDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.model.dataformat.JsonDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.impl.DefaultEndpointConfiguration:void parseURI()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultEndpointConfiguration:void setURI(java.net.URI)"
        ]
    },
    "org.apache.camel.impl.MappedEndpointConfiguration:void parseURI()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultEndpointConfiguration:void setURI(java.net.URI)"
        ]
    },
    "org.apache.camel.builder.ProcessClause:void process(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:org.apache.camel.processor.ProcessorExchangePair createProcessorExchangePair(int,org.apache.camel.Processor,org.apache.camel.Exchange,org.apache.camel.spi.RouteContext)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void processNext(org.apache.camel.Exchange)",
            "org.apache.camel.processor.RecipientListProcessor:org.apache.camel.processor.ProcessorExchangePair createProcessorExchangePair(int,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.Exchange,org.apache.camel.ExchangePattern)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.DelegateSyncProcessor:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.EndpointHelper:java.lang.Object resolveReferenceParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveOrResolveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)",
            "org.apache.camel.impl.DefaultComponent:java.lang.Object resolveAndRemoveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)",
            "org.apache.camel.util.EndpointHelper:java.util.List resolveReferenceListParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)",
            "org.apache.camel.util.EndpointHelper:java.lang.Object resolveParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.DefaultErrorHandlerBuilder:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.ErrorHandlerBuilderRef:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.processor.LoggingErrorHandler:void <init>(org.apache.camel.CamelContext,org.apache.camel.Processor,org.apache.camel.util.CamelLogger,org.apache.camel.processor.RedeliveryPolicy,org.apache.camel.processor.exceptionpolicy.ExceptionPolicyStrategy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.LoggingErrorHandlerBuilder:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Processor)"
        ]
    },
    "org.apache.camel.builder.DeadLetterChannelBuilder:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultComponentResolver:org.apache.camel.Component resolveComponent(java.lang.String,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Component initComponent(java.lang.String,boolean,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Component resolveComponent(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultComponent:java.lang.Object resolveAndRemoveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultComponent:java.lang.Object resolveAndRemoveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultComponent:java.util.List resolveAndRemoveReferenceListParameter(java.util.Map,java.lang.String,java.lang.Class,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultComponent:java.util.List resolveAndRemoveReferenceListParameter(java.util.Map,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.component.mock.MockComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.RouteDefinitionHelper:void prepareRoute(org.apache.camel.model.ModelCamelContext,org.apache.camel.model.RouteDefinition,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinitionHelper:void prepareRoute(org.apache.camel.model.ModelCamelContext,org.apache.camel.model.RouteDefinition)",
            "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition route(org.apache.camel.model.RouteDefinition)"
        ]
    },
    "org.apache.camel.model.UnmarshalDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.MarshalDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.CustomDataFormat:org.apache.camel.spi.DataFormat createDataFormat(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.impl.transformer.DataFormatTransformer:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)"
        ]
    },
    "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createOutputsProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ExpressionNode:org.apache.camel.processor.FilterProcessor createFilterProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createChildProcessor(org.apache.camel.spi.RouteContext,boolean)",
            "org.apache.camel.model.OnExceptionDefinition:void addRoutes(org.apache.camel.spi.RouteContext,java.util.Collection)"
        ]
    },
    "org.apache.camel.model.TryDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.AOPDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ProcessorDefinition:void addRoutes(org.apache.camel.spi.RouteContext,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object mandatoryConvertTo(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluateParameterBinding(org.apache.camel.Exchange,org.apache.camel.Expression,int,java.lang.Class)",
            "org.apache.camel.management.mbean.ManagedRoute:java.lang.String dumpRouteAsXml(boolean)",
            "org.apache.camel.builder.RouteBuilder:java.lang.Object propertyInject(java.lang.String,java.lang.Class)",
            "org.apache.camel.util.IntrospectionSupport:boolean isPropertyPlaceholder(org.apache.camel.CamelContext,java.lang.Object)",
            "org.apache.camel.impl.CamelPostProcessorHelper:org.apache.camel.Endpoint doGetEndpointInjection(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.camel.impl.CamelPostProcessorHelper:java.lang.Object getInjectionPropertyValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.String)",
            "org.apache.camel.management.DefaultManagementAgent:void finalizeSettings()",
            "org.apache.camel.util.CamelContextHelper:java.lang.Long parseLong(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.builder.ExpressionBuilder$98:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.util.GroupTokenIterator:java.lang.Object doNext()",
            "org.apache.camel.util.IntrospectionSupport:java.lang.Object convert(org.apache.camel.TypeConverter,java.lang.Class,java.lang.Object)",
            "org.apache.camel.util.CamelContextHelper:java.lang.Integer parseInteger(org.apache.camel.CamelContext,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object convertTo(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.PredicateBuilder$17:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.impl.DefaultComponent:java.lang.Object getAndRemoveOrResolveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class,java.lang.Object)",
            "org.apache.camel.builder.xml.XPathBuilder:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:org.apache.camel.FluentProducerTemplate withBodyAs(java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(org.apache.camel.Endpoint,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class)",
            "org.apache.camel.util.CamelContextHelper:java.lang.Object convertTo(org.apache.camel.CamelContext,java.lang.Class,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(org.apache.camel.Endpoint,java.lang.Object,java.lang.Class)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean continueProcessing(org.apache.camel.Exchange)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractBodyForLogging(org.apache.camel.Message,java.lang.String,boolean,boolean)",
            "org.apache.camel.processor.SharedCamelInternalProcessor:boolean continueProcessing(org.apache.camel.Exchange,org.apache.camel.AsyncProcessor)",
            "org.apache.camel.util.ResourceHelper:java.lang.String resolveOptionalExternalScript(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.impl.UriComponentConfiguration:java.lang.Object validatePropertyValue(java.lang.String,java.lang.Object)",
            "org.apache.camel.processor.Pipeline:boolean continueRouting(java.util.Iterator,org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.builder.PredicateBuilder$18:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.impl.DefaultStreamCachingStrategy:void doStart()",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object lambda$asyncRequestBody$1(java.lang.Class,java.lang.Object)",
            "org.apache.camel.component.language.LanguageEndpoint:java.lang.String resolveScript(java.lang.String)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object lookupResult(org.apache.camel.Exchange,java.lang.String,java.lang.Object,boolean,java.lang.String,java.lang.Object)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeaders(org.apache.camel.Endpoint,java.lang.Object,java.util.Map,java.lang.Class)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractValueForLogging(java.lang.Object,org.apache.camel.Message)",
            "org.apache.camel.util.ExchangeHelper:java.lang.Object doExtractFutureBody(org.apache.camel.CamelContext,java.lang.Object,java.lang.Class)",
            "org.apache.camel.impl.MappedEndpointConfiguration:java.lang.String toUriString(org.apache.camel.EndpointConfiguration$UriFormat)",
            "org.apache.camel.component.mock.MockEndpoint$10:void run()",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBodyAndHeader(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:java.lang.Object request(java.lang.Class)",
            "org.apache.camel.processor.DefaultExchangeFormatter:int getMaxChars(org.apache.camel.Message)",
            "org.apache.camel.component.validator.DefaultLSResourceResolver$DefaultLSInput:java.lang.String getStringData()",
            "org.apache.camel.processor.TryProcessor:boolean continueRouting(java.util.Iterator,org.apache.camel.Exchange)",
            "org.apache.camel.impl.DefaultProducerTemplate:java.lang.Object requestBody(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.converter.FutureTypeConverter:java.lang.Object doConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.FutureTypeConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultRouteContext:org.apache.camel.Endpoint resolveEndpoint(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultRouteContext:org.apache.camel.Endpoint resolveEndpoint(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.camel.processor.Enricher:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RecipientListProcessor:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RecipientListProcessor:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.PollEnricher:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.RecipientList:org.apache.camel.Endpoint resolveEndpoint(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.RouteDefinitionHelper:void initInterceptors(org.apache.camel.CamelContext,org.apache.camel.model.RouteDefinition,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinitionHelper:void prepareRouteImp(org.apache.camel.model.ModelCamelContext,org.apache.camel.model.RouteDefinition,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.camel.component.mock.MockEndpoint:org.apache.camel.component.mock.MockEndpoint resolve(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanInfo:void introspect(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:void <init>(org.apache.camel.CamelContext,java.lang.Class,java.lang.reflect.Method,org.apache.camel.component.bean.ParameterMappingStrategy)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:void <init>(org.apache.camel.CamelContext,java.lang.Class,java.lang.reflect.Method,org.apache.camel.component.bean.ParameterMappingStrategy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:void <init>(org.apache.camel.CamelContext,java.lang.Class,org.apache.camel.component.bean.ParameterMappingStrategy)",
            "org.apache.camel.component.bean.BeanInfo:void <init>(org.apache.camel.CamelContext,java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.impl.UriEndpointComponent:void populateParameterConfigurationMap(java.util.SortedMap,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.UriEndpointComponent:java.util.SortedMap createParameterConfigurationMap(java.lang.Class)",
            "org.apache.camel.impl.UriEndpointComponent$1:void doWith(java.lang.reflect.Field)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor:void injectFields(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelBeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelBeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultInjector:java.lang.Object newInstance(java.lang.Class)",
            "org.apache.camel.impl.DefaultInjector:java.lang.Object newInstance(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.camel.builder.RouteBuilder:void addRoutes(org.apache.camel.RoutesBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedRoute:boolean stop(java.lang.Long,java.lang.Boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRouteController:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void lambda$stopRoute$7(java.util.concurrent.atomic.AtomicBoolean,long,java.util.concurrent.TimeUnit,boolean,org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void doStopRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void startRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void startRoutes()"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void access$1501(org.apache.camel.impl.SupervisingRouteController,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController$ManagedRoutePolicy:void lambda$startRoute$0(org.apache.camel.impl.SupervisingRouteController$RouteHolder)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void lambda$startRoute$1(java.lang.String,org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void doStartRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedRoute:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRouteController:void startRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void lambda$resumeRoute$13(java.lang.String,org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void doStartRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void access$701(org.apache.camel.impl.SupervisingRouteController,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController$RouteManager:void lambda$null$0(org.apache.camel.impl.SupervisingRouteController$RouteHolder)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void stopManagedRoutes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void setLeader(boolean)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void startManagedRoutes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void onInit(org.apache.camel.Route)",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void setLeader(boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void addRouteDefinitions(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void addRouteDefinition(org.apache.camel.model.RouteDefinition)",
            "org.apache.camel.builder.RouteBuilder:void populateRoutes()"
        ]
    },
    "org.apache.camel.util.UnitOfWorkHelper:void doneUow(org.apache.camel.spi.UnitOfWork,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.BridgeExceptionHandlerToErrorHandler:void handleException(java.lang.String,org.apache.camel.Exchange,java.lang.Throwable)",
            "org.apache.camel.impl.DefaultConsumer:void doneUoW(org.apache.camel.Exchange)",
            "org.apache.camel.processor.CamelInternalProcessor$UnitOfWorkProcessorAdvice:void after(org.apache.camel.Exchange,org.apache.camel.spi.UnitOfWork)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:void doneUoW(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,long,java.lang.Class)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,java.lang.Class)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(java.lang.String,java.lang.Class)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBodyNoWait(java.lang.String)",
            "org.apache.camel.impl.DefaultConsumerTemplate:java.lang.Object receiveBody(java.lang.String,long)"
        ]
    },
    "org.apache.camel.management.CompositePerformanceCounter:void completedExchange(org.apache.camel.Exchange,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.idempotent.IdempotentConsumer$IdempotentConsumerCallback:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:void logException(org.apache.camel.Exchange,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.TraceInterceptor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.interceptor.TraceInterceptor$1:void done(boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:org.apache.camel.NamedNode getNode()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:java.lang.String getNodeId()"
        ]
    },
    "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:java.lang.String getRouteId()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor$RecoverTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor$AggregationTimeoutMap:boolean onEviction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AggregateProcessor$AggregationTimeoutMap:boolean onEviction(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor$AggregationIntervalTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.DefaultAggregateController:int forceCompletionOfAllGroups()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedAggregateProcessor:int forceCompletionOfAllGroups()"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void doForceCompletionOnStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AggregateProcessor:void prepareShutdown(boolean,boolean)"
        ]
    },
    "org.apache.camel.processor.aggregate.DefaultAggregateController:int forceCompletionOfGroup(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedAggregateProcessor:int forceCompletionOfGroup(java.lang.String)"
        ]
    },
    "org.apache.camel.processor.aggregate.GroupedMessageAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.GroupedExchangeAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.AggregationStrategyClause:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:org.apache.camel.Exchange onAggregation(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.converter.OptimisedTypeConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object doConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager:void interrupt(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager:void interrupt(java.lang.String)",
            "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager:void doStop()"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:void logFailedDelivery(boolean,boolean,boolean,boolean,boolean,org.apache.camel.Exchange,java.lang.String,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:void handleException(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,boolean)",
            "org.apache.camel.processor.RedeliveryErrorHandler:void prepareExchangeAfterFailure(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,boolean,boolean,boolean)",
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler:void prepareExchangeForContinue(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,boolean)"
        ]
    },
    "org.apache.camel.converter.stream.StreamSourceCache:org.apache.camel.StreamCache copy(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.stream.CachedOutputStream:void <init>(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.stream.OutputStreamBuilder:void <init>(org.apache.camel.Exchange)",
            "org.apache.camel.converter.stream.StreamSourceCache:void <init>(javax.xml.transform.stream.StreamSource,org.apache.camel.Exchange)",
            "org.apache.camel.converter.stream.StreamCacheConverter:org.apache.camel.StreamCache convertToStreamCache(java.io.InputStream,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:void doProcessParallel(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,boolean,org.apache.camel.AsyncCallback)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.Splitter:java.lang.Iterable createProcessorExchangePairsList(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Splitter:java.lang.Iterable createProcessorExchangePairs(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.OptimisedTypeConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.io.BufferedReader,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.io.BufferedReader)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.lang.StringBuilder,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.lang.StringBuffer,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileConverter:java.io.BufferedReader genericFileToReader(org.apache.camel.component.file.GenericFile,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.file.GenericFileConverter:java.lang.String genericFileToString(org.apache.camel.component.file.GenericFile,org.apache.camel.Exchange)",
            "org.apache.camel.component.file.GenericFileConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object,org.apache.camel.spi.TypeConverterRegistry)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.File,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.File)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.InputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.InputStream)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(java.net.URL,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.IOConverter:java.io.Reader toReader(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.io.Writer toWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.NIOConverter:java.lang.String toString(java.nio.ByteBuffer,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.NIOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.io.BufferedReader,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.io.BufferedReader)",
            "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.io.Reader,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.ByteArrayOutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.jaxp.DomConverter:java.io.InputStream toInputStream(org.w3c.dom.NodeList,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultUnitOfWork:org.apache.camel.spi.UnitOfWork createChildUnitOfWork(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.MessageHelper:java.lang.String dumpAsXml(org.apache.camel.Message,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedBrowsableEndpoint:java.lang.String browseMessageAsXml(java.lang.Integer,java.lang.Boolean)",
            "org.apache.camel.management.mbean.ManagedBrowsableEndpoint:java.lang.String browseRangeMessagesAsXml(java.lang.Integer,java.lang.Integer,java.lang.Boolean)",
            "org.apache.camel.util.EndpointHelper:java.lang.String browseRangeMessagesAsXml(org.apache.camel.spi.BrowsableEndpoint,java.lang.Integer,java.lang.Integer,java.lang.Boolean)",
            "org.apache.camel.util.MessageHelper:java.lang.String dumpAsXml(org.apache.camel.Message)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedRoute:void updateRouteFromXml(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRestsAsXml()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRoutesAsXml()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRoutesCoverageAsXml()"
        ]
    },
    "org.apache.camel.impl.ComponentConfigurationSupport:org.apache.camel.Endpoint createEndpoint()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperties(java.lang.Object,java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.JndiContext:java.lang.Object createBean(java.lang.Class,java.util.Map,java.lang.String)"
        ]
    },
    "org.apache.camel.model.LoadBalancerDefinition:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ProcessorDefinitionHelper:void resolveKnownConstantFields(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createOutputsProcessorImpl(org.apache.camel.spi.RouteContext,java.util.Collection)",
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor makeProcessorImpl(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.impl.UriEndpointConfiguration:void setParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.UriComponentConfiguration:void setEndpointParameter(org.apache.camel.Endpoint,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.language.ExpressionDefinition:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.XQueryExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)",
            "org.apache.camel.model.language.XPathExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)",
            "org.apache.camel.model.language.JsonPathExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)",
            "org.apache.camel.model.language.JXPathExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)",
            "org.apache.camel.model.language.XPathExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)",
            "org.apache.camel.model.language.JXPathExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)",
            "org.apache.camel.model.language.XQueryExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)",
            "org.apache.camel.model.language.JsonPathExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)",
            "org.apache.camel.model.language.XMLTokenizerExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)",
            "org.apache.camel.model.language.XMLTokenizerExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)"
        ]
    },
    "org.apache.camel.impl.DefaultComponentConfiguration:void setEndpointParameter(org.apache.camel.Endpoint,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperties(org.apache.camel.TypeConverter,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:void traceExchange(org.apache.camel.model.ProcessorDefinition,org.apache.camel.Processor,org.apache.camel.processor.interceptor.TraceInterceptor,org.apache.camel.Exchange)",
            "org.apache.camel.util.IntrospectionSupport:boolean setProperties(java.lang.Object,java.util.Map)",
            "org.apache.camel.component.extension.verifier.DefaultComponentVerifierExtension:java.lang.Object setProperties(java.lang.Object,java.util.Map)",
            "org.apache.camel.util.EndpointHelper:void setProperties(org.apache.camel.CamelContext,java.lang.Object,java.util.Map)",
            "org.apache.camel.impl.ScheduledPollConsumer:void doStart()"
        ]
    },
    "org.apache.camel.model.ProcessorDefinitionHelper$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.dataformat.YAMLDataFormat:void configureSnakeDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.dataformat.YAMLDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.impl.DefaultEndpointConfiguration:void setURI(java.net.URI)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultEndpointConfiguration:void setURI(java.lang.String)",
            "org.apache.camel.impl.DefaultEndpointConfiguration:void <init>(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.impl.DefaultComponent:org.apache.camel.EndpointConfiguration createConfiguration(java.lang.String)"
        ]
    },
    "org.apache.camel.util.EndpointHelper:java.util.List resolveReferenceListParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultComponent:java.util.List resolveAndRemoveReferenceListParameter(java.util.Map,java.lang.String,java.lang.Class,java.util.List)",
            "org.apache.camel.component.xslt.XsltEndpoint:void setSaxonExtensionFunctions(java.lang.String)",
            "org.apache.camel.component.xslt.XsltComponent:void setSaxonExtensionFunctions(java.lang.String)"
        ]
    },
    "org.apache.camel.util.EndpointHelper:java.lang.Object resolveParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.EndpointHelper:java.lang.Object resloveStringParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.builder.ErrorHandlerBuilderRef:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.LoggingErrorHandlerBuilder:org.apache.camel.Processor createErrorHandler(org.apache.camel.spi.RouteContext,org.apache.camel.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Component resolveComponent(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultComponent:java.lang.Object resolveAndRemoveReferenceParameter(java.util.Map,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.seda.SedaComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.validator.ValidatorComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.xslt.XsltComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.impl.DefaultComponent:java.util.List resolveAndRemoveReferenceListParameter(java.util.Map,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.RouteDefinitionHelper:void prepareRoute(org.apache.camel.model.ModelCamelContext,org.apache.camel.model.RouteDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinition:void prepare(org.apache.camel.model.ModelCamelContext)"
        ]
    },
    "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition route(org.apache.camel.model.RouteDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition from(java.lang.String)",
            "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition from(org.apache.camel.Endpoint)",
            "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition route()",
            "org.apache.camel.builder.RouteBuilder:void populateRests()",
            "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition from(org.apache.camel.Endpoint[])",
            "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition from(java.lang.String[])",
            "org.apache.camel.model.RouteDefinition:org.apache.camel.model.RouteDefinition adviceWith(org.apache.camel.model.ModelCamelContext,org.apache.camel.builder.RouteBuilder)"
        ]
    },
    "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createChildProcessor(org.apache.camel.spi.RouteContext,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DelayDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.PipelineDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.LoopDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.AggregateDefinition:org.apache.camel.processor.aggregate.AggregateProcessor createAggregator(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.OnCompletionDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.FilterDefinition:org.apache.camel.processor.FilterProcessor createFilterProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ThreadsDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.FinallyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.TransactedDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.PolicyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ResequenceDefinition:org.apache.camel.processor.StreamResequencer createStreamResequencer(org.apache.camel.spi.RouteContext,org.apache.camel.model.config.StreamResequencerConfig)",
            "org.apache.camel.model.OnExceptionDefinition:org.apache.camel.processor.CatchProcessor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.MulticastDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.InterceptSendToEndpointDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ThrottleDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.OtherwiseDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ResequenceDefinition:org.apache.camel.processor.Resequencer createBatchResequencer(org.apache.camel.spi.RouteContext,org.apache.camel.model.config.BatchResequencerConfig)",
            "org.apache.camel.model.IdempotentConsumerDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.InterceptFromDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.SamplingDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.CatchDefinition:org.apache.camel.processor.CatchProcessor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.OnFallbackDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.SplitDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.InterceptDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.util.IntrospectionSupport:java.lang.Object convert(org.apache.camel.TypeConverter,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.IntrospectionSupport:boolean setProperty(org.apache.camel.CamelContext,org.apache.camel.TypeConverter,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,boolean)"
        ]
    },
    "org.apache.camel.impl.converter.FutureTypeConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanInfo:void <init>(org.apache.camel.CamelContext,java.lang.Class,org.apache.camel.component.bean.ParameterMappingStrategy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.AbstractBeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)",
            "org.apache.camel.component.bean.BeanInfo:void <init>(org.apache.camel.CamelContext,java.lang.Class)",
            "org.apache.camel.component.bean.ConstantBeanHolder:void <init>(java.lang.Object,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)",
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo getMethodInfo(java.lang.reflect.Method)",
            "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.BeanInfo createBeanInfo(java.lang.Object)",
            "org.apache.camel.component.bean.ConstantTypeBeanHolder:void <init>(java.lang.Class,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:void <init>(org.apache.camel.CamelContext,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SubscribeMethodProcessor:void addMethod(java.lang.Object,java.lang.reflect.Method,org.apache.camel.Endpoint,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.UriEndpointComponent:java.util.SortedMap createParameterConfigurationMap(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.UriComponentConfiguration:void <init>(org.apache.camel.Component,java.lang.Class)",
            "org.apache.camel.impl.UriEndpointConfiguration:java.util.SortedMap getPropertyConfigurationMap()",
            "org.apache.camel.impl.UriEndpointComponent:java.util.SortedMap getParameterConfigurationMap()"
        ]
    },
    "org.apache.camel.impl.UriEndpointComponent$1:void doWith(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ReflectionHelper:void doWithFields(java.lang.Class,org.apache.camel.util.ReflectionHelper$FieldCallback)"
        ]
    },
    "org.apache.camel.impl.DefaultInjector:java.lang.Object newInstance(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy$PropertyInjector:java.util.Collection getValueAsCollection(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.impl.DefaultDataFormatResolver:org.apache.camel.spi.DataFormat createDataFormatFromResource(java.lang.String,org.apache.camel.CamelContext)",
            "org.apache.camel.impl.DefaultComponentResolver:org.apache.camel.Component resolveComponent(java.lang.String,org.apache.camel.CamelContext)",
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.Expression createParameterUnmarshalExpressionForAnnotation(java.lang.Class,java.lang.reflect.Method,java.lang.Class,java.lang.annotation.Annotation)",
            "org.apache.camel.component.bean.ConstantTypeBeanHolder:java.lang.Object getBean()",
            "org.apache.camel.component.beanclass.ClassComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.bean.RegistryBean:java.lang.Object getBean()",
            "org.apache.camel.impl.DefaultLanguageResolver:org.apache.camel.spi.Language noSpecificLanguageFound(java.lang.String,org.apache.camel.CamelContext)",
            "org.apache.camel.impl.DefaultLanguageResolver:org.apache.camel.spi.Language resolveLanguage(java.lang.String,org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.MethodCallExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.model.ModelHelper:org.apache.camel.converter.jaxp.XmlConverter newXmlConverter(org.apache.camel.CamelContext)",
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy$BodyInjector:java.util.Collection getValueAsCollection(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.util.toolbox.FlexibleAggregationStrategy$HeaderInjector:java.util.Collection getValueAsCollection(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.component.xslt.XsltEndpoint:void doStart()",
            "org.apache.camel.impl.converter.CachingInjector:java.lang.Object createInstance(java.lang.Class)",
            "org.apache.camel.impl.ScheduledPollEndpoint:void configureScheduledPollConsumerProperties(java.util.Map,java.util.Map)",
            "org.apache.camel.impl.HeadersMapFactoryResolver:org.apache.camel.spi.HeadersMapFactory resolve(org.apache.camel.CamelContext)",
            "org.apache.camel.impl.DefaultFactoryFinder:java.lang.Object newInstance(java.lang.String,org.apache.camel.spi.Injector,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.DefaultInjector:java.lang.Object newInstance(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void doStopRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void stopRoute(java.lang.String)",
            "org.apache.camel.impl.SupervisingRouteController:void suspendRoute(java.lang.String)",
            "org.apache.camel.impl.SupervisingRouteController:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)",
            "org.apache.camel.impl.SupervisingRouteController:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)",
            "org.apache.camel.impl.SupervisingRouteController:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void startRoutes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void access$1600(org.apache.camel.impl.SupervisingRouteController)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController$ManagedRoutePolicy:void lambda$startRoute$0(org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void doStartRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void doStartRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void startRoute(java.lang.String)",
            "org.apache.camel.impl.SupervisingRouteController:void resumeRoute(java.lang.String)",
            "org.apache.camel.impl.SupervisingRouteController:void access$600(org.apache.camel.impl.SupervisingRouteController,org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController$RouteManager:void lambda$null$0(org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void doStartRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void setLeader(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void onCamelContextStarted()",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void lambda$new$0()",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void access$300(org.apache.camel.impl.ha.ClusteredRoutePolicy,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void addRouteDefinition(org.apache.camel.model.RouteDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedRoute:void updateRouteFromXml(java.lang.String)"
        ]
    },
    "org.apache.camel.builder.RouteBuilder:void populateRoutes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.RouteBuilder:void addRoutesToCamelContext(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumer:void doneUoW(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.CamelInternalProcessor$UnitOfWorkProcessorAdvice:void after(org.apache.camel.Exchange,org.apache.camel.spi.UnitOfWork)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.CamelInternalProcessor$UnitOfWorkProcessorAdvice:void after(org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry:java.lang.String getNodeId()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor$AggregationTimeoutMap:boolean onEviction(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.DefaultTimeoutMap:void purge()"
        ]
    },
    "org.apache.camel.management.mbean.ManagedAggregateProcessor:int forceCompletionOfAllGroups()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void prepareShutdown(boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedAggregateProcessor:int forceCompletionOfGroup(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.AggregationStrategyClause:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:void doAggregateInternal(org.apache.camel.processor.aggregate.AggregationStrategy,org.apache.camel.util.concurrent.AtomicExchange,org.apache.camel.Exchange)",
            "org.apache.camel.builder.AggregationStrategyClause:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Enricher$1:void done(boolean)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:org.apache.camel.Exchange onAggregation(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.ShareUnitOfWorkAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:org.apache.camel.Exchange onAggregation(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.aggregate.AggregateProcessor:java.util.List doAggregation(java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object doConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object mandatoryConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.converter.LazyLoadingTypeConverter:java.lang.Object doConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object,boolean)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object tryConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager:void interrupt(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultAsyncProcessorAwaitManager:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:void prepareExchangeAfterFailure(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:boolean deliverToFailureProcessor(org.apache.camel.Processor,boolean,org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RedeliveryErrorHandler$3:void done(boolean)"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:void prepareExchangeForContinue(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RedeliveryErrorHandler:void prepareExchangeAfterFailure(org.apache.camel.Exchange,org.apache.camel.processor.RedeliveryErrorHandler$RedeliveryData,boolean,boolean,boolean)"
        ]
    },
    "org.apache.camel.converter.stream.OutputStreamBuilder:void <init>(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.stream.OutputStreamBuilder:org.apache.camel.converter.stream.OutputStreamBuilder withExchange(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.stream.StreamSourceCache:void <init>(javax.xml.transform.stream.StreamSource,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.stream.StreamCacheConverter:org.apache.camel.StreamCache convertToStreamCache(javax.xml.transform.stream.StreamSource,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.converter.stream.StreamCacheConverter:org.apache.camel.StreamCache convertToStreamCache(java.io.InputStream,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.io.InputStream toInputStream(java.io.BufferedReader)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileConverter:java.lang.String genericFileToString(org.apache.camel.component.file.GenericFile,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object,org.apache.camel.spi.TypeConverterRegistry)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(java.net.URL,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.converter.IOConverter:java.lang.String toString(java.net.URL)"
        ]
    },
    "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.io.BufferedReader)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.io.Reader,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.io.Reader)",
            "org.apache.camel.converter.IOConverterOptimised:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedBrowsableEndpoint:java.lang.String browseMessageAsXml(java.lang.Integer,java.lang.Boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedBrowsableEndpoint:java.lang.String browseMessageAsXml(java.lang.Integer)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedBrowsableEndpoint:java.lang.String browseRangeMessagesAsXml(java.lang.Integer,java.lang.Integer,java.lang.Boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedBrowsableEndpoint:java.lang.String browseAllMessagesAsXml(java.lang.Boolean)"
        ]
    },
    "org.apache.camel.util.EndpointHelper:java.lang.String browseRangeMessagesAsXml(org.apache.camel.spi.BrowsableEndpoint,java.lang.Integer,java.lang.Integer,java.lang.Boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.MessageHelper:java.lang.String dumpAsXml(org.apache.camel.Message)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedCamelContext:java.lang.String dumpRoutesCoverageAsXml()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.jndi.JndiContext:java.lang.Object createBean(java.lang.Class,java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.JndiContext:java.util.Map createBindingsMapFromEnvironment(java.util.Hashtable)"
        ]
    },
    "org.apache.camel.model.language.XQueryExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.XPathExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.JsonPathExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.JXPathExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.XPathExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.JXPathExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.XQueryExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.JsonPathExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.XMLTokenizerExpression:void configureExpression(org.apache.camel.CamelContext,org.apache.camel.Expression)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.language.XMLTokenizerExpression:void configurePredicate(org.apache.camel.CamelContext,org.apache.camel.Predicate)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.util.IntrospectionSupport:boolean setProperties(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallServiceChooserConfiguration:org.apache.camel.cloud.ServiceChooser newInstance(org.apache.camel.CamelContext)",
            "org.apache.camel.util.component.AbstractApiComponent:java.lang.Object createEndpointConfiguration(java.lang.Enum)",
            "org.apache.camel.model.cloud.ServiceCallServiceDiscoveryConfiguration:org.apache.camel.cloud.ServiceDiscovery newInstance(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallServiceFilterConfiguration:org.apache.camel.cloud.ServiceFilter newInstance(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallExpressionConfiguration:org.apache.camel.Expression newInstance(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallServiceLoadBalancerConfiguration:org.apache.camel.cloud.ServiceLoadBalancer newInstance(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.dataformat.YAMLDataFormat:void configureDataFormat(org.apache.camel.spi.DataFormat,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.DataFormatDefinition:org.apache.camel.spi.DataFormat getDataFormat(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.impl.DefaultEndpointConfiguration:void setURI(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.MappedEndpointConfiguration:void <init>(org.apache.camel.CamelContext,java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultEndpointConfiguration:void <init>(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultComponent:org.apache.camel.EndpointConfiguration createConfiguration(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultEndpoint:org.apache.camel.EndpointConfiguration createEndpointConfiguration(java.lang.String)"
        ]
    },
    "org.apache.camel.component.xslt.XsltEndpoint:void setSaxonExtensionFunctions(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.xslt.XsltComponent:void setSaxonExtensionFunctions(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.EndpointHelper:java.lang.Object resloveStringParameter(org.apache.camel.CamelContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.RouteDefinition:void prepare(org.apache.camel.model.ModelCamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void startRoute(org.apache.camel.model.RouteDefinition)"
        ]
    },
    "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition from(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition fromF(java.lang.String,java.lang.Object[])",
            "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition from(java.lang.String)"
        ]
    },
    "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition from(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition from(org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition route()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.RouteBuilder:void populateRests()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.RouteBuilder:void addRoutesToCamelContext(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition from(org.apache.camel.Endpoint[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition from(org.apache.camel.Endpoint[])"
        ]
    },
    "org.apache.camel.model.RoutesDefinition:org.apache.camel.model.RouteDefinition from(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition from(java.lang.String[])"
        ]
    },
    "org.apache.camel.model.RouteDefinition:org.apache.camel.model.RouteDefinition adviceWith(org.apache.camel.model.ModelCamelContext,org.apache.camel.builder.RouteBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.RouteDefinition:org.apache.camel.model.RouteDefinition adviceWith(org.apache.camel.CamelContext,org.apache.camel.builder.RouteBuilder)"
        ]
    },
    "org.apache.camel.model.PipelineDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ThreadsDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.FinallyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext,org.apache.camel.model.ProcessorDefinition)"
        ]
    },
    "org.apache.camel.model.TransactedDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.PolicyDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.MulticastDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.InterceptSendToEndpointDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.OtherwiseDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext,org.apache.camel.model.ProcessorDefinition)"
        ]
    },
    "org.apache.camel.model.InterceptFromDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.SamplingDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.OnFallbackDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.InterceptDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.AbstractBeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.AbstractBeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext)",
            "org.apache.camel.component.bean.BeanProcessor$DelegateBeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:void <init>(org.apache.camel.CamelContext,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.MethodCallExpression:void validateHasMethod(org.apache.camel.CamelContext,java.lang.Object,java.lang.Class,java.lang.String)",
            "org.apache.camel.component.bean.ConstantBeanHolder:void <init>(java.lang.Object,org.apache.camel.CamelContext)",
            "org.apache.camel.component.bean.ConstantTypeBeanHolder:void <init>(java.lang.Class,org.apache.camel.CamelContext)",
            "org.apache.camel.component.bean.MethodInfoCache:org.apache.camel.component.bean.BeanInfo createBeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.camel.component.bean.ConstantBeanHolder:void <init>(java.lang.Object,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo getMethodInfo(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo getMethodInfo(java.lang.reflect.Method)",
            "org.apache.camel.component.bean.MethodInfoCache:org.apache.camel.component.bean.MethodInfo createMethodInfo(java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.BeanInfo createBeanInfo(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.BeanInfo getBeanInfo()",
            "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.ConstantBeanHolder createCacheHolder()",
            "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.BeanInfo getBeanInfo(java.lang.Object)"
        ]
    },
    "org.apache.camel.component.bean.ConstantTypeBeanHolder:void <init>(java.lang.Class,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.UriComponentConfiguration:void <init>(org.apache.camel.Component,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.UriEndpointConfiguration:java.util.SortedMap getPropertyConfigurationMap()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.UriEndpointConfiguration:org.apache.camel.impl.ParameterConfiguration getPropertyConfiguration(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.UriEndpointComponent:java.util.SortedMap getParameterConfigurationMap()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.UriComponentConfiguration:void <init>(org.apache.camel.impl.UriEndpointComponent)"
        ]
    },
    "org.apache.camel.impl.DefaultDataFormatResolver:org.apache.camel.spi.DataFormat createDataFormatFromResource(java.lang.String,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultDataFormatResolver:org.apache.camel.spi.DataFormat createDataFormat(java.lang.String,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.Expression createParameterUnmarshalExpressionForAnnotation(java.lang.Class,java.lang.reflect.Method,java.lang.Class,java.lang.annotation.Annotation)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.Expression createParameterUnmarshalExpression(java.lang.Class,java.lang.reflect.Method,java.lang.Class,java.lang.annotation.Annotation[])"
        ]
    },
    "org.apache.camel.component.bean.ConstantTypeBeanHolder:java.lang.Object getBean()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.ConstantTypeBeanHolder:org.apache.camel.component.bean.ConstantBeanHolder createCacheHolder()",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:void doStart()",
            "org.apache.camel.component.bean.AbstractBeanProcessor:void doStop()",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.String getBeanName(java.lang.String,org.apache.camel.component.bean.BeanHolder)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:java.lang.Object getBean()"
        ]
    },
    "org.apache.camel.component.bean.RegistryBean:java.lang.Object getBean()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.MethodCallExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:void doStart()",
            "org.apache.camel.component.bean.AbstractBeanProcessor:void doStop()",
            "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.BeanInfo getBeanInfo()",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.ConstantBeanHolder createCacheHolder()",
            "org.apache.camel.language.bean.BeanExpression:java.lang.String getBeanName(java.lang.String,org.apache.camel.component.bean.BeanHolder)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:java.lang.Object getBean()"
        ]
    },
    "org.apache.camel.impl.DefaultLanguageResolver:org.apache.camel.spi.Language noSpecificLanguageFound(java.lang.String,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultLanguageResolver:org.apache.camel.spi.Language resolveLanguage(java.lang.String,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.impl.DefaultLanguageResolver:org.apache.camel.spi.Language resolveLanguage(java.lang.String,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.spi.Language resolveLanguage(java.lang.String)"
        ]
    },
    "org.apache.camel.model.language.MethodCallExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.language.MethodCallExpression:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.model.language.ExpressionDefinition:java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)",
            "org.apache.camel.builder.ExpressionClauseSupport:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.impl.converter.CachingInjector:java.lang.Object createInstance(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.CachingInjector:java.lang.Object newInstance()"
        ]
    },
    "org.apache.camel.impl.ScheduledPollEndpoint:void configureScheduledPollConsumerProperties(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ScheduledPollEndpoint:void configureProperties(java.util.Map)",
            "org.apache.camel.impl.ScheduledPollEndpoint:void configurePollingConsumer(org.apache.camel.PollingConsumer)"
        ]
    },
    "org.apache.camel.impl.HeadersMapFactoryResolver:org.apache.camel.spi.HeadersMapFactory resolve(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doStartCamel()"
        ]
    },
    "org.apache.camel.impl.DefaultFactoryFinder:java.lang.Object newInstance(java.lang.String,org.apache.camel.spi.Injector,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultFactoryFinder:java.lang.Object newInstance(java.lang.String,org.apache.camel.spi.Injector,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void stopRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void stopRoutes()"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void suspendRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void access$1600(org.apache.camel.impl.SupervisingRouteController)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController$CamelContextStartupListener:void onCamelContextStarted()",
            "org.apache.camel.impl.SupervisingRouteController$CamelContextStartupListener:void lambda$onCamelContextStarted$0(org.apache.camel.impl.SupervisingRouteController)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void access$600(org.apache.camel.impl.SupervisingRouteController,org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController$RouteManager:java.lang.Boolean lambda$null$1(org.apache.camel.impl.SupervisingRouteController$RouteHolder,org.apache.camel.util.backoff.BackOffTimer$Task)",
            "org.apache.camel.impl.SupervisingRouteController$ManagedRoutePolicy:void startRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void onCamelContextStarted()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy:void access$800(org.apache.camel.impl.ha.ClusteredRoutePolicy)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void lambda$new$0()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ReferenceCount:void retain()",
            "org.apache.camel.util.ReferenceCount:void release()"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void access$300(org.apache.camel.impl.ha.ClusteredRoutePolicy,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelClusterLeadershipListener:void leadershipChanged(org.apache.camel.ha.CamelClusterView,java.util.Optional)"
        ]
    },
    "org.apache.camel.builder.RouteBuilder:void addRoutesToCamelContext(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.CamelInternalProcessor$UnitOfWorkProcessorAdvice:void after(org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.DefaultTimeoutMap:void purge()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.DefaultTimeoutMap:void run()",
            "org.apache.camel.processor.aggregate.AggregateProcessor$AggregationTimeoutMap:void purge()"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:void doAggregateInternal(org.apache.camel.processor.aggregate.AggregationStrategy,org.apache.camel.util.concurrent.AtomicExchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:void doAggregate(org.apache.camel.processor.aggregate.AggregationStrategy,org.apache.camel.util.concurrent.AtomicExchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.MulticastProcessor$2:void done(boolean)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor$ParallelAggregateTask:void run()"
        ]
    },
    "org.apache.camel.processor.aggregate.ShareUnitOfWorkAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor:void doAggregateInternal(org.apache.camel.processor.aggregate.AggregationStrategy,org.apache.camel.util.concurrent.AtomicExchange,org.apache.camel.Exchange)",
            "org.apache.camel.processor.aggregate.ShareUnitOfWorkAggregationStrategy:org.apache.camel.Exchange aggregate(org.apache.camel.Exchange,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.converter.LazyLoadingTypeConverter:java.lang.Object doConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object mandatoryConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object tryConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object tryConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.component.bean.AbstractCamelInvocationHandler:java.lang.Object invokeProxy(java.lang.reflect.Method,org.apache.camel.ExchangePattern,java.lang.Object[],boolean)",
            "org.apache.camel.builder.xml.XsltBuilder:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.builder.ExpressionBuilder$66:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.impl.MessageSupport:java.lang.Object getBody(java.lang.Class,java.lang.Object)",
            "org.apache.camel.component.file.FileOperations:boolean storeFile(java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object tryConvertTo(java.lang.Class,java.lang.Object)",
            "org.apache.camel.component.rest.RestProducerBindingProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.ResourceHelper:java.io.InputStream resolveMandatoryResourceAsInputStream(org.apache.camel.CamelContext,java.lang.String)",
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo chooseBestPossibleMethodInfo(org.apache.camel.Exchange,java.util.Collection,java.lang.Object,java.util.List,java.util.List,java.util.List)",
            "org.apache.camel.util.MessageHelper:java.lang.String extractValueForLogging(java.lang.Object,org.apache.camel.Message,java.lang.String,boolean,boolean,int)"
        ]
    },
    "org.apache.camel.support.ServiceSupport:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedService:void stop()",
            "org.apache.camel.impl.DefaultCamelContext:void stop()",
            "org.apache.camel.component.seda.SedaEndpoint:void stop()",
            "org.apache.camel.main.MainSupport$HangupInterceptor:void run()",
            "org.apache.camel.impl.DefaultRoute:void stop()",
            "org.apache.camel.main.MainSupport:void run()",
            "org.apache.camel.support.ServiceSupport:void start()",
            "org.apache.camel.support.ServiceSupport:void shutdown()",
            "org.apache.camel.builder.ExpressionBuilder$83:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.util.ServiceHelper:void stopService(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.RedeliveryErrorHandler$3:void done(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FatalFallbackErrorHandler$1:void done(boolean)",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.ProducerCache:boolean doInAsyncProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback,org.apache.camel.AsyncProducerCallback)",
            "org.apache.camel.processor.loadbalancer.TopicLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.CamelInternalProcessor$InternalCallback:void done(boolean)",
            "org.apache.camel.processor.DelegateSyncProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientList:boolean sendToRecipientList(org.apache.camel.Exchange,java.lang.Object,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean rejectExchange(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.QueueLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.DeferProducer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.CamelInternalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.SendProcessor$1:void done(boolean)",
            "org.apache.camel.processor.CamelLogProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.directvm.DirectVmProcessor$1:void done(boolean)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean proceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.processor.FinallyProcessor$FinallyAsyncCallback:void done(boolean)",
            "org.apache.camel.processor.SendProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.Pipeline$1:void done(boolean)",
            "org.apache.camel.processor.FatalFallbackErrorHandler:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip$2:void done(boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RoutingSlip:boolean doRoutingSlipWithExpression(org.apache.camel.Exchange,org.apache.camel.Expression,org.apache.camel.AsyncCallback)",
            "org.apache.camel.component.bean.MethodInfo$1:boolean doProceed(org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor:void doDone(org.apache.camel.Exchange,org.apache.camel.Exchange,java.lang.Iterable,org.apache.camel.AsyncCallback,boolean,boolean)",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:boolean executeProcessor(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.ThroughputLogger:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.converter.stream.OutputStreamBuilder:org.apache.camel.converter.stream.OutputStreamBuilder withExchange(org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)",
            "org.apache.camel.processor.MarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ZipDataFormat:java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)",
            "org.apache.camel.impl.GzipDataFormat:java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)"
        ]
    },
    "org.apache.camel.converter.stream.StreamCacheConverter:org.apache.camel.StreamCache convertToStreamCache(javax.xml.transform.stream.StreamSource,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:java.lang.String toString(java.net.URL)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.converter.IOConverter:byte[] toByteArray(java.io.Reader)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedBrowsableEndpoint:java.lang.String browseMessageAsXml(java.lang.Integer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedBrowsableEndpoint:java.lang.String browseAllMessagesAsXml(java.lang.Boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.jndi.JndiContext:java.util.Map createBindingsMapFromEnvironment(java.util.Hashtable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.JndiContext:void <init>(java.util.Hashtable)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallServiceChooserConfiguration:org.apache.camel.cloud.ServiceChooser newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallServiceChooserConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.util.component.AbstractApiComponent:java.lang.Object createEndpointConfiguration(java.lang.Enum)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.component.AbstractApiComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallServiceDiscoveryConfiguration:org.apache.camel.cloud.ServiceDiscovery newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallServiceDiscoveryConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.CachingServiceCallServiceDiscoveryConfiguration:void postProcessFactoryParameters(org.apache.camel.CamelContext,java.util.Map)",
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceDiscovery lambda$retrieveServiceDiscovery$2(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallServiceFilterConfiguration:org.apache.camel.cloud.ServiceFilter newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceFilter lambda$retrieveServiceFilter$9(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallServiceFilterConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallServiceLoadBalancerConfiguration:org.apache.camel.cloud.ServiceLoadBalancer newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceLoadBalancer lambda$retrieveLoadBalancer$22(org.apache.camel.CamelContext)",
            "org.apache.camel.model.cloud.ServiceCallServiceLoadBalancerConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.impl.MappedEndpointConfiguration:void <init>(org.apache.camel.CamelContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultEndpoint:org.apache.camel.EndpointConfiguration createEndpointConfiguration(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultEndpoint:org.apache.camel.EndpointConfiguration createEndpointConfiguration(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultEndpoint:org.apache.camel.EndpointConfiguration getEndpointConfiguration()"
        ]
    },
    "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition fromF(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition from(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition from(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition from(org.apache.camel.Endpoint[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.builder.RouteBuilder:org.apache.camel.model.RouteDefinition from(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.RouteDefinition:org.apache.camel.model.RouteDefinition adviceWith(org.apache.camel.CamelContext,org.apache.camel.builder.RouteBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext,org.apache.camel.model.ProcessorDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.ChoiceDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.ProcessorDefinition:org.apache.camel.Processor createOutputsProcessorImpl(org.apache.camel.spi.RouteContext,java.util.Collection)",
            "org.apache.camel.model.TryDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.LoadBalanceDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.WireTapDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.AOPDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.component.bean.AbstractBeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanProcessor$DelegateBeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.component.bean.BeanProcessor$DelegateBeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)"
        ]
    },
    "org.apache.camel.model.language.MethodCallExpression:void validateHasMethod(org.apache.camel.CamelContext,java.lang.Object,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.MethodCallExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.component.bean.ConstantBeanHolder:void <init>(java.lang.Object,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.BeanDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.component.beanclass.ClassComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.model.language.MethodCallExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.language.bean.BeanExpression:org.apache.camel.component.bean.BeanHolder createBeanHolder(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.component.bean.ConstantTypeBeanHolder:void <init>(java.lang.Class,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.BeanDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.component.beanclass.ClassComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.bean.ConstantStaticTypeBeanHolder:void <init>(java.lang.Class,org.apache.camel.CamelContext)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.language.bean.BeanExpression:org.apache.camel.component.bean.BeanHolder createBeanHolder(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfoCache:org.apache.camel.component.bean.BeanInfo createBeanInfo(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfoCache:org.apache.camel.component.bean.BeanInfo getBeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfoCache:org.apache.camel.component.bean.MethodInfo createMethodInfo(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfoCache:org.apache.camel.component.bean.MethodInfo getMethodInfo(java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.BeanInfo getBeanInfo()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.BeanDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:void doStart()",
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.String getBeanName(java.lang.String,org.apache.camel.component.bean.BeanHolder)"
        ]
    },
    "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.ConstantBeanHolder createCacheHolder()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.BeanDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.component.bean.BeanEndpoint:void doStart()"
        ]
    },
    "org.apache.camel.component.bean.RegistryBean:org.apache.camel.component.bean.BeanInfo getBeanInfo(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.AbstractBeanProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.UriEndpointConfiguration:org.apache.camel.impl.ParameterConfiguration getPropertyConfiguration(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.UriEndpointConfiguration:java.lang.Object getParameter(java.lang.String)",
            "org.apache.camel.impl.UriEndpointConfiguration:void setParameter(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.UriComponentConfiguration:void <init>(org.apache.camel.impl.UriEndpointComponent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.UriEndpointComponent:org.apache.camel.ComponentConfiguration createComponentConfiguration()"
        ]
    },
    "org.apache.camel.impl.DefaultDataFormatResolver:org.apache.camel.spi.DataFormat createDataFormat(java.lang.String,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultDataFormatResolver:org.apache.camel.spi.DataFormat resolveDataFormat(java.lang.String,org.apache.camel.CamelContext)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.spi.DataFormat createDataFormat(java.lang.String)"
        ]
    },
    "org.apache.camel.component.bean.BeanInfo:org.apache.camel.Expression createParameterUnmarshalExpression(java.lang.Class,java.lang.reflect.Method,java.lang.Class,java.lang.annotation.Annotation[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanInfo:org.apache.camel.component.bean.MethodInfo createMethodInfo(java.lang.Class,java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.component.bean.ConstantTypeBeanHolder:org.apache.camel.component.bean.ConstantBeanHolder createCacheHolder()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.BeanDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.component.bean.AbstractBeanProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanProcessor:void doStop()"
        ]
    },
    "org.apache.camel.language.bean.BeanExpression:java.lang.String getBeanName(java.lang.String,org.apache.camel.component.bean.BeanHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object evaluate(org.apache.camel.Exchange)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object invokeOgnlMethod(org.apache.camel.component.bean.BeanHolder,java.lang.String,java.lang.String,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.bean.AbstractBeanProcessor:java.lang.Object getBean()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanProcessor:java.lang.Object getBean()"
        ]
    },
    "org.apache.camel.model.language.MethodCallExpression:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.language.ExpressionDefinition:boolean matches(org.apache.camel.Exchange)",
            "org.apache.camel.model.language.ExpressionDefinition:org.apache.camel.Predicate createPredicate(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.impl.converter.CachingInjector:java.lang.Object newInstance()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.InstanceMethodTypeConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.impl.converter.InstanceMethodFallbackTypeConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.ScheduledPollEndpoint:void configureProperties(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultFactoryFinder:java.lang.Object newInstance(java.lang.String,org.apache.camel.spi.Injector,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultFactoryFinder:java.util.List newInstances(java.lang.String,org.apache.camel.spi.Injector,java.lang.Class)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController:void stopRoutes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController$CamelContextStartupListener:void onCamelContextStarted()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController$CamelContextStartupListener:void notify(java.util.EventObject)",
            "org.apache.camel.impl.SupervisingRouteController$CamelContextStartupListener:void onCamelContextStarted(org.apache.camel.CamelContext,boolean)"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController$CamelContextStartupListener:void lambda$onCamelContextStarted$0(org.apache.camel.impl.SupervisingRouteController)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController$RouteManager:java.lang.Boolean lambda$null$1(org.apache.camel.impl.SupervisingRouteController$RouteHolder,org.apache.camel.util.backoff.BackOffTimer$Task)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.backoff.BackOffTimerTask:void run()"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController$ManagedRoutePolicy:void startRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController$ManagedRoutePolicy:void onInit(org.apache.camel.Route)",
            "org.apache.camel.impl.SupervisingRouteController$ManagedRoutePolicy:void lambda$onInit$1(org.apache.camel.impl.SupervisingRouteController$RouteHolder)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy:void access$800(org.apache.camel.impl.ha.ClusteredRoutePolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelContextStartupListener:void onCamelContextStarted()",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelContextStartupListener:void lambda$onCamelContextStarted$0(org.apache.camel.impl.ha.ClusteredRoutePolicy)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelClusterLeadershipListener:void leadershipChanged(org.apache.camel.ha.CamelClusterView,java.util.Optional)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.DefaultTimeoutMap:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor$AggregationTimeoutMap:void purge()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MulticastProcessor:void doAggregate(org.apache.camel.processor.aggregate.AggregationStrategy,org.apache.camel.util.concurrent.AtomicExchange,org.apache.camel.Exchange)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MulticastProcessor$2:void done(boolean)",
            "org.apache.camel.processor.MulticastProcessor:boolean doProcessSequential(org.apache.camel.Exchange,org.apache.camel.util.concurrent.AtomicExchange,java.lang.Iterable,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.MulticastProcessor$ParallelAggregateTask:void run()"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object tryConvertTo(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ObjectHelper:int typeCoerceCompare(org.apache.camel.TypeConverter,java.lang.Object,java.lang.Object)",
            "org.apache.camel.component.bean.MethodInfo$ParameterExpression:java.lang.Object evaluateParameterValue(org.apache.camel.Exchange,int,java.lang.Object,java.lang.Class)",
            "org.apache.camel.util.CamelContextHelper:java.lang.Object tryConvertTo(org.apache.camel.CamelContext,java.lang.Class,java.lang.Object)",
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object lookupResult(org.apache.camel.Exchange,java.lang.String,java.lang.Object,boolean,java.lang.String,java.lang.Object)",
            "org.apache.camel.util.ObjectHelper:boolean typeCoerceEquals(org.apache.camel.TypeConverter,java.lang.Object,java.lang.Object,boolean)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedService:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()",
            "org.apache.camel.support.ServiceSupport:void shutdown()",
            "org.apache.camel.util.ServiceHelper:void stopService(java.lang.Object)",
            "org.apache.camel.impl.DefaultCamelContext:void start()"
        ]
    },
    "org.apache.camel.component.seda.SedaEndpoint:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void shutdown()"
        ]
    },
    "org.apache.camel.main.MainSupport$HangupInterceptor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRoute:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.support.ServiceSupport:void shutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void shutdown()",
            "org.apache.camel.component.seda.SedaEndpoint:void shutdown()",
            "org.apache.camel.util.ServiceHelper:void stopAndShutdownService(java.lang.Object)"
        ]
    },
    "org.apache.camel.util.ServiceHelper:void stopService(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementAgent:void doStop()",
            "org.apache.camel.impl.ScheduledPollConsumer:void afterPoll()",
            "org.apache.camel.support.RoutePolicySupport:boolean suspendOrStopConsumer(org.apache.camel.Consumer)",
            "org.apache.camel.builder.DefaultFluentProducerTemplate:void doStop()",
            "org.apache.camel.management.PublishEventNotifier:void doStop()",
            "org.apache.camel.main.MainSupport:void internalBeforeStop()",
            "org.apache.camel.util.LRUCache:void onRemoval(java.lang.Object,java.lang.Object,org.apache.camel.com.github.benmanes.caffeine.cache.RemovalCause)",
            "org.apache.camel.processor.interceptor.TraceInterceptor:void doStop()",
            "org.apache.camel.processor.RoutingSlip$3:boolean doInAsyncProducer(org.apache.camel.Producer,org.apache.camel.AsyncProcessor,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.WrapProcessor:void doStop()",
            "org.apache.camel.processor.MarshalProcessor:void doStop()",
            "org.apache.camel.processor.UnitOfWorkProducer:void stop()",
            "org.apache.camel.impl.ProcessorPollingConsumer:void doStop()",
            "org.apache.camel.component.log.LogEndpoint:void doStop()",
            "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:void stop()",
            "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:void doStop()",
            "org.apache.camel.impl.DefaultShutdownStrategy:void shutdownNow(org.apache.camel.Consumer)",
            "org.apache.camel.impl.transformer.DataFormatTransformer:void doStop()",
            "org.apache.camel.util.ServiceHelper:void stopServices(java.util.Collection)",
            "org.apache.camel.component.language.LanguageProducer:void process(org.apache.camel.Exchange)",
            "org.apache.camel.util.ServiceHelper:void stopAndShutdownServices(java.util.Collection)",
            "org.apache.camel.component.bean.BeanProducer:void doStop()",
            "org.apache.camel.processor.OnCompletionProcessor:void doStop()",
            "org.apache.camel.processor.WireTapProcessor:void doStop()",
            "org.apache.camel.processor.RoutingSlip$3$1:void done(boolean)",
            "org.apache.camel.impl.InterceptSendToEndpoint$1:void stop()",
            "org.apache.camel.component.file.GenericFileEndpoint:java.util.List getExchanges()",
            "org.apache.camel.impl.transformer.ProcessorTransformer:void doStop()",
            "org.apache.camel.management.DefaultManagementMBeanAssembler:void doStop()",
            "org.apache.camel.processor.RecipientListProcessor:void doStop()",
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doStop()",
            "org.apache.camel.util.ServiceHelper:void stopAndShutdownService(java.lang.Object)",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doStop()",
            "org.apache.camel.management.mbean.ManagedProcessor:void stop()",
            "org.apache.camel.impl.DefaultScheduledPollConsumer:void doStop()",
            "org.apache.camel.component.file.GenericFileProducer:void doStop()",
            "org.apache.camel.processor.FilterProcessor:void doStop()",
            "org.apache.camel.impl.DeferProducer:void doStop()",
            "org.apache.camel.util.ServiceHelper:boolean suspendService(java.lang.Object)",
            "org.apache.camel.component.seda.SedaEndpoint:void updateMulticastProcessor()",
            "org.apache.camel.processor.UnmarshalProcessor:void doStop()",
            "org.apache.camel.processor.interceptor.BacklogDebugger:void disableDebugger()",
            "org.apache.camel.component.validator.ValidatorProducer:void doStop()",
            "org.apache.camel.impl.DefaultProducerTemplate:void doStop()",
            "org.apache.camel.processor.aggregate.AggregationStrategyBeanAdapter:void doStop()",
            "org.apache.camel.impl.cloud.DefaultServiceLoadBalancer:void doStop()",
            "org.apache.camel.impl.validator.ProcessorValidator:void doStop()",
            "org.apache.camel.component.rest.RestApiProducer:void doStop()",
            "org.apache.camel.impl.RouteService:void stopChildService(org.apache.camel.Route,java.util.Set,boolean)",
            "org.apache.camel.component.bean.AbstractBeanProcessor:void doStop()",
            "org.apache.camel.impl.DefaultCamelContext:void stopServices(java.lang.Object)",
            "org.apache.camel.component.xslt.XsltEndpoint:void doStop()"
        ]
    },
    "org.apache.camel.impl.ZipDataFormat:java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)",
            "org.apache.camel.processor.UnmarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.GzipDataFormat:java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.transformer.DataFormatTransformer:void transform(org.apache.camel.Message,org.apache.camel.spi.DataType,org.apache.camel.spi.DataType)",
            "org.apache.camel.processor.UnmarshalProcessor:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.util.jndi.JndiContext:void <init>(java.util.Hashtable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.CamelInitialContextFactory:javax.naming.Context getInitialContext(java.util.Hashtable)",
            "org.apache.camel.util.jndi.JndiContext:void <init>()"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallServiceChooserConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.cloud.ServiceCallServiceDiscoveryConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.cloud.CachingServiceCallServiceDiscoveryConfiguration:void postProcessFactoryParameters(org.apache.camel.CamelContext,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.cloud.ServiceCallServiceDiscoveryConfiguration:org.apache.camel.cloud.ServiceDiscovery newInstance(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceDiscovery lambda$retrieveServiceDiscovery$2(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.function.Suppliers:java.util.Optional firstNotNull(org.apache.camel.util.function.ThrowingSupplier[])"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceFilter lambda$retrieveServiceFilter$9(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.function.Suppliers:java.util.Optional firstNotNull(org.apache.camel.util.function.ThrowingSupplier[])"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallServiceFilterConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.cloud.ServiceCallDefinition:org.apache.camel.cloud.ServiceLoadBalancer lambda$retrieveLoadBalancer$22(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.function.Suppliers:java.util.Optional firstNotNull(org.apache.camel.util.function.ThrowingSupplier[])"
        ]
    },
    "org.apache.camel.model.cloud.ServiceCallServiceLoadBalancerConfiguration:java.lang.Object newInstance(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultEndpoint:org.apache.camel.EndpointConfiguration getEndpointConfiguration()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.ChoiceDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.bean.BeanProcessor$DelegateBeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.BeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.component.bean.BeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext,org.apache.camel.component.bean.ParameterMappingStrategy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.model.BeanDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.language.bean.BeanExpression:org.apache.camel.component.bean.BeanHolder createBeanHolder(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.language.bean.BeanExpression:java.lang.Object evaluate(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.component.bean.ConstantStaticTypeBeanHolder:void <init>(java.lang.Class,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.model.BeanDefinition:org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext)",
            "org.apache.camel.model.language.MethodCallExpression:org.apache.camel.Expression createExpression(org.apache.camel.CamelContext)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfoCache:org.apache.camel.component.bean.BeanInfo getBeanInfo(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.MethodInfoCache:org.apache.camel.component.bean.MethodInfo createMethodInfo(java.lang.reflect.Method)"
        ]
    },
    "org.apache.camel.component.bean.MethodInfoCache:org.apache.camel.component.bean.MethodInfo getMethodInfo(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.bean.CamelInvocationHandler:java.lang.Object doInvokeProxy(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.camel.impl.UriEndpointConfiguration:java.lang.Object getParameter(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.UriEndpointComponent:org.apache.camel.ComponentConfiguration createComponentConfiguration()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultDataFormatResolver:org.apache.camel.spi.DataFormat resolveDataFormat(java.lang.String,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.spi.DataFormat resolveDataFormat(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.spi.DataFormat createDataFormat(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.dataformat.DataFormatComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.camel.component.bean.BeanProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.bean.BeanProcessor:java.lang.Object getBean()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedBeanProcessor:java.lang.String getBeanClassName()",
            "org.apache.camel.component.bean.BeanProducer:void doStart()",
            "org.apache.camel.management.mbean.ManagedBeanProcessor:java.lang.Object getInstance()",
            "org.apache.camel.component.bean.BeanProducer:void doStop()"
        ]
    },
    "org.apache.camel.impl.converter.InstanceMethodTypeConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.converter.InstanceMethodFallbackTypeConverter:java.lang.Object convertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultFactoryFinder:java.util.List newInstances(java.lang.String,org.apache.camel.spi.Injector,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:void loadFallbackTypeConverters()"
        ]
    },
    "org.apache.camel.impl.SupervisingRouteController$CamelContextStartupListener:void notify(java.util.EventObject)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController$CamelContextStartupListener:void onCamelContextStarted(org.apache.camel.CamelContext,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void addStartupListener(org.apache.camel.StartupListener)"
        ]
    },
    "org.apache.camel.util.backoff.BackOffTimerTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController$ManagedRoutePolicy:void onInit(org.apache.camel.Route)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController$ManagedRoutePolicy:void lambda$onInit$1(org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelContextStartupListener:void onCamelContextStarted()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelContextStartupListener:void notify(java.util.EventObject)",
            "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelContextStartupListener:void onCamelContextStarted(org.apache.camel.CamelContext,boolean)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelContextStartupListener:void lambda$onCamelContextStarted$0(org.apache.camel.impl.ha.ClusteredRoutePolicy)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ObjectHelper:int typeCoerceCompare(org.apache.camel.TypeConverter,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.PredicateBuilder$11:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.ObjectHelper:int typeCoerceCompare(org.apache.camel.TypeConverter,java.lang.Object,java.lang.Object)",
            "org.apache.camel.builder.PredicateBuilder$9:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.builder.PredicateBuilder$8:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.builder.PredicateBuilder$10:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.util.ObjectHelper:boolean typeCoerceEquals(org.apache.camel.TypeConverter,java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.PredicateBuilder$6:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.ObjectHelper:boolean typeCoerceEquals(org.apache.camel.TypeConverter,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void shutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.seda.SedaEndpoint:void shutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ServiceHelper:void stopAndShutdownService(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ProducerCache:void lambda$doInAsyncProducer$2(org.apache.camel.util.StopWatch,org.apache.camel.Exchange,org.apache.camel.Endpoint,org.apache.camel.Producer,org.apache.camel.AsyncCallback,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:void doStop()",
            "org.apache.camel.impl.ConsumerCache:void releasePollingConsumer(org.apache.camel.Endpoint,org.apache.camel.PollingConsumer)",
            "org.apache.camel.processor.WireTapProcessor:void doShutdown()",
            "org.apache.camel.processor.RecipientListProcessor:void doShutdown()",
            "org.apache.camel.impl.EmptyConsumerCache:void releasePollingConsumer(org.apache.camel.Endpoint,org.apache.camel.PollingConsumer)",
            "org.apache.camel.util.EndpointHelper:void pollEndpoint(org.apache.camel.Endpoint,org.apache.camel.Processor,long)",
            "org.apache.camel.impl.DefaultConsumerTemplate:void doStop()",
            "org.apache.camel.impl.EventDrivenPollingConsumer:void doShutdown()",
            "org.apache.camel.impl.EmptyProducerCache:void releaseProducer(org.apache.camel.Endpoint,org.apache.camel.Producer)",
            "org.apache.camel.impl.ProducerCache:void doStop()",
            "org.apache.camel.impl.RouteService:void stopChildService(org.apache.camel.Route,java.util.Set,boolean)",
            "org.apache.camel.processor.OnCompletionProcessor:void doShutdown()",
            "org.apache.camel.impl.DefaultCamelContext:void shutdownServices(java.lang.Object)",
            "org.apache.camel.component.validator.ValidatorProducer:void doShutdown()",
            "org.apache.camel.impl.ProducerCache:void releaseProducer(org.apache.camel.Endpoint,org.apache.camel.Producer)",
            "org.apache.camel.impl.ProducerCache:java.lang.Object doInProducer(org.apache.camel.Endpoint,org.apache.camel.Exchange,org.apache.camel.ExchangePattern,org.apache.camel.ProducerCallback)"
        ]
    },
    "org.apache.camel.management.DefaultManagementAgent:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.ScheduledPollConsumer:void afterPoll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:void afterPoll()"
        ]
    },
    "org.apache.camel.support.RoutePolicySupport:boolean suspendOrStopConsumer(org.apache.camel.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void openCircuit(org.apache.camel.Route)",
            "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void stopConsumer(int,org.apache.camel.Consumer)"
        ]
    },
    "org.apache.camel.builder.DefaultFluentProducerTemplate:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.management.PublishEventNotifier:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.main.MainSupport:void internalBeforeStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.main.MainSupport:void run()"
        ]
    },
    "org.apache.camel.util.LRUCache:void onRemoval(java.lang.Object,java.lang.Object,org.apache.camel.com.github.benmanes.caffeine.cache.RemovalCause)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.TraceInterceptor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.WrapProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.MarshalProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.UnitOfWorkProducer:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ProcessorPollingConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.log.LogEndpoint:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.DefaultTraceEventHandler:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.cloud.DefaultServiceCallProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:void shutdownNow(org.apache.camel.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultShutdownStrategy:void shutdownNow(java.util.List)",
            "org.apache.camel.impl.DefaultShutdownStrategy:void shutdownRoutesNow(java.util.List)",
            "org.apache.camel.impl.DefaultShutdownStrategy$ShutdownTask:void run()"
        ]
    },
    "org.apache.camel.impl.transformer.DataFormatTransformer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ServiceHelper:void stopServices(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.loadbalancer.LoadBalancerSupport:void doStop()",
            "org.apache.camel.impl.DefaultTransformerRegistry:void stop()",
            "org.apache.camel.impl.DefaultValidatorRegistry:void stop()",
            "org.apache.camel.util.ServiceHelper:void stopServices(java.lang.Object[])",
            "org.apache.camel.impl.DefaultServicePool:void doStop()",
            "org.apache.camel.impl.DefaultEndpointRegistry:void stop()",
            "org.apache.camel.util.ServiceHelper:void stopService(java.lang.Object)",
            "org.apache.camel.support.ChildServiceSupport:void stop(boolean)",
            "org.apache.camel.impl.SubscribeMethodProcessor:void doStop()"
        ]
    },
    "org.apache.camel.util.ServiceHelper:void stopAndShutdownServices(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ServiceHelper:void stopAndShutdownServices(java.lang.Object[])",
            "org.apache.camel.impl.ProducerCache:void doStop()",
            "org.apache.camel.impl.ConsumerCache:void doStop()",
            "org.apache.camel.impl.DefaultCamelContext:void shutdownServices(java.lang.Object)",
            "org.apache.camel.processor.loadbalancer.LoadBalancerSupport:void doShutdown()",
            "org.apache.camel.support.ChildServiceSupport:void shutdown()",
            "org.apache.camel.impl.SubscribeMethodProcessor:void doShutdown()"
        ]
    },
    "org.apache.camel.component.bean.BeanProducer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.OnCompletionProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.WireTapProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.InterceptSendToEndpoint$1:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.transformer.ProcessorTransformer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.DefaultManagementMBeanAssembler:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.RecipientListProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.EventDrivenPollingConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.management.mbean.ManagedProcessor:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultScheduledPollConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.file.GenericFileProducer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.FilterProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.DeferProducer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.util.ServiceHelper:boolean suspendService(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultShutdownStrategy:void suspendNow(org.apache.camel.Consumer)",
            "org.apache.camel.impl.LimitedPollingConsumerPollStrategy:void onSuspend(org.apache.camel.Consumer,org.apache.camel.Endpoint)",
            "org.apache.camel.impl.ScheduledPollConsumer:void afterPoll()",
            "org.apache.camel.support.RoutePolicySupport:boolean suspendOrStopConsumer(org.apache.camel.Consumer)",
            "org.apache.camel.util.ServiceHelper:void suspendServices(java.util.Collection)"
        ]
    },
    "org.apache.camel.component.seda.SedaEndpoint:void updateMulticastProcessor()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.seda.SedaEndpoint:void onStarted(org.apache.camel.component.seda.SedaConsumer)",
            "org.apache.camel.component.seda.SedaEndpoint:void onStopped(org.apache.camel.component.seda.SedaConsumer)"
        ]
    },
    "org.apache.camel.processor.UnmarshalProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.interceptor.BacklogDebugger:void disableDebugger()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedBacklogDebugger:void disableDebugger()",
            "org.apache.camel.processor.interceptor.BacklogDebugger:void doStop()"
        ]
    },
    "org.apache.camel.component.validator.ValidatorProducer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultProducerTemplate:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.aggregate.AggregationStrategyBeanAdapter:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.cloud.DefaultServiceLoadBalancer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.validator.ProcessorValidator:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.rest.RestApiProducer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.RouteService:void stopChildService(org.apache.camel.Route,java.util.Set,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.RouteService:void doShutdown()",
            "org.apache.camel.impl.RouteService:void doStop()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void stopServices(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Component removeComponent(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:java.util.Collection removeEndpoints(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Endpoint addEndpoint(java.lang.String,org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.component.xslt.XsltEndpoint:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.jndi.CamelInitialContextFactory:javax.naming.Context getInitialContext(java.util.Hashtable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.CamelSingletonInitialContextFactory:javax.naming.Context getInitialContext(java.util.Hashtable)"
        ]
    },
    "org.apache.camel.util.jndi.JndiContext:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.JndiContext:org.apache.camel.util.jndi.JndiContext newContext()"
        ]
    },
    "org.apache.camel.component.bean.BeanProcessor:void <init>(java.lang.Object,org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.spi.DataFormat resolveDataFormat(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.dataformat.DataFormatComponent:org.apache.camel.Endpoint createEndpoint(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.camel.component.dataformat.DataFormatEndpoint:void doStart()",
            "org.apache.camel.component.rest.RestProducer:org.apache.camel.AsyncProcessor createBindingProcessor()",
            "org.apache.camel.model.rest.RestBindingDefinition:org.apache.camel.processor.RestBindingAdvice createRestBindingAdvice(org.apache.camel.spi.RouteContext)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedBeanProcessor:java.lang.String getBeanClassName()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedBeanProcessor:java.lang.Object getInstance()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementMBeanAssembler:javax.management.modelmbean.ModelMBean assemble(javax.management.MBeanServer,java.lang.Object,javax.management.ObjectName)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:void loadFallbackTypeConverters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:void loadTypeConverters()"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelContextStartupListener:void notify(java.util.EventObject)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRoutePolicy$CamelContextStartupListener:void onCamelContextStarted(org.apache.camel.CamelContext,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void addStartupListener(org.apache.camel.StartupListener)"
        ]
    },
    "org.apache.camel.util.ObjectHelper:boolean typeCoerceEquals(org.apache.camel.TypeConverter,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.PredicateBuilder$5:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.util.ObjectHelper:boolean typeCoerceNotEquals(org.apache.camel.TypeConverter,java.lang.Object,java.lang.Object)",
            "org.apache.camel.builder.PredicateBuilder$14:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.ConsumerCache:void releasePollingConsumer(org.apache.camel.Endpoint,org.apache.camel.PollingConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receive(org.apache.camel.Endpoint,long)",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receive(org.apache.camel.Endpoint)",
            "org.apache.camel.impl.ConsumerCache:org.apache.camel.Exchange receiveNoWait(org.apache.camel.Endpoint)",
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.processor.WireTapProcessor:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RecipientListProcessor:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.EmptyConsumerCache:void releasePollingConsumer(org.apache.camel.Endpoint,org.apache.camel.PollingConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.PollEnricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)"
        ]
    },
    "org.apache.camel.impl.DefaultConsumerTemplate:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.EventDrivenPollingConsumer:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.EmptyProducerCache:void releaseProducer(org.apache.camel.Endpoint,org.apache.camel.Producer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.processor.RecipientListProcessor$RecipientProcessorExchangePair:void done()",
            "org.apache.camel.processor.Enricher$1:void done(boolean)"
        ]
    },
    "org.apache.camel.impl.ProducerCache:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.OnCompletionProcessor:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void shutdownServices(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doStop()",
            "org.apache.camel.impl.DefaultCamelContext:void shutdownServices(java.util.Collection,boolean)"
        ]
    },
    "org.apache.camel.component.validator.ValidatorProducer:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ProducerCache:void releaseProducer(org.apache.camel.Endpoint,org.apache.camel.Producer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.Enricher:boolean process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)",
            "org.apache.camel.impl.ProducerCache:void startProducer(org.apache.camel.Endpoint)",
            "org.apache.camel.processor.RecipientListProcessor$RecipientProcessorExchangePair:void done()",
            "org.apache.camel.processor.SendProcessor:void doStart()",
            "org.apache.camel.processor.Enricher$1:void done(boolean)"
        ]
    },
    "org.apache.camel.impl.EventDrivenPollingConsumer:void afterPoll()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.EventDrivenPollingConsumer:org.apache.camel.Exchange receive()",
            "org.apache.camel.impl.EventDrivenPollingConsumer:org.apache.camel.Exchange receive(long)"
        ]
    },
    "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void openCircuit(org.apache.camel.Route)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingExceptionRoutePolicy:void calculateState(org.apache.camel.Route)"
        ]
    },
    "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void stopConsumer(int,org.apache.camel.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ThrottlingInflightRoutePolicy:void throttle(org.apache.camel.Route,org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:void shutdownNow(java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:void shutdownRoutesNow(java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultShutdownStrategy:boolean doShutdown(org.apache.camel.CamelContext,java.util.List,long,java.util.concurrent.TimeUnit,boolean,boolean,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultShutdownStrategy$ShutdownTask:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.loadbalancer.LoadBalancerSupport:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()",
            "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:void doStop()",
            "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:void doStop()"
        ]
    },
    "org.apache.camel.impl.DefaultTransformerRegistry:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultValidatorRegistry:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.ServiceHelper:void stopServices(java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.rest.RestProducerBindingProcessor:void doStop()",
            "org.apache.camel.processor.SendProcessor:void doStop()",
            "org.apache.camel.processor.BatchProcessor:void doStop()",
            "org.apache.camel.impl.DefaultConsumer:void doStop()",
            "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void stop()",
            "org.apache.camel.processor.StreamResequencer:void doStop()",
            "org.apache.camel.processor.Enricher:void doStop()",
            "org.apache.camel.component.file.GenericFileEndpoint:void doStop()",
            "org.apache.camel.processor.DelegateSyncProcessor:void doStop()",
            "org.apache.camel.processor.RecipientList:void doStop()",
            "org.apache.camel.processor.ChoiceProcessor:void doStop()",
            "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void doStop()",
            "org.apache.camel.impl.RouteService:void doStop()",
            "org.apache.camel.processor.MulticastProcessor:void doStop()",
            "org.apache.camel.impl.DefaultRuntimeEndpointRegistry:void doStop()",
            "org.apache.camel.processor.DelegateAsyncProcessor:void doStop()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doStop()",
            "org.apache.camel.component.binding.BindingProducer:void doStop()",
            "org.apache.camel.processor.RoutingSlip:void doStop()",
            "org.apache.camel.component.direct.DirectComponent:void doStop()",
            "org.apache.camel.component.rest.RestProducer:void doStop()",
            "org.apache.camel.impl.InterceptSendToEndpoint:void stop()",
            "org.apache.camel.component.binding.BindingConsumerProcessor:void doStop()",
            "org.apache.camel.component.dataformat.DataFormatEndpoint:void doStop()",
            "org.apache.camel.processor.interceptor.DefaultChannel:void doStop()",
            "org.apache.camel.impl.DefaultDebugger:void stop()",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:void doStop()",
            "org.apache.camel.processor.DelegateProcessor:void doStop()",
            "org.apache.camel.component.binding.BindingEndpoint:void doStop()",
            "org.apache.camel.processor.TryProcessor:void doStop()",
            "org.apache.camel.processor.SendDynamicProcessor:void doStop()",
            "org.apache.camel.management.DefaultManagementStrategy:void doStop()",
            "org.apache.camel.processor.PollEnricher:void doStop()"
        ]
    },
    "org.apache.camel.impl.DefaultServicePool:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SharedProducerServicePool:void doShutdown()",
            "org.apache.camel.impl.SharedPollingConsumerServicePool:void doShutdown()"
        ]
    },
    "org.apache.camel.impl.DefaultEndpointRegistry:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.ChildServiceSupport:void stop(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ChildServiceSupport:void start(boolean)",
            "org.apache.camel.support.ChildServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.SubscribeMethodProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.util.ServiceHelper:void stopAndShutdownServices(java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.RouteService:void doShutdown()",
            "org.apache.camel.processor.PollEnricher:void doShutdown()",
            "org.apache.camel.support.RoutePolicySupport:boolean stopConsumer(org.apache.camel.Consumer)",
            "org.apache.camel.processor.RoutingSlip:void doShutdown()",
            "org.apache.camel.processor.interceptor.DefaultChannel:void doShutdown()",
            "org.apache.camel.processor.SendProcessor:void doShutdown()",
            "org.apache.camel.processor.DelegateAsyncProcessor:void doShutdown()",
            "org.apache.camel.processor.idempotent.IdempotentConsumer:void doShutdown()",
            "org.apache.camel.processor.MulticastProcessor:void doShutdown()",
            "org.apache.camel.impl.ScheduledPollConsumer:void doShutdown()",
            "org.apache.camel.impl.ScheduledPollConsumer:void doStop()",
            "org.apache.camel.impl.RouteService:void doStop()",
            "org.apache.camel.processor.RecipientList:void doShutdown()",
            "org.apache.camel.impl.InterceptSendToEndpoint:void shutdown()",
            "org.apache.camel.impl.ConsumerCache:void doStop()",
            "org.apache.camel.processor.aggregate.AggregateProcessor:void doShutdown()",
            "org.apache.camel.processor.RedeliveryErrorHandler:void doShutdown()"
        ]
    },
    "org.apache.camel.impl.ConsumerCache:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.loadbalancer.LoadBalancerSupport:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.ChildServiceSupport:void shutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void shutdownRouteService(org.apache.camel.impl.RouteService)"
        ]
    },
    "org.apache.camel.impl.SubscribeMethodProcessor:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:void suspendNow(org.apache.camel.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultShutdownStrategy$ShutdownTask:void run()"
        ]
    },
    "org.apache.camel.impl.LimitedPollingConsumerPollStrategy:void onSuspend(org.apache.camel.Consumer,org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.LimitedPollingConsumerPollStrategy:boolean rollback(org.apache.camel.Consumer,org.apache.camel.Endpoint,int,java.lang.Exception)"
        ]
    },
    "org.apache.camel.util.ServiceHelper:void suspendServices(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.seda.SedaEndpoint:void onStarted(org.apache.camel.component.seda.SedaConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.seda.SedaConsumer:void doResume()",
            "org.apache.camel.component.seda.SedaConsumer:void doStart()"
        ]
    },
    "org.apache.camel.component.seda.SedaEndpoint:void onStopped(org.apache.camel.component.seda.SedaConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.seda.SedaConsumer:void doStop()",
            "org.apache.camel.component.seda.SedaConsumer:void doSuspend()"
        ]
    },
    "org.apache.camel.management.mbean.ManagedBacklogDebugger:void disableDebugger()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.BacklogDebugger:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.RouteService:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ChildServiceSupport:void shutdown()"
        ]
    },
    "org.apache.camel.impl.RouteService:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ChildServiceSupport:void stop(boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:org.apache.camel.Component removeComponent(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:java.util.Collection removeEndpoints(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void removeEndpoint(org.apache.camel.Endpoint)"
        ]
    },
    "org.apache.camel.util.jndi.CamelSingletonInitialContextFactory:javax.naming.Context getInitialContext(java.util.Hashtable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.jndi.JndiContext:org.apache.camel.util.jndi.JndiContext newContext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.JndiContext:java.util.Map internalBind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.management.DefaultManagementMBeanAssembler:javax.management.modelmbean.ModelMBean assemble(javax.management.MBeanServer,java.lang.Object,javax.management.ObjectName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementAgent:void register(java.lang.Object,javax.management.ObjectName,boolean)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:void loadTypeConverters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.LazyLoadingTypeConverter:void ensureLoaded()",
            "org.apache.camel.impl.converter.DefaultTypeConverter:void doStart()"
        ]
    },
    "org.apache.camel.util.ObjectHelper:boolean typeCoerceNotEquals(org.apache.camel.TypeConverter,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.builder.PredicateBuilder$15:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.camel.builder.PredicateBuilder$7:boolean matches(org.apache.camel.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.RecipientListProcessor$RecipientProcessorExchangePair:void done()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void shutdownServices(java.util.Collection,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void shutdownServices(java.util.Collection)",
            "org.apache.camel.impl.DefaultCamelContext:void doStop()"
        ]
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:boolean doShutdown(org.apache.camel.CamelContext,java.util.List,long,java.util.concurrent.TimeUnit,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultShutdownStrategy:void shutdown(org.apache.camel.CamelContext,java.util.List,long,java.util.concurrent.TimeUnit)",
            "org.apache.camel.impl.DefaultShutdownStrategy:void suspend(org.apache.camel.CamelContext,java.util.List)",
            "org.apache.camel.impl.DefaultShutdownStrategy:void shutdownForced(org.apache.camel.CamelContext,java.util.List)",
            "org.apache.camel.impl.DefaultShutdownStrategy:boolean shutdown(org.apache.camel.CamelContext,org.apache.camel.spi.RouteStartupOrder,long,java.util.concurrent.TimeUnit,boolean)",
            "org.apache.camel.impl.DefaultShutdownStrategy:void suspend(org.apache.camel.CamelContext,java.util.List,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.camel.processor.loadbalancer.FailOverLoadBalancer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.rest.RestProducerBindingProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.SendProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.BatchProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.DefaultConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.direct.DirectConsumer:void doStop()",
            "org.apache.camel.impl.ScheduledPollConsumer:void doStop()",
            "org.apache.camel.component.timer.TimerConsumer:void doStop()",
            "org.apache.camel.component.directvm.DirectVmConsumer:void doStop()",
            "org.apache.camel.processor.loadbalancer.LoadBalancerConsumer:void doStop()",
            "org.apache.camel.component.dataset.DataSetConsumer:void doStop()"
        ]
    },
    "org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.StreamResequencer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.Enricher:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.file.GenericFileEndpoint:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DelegateSyncProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.RecipientList:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.ChoiceProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.InterceptorToAsyncProcessorBridge:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.MulticastProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RecipientListProcessor:void doStop()",
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.DefaultRuntimeEndpointRegistry:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.DelegateAsyncProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.FilterProcessor:void doStop()",
            "org.apache.camel.support.ServiceSupport:void stop()",
            "org.apache.camel.processor.WrapProcessor:void doStop()",
            "org.apache.camel.processor.interceptor.TraceInterceptor:void doStop()"
        ]
    },
    "org.apache.camel.component.binding.BindingProducer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RoutingSlip:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.direct.DirectComponent:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.rest.RestProducer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.InterceptSendToEndpoint:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.binding.BindingConsumerProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.dataformat.DataFormatEndpoint:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.DefaultChannel:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultDebugger:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ServiceHelper:void stopService(java.lang.Object)"
        ]
    },
    "org.apache.camel.processor.idempotent.IdempotentConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.DelegateProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.binding.BindingEndpoint:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.TryProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.SendDynamicProcessor:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.management.DefaultManagementStrategy:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.PollEnricher:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.SharedProducerServicePool:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void shutdown()"
        ]
    },
    "org.apache.camel.impl.SharedPollingConsumerServicePool:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.ChildServiceSupport:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void stopRouteService(org.apache.camel.impl.RouteService)",
            "org.apache.camel.support.ChildServiceSupport:void shutdown()"
        ]
    },
    "org.apache.camel.processor.PollEnricher:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.support.RoutePolicySupport:boolean stopConsumer(org.apache.camel.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RoutingSlip:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.interceptor.DefaultChannel:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.SendProcessor:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.DelegateAsyncProcessor:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.DelayProcessorSupport:void doShutdown()",
            "org.apache.camel.support.ServiceSupport:void shutdown()",
            "org.apache.camel.processor.Throttler:void doShutdown()"
        ]
    },
    "org.apache.camel.processor.idempotent.IdempotentConsumer:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.MulticastProcessor:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.RecipientListProcessor:void doShutdown()"
        ]
    },
    "org.apache.camel.impl.ScheduledPollConsumer:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void shutdown()"
        ]
    },
    "org.apache.camel.impl.ScheduledPollConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()",
            "org.apache.camel.component.file.GenericFileConsumer:void doStop()",
            "org.apache.camel.component.scheduler.SchedulerConsumer:void doStop()",
            "org.apache.camel.impl.DefaultScheduledPollConsumer:void doStop()"
        ]
    },
    "org.apache.camel.processor.RecipientList:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.InterceptSendToEndpoint:void shutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.aggregate.AggregateProcessor:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.RedeliveryErrorHandler:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void shutdownRouteService(org.apache.camel.impl.RouteService)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:boolean removeRoute(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.LimitedPollingConsumerPollStrategy:boolean rollback(org.apache.camel.Consumer,org.apache.camel.Endpoint,int,java.lang.Exception)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.seda.SedaConsumer:void doResume()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.seda.SedaConsumer:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.component.seda.SedaConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.seda.SedaConsumer:void doSuspend()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void removeEndpoint(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:boolean removeService(java.lang.Object)",
            "org.apache.camel.impl.DefaultCamelContext:boolean removeRoute(java.lang.String)"
        ]
    },
    "org.apache.camel.util.jndi.JndiContext:java.util.Map internalBind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.JndiContext:java.util.Map internalBind(java.lang.String,java.lang.Object)",
            "org.apache.camel.util.jndi.JndiContext:void bind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.management.DefaultManagementAgent:void register(java.lang.Object,javax.management.ObjectName,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementAgent:void register(java.lang.Object,javax.management.ObjectName)"
        ]
    },
    "org.apache.camel.impl.converter.LazyLoadingTypeConverter:void ensureLoaded()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.LazyLoadingTypeConverter:java.util.Map getTypeMappings()",
            "org.apache.camel.impl.converter.LazyLoadingTypeConverter:org.apache.camel.TypeConverter getTypeConverter(java.lang.Class,java.lang.Class)",
            "org.apache.camel.impl.converter.LazyLoadingTypeConverter:java.util.Map getToClassMappings(java.lang.Class)",
            "org.apache.camel.impl.converter.LazyLoadingTypeConverter:java.lang.Object doConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object,boolean)",
            "org.apache.camel.impl.converter.LazyLoadingTypeConverter:java.util.Set getFromClassMappings()",
            "org.apache.camel.impl.converter.LazyLoadingTypeConverter:org.apache.camel.TypeConverter doLookup(java.lang.Class,java.lang.Class,boolean)"
        ]
    },
    "org.apache.camel.impl.converter.DefaultTypeConverter:void doStart()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void start()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void shutdownServices(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doStop()"
        ]
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:void shutdown(org.apache.camel.CamelContext,java.util.List,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultShutdownStrategy:void shutdown(org.apache.camel.CamelContext,java.util.List)",
            "org.apache.camel.impl.DefaultCamelContext:void shutdownRoute(java.lang.String,long,java.util.concurrent.TimeUnit)",
            "org.apache.camel.impl.DefaultCamelContext:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:void suspend(org.apache.camel.CamelContext,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void suspendRoute(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void doSuspend()"
        ]
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:void shutdownForced(org.apache.camel.CamelContext,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void doStop()"
        ]
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:boolean shutdown(org.apache.camel.CamelContext,org.apache.camel.spi.RouteStartupOrder,long,java.util.concurrent.TimeUnit,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:void suspend(org.apache.camel.CamelContext,java.util.List,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.camel.component.direct.DirectConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.timer.TimerConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.directvm.DirectVmConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.processor.loadbalancer.LoadBalancerConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.dataset.DataSetConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void stopRouteService(org.apache.camel.impl.RouteService)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void stopRouteService(org.apache.camel.impl.RouteService,boolean)"
        ]
    },
    "org.apache.camel.processor.DelayProcessorSupport:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.processor.Throttler:void doShutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.component.file.GenericFileConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.component.scheduler.SchedulerConsumer:void doStop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void stop()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:boolean removeRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void removeRouteDefinition(org.apache.camel.model.RouteDefinition)",
            "org.apache.camel.management.mbean.ManagedRoute:boolean remove()",
            "org.apache.camel.management.mbean.ManagedRoute:void shutdown(long)",
            "org.apache.camel.management.mbean.ManagedRoute:void shutdown()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:boolean removeService(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.MarshalProcessor:void doStop()",
            "org.apache.camel.impl.ProducerCache:void doStop()",
            "org.apache.camel.impl.ConsumerCache:void doStop()",
            "org.apache.camel.processor.UnmarshalProcessor:void doStop()",
            "org.apache.camel.component.language.LanguageProducer:void process(org.apache.camel.Exchange)"
        ]
    },
    "org.apache.camel.util.jndi.JndiContext:void bind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.JndiContext:void bind(javax.naming.Name,java.lang.Object)",
            "org.apache.camel.util.jndi.JndiContext:void rebind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.camel.management.DefaultManagementAgent:void register(java.lang.Object,javax.management.ObjectName)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.ManagedManagementStrategy:void manageNamedObject(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.converter.LazyLoadingTypeConverter:java.util.Map getTypeMappings()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.converter.LazyLoadingTypeConverter:org.apache.camel.TypeConverter getTypeConverter(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConverter doLookup(java.lang.Class,java.lang.Class,boolean)"
        ]
    },
    "org.apache.camel.impl.converter.LazyLoadingTypeConverter:java.util.Map getToClassMappings(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.converter.LazyLoadingTypeConverter:java.util.Set getFromClassMappings()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.converter.LazyLoadingTypeConverter:org.apache.camel.TypeConverter doLookup(java.lang.Class,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConverter lookup(java.lang.Class,java.lang.Class)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConverter doLookup(java.lang.Class,java.lang.Class,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultShutdownStrategy:void shutdown(org.apache.camel.CamelContext,java.util.List)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void stopRoute(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void shutdownRoute(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void shutdownRoute(java.lang.String,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)",
            "org.apache.camel.management.mbean.ManagedRoute:void shutdown(long)",
            "org.apache.camel.impl.DefaultRouteController:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void suspendRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.component.controlbus.ControlBusProducer$ActionTask:void run()",
            "org.apache.camel.management.mbean.ManagedSuspendableRoute:void suspend()",
            "org.apache.camel.impl.DefaultRouteController:void suspendRoute(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void doSuspend()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.support.ServiceSupport:void suspend()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedSuspendableRoute:void suspend(long)",
            "org.apache.camel.impl.DefaultRouteController:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void stopRouteService(org.apache.camel.impl.RouteService,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:boolean stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit,boolean)",
            "org.apache.camel.impl.DefaultCamelContext:void stopRoute(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void shutdownRoute(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void shutdownRoute(java.lang.String,long,java.util.concurrent.TimeUnit)",
            "org.apache.camel.impl.DefaultCamelContext:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void removeRouteDefinition(org.apache.camel.model.RouteDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void addRouteDefinitions(java.util.Collection)",
            "org.apache.camel.impl.DefaultCamelContext:void removeRouteDefinitions(java.util.Collection)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedRoute:boolean remove()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedRoute:void shutdown(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedRoute:void shutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.jndi.JndiContext:void bind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.jndi.JndiContext:void rebind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.camel.util.jndi.JndiContext:void rebind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.ManagedManagementStrategy:void manageNamedObject(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.ManagedManagementStrategy:void manageObject(java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConverter doLookup(java.lang.Class,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConverter lookup(java.lang.Class,java.lang.Class)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConverter doLookup(java.lang.Class,java.lang.Class,boolean)",
            "org.apache.camel.impl.converter.LazyLoadingTypeConverter:org.apache.camel.TypeConverter doLookup(java.lang.Class,java.lang.Class,boolean)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConverter lookup(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.processor.validation.ValidatingProcessor:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.processor.validation.ValidatingProcessor:boolean isInputStreamNeeded(org.apache.camel.Exchange)",
            "org.apache.camel.builder.xml.XsltBuilder:javax.xml.transform.Source getSource(org.apache.camel.Exchange,java.lang.Object)",
            "org.apache.camel.builder.xml.XsltBuilder:boolean isInputStreamNeeded(org.apache.camel.Exchange)",
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConverter getOrFindTypeConverter(org.apache.camel.impl.converter.BaseTypeConverterRegistry$TypeMapping)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void stopRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void stopRoute(org.apache.camel.model.RouteDefinition)",
            "org.apache.camel.impl.DefaultCamelContext:void suspendRoute(java.lang.String)",
            "org.apache.camel.component.controlbus.ControlBusProducer$ActionTask:void run()",
            "org.apache.camel.impl.DefaultRouteController:void stopRoute(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void removeRouteDefinition(org.apache.camel.model.RouteDefinition)",
            "org.apache.camel.management.mbean.ManagedRoute:void shutdown()"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void shutdownRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRouteController:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRouteController:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)",
            "org.apache.camel.impl.SupervisingRouteController:void lambda$stopRoute$5(long,java.util.concurrent.TimeUnit,org.apache.camel.impl.SupervisingRouteController$RouteHolder)",
            "org.apache.camel.management.mbean.ManagedRoute:void stop(long)",
            "org.apache.camel.impl.SupervisingRouteController:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedSuspendableRoute:void suspend()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRouteController:void suspendRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRouteController:void suspendRoute(java.lang.String)",
            "org.apache.camel.impl.SupervisingRouteController:void suspendRoute(java.lang.String)",
            "org.apache.camel.impl.SupervisingRouteController:void lambda$suspendRoute$9(org.apache.camel.impl.SupervisingRouteController$RouteHolder)"
        ]
    },
    "org.apache.camel.support.ServiceSupport:void suspend()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.util.ServiceHelper:boolean suspendService(java.lang.Object)",
            "org.apache.camel.impl.DefaultCamelContext:void suspend()",
            "org.apache.camel.management.mbean.ManagedService:void suspend()",
            "org.apache.camel.impl.DefaultCamelContext:void suspendRouteService(org.apache.camel.impl.RouteService)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedSuspendableRoute:void suspend(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRouteController:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.ha.ClusteredRouteController:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)",
            "org.apache.camel.impl.SupervisingRouteController:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)",
            "org.apache.camel.impl.SupervisingRouteController:void lambda$suspendRoute$11(long,java.util.concurrent.TimeUnit,org.apache.camel.impl.SupervisingRouteController$RouteHolder)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void removeRouteDefinitions(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.util.jndi.JndiContext:void rebind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.ManagedManagementStrategy:void manageObject(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void manageObject(java.lang.Object)"
        ]
    },
    "org.apache.camel.impl.converter.BaseTypeConverterRegistry:org.apache.camel.TypeConverter getOrFindTypeConverter(org.apache.camel.impl.converter.BaseTypeConverterRegistry$TypeMapping)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.converter.BaseTypeConverterRegistry:java.lang.Object doConvertTo(java.lang.Class,org.apache.camel.Exchange,java.lang.Object,boolean)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void stopRoute(org.apache.camel.model.RouteDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultRouteController:void stopRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.mbean.ManagedRoute:void stop()",
            "org.apache.camel.impl.SupervisingRouteController:void lambda$stopRoute$3(java.lang.String,org.apache.camel.impl.SupervisingRouteController$RouteHolder)",
            "org.apache.camel.impl.SupervisingRouteController:void stopRoute(java.lang.String)",
            "org.apache.camel.impl.ha.ClusteredRouteController:void stopRoute(java.lang.String)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRouteController:void stopRoute(java.lang.String,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void lambda$stopRoute$5(long,java.util.concurrent.TimeUnit,org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void doStopRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedRoute:void stop(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.ha.ClusteredRouteController:void suspendRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void lambda$suspendRoute$9(org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void doStopRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.impl.DefaultCamelContext:void suspend()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.mbean.ManagedService:void suspend()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.DefaultCamelContext:void suspendRouteService(org.apache.camel.impl.RouteService)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.DefaultCamelContext:void suspendRoute(java.lang.String)",
            "org.apache.camel.impl.DefaultCamelContext:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRouteController:void suspendRoute(java.lang.String,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void lambda$suspendRoute$11(long,java.util.concurrent.TimeUnit,org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void doStopRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void manageObject(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onErrorHandlerAdd(org.apache.camel.spi.RouteContext,org.apache.camel.Processor,org.apache.camel.ErrorHandlerFactory)",
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onComponentAdd(java.lang.String,org.apache.camel.Component)",
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onContextStart(org.apache.camel.CamelContext)",
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onServiceAdd(org.apache.camel.CamelContext,org.apache.camel.Service,org.apache.camel.Route)",
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onRoutesAdd(java.util.Collection)",
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onEndpointAdd(org.apache.camel.Endpoint)",
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onThreadPoolAdd(org.apache.camel.CamelContext,java.util.concurrent.ThreadPoolExecutor,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.camel.management.mbean.ManagedRoute:void stop()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.impl.SupervisingRouteController:void lambda$stopRoute$3(java.lang.String,org.apache.camel.impl.SupervisingRouteController$RouteHolder)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.impl.SupervisingRouteController:void doStopRoute(org.apache.camel.impl.SupervisingRouteController$RouteHolder,boolean,org.apache.camel.util.function.ThrowingConsumer)"
        ]
    },
    "org.apache.camel.impl.ha.ClusteredRouteController:void stopRoute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onErrorHandlerAdd(org.apache.camel.spi.RouteContext,org.apache.camel.Processor,org.apache.camel.ErrorHandlerFactory)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onComponentAdd(java.lang.String,org.apache.camel.Component)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void enlistPreRegisteredServices()"
        ]
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onContextStart(org.apache.camel.CamelContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onServiceAdd(org.apache.camel.CamelContext,org.apache.camel.Service,org.apache.camel.Route)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void enlistPreRegisteredServices()"
        ]
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onRoutesAdd(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onEndpointAdd(org.apache.camel.Endpoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void enlistPreRegisteredServices()"
        ]
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onThreadPoolAdd(org.apache.camel.CamelContext,java.util.concurrent.ThreadPoolExecutor,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": []
    },
    "org.apache.camel.management.DefaultManagementLifecycleStrategy:void enlistPreRegisteredServices()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.camel.processor.validation.ValidatingProcessor:void doProcess(org.apache.camel.Exchange)"
        ],
        "vulCaller": [
            "org.apache.camel.management.DefaultManagementLifecycleStrategy:void onContextStart(org.apache.camel.CamelContext)"
        ]
    }
}
{
    "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()": {
        "isVulRoot": true,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void setContent(java.io.InputStream)",
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void addContent(io.netty.buffer.ByteBuf,boolean)",
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void setContent(io.netty.buffer.ByteBuf)"
        ]
    },
    "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void setContent(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedFileUpload:void setContent(java.io.InputStream)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void setContent(java.io.InputStream)"
        ]
    },
    "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void addContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:void addContent(io.netty.buffer.ByteBuf,boolean)"
        ]
    },
    "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:void setContent(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:void setContent(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute replace(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void setContent(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.DiskAttribute:void setValue(java.lang.String)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:void setContent(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void setContent(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:void addContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate()",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload duplicate()",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:void setContent(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute copy()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute duplicate()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute retainedDuplicate()",
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute replace(io.netty.buffer.ByteBuf)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void setContent(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskAttribute:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void setValue(java.lang.String)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void addContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder retainedDuplicate()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder duplicate()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload duplicate()",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData duplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.FileUpload copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder copy()",
            "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData copy()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute copy()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData copy()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute duplicate()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData duplicate()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder duplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.Attribute retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute retainedDuplicate()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()",
            "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder retainedDuplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DiskAttribute:void <init>(java.lang.String,java.lang.String)",
            "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void <init>(java.lang.String,java.lang.String,long,java.nio.charset.Charset)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder retainedDuplicate()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder duplicate()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData duplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.HttpData copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.FileUpload copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData copy()",
            "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder copy()",
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData copy()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder duplicate()",
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData duplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.Attribute retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()",
            "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder retainedDuplicate()"
        ]
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.buffer.ByteBufHolder retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DiskAttribute:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void <init>(java.lang.String,java.lang.String,long,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": [
            "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String)",
            "io.netty.handler.codec.http.multipart.MixedAttribute:void <init>(java.lang.String,java.lang.String,long)"
        ]
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.HttpData copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData duplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.buffer.ByteBufHolder retainedDuplicate()": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    },
    "io.netty.handler.codec.http.multipart.MixedAttribute:void <init>(java.lang.String,java.lang.String,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:java.io.File tempFile()"
        ],
        "vulCaller": []
    }
}
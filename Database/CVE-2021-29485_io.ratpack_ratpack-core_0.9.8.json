{
    "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)": {
        "isVulRoot": true,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.DefaultResponse:void send(byte[])",
            "ratpack.http.internal.DefaultResponse:void send(io.netty.buffer.ByteBuf)",
            "ratpack.http.internal.DefaultResponse:void send(java.io.InputStream)",
            "ratpack.http.internal.DefaultResponse:void send()"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.DefaultResponse:void send(java.lang.String,byte[])",
            "ratpack.http.internal.DefaultResponse:void send(java.lang.String)"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.DefaultResponse:void send(java.lang.String,io.netty.buffer.ByteBuf)"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.DefaultResponse:void send(java.lang.String,java.io.InputStream)"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void lastModified(java.util.Date,java.lang.Runnable)",
            "ratpack.http.internal.MultiMethodHandler:void handle(ratpack.handling.Context)",
            "ratpack.handling.internal.DefaultContext:void handleErrorHandlerThrowable(ratpack.error.ServerErrorHandler,java.lang.Throwable,java.lang.Throwable)",
            "ratpack.server.internal.NettyHandlerAdapter$3:void execute(ratpack.exec.Execution)"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send(java.lang.String,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.internal.DefaultResponse:void send(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.DefaultResponse:void send(java.lang.String,java.lang.String)",
            "ratpack.handling.internal.DefaultContext:void handleErrorHandlerThrowable(ratpack.error.ServerErrorHandler,java.lang.Throwable,java.lang.Throwable)",
            "ratpack.server.internal.NettyHandlerAdapter$3:void execute(ratpack.exec.Execution)"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send(java.lang.String,io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.internal.DefaultResponse:void send(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void lastModified(java.util.Date,java.lang.Runnable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.internal.MultiMethodHandler:void handle(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void byMethod(ratpack.func.Action)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void handleErrorHandlerThrowable(ratpack.error.ServerErrorHandler,java.lang.Throwable,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void error(java.lang.Throwable)"
        ]
    },
    "ratpack.server.internal.NettyHandlerAdapter$3:void execute(ratpack.exec.Execution)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.server.internal.NettyHandlerAdapter$3:void execute(java.lang.Object)"
        ]
    },
    "ratpack.http.internal.DefaultResponse:void send(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void byMethod(ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void error(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void clientError(int)",
            "ratpack.handling.internal.DefaultContext:void render(java.lang.Object)",
            "ratpack.handling.internal.DefaultContext$3:void execute(java.lang.Throwable)"
        ]
    },
    "ratpack.server.internal.NettyHandlerAdapter$3:void execute(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.ExecutionBacking:void done()"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void clientError(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.ClientErrorForwardingHandler:void handle(ratpack.handling.Context)",
            "ratpack.render.internal.DefaultRenderController:void render(java.lang.Object,ratpack.handling.Context)",
            "ratpack.http.internal.ContentNegotiationHandler:void handle(ratpack.handling.Context)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void render(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext$3:void execute(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext$3:void execute(java.lang.Object)"
        ]
    },
    "ratpack.exec.internal.ExecutionBacking:void done()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.ExecutionBacking:void drain()"
        ]
    },
    "ratpack.handling.internal.ClientErrorForwardingHandler:void handle(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.internal.MultiMethodHandler:void handle(ratpack.handling.Context)",
            "ratpack.handling.internal.DefaultContext:void doNext(ratpack.handling.Context,ratpack.registry.Registry,int,ratpack.handling.Handler[],ratpack.handling.Handler)"
        ]
    },
    "ratpack.render.internal.DefaultRenderController:void render(java.lang.Object,ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void render(java.lang.Object)"
        ]
    },
    "ratpack.http.internal.ContentNegotiationHandler:void handle(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void byContent(ratpack.func.Action)"
        ]
    },
    "ratpack.handling.internal.DefaultContext$3:void execute(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.ExecutionBacking$UserCodeSegment$1:void run()"
        ]
    },
    "ratpack.exec.internal.ExecutionBacking:void drain()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.ExecutionBacking:void tryDrain()"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void doNext(ratpack.handling.Context,ratpack.registry.Registry,int,ratpack.handling.Handler[],ratpack.handling.Handler)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void insert(ratpack.handling.Handler[])",
            "ratpack.handling.internal.DefaultContext:void next(ratpack.registry.Registry)",
            "ratpack.handling.internal.DefaultContext$RejoinHandler:void handle(ratpack.handling.Context)",
            "ratpack.handling.internal.DefaultContext:void next()",
            "ratpack.handling.internal.DefaultContext:void insert(ratpack.registry.Registry,ratpack.handling.Handler[])"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void byContent(ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.ExecutionBacking$UserCodeSegment$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.ExecutionBacking:void tryDrain()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.ExecutionBacking:void join(ratpack.func.Action)",
            "ratpack.exec.internal.ExecutionBacking:void streamExecution(ratpack.func.Action)",
            "ratpack.exec.internal.ExecutionBacking:void access$100(ratpack.exec.internal.ExecutionBacking)",
            "ratpack.exec.internal.ExecutionBacking:void drain()",
            "ratpack.exec.internal.ExecutionBacking:void <init>(ratpack.exec.ExecController,java.lang.ThreadLocal,ratpack.func.Action,ratpack.func.Action,ratpack.func.Action)",
            "ratpack.exec.internal.ExecutionBacking:void completeStreamExecution(ratpack.func.Action)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void insert(ratpack.handling.Handler[])": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.FactoryHandler:void handle(ratpack.handling.Context)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void next(ratpack.registry.Registry)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext$RejoinHandler:void handle(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void doNext(ratpack.handling.Context,ratpack.registry.Registry,int,ratpack.handling.Handler[],ratpack.handling.Handler)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void next()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext$2:void execute(ratpack.exec.Execution)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void insert(ratpack.registry.Registry,ratpack.handling.Handler[])": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.ExecutionBacking:void join(ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.DefaultSuccessPromise$1:void run()",
            "ratpack.exec.internal.DefaultSuccessPromise$1$1:void error(java.lang.Throwable)",
            "ratpack.exec.internal.DefaultSuccessPromise$1$1:void success(java.lang.Object)"
        ]
    },
    "ratpack.exec.internal.ExecutionBacking:void streamExecution(ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.DefaultExecControl$4:void onSubscribe(org.reactivestreams.Subscription)",
            "ratpack.exec.internal.DefaultExecControl$4:void onNext(java.lang.Object)"
        ]
    },
    "ratpack.exec.internal.ExecutionBacking:void access$100(ratpack.exec.internal.ExecutionBacking)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.ExecutionBacking$2:void run()"
        ]
    },
    "ratpack.exec.internal.ExecutionBacking:void <init>(ratpack.exec.ExecController,java.lang.ThreadLocal,ratpack.func.Action,ratpack.func.Action,ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.DefaultExecControl$3:void run()",
            "ratpack.exec.internal.DefaultExecControl:void fork(ratpack.func.Action,ratpack.func.Action,ratpack.func.Action)"
        ]
    },
    "ratpack.exec.internal.ExecutionBacking:void completeStreamExecution(ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.DefaultExecControl$4:void onComplete()",
            "ratpack.exec.internal.DefaultExecControl$4:void onError(java.lang.Throwable)"
        ]
    },
    "ratpack.handling.internal.FactoryHandler:void handle(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void doNext(ratpack.handling.Context,ratpack.registry.Registry,int,ratpack.handling.Handler[],ratpack.handling.Handler)",
            "ratpack.http.internal.HeaderHandler:void handle(ratpack.handling.Context)"
        ]
    },
    "ratpack.handling.internal.DefaultContext$2:void execute(ratpack.exec.Execution)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext$2:void execute(java.lang.Object)"
        ]
    },
    "ratpack.exec.internal.DefaultSuccessPromise$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.DefaultSuccessPromise$1$1:void error(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.client.internal.DefaultHttpClient$1$1$1:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
            "ratpack.http.client.internal.DefaultHttpClient$1$2:void operationComplete(io.netty.channel.ChannelFuture)",
            "ratpack.exec.internal.DefaultExecControl$2$ComputeResume:void onFailure(java.lang.Throwable)",
            "ratpack.http.client.internal.DefaultHttpClient$1$2$1:void operationComplete(io.netty.channel.ChannelFuture)"
        ]
    },
    "ratpack.exec.internal.DefaultSuccessPromise$1$1:void success(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.DefaultExecControl$2$ComputeResume:void onSuccess(java.lang.Object)",
            "ratpack.http.client.internal.DefaultHttpClient$1$1$1:void channelRead0(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpObject)"
        ]
    },
    "ratpack.exec.internal.DefaultExecControl$4:void onSubscribe(org.reactivestreams.Subscription)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.DefaultExecControl$4:void onNext(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.ExecutionBacking$2:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.DefaultExecControl$3:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.DefaultExecControl:void fork(ratpack.func.Action,ratpack.func.Action,ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void fork(ratpack.func.Action,ratpack.func.Action,ratpack.func.Action)",
            "ratpack.handling.internal.DefaultContext:void start(ratpack.exec.ExecControl,ratpack.handling.internal.DefaultContext$RequestConstants,ratpack.registry.Registry,ratpack.handling.Handler[],ratpack.handling.Handler,ratpack.func.Action)",
            "ratpack.exec.internal.DefaultExecControl:void fork(ratpack.func.Action,ratpack.func.Action)",
            "ratpack.exec.internal.DefaultExecControl:void fork(ratpack.func.Action)"
        ]
    },
    "ratpack.exec.internal.DefaultExecControl$4:void onComplete()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.DefaultExecControl$4:void onError(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.internal.HeaderHandler:void handle(ratpack.handling.Context)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext$2:void execute(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.ExecutionBacking$3:void performOperation()"
        ]
    },
    "ratpack.http.client.internal.DefaultHttpClient$1$1$1:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.client.internal.DefaultHttpClient$1$2:void operationComplete(io.netty.channel.ChannelFuture)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.client.internal.DefaultHttpClient$1$2:void operationComplete(io.netty.util.concurrent.Future)"
        ]
    },
    "ratpack.exec.internal.DefaultExecControl$2$ComputeResume:void onFailure(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.client.internal.DefaultHttpClient$1$2$1:void operationComplete(io.netty.channel.ChannelFuture)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.client.internal.DefaultHttpClient$1$2$1:void operationComplete(io.netty.util.concurrent.Future)"
        ]
    },
    "ratpack.exec.internal.DefaultExecControl$2$ComputeResume:void onSuccess(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.client.internal.DefaultHttpClient$1$1$1:void channelRead0(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpObject)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.http.client.internal.DefaultHttpClient$1$1$1:void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void fork(ratpack.func.Action,ratpack.func.Action,ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void start(ratpack.exec.ExecControl,ratpack.handling.internal.DefaultContext$RequestConstants,ratpack.registry.Registry,ratpack.handling.Handler[],ratpack.handling.Handler,ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.server.internal.NettyHandlerAdapter:void channelRead0(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest)"
        ]
    },
    "ratpack.exec.internal.DefaultExecControl:void fork(ratpack.func.Action,ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void fork(ratpack.func.Action,ratpack.func.Action)"
        ]
    },
    "ratpack.exec.internal.DefaultExecControl:void fork(ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.DefaultContext:void fork(ratpack.func.Action)"
        ]
    },
    "ratpack.exec.internal.ExecutionBacking$3:void performOperation()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.InterceptedOperation:void nextInterceptor()",
            "ratpack.handling.internal.InterceptedOperation:void run()"
        ]
    },
    "ratpack.http.client.internal.DefaultHttpClient$1$2:void operationComplete(io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.client.internal.DefaultHttpClient$1$2$1:void operationComplete(io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.http.client.internal.DefaultHttpClient$1$1$1:void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.server.internal.NettyHandlerAdapter:void channelRead0(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.server.internal.NettyHandlerAdapter:void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "ratpack.handling.internal.DefaultContext:void fork(ratpack.func.Action,ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.DefaultContext:void fork(ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.InterceptedOperation:void nextInterceptor()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.InterceptedOperation:void access$100(ratpack.handling.internal.InterceptedOperation)",
            "ratpack.handling.internal.InterceptedOperation:void run()"
        ]
    },
    "ratpack.handling.internal.InterceptedOperation:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.ExecutionBacking:void intercept(ratpack.exec.ExecInterceptor$ExecType,java.util.List,ratpack.func.Action)"
        ]
    },
    "ratpack.server.internal.NettyHandlerAdapter:void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.handling.internal.InterceptedOperation:void access$100(ratpack.handling.internal.InterceptedOperation)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.InterceptedOperation$1:void run()"
        ]
    },
    "ratpack.exec.internal.ExecutionBacking:void intercept(ratpack.exec.ExecInterceptor$ExecType,java.util.List,ratpack.func.Action)": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.exec.internal.DefaultExecControl$2$BlockingOperation:java.lang.Object call()",
            "ratpack.exec.internal.ExecutionBacking$UserCodeSegment:void run()"
        ]
    },
    "ratpack.handling.internal.InterceptedOperation$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": [
            "ratpack.handling.internal.InterceptedOperation:void nextInterceptor()"
        ]
    },
    "ratpack.exec.internal.DefaultExecControl$2$BlockingOperation:java.lang.Object call()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    },
    "ratpack.exec.internal.ExecutionBacking$UserCodeSegment:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "ratpack.http.internal.DefaultResponse:void commit(io.netty.buffer.ByteBuf)"
        ],
        "vulCaller": []
    }
}
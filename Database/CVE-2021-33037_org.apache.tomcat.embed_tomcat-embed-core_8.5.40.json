{
    "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void prepareRequest()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessorLight:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.AbstractProcessorLight:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:void process(org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.coyote.AbstractProtocol$ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:void process(org.apache.tomcat.util.net.SocketEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamRunnable:void run()",
            "org.apache.coyote.http2.StreamProcessor:void processSocketEvent(org.apache.tomcat.util.net.SocketEvent,boolean)"
        ]
    },
    "org.apache.coyote.AbstractProtocol$ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void doRun()",
            "org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor:void doRun()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun()"
        ]
    },
    "org.apache.coyote.http2.StreamRunnable:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http2.StreamProcessor:void processSocketEvent(org.apache.tomcat.util.net.SocketEvent,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:void executeDispatches()",
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.AbstractProcessor:void setErrorState(org.apache.coyote.ErrorState,java.lang.Throwable)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void doRun()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SocketProcessorBase:void run()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor:void doRun()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SocketProcessorBase:void run()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SocketProcessorBase:void run()"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:void executeDispatches()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.http2.StreamProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Processor:void endRequest()",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.AbstractProcessor:void setErrorState(org.apache.coyote.ErrorState,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()",
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.ajp.AjpProcessor:void populateHost()",
            "org.apache.coyote.ajp.AjpProcessor:void access$400(org.apache.coyote.ajp.AjpProcessor,org.apache.coyote.ErrorState,java.lang.Throwable)",
            "org.apache.coyote.http11.Http11Processor:void ack()",
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Processor:boolean handleIncompleteRequestLineRead()",
            "org.apache.coyote.ajp.AjpProcessor:void access$800(org.apache.coyote.ajp.AjpProcessor,org.apache.coyote.ErrorState,java.lang.Throwable)",
            "org.apache.coyote.ajp.AjpProcessor:void access$1000(org.apache.coyote.ajp.AjpProcessor,org.apache.coyote.ErrorState,java.lang.Throwable)",
            "org.apache.coyote.http11.Http11Processor:void endRequest()",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.ajp.AjpProcessor:void prepareRequest()",
            "org.apache.coyote.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.coyote.AbstractProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)",
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.http2.StreamProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.http2.StreamProcessor:void doPush(org.apache.coyote.Request)",
            "org.apache.coyote.http2.StreamProcessor:void ack()",
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.net.SocketProcessorBase:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:boolean processSocket(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent,boolean)"
        ]
    },
    "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.catalina.valves.ErrorReportValve:void report(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.coyote.Response:void sendHeaders()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.OutputBuffer:void close()",
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.connector.Response:void sendAcknowledgement()",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.coyote.Response:boolean checkRegisterForWrite()",
            "org.apache.coyote.http2.Stream:void incrementWindowSize(int)",
            "org.apache.coyote.Response:long getBytesWritten(boolean)",
            "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.coyote.Response:void setWriteListener(javax.servlet.WriteListener)"
        ]
    },
    "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void complete()",
            "org.apache.catalina.core.AsyncContextImpl:void start(java.lang.Runnable)",
            "org.apache.catalina.connector.Request:org.apache.catalina.servlet4preview.http.PushBuilder newPushBuilder(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.connector.Request:java.lang.String getLocalAddr()",
            "org.apache.catalina.connector.Request:java.lang.String getRemoteHost()",
            "org.apache.catalina.connector.InputBuffer:int available()",
            "org.apache.catalina.core.ApplicationPushBuilder:void push()",
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl$AsyncRunnable:void run()",
            "org.apache.catalina.valves.AbstractAccessLogValve$ConnectionStatusElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.Request:boolean isAsyncCompleting()",
            "org.apache.catalina.connector.Request:boolean isAsyncDispatching()",
            "org.apache.catalina.connector.Request:boolean isAsync()",
            "org.apache.catalina.core.AsyncContextImpl:boolean isStarted()",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.coyote.Request:void setReadListener(javax.servlet.ReadListener)",
            "org.apache.catalina.authenticator.AuthenticatorBase:java.security.cert.X509Certificate[] getRequestCertificates(org.apache.catalina.connector.Request)",
            "org.apache.catalina.core.AsyncContextImpl:void setTimeout(long)",
            "org.apache.coyote.Request:boolean isFinished()",
            "org.apache.catalina.connector.Request:java.lang.String getLocalName()",
            "org.apache.catalina.connector.Request:int getRemotePort()",
            "org.apache.catalina.connector.Request:java.lang.String getRemoteAddr()",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.connector.InputBuffer:boolean isReady()",
            "org.apache.catalina.connector.Request:void checkSwallowInput()",
            "org.apache.catalina.core.AsyncContextImpl:boolean timeout()",
            "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()",
            "org.apache.catalina.connector.InputBuffer:void setReadListener(javax.servlet.ReadListener)",
            "org.apache.catalina.core.AsyncContextImpl:void setStarted(org.apache.catalina.Context,javax.servlet.ServletRequest,javax.servlet.ServletResponse,boolean)",
            "org.apache.coyote.http11.Http11Processor:void populatePort()",
            "org.apache.catalina.connector.Request:int getLocalPort()",
            "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable,boolean)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean restoreRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.coyote.http2.Stream$StreamInputBuffer:boolean onDataAvailable()",
            "org.apache.catalina.connector.Request:javax.servlet.http.HttpUpgradeHandler upgrade(java.lang.Class)"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessorLight:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatchEndRequest()",
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessorLight:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SocketWrapperBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void populateHost()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void access$400(org.apache.coyote.ajp.AjpProcessor,org.apache.coyote.ErrorState,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void ack()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:boolean handleIncompleteRequestLineRead()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void access$800(org.apache.coyote.ajp.AjpProcessor,org.apache.coyote.ErrorState,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void access$1000(org.apache.coyote.ajp.AjpProcessor,org.apache.coyote.ErrorState,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void prepareRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessorLight:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.AbstractProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()",
            "org.apache.coyote.ajp.AjpProcessor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:void doPush(org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:void ack()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.AbstractEndpoint:boolean processSocket(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2:void completed(java.lang.Integer,java.nio.ByteBuffer)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void failed(java.lang.Throwable,java.nio.ByteBuffer)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void failed(java.lang.Throwable,java.nio.ByteBuffer[])",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:org.apache.tomcat.util.net.SendfileState processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper,boolean)",
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void completed(java.lang.Long,java.nio.ByteBuffer[])",
            "org.apache.tomcat.util.net.SocketWrapperBase:void processSocket(org.apache.tomcat.util.net.SocketEvent,boolean)",
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.tomcat.util.net.Nio2Endpoint:boolean setSocketOptions(java.nio.channels.AsynchronousSocketChannel)",
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper)",
            "org.apache.tomcat.util.net.AprEndpoint$Poller:void maintain()",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void registerReadInterest()",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void registerWriteInterest()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel,int)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void completed(java.lang.Integer,java.nio.ByteBuffer)",
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2:void failed(java.lang.Throwable,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer:int doWrite(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void end()"
        ]
    },
    "org.apache.catalina.valves.ErrorReportValve:void report(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.coyote.Response:void sendHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2OutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http2.Stream$StreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean prepare(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void close()",
            "org.apache.catalina.connector.Response:void finishResponse()",
            "org.apache.catalina.connector.CoyoteOutputStream:void close()"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void flush()",
            "org.apache.catalina.connector.OutputBuffer:void close()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.catalina.connector.Response:void sendAcknowledgement()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.http2.StreamProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.Response:boolean checkRegisterForWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void checkRegisterForWrite()",
            "org.apache.coyote.Response:boolean isReady()",
            "org.apache.coyote.ajp.AjpProcessor:boolean flushBufferedWrite()"
        ]
    },
    "org.apache.coyote.http2.Stream:void incrementWindowSize(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.Response:long getBytesWritten(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Response:long getBytesWritten(boolean)"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.rewrite.RewriteValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AbstractAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteCIDRValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.LoadBalancerDrainingValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.coyote.Response:void setWriteListener(javax.servlet.WriteListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void setWriteListener(javax.servlet.WriteListener)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void complete()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable,boolean)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void start(java.lang.Runnable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.servlet4preview.http.PushBuilder newPushBuilder(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:org.apache.catalina.servlet4preview.http.PushBuilder newPushBuilder()",
            "org.apache.catalina.connector.RequestFacade:org.apache.catalina.servlet4preview.http.PushBuilder newPushBuilder(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getLocalAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.rewrite.ResolverImpl:java.lang.String resolve(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalAddr()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getRemoteHost()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.AbstractAccessLogValve$HostElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteHost()",
            "org.apache.catalina.valves.rewrite.ResolverImpl:java.lang.String resolve(java.lang.String)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int available()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int available()",
            "org.apache.catalina.connector.InputBuffer:boolean ready()",
            "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Integer run()"
        ]
    },
    "org.apache.catalina.core.ApplicationPushBuilder:void push()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.AsyncContextImpl$AsyncRunnable:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()"
        ]
    },
    "org.apache.catalina.valves.AbstractAccessLogValve$ConnectionStatusElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:boolean isAsyncCompleting()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isAsyncDispatching()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isAsync()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:boolean isStarted()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:boolean isAsyncStarted()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.valves.AbstractAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AbstractAccessLogValve$RequestAttributeElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.RequestFacade:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.valves.AbstractAccessLogValve$PortElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.AbstractAccessLogValve$ConnectionStatusElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AbstractAccessLogValve$ProtocolElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.valves.AbstractAccessLogValve$HostElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.Request:java.util.Enumeration getAttributeNames()",
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.authenticator.AuthenticatorBase:java.security.cert.X509Certificate[] getRequestCertificates(org.apache.catalina.connector.Request)",
            "org.apache.catalina.valves.AbstractAccessLogValve$ByteSentElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.valves.rewrite.ResolverImpl:java.lang.String resolveEnv(java.lang.String)",
            "org.apache.catalina.valves.AbstractAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AbstractAccessLogValve$RemoteAddrElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.LoadBalancerDrainingValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.coyote.Request:void setReadListener(javax.servlet.ReadListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:void setReadListener(javax.servlet.ReadListener)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:java.security.cert.X509Certificate[] getRequestCertificates(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setTimeout(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.coyote.Request:boolean isFinished()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:boolean isFinished()",
            "org.apache.catalina.connector.InputBuffer:void setReadListener(javax.servlet.ReadListener)",
            "org.apache.catalina.connector.InputBuffer:boolean isFinished()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getLocalName()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalName()",
            "org.apache.catalina.valves.rewrite.ResolverImpl:java.lang.String resolve(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:int getRemotePort()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.AbstractAccessLogValve$PortElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.RequestFacade:int getRemotePort()",
            "org.apache.catalina.valves.rewrite.ResolverImpl:java.lang.String resolve(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.lang.String getRemoteHost()",
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo:boolean validate(org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.DigestAuthenticator:java.lang.String generateNonce(org.apache.catalina.connector.Request)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AbstractAccessLogValve$RemoteAddrElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.rewrite.ResolverImpl:java.lang.String resolve(java.lang.String)",
            "org.apache.catalina.valves.RemoteCIDRValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteAddr()",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:boolean isReady()",
            "org.apache.catalina.connector.InputBuffer:void setReadListener(javax.servlet.ReadListener)",
            "org.apache.catalina.connector.CoyoteInputStream:void checkNonBlockingRead()"
        ]
    },
    "org.apache.catalina.connector.Request:void checkSwallowInput()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParts(boolean)",
            "org.apache.catalina.connector.Request:void finishRequest()",
            "org.apache.catalina.connector.Request:void parseParameters()",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:boolean timeout()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddrForwarded()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:void setReadListener(javax.servlet.ReadListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:void setReadListener(javax.servlet.ReadListener)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setStarted(org.apache.catalina.Context,javax.servlet.ServletRequest,javax.servlet.ServletResponse,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void populatePort()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)"
        ]
    },
    "org.apache.catalina.connector.Request:int getLocalPort()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:int getLocalPort()",
            "org.apache.catalina.valves.rewrite.ResolverImpl:java.lang.String resolve(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean restoreRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamInputBuffer:boolean onDataAvailable()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.HttpUpgradeHandler upgrade(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpUpgradeHandler upgrade(java.lang.Class)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatchEndRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2:void completed(java.lang.Integer,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void failed(java.lang.Throwable,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void completed(java.lang.Integer,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void failed(java.lang.Throwable,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void failed(java.lang.Throwable,java.nio.ByteBuffer[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void completed(java.lang.Long,java.nio.ByteBuffer[])",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:org.apache.tomcat.util.net.SendfileState processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper)",
            "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper:org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SendfileDataBase)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapperBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void completed(java.lang.Long,java.nio.ByteBuffer[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SocketWrapperBase:void processSocket(org.apache.tomcat.util.net.SocketEvent,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void executeDispatches()",
            "org.apache.coyote.AbstractProcessor:void processSocketEvent(org.apache.tomcat.util.net.SocketEvent,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapperBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long,org.apache.tomcat.util.net.SocketEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$Poller:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$Sendfile:void run()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint:boolean setSocketOptions(java.nio.channels.AsynchronousSocketChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Acceptor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler:void failed(java.lang.Throwable,org.apache.tomcat.util.net.SocketWrapperBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$Poller:void maintain()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$Poller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void registerReadInterest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void registerReadInterest()",
            "org.apache.coyote.ajp.AjpProcessor:void registerReadInterest()",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)",
            "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:void setReadListener(javax.servlet.ReadListener)",
            "org.apache.coyote.AbstractProtocol$ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.coyote.AbstractProtocol$ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.coyote.Processor)",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void registerWriteInterest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void processWrites()",
            "org.apache.coyote.http11.Http11OutputBuffer:boolean isReady()",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flushInternal(boolean,boolean)",
            "org.apache.coyote.http11.Http11OutputBuffer:void registerWriteInterest()",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void setWriteListener(javax.servlet.WriteListener)",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper:void registerReadInterest()",
            "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper:void registerWriteInterest()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:org.apache.tomcat.util.net.SendfileState processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void completed(java.lang.Integer,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler:void completed(java.lang.Integer,org.apache.tomcat.util.net.SocketWrapperBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2:void failed(java.lang.Throwable,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2:void completed(java.lang.Integer,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.Response:void doWrite(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void realWriteBytes(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void end()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void end()"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:void end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void end()",
            "org.apache.coyote.http11.Http11OutputBuffer:void end()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void end()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void end()"
        ]
    },
    "org.apache.coyote.http2.Http2OutputBuffer:int doWrite(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2OutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean prepare(org.apache.coyote.Request,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.rewrite.RewriteValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.Response:void finishResponse()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.valves.ErrorReportValve:void report(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
            "org.apache.catalina.connector.CoyoteWriter:void flush()",
            "org.apache.catalina.connector.Response:void flushBuffer()",
            "org.apache.catalina.connector.Response:long getBytesWritten(boolean)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.rewrite.RewriteValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AbstractAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteCIDRValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.LoadBalancerDrainingValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void checkRegisterForWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void checkRegisterForWrite()"
        ]
    },
    "org.apache.coyote.Response:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:boolean isReady()",
            "org.apache.coyote.Response:void setWriteListener(javax.servlet.WriteListener)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean flushBufferedWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.catalina.connector.Response:long getBytesWritten(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AbstractAccessLogValve$ByteSentElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.rewrite.RewriteValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AbstractAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteCIDRValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.LoadBalancerDrainingValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.rewrite.RewriteValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.rewrite.RewriteValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AbstractAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteCIDRValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.LoadBalancerDrainingValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.AbstractAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.RemoteCIDRValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.LoadBalancerDrainingValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.OutputBuffer:void setWriteListener(javax.servlet.WriteListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void setWriteListener(javax.servlet.WriteListener)"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.servlet4preview.http.PushBuilder newPushBuilder()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:org.apache.catalina.servlet4preview.http.PushBuilder newPushBuilder()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:org.apache.catalina.servlet4preview.http.PushBuilder newPushBuilder(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.rewrite.ResolverImpl:java.lang.String resolve(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.AbstractAccessLogValve$HostElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteHost()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int available()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.InputBuffer:boolean ready()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:boolean ready()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Integer run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.rewrite.RewriteValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AbstractAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteCIDRValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.LoadBalancerDrainingValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isAsyncStarted()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.connector.RequestFacade:boolean isAsyncStarted()",
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext getAsyncContext()",
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapResponse(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationRequest:void <init>(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.valves.AbstractAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.AbstractAccessLogValve$RequestAttributeElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.valves.AbstractAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setRequest(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.catalina.valves.AbstractAccessLogValve$PortElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.AbstractAccessLogValve$ProtocolElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void setRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void <init>(javax.servlet.http.HttpServletRequest,org.apache.catalina.Context,boolean)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:javax.servlet.RequestDispatcher run()",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Enumeration getAttributeNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getAttributeNames()",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.util.Enumeration run()"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.AbstractAccessLogValve$ByteSentElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.valves.rewrite.ResolverImpl:java.lang.String resolveEnv(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.AbstractAccessLogValve$RemoteAddrElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void doDispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.SSLAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isFinished()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:boolean isFinished()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:boolean isReady()",
            "org.apache.catalina.connector.CoyoteInputStream:boolean isFinished()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalName()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:int getRemotePort()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo:boolean validate(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:java.lang.String generateNonce(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteCIDRValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void dispatch()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteInputStream:void checkNonBlockingRead()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])",
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)",
            "org.apache.catalina.connector.CoyoteInputStream:int read(java.nio.ByteBuffer)",
            "org.apache.catalina.connector.CoyoteInputStream:int read()"
        ]
    },
    "org.apache.catalina.connector.Request:void parseParts(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()",
            "org.apache.catalina.connector.Request:java.util.Collection getParts()"
        ]
    },
    "org.apache.catalina.connector.Request:void finishRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:void parseParameters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()",
            "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddrForwarded()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteInputStream:void setReadListener(javax.servlet.ReadListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:int getLocalPort()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpUpgradeHandler upgrade(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$4:void failed(java.lang.Throwable,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper:org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SendfileDataBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$4:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.coyote.AbstractProcessor:void executeDispatches()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.AbstractProcessor:void processSocketEvent(org.apache.tomcat.util.net.SocketEvent,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void doTimeoutAsync()",
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.AbstractProcessor:void setErrorState(org.apache.coyote.ErrorState,java.lang.Throwable)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint$Poller:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint$Sendfile:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Acceptor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.Http11Processor:void registerReadInterest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:boolean isReadyForRead()"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void registerReadInterest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:boolean isReadyForRead()"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:void setReadListener(javax.servlet.ReadListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.AbstractProtocol$ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.coyote.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void processWrites()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState upgradeDispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:boolean isReadyForWrite()"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flushInternal(boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void onWritePossible()",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer:void registerWriteInterest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:boolean flushBufferedWrite()"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void setWriteListener(javax.servlet.WriteListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper:void registerReadInterest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void registerReadInterest()",
            "org.apache.coyote.ajp.AjpProcessor:void registerReadInterest()",
            "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:void setReadListener(javax.servlet.ReadListener)",
            "org.apache.coyote.AbstractProtocol$ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.coyote.AbstractProtocol$ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.coyote.Processor)",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper:void registerWriteInterest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void processWrites()",
            "org.apache.coyote.http11.Http11OutputBuffer:boolean isReady()",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flushInternal(boolean,boolean)",
            "org.apache.coyote.http11.Http11OutputBuffer:void registerWriteInterest()",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void setWriteListener(javax.servlet.WriteListener)",
            "org.apache.tomcat.util.net.SocketWrapperBase:boolean isReadyForWrite()",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void doRun()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$1:void failed(java.lang.Throwable,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void realWriteBytes(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void appendByteBuffer(java.nio.ByteBuffer)",
            "org.apache.catalina.connector.OutputBuffer:void appendByteArray(byte[],int,int)",
            "org.apache.catalina.connector.OutputBuffer:void flushByteBuffer()"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter:void end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void end()",
            "org.apache.coyote.http11.Http11OutputBuffer:void end()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void end()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void end()",
            "org.apache.coyote.http2.Http2OutputBuffer:void end()"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer:void end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void finishResponse()",
            "org.apache.coyote.http11.Http11Processor:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityOutputFilter:void end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void end()",
            "org.apache.coyote.http11.Http11OutputBuffer:void end()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void end()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void end()"
        ]
    },
    "org.apache.coyote.http11.filters.VoidOutputFilter:void end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void end()",
            "org.apache.coyote.http11.Http11OutputBuffer:void end()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void end()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void end()"
        ]
    },
    "org.apache.coyote.http2.Http2OutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable,boolean)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:boolean checkError()"
        ]
    },
    "org.apache.catalina.connector.Response:void flushBuffer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade:void flushBuffer()",
            "org.apache.catalina.connector.ResponseFacade$1:java.lang.Void run()",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Response:void sendRedirect(java.lang.String,int)"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void checkRegisterForWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(int)",
            "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
            "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)",
            "org.apache.catalina.connector.CoyoteOutputStream:void write(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:boolean isReady()",
            "org.apache.catalina.connector.CoyoteOutputStream:boolean checkNonBlockingWrite()"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void setWriteListener(javax.servlet.WriteListener)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:org.apache.catalina.servlet4preview.http.PushBuilder newPushBuilder()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteReader:boolean ready()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int available()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean isAsyncStarted()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapResponse(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.AsyncContext getAsyncContext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext getAsyncContext()",
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapResponse(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void unwrapResponse(org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.core.ApplicationRequest:void <init>(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void <init>(javax.servlet.http.HttpServletRequest,org.apache.catalina.Context,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:javax.servlet.RequestDispatcher run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getAttributeNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.util.Enumeration run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doDispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.tomcat.util.descriptor.web.ErrorPage)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doDispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void access$200(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:boolean isFinished()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean restoreRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int makeAvailable()",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:byte readByte()",
            "org.apache.catalina.connector.Request:int readPostBody(byte[],int)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:java.util.Collection getParts()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.http.Part getPart(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade:java.util.Collection getParts()"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()",
            "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.util.Enumeration run()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.String[] run()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.String run()"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:int fillReadBuffer(boolean,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Integer,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:boolean flushNonBlockingInternal(boolean)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SendfileDataBase)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1:void completed(java.lang.Integer,org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)",
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void completed(java.lang.Integer,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$3:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Integer,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$4:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$4:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel:void write(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:boolean flushNonBlockingInternal(boolean)",
            "org.apache.tomcat.util.net.SecureNio2Channel$4:void completed(java.lang.Integer,java.lang.Object)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$VectoredIOCompletionHandler:void completed(java.lang.Long,org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$OperationState)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4:void completed(java.lang.Long,java.nio.ByteBuffer[])",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3:void completed(java.lang.Integer,java.nio.ByteBuffer)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:org.apache.tomcat.util.net.SocketWrapperBase$CompletionState write(java.nio.ByteBuffer[],int,int,org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode,long,java.util.concurrent.TimeUnit,java.lang.Object,org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck,java.nio.channels.CompletionHandler)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$4:void completed(java.lang.Integer,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$4:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.coyote.AbstractProcessor:void doTimeoutAsync()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void timeoutAsync(long)"
        ]
    },
    "org.apache.coyote.AbstractProcessor:boolean isReadyForRead()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState upgradeDispatch(org.apache.tomcat.util.net.SocketEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:boolean isReadyForWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void onWritePossible()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal:void close()",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void onError(java.lang.Throwable)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.Http11Processor:boolean flushBufferedWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.tomcat.util.net.SocketWrapperBase:boolean isReadyForWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void onWritePossible()",
            "org.apache.coyote.ajp.AjpProcessor:boolean isReadyForWrite()",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:boolean isReady()"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void appendByteBuffer(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void append(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void appendByteArray(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void append(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void flushByteBuffer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void writeBytes(byte[],int,int)",
            "org.apache.catalina.connector.OutputBuffer:void append(java.nio.ByteBuffer)",
            "org.apache.catalina.connector.OutputBuffer:void realWriteChars(java.nio.CharBuffer)",
            "org.apache.catalina.connector.OutputBuffer:void writeByte(int)",
            "org.apache.catalina.connector.OutputBuffer:void writeBytes(java.nio.ByteBuffer)",
            "org.apache.catalina.connector.OutputBuffer:void append(byte[],int,int)",
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)"
        ]
    },
    "org.apache.coyote.http2.Http2OutputBuffer:void end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:void finishResponse()"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void finishResponse()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:boolean checkError()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade:void flushBuffer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade$1:java.lang.Void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade$1:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.Response:void sendRedirect(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Response:void sendRedirect(java.lang.String)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean doAuthenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.realm.RealmBase:boolean hasUserDataPermission(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.tomcat.util.descriptor.web.SecurityConstraint[])"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteOutputStream:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteOutputStream:boolean checkNonBlockingWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(int)",
            "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
            "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)",
            "org.apache.catalina.connector.CoyoteOutputStream:void write(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext getAsyncContext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapResponse(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getAttributeNames()"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.tomcat.util.descriptor.web.ErrorPage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$200(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$AsyncRunnable:void run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.tomcat.util.descriptor.web.ErrorPage)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int makeAvailable()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:long skip(long)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:byte readByte()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean readBoundary()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:java.lang.String readHeaders()"
        ]
    },
    "org.apache.catalina.connector.Request:int readPostBody(byte[],int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.Part getPart(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.Part getPart(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Collection getParts()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:java.util.Map getParameterMap()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.util.Map run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.util.Enumeration run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.String[] run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement:void addElement(java.io.CharArrayWriter,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.String run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:int fillReadBuffer(boolean,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:int fillReadBuffer(boolean)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:int read(boolean,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:boolean flushNonBlockingInternal(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:boolean flushNonBlocking()",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void writeNonBlocking(byte[],int,int)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:boolean isReadyForWrite()",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void writeNonBlockingInternal(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SendfileDataBase)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$3:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$VectoredIOCompletionHandler:void completed(java.lang.Long,org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$OperationState)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$VectoredIOCompletionHandler:void completed(java.lang.Object,java.lang.Object)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:org.apache.tomcat.util.net.SocketWrapperBase$CompletionState read(java.nio.ByteBuffer[],int,int,org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode,long,java.util.concurrent.TimeUnit,java.lang.Object,org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck,java.nio.channels.CompletionHandler)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:org.apache.tomcat.util.net.SocketWrapperBase$CompletionState write(java.nio.ByteBuffer[],int,int,org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode,long,java.util.concurrent.TimeUnit,java.lang.Object,org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$4:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.AbstractProcessor:void timeoutAsync(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessorLight:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessorLight:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void onError(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flushInternal(boolean,boolean)",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void onWritePossible()"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean isReadyForWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.OutputBuffer:void append(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void writeBytes(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void append(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void writeBytes(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void writeBytes(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void write(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void realWriteChars(java.nio.CharBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void flushCharBuffer()",
            "org.apache.catalina.connector.OutputBuffer:void append(char[],int,int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void writeByte(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void writeBytes(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void write(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:void finishResponse()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade$1:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade:void flushBuffer()"
        ]
    },
    "org.apache.catalina.connector.Response:void sendRedirect(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.rewrite.RewriteValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.ResponseFacade:void sendRedirect(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.realm.RealmBase:boolean hasUserDataPermission(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.tomcat.util.descriptor.web.SecurityConstraint[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1:void raiseError(long,long)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:long skip(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean readBoundary()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean skipPreamble()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:java.lang.String readHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.Part getPart(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.util.Map run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:int fillReadBuffer(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:int read(boolean,byte[],int,int)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:boolean isReadyForRead()",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void registerReadInterest()",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:int read(boolean,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:int read(boolean,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:boolean fill(boolean)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:boolean flushNonBlocking()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SocketWrapperBase:boolean flush(boolean)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void writeNonBlocking(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SocketWrapperBase:void write(boolean,byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:boolean isReadyForWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void onWritePossible()",
            "org.apache.coyote.ajp.AjpProcessor:boolean isReadyForWrite()",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:boolean isReady()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void writeNonBlockingInternal(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void writeNonBlocking(java.nio.ByteBuffer)",
            "org.apache.tomcat.util.net.WriteBuffer:boolean write(org.apache.tomcat.util.net.SocketWrapperBase,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$VectoredIOCompletionHandler:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$2:void completed(java.lang.Integer,java.lang.Object)",
            "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)",
            "org.apache.tomcat.util.net.SecureNio2Channel$4:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:org.apache.tomcat.util.net.SocketWrapperBase$CompletionState read(java.nio.ByteBuffer[],int,int,org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode,long,java.util.concurrent.TimeUnit,java.lang.Object,org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.OutputBuffer:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void flushCharBuffer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void write(java.lang.String,int,int)",
            "org.apache.catalina.connector.OutputBuffer:void append(char[],int,int)",
            "org.apache.catalina.connector.OutputBuffer:void close()",
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)",
            "org.apache.catalina.connector.OutputBuffer:void write(int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void append(char[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void write(char[],int,int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void write(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:void sendRedirect(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl:void close()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1:void raiseError(long,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean skipPreamble()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean hasNext()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase,org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:int read(boolean,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read(byte[],int,int)",
            "org.apache.coyote.ajp.AjpProcessor:boolean read(byte[],int,int,boolean)",
            "org.apache.coyote.http2.Http2UpgradeHandler:boolean fill(boolean,byte[],int,int)",
            "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int readInternal()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:boolean isReadyForRead()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:boolean isReady()",
            "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:void onDataAvailable()"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:boolean fill(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus parseHeader()",
            "org.apache.coyote.http11.Http11InputBuffer:org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus skipLine()",
            "org.apache.coyote.http11.Http11InputBuffer:int available(boolean)",
            "org.apache.coyote.http11.Http11InputBuffer:boolean access$300(org.apache.coyote.http11.Http11InputBuffer,boolean)",
            "org.apache.coyote.http11.Http11InputBuffer:boolean parseRequestLine(boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SocketWrapperBase:boolean flush(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeBody(org.apache.coyote.http2.Stream,java.nio.ByteBuffer,int,boolean)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeWindowUpdate(org.apache.coyote.http2.Stream,int,boolean)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void sendStreamReset(org.apache.coyote.http2.StreamException)",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void flushInternal(boolean,boolean)",
            "org.apache.coyote.http2.Http2UpgradeHandler$PingManager:void receivePing(byte[],boolean)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void doWriteHeaders(org.apache.coyote.http2.Stream,int,org.apache.tomcat.util.http.MimeHeaders,boolean,int)",
            "org.apache.coyote.ajp.AjpProcessor:boolean flushBufferedWrite()",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.ajp.AjpProcessor:void flush()",
            "org.apache.coyote.http2.Http2UpgradeHandler:void processWrites()",
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeGoAwayFrame(int,long,byte[])",
            "org.apache.coyote.ajp.AjpProcessor:void writeData(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http2.Http2UpgradeHandler$PingManager:void sendPing(boolean)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void settingsEnd(boolean)",
            "org.apache.coyote.ajp.AjpProcessor:void finishResponse()",
            "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer:void flush()",
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeSettings()",
            "org.apache.coyote.ajp.AjpProcessor:void prepareResponse()",
            "org.apache.coyote.ajp.AjpProcessor:boolean refillReadBuffer(boolean)",
            "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer:void end()",
            "org.apache.coyote.ajp.AjpProcessor:void writeData(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.Http11OutputBuffer:boolean flushBuffer(boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SocketWrapperBase:void write(boolean,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeBody(org.apache.coyote.http2.Stream,java.nio.ByteBuffer,int,boolean)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeWindowUpdate(org.apache.coyote.http2.Stream,int,boolean)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void sendStreamReset(org.apache.coyote.http2.StreamException)",
            "org.apache.coyote.http2.Http2UpgradeHandler$PingManager:void receivePing(byte[],boolean)",
            "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void doWriteHeaders(org.apache.coyote.http2.Stream,int,org.apache.tomcat.util.http.MimeHeaders,boolean,int)",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void writeInternal(byte[],int,int)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.ajp.AjpProcessor:void flush()",
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeGoAwayFrame(int,long,byte[])",
            "org.apache.coyote.ajp.AjpProcessor:void writeData(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http2.Http2UpgradeHandler$PingManager:void sendPing(boolean)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void settingsEnd(boolean)",
            "org.apache.coyote.http11.Http11OutputBuffer:void sendAck()",
            "org.apache.coyote.ajp.AjpProcessor:void finishResponse()",
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeSettings()",
            "org.apache.coyote.ajp.AjpProcessor:void prepareResponse()",
            "org.apache.coyote.ajp.AjpProcessor:boolean refillReadBuffer(boolean)",
            "org.apache.coyote.ajp.AjpProcessor:void writeData(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void writeNonBlocking(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SocketWrapperBase:void write(boolean,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.net.WriteBuffer:boolean write(org.apache.tomcat.util.net.SocketWrapperBase,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SocketWrapperBase:boolean flushNonBlocking()",
            "org.apache.tomcat.util.net.SocketWrapperBase:void flushBlocking()"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$2:void completed(java.lang.Integer,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel$2:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$VectoredIOCompletionHandler:void completed(java.lang.Long,org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$OperationState)",
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:org.apache.tomcat.util.net.SocketWrapperBase$CompletionState read(java.nio.ByteBuffer[],int,int,org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode,long,java.util.concurrent.TimeUnit,java.lang.Object,org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck,java.nio.channels.CompletionHandler)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void write(java.lang.String,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void write(java.lang.String)",
            "org.apache.catalina.connector.CoyoteWriter:void write(java.lang.String,int,int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void write(int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void write(char[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void write(char[])",
            "org.apache.catalina.connector.CoyoteWriter:void write(char[],int,int)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.IOUtils:void closeQuietly(java.io.Closeable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:byte[] get()",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void write(java.io.File)",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase,org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean hasNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:org.apache.tomcat.util.http.fileupload.FileItemStream next()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase,org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean read(byte[],int,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:boolean readMessage(org.apache.coyote.ajp.AjpMessage,boolean)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:boolean fill(boolean,byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:boolean fill(boolean,java.nio.ByteBuffer,int)",
            "org.apache.coyote.http2.Http2UpgradeHandler:boolean fill(boolean,byte[])",
            "org.apache.coyote.http2.Http2Parser:void swallow(int,int,boolean)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int readInternal()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int readLine(byte[],int,int)",
            "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:boolean isReady()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:void onDataAvailable()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus parseHeader()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:boolean parseHeaders()"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus skipLine()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus parseHeader()"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:int available(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:int available(boolean)"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:boolean access$300(org.apache.coyote.http11.Http11InputBuffer,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.Http11InputBuffer$SocketInputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:boolean parseRequestLine(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void writeBody(org.apache.coyote.http2.Stream,java.nio.ByteBuffer,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream$StreamOutputBuffer:boolean flush(boolean,boolean)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void writeWindowUpdate(org.apache.coyote.http2.Stream,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream$StreamInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void swallowedPadding(int,int)",
            "org.apache.coyote.http2.Stream$StreamInputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void sendStreamReset(org.apache.coyote.http2.StreamException)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream:void close(org.apache.coyote.http2.Http2Exception)",
            "org.apache.coyote.http2.StreamProcessor:void endRequest()",
            "org.apache.coyote.http2.Http2UpgradeHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState upgradeDispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler$PingManager:void receivePing(byte[],boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void pingReceive(byte[],boolean)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void doWriteHeaders(org.apache.coyote.http2.Stream,int,org.apache.tomcat.util.http.MimeHeaders,boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeHeaders(org.apache.coyote.http2.Stream,int,org.apache.tomcat.util.http.MimeHeaders,boolean,int)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void writeGoAwayFrame(int,long,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void closeConnection(org.apache.coyote.http2.Http2Exception)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void pause()",
            "org.apache.coyote.http2.Http2UpgradeHandler:void checkPauseState()"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void writeData(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:void access$600(org.apache.coyote.ajp.AjpProcessor,org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler$PingManager:void sendPing(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void init(javax.servlet.http.WebConnection)",
            "org.apache.coyote.http2.Http2UpgradeHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState upgradeDispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void settingsEnd(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:void readSettingsFrame(int,int)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void finishResponse()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void flush()",
            "org.apache.coyote.http11.Http11OutputBuffer:void flush()"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void writeSettings()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void init(javax.servlet.http.WebConnection)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void prepareResponse()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean refillReadBuffer(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:int available(boolean)",
            "org.apache.coyote.ajp.AjpProcessor$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.ajp.AjpProcessor:void finishResponse()",
            "org.apache.coyote.ajp.AjpProcessor$SocketInputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer:void end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void end()",
            "org.apache.coyote.http11.Http11OutputBuffer:void end()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void end()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void end()"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void writeData(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:void access$900(org.apache.coyote.ajp.AjpProcessor,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer:boolean flushBuffer(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:boolean flushBufferedWrite()",
            "org.apache.coyote.http11.Http11OutputBuffer:void sendAck()"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.Http11OutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void writeInternal(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(int)",
            "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer:void sendAck()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void ack()"
        ]
    },
    "org.apache.tomcat.util.net.SocketWrapperBase:void write(boolean,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void writeBody(org.apache.coyote.http2.Stream,java.nio.ByteBuffer,int,boolean)",
            "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http2.Http2UpgradeHandler:void doWriteHeaders(org.apache.coyote.http2.Stream,int,org.apache.tomcat.util.http.MimeHeaders,boolean,int)",
            "org.apache.coyote.http11.Http11OutputBuffer:void commit()"
        ]
    },
    "org.apache.tomcat.util.net.SocketWrapperBase:boolean flushNonBlocking()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SocketWrapperBase:boolean flush(boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SocketWrapperBase:void flushBlocking()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void flushBlocking()",
            "org.apache.tomcat.util.net.SocketWrapperBase:boolean flush(boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNio2Channel$2:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNio2Channel:void read(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,java.lang.Object,java.nio.channels.CompletionHandler)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void write(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void write(java.lang.String,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void write(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void print(char)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void write(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void write(char[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void write(char[])"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:int readBodyData(java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:byte[] get()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:java.lang.String getString()",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:java.lang.String getString(java.lang.String)",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void write(java.io.File)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void write(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:org.apache.tomcat.util.http.fileupload.FileItemStream next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParts(boolean)",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.Map parseParameterMap(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)",
            "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean readMessage(org.apache.coyote.ajp.AjpMessage,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:boolean receive(boolean)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:boolean fill(boolean,java.nio.ByteBuffer,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:void readDataFrame(int,int,int)",
            "org.apache.coyote.http2.Http2Parser:void readHeaderPayload(int,int)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:boolean fill(boolean,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:void readPriorityFrame(int)",
            "org.apache.coyote.http2.Http2Parser:void readHeadersFrame(int,int,int)",
            "org.apache.coyote.http2.Http2Parser:void readSettingsFrame(int,int)",
            "org.apache.coyote.http2.Http2Parser:void readRstFrame(int)",
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)",
            "org.apache.coyote.http2.Http2Parser:void readPingFrame(int)",
            "org.apache.coyote.http2.Http2Parser:void readGoawayFrame(int)",
            "org.apache.coyote.http2.Http2Parser:void readDataFrame(int,int,int)",
            "org.apache.coyote.http2.Http2Parser:void readConnectionPreface()",
            "org.apache.coyote.http2.Http2Parser:void readWindowUpdateFrame(int)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void swallow(int,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:void readHeadersFrame(int,int,int)",
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)",
            "org.apache.coyote.http2.Http2Parser:void readUnknownFrame(int,org.apache.coyote.http2.FrameType,int,int)",
            "org.apache.coyote.http2.Http2Parser:void readDataFrame(int,int,int)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int readLine(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletInputStream:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.Http11InputBuffer:boolean parseHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:int available(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.AbstractProcessor:boolean isReadyForRead()"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.Http11InputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer$SocketInputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamOutputBuffer:boolean flush(boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream$StreamOutputBuffer:boolean flush(boolean)",
            "org.apache.coyote.http2.Stream$StreamOutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http2.Stream$StreamOutputBuffer:boolean writeFromBuffer(java.nio.ByteBuffer,boolean)",
            "org.apache.coyote.http2.Stream$StreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void swallowedPadding(int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:void readDataFrame(int,int,int)"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamInputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"
        ]
    },
    "org.apache.coyote.http2.Stream:void close(org.apache.coyote.http2.Http2Exception)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:void process(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState service(org.apache.tomcat.util.net.SocketWrapperBase)",
            "org.apache.coyote.http2.StreamProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatchEndRequest()"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void pingReceive(byte[],boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:void readPingFrame(int)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void writeHeaders(org.apache.coyote.http2.Stream,int,org.apache.tomcat.util.http.MimeHeaders,boolean,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream:void writeAck()",
            "org.apache.coyote.http2.Http2UpgradeHandler:void push(org.apache.coyote.Request,org.apache.coyote.http2.Stream)",
            "org.apache.coyote.http2.Stream:void writeHeaders()"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void closeConnection(org.apache.coyote.http2.Http2Exception)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream:void close(org.apache.coyote.http2.Http2Exception)",
            "org.apache.coyote.http2.Http2UpgradeHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState upgradeDispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void pause()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal:void pause()"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void checkPauseState()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:org.apache.coyote.http2.HpackDecoder$HeaderEmitter headersStart(int,boolean)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void access$600(org.apache.coyote.ajp.AjpProcessor,org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void init(javax.servlet.http.WebConnection)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapperBase,org.apache.tomcat.util.net.SocketEvent)",
            "org.apache.coyote.http2.Http2UpgradeHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState upgradeDispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readSettingsFrame(int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void flush()",
            "org.apache.coyote.http2.Http2OutputBuffer:void flush()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void flush()",
            "org.apache.coyote.http11.Http11OutputBuffer:void flush()"
        ]
    },
    "org.apache.coyote.http11.filters.VoidOutputFilter:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void flush()",
            "org.apache.coyote.http11.Http11OutputBuffer:void flush()"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityOutputFilter:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void flush()",
            "org.apache.coyote.http11.Http11OutputBuffer:void flush()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.VoidOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:void flush()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:void flush()",
            "org.apache.coyote.http11.Http11OutputBuffer:void flush()"
        ]
    },
    "org.apache.coyote.http11.Http11OutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void flush()"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:int available(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.ajp.AjpProcessor:void dispatchNonBlockingRead()",
            "org.apache.coyote.AbstractProcessor:boolean isReadyForRead()"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor$SocketInputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void access$900(org.apache.coyote.ajp.AjpProcessor,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.Http11OutputBuffer:void commit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void prepareResponse()"
        ]
    },
    "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper:void flushBlocking()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.SocketWrapperBase:boolean flush(boolean)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void write(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void print(float)",
            "org.apache.catalina.connector.CoyoteWriter:void print(double)",
            "org.apache.catalina.connector.CoyoteWriter:void print(long)",
            "org.apache.catalina.valves.ErrorReportValve:void report(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.connector.CoyoteWriter:void print(boolean)",
            "org.apache.catalina.connector.CoyoteWriter:void print(int)",
            "org.apache.catalina.connector.CoyoteWriter:void print(java.lang.Object)",
            "org.apache.catalina.connector.CoyoteWriter:void print(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void print(char)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println(char)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void write(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println()",
            "org.apache.catalina.connector.CoyoteWriter:void print(char[])"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:int readBodyData(java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:int discardBodyData()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:java.lang.String getString()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:java.lang.String getString(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.Map parseParameterMap(org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:java.util.Map parseParameterMap(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean receive(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:boolean refillReadBuffer(boolean)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readDataFrame(int,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readHeaderPayload(int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:void readHeadersFrame(int,int,int)",
            "org.apache.coyote.http2.Http2Parser:void readContinuationFrame(int,int,int)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readPriorityFrame(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readHeadersFrame(int,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readRstFrame(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean)",
            "org.apache.coyote.http2.Http2Parser:void readConnectionPreface()"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readPingFrame(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readGoawayFrame(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readConnectionPreface()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:void init(javax.servlet.http.WebConnection)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readWindowUpdateFrame(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:void readUnknownFrame(int,org.apache.coyote.http2.FrameType,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.Http11InputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"
        ]
    },
    "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamOutputBuffer:boolean flush(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream$StreamOutputBuffer:void end()",
            "org.apache.coyote.http2.Stream:boolean flush(boolean)",
            "org.apache.coyote.http2.Stream$StreamOutputBuffer:void flush()"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamOutputBuffer:int doWrite(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2OutputBuffer:int doWrite(java.nio.ByteBuffer)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamOutputBuffer:boolean writeFromBuffer(java.nio.ByteBuffer,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.WriteBuffer:boolean write(org.apache.tomcat.util.net.WriteBuffer$Sink,boolean)"
        ]
    },
    "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int realReadBytes()"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatchEndRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http2.Stream:void writeAck()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:void ack()"
        ]
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:void push(org.apache.coyote.Request,org.apache.coyote.http2.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream$PrivilegedPush:java.lang.Void run()",
            "org.apache.coyote.http2.Stream:void push(org.apache.coyote.http2.Http2UpgradeHandler,org.apache.coyote.Request,org.apache.coyote.http2.Stream)"
        ]
    },
    "org.apache.coyote.http2.Stream:void writeHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:void prepareResponse()"
        ]
    },
    "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal:void pause()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http2.Http2UpgradeHandler:org.apache.coyote.http2.HpackDecoder$HeaderEmitter headersStart(int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:void readHeadersFrame(int,int,int)"
        ]
    },
    "org.apache.coyote.http2.Http2OutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:void flush()"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void dispatchNonBlockingRead()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void prepareResponse()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void print(float)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println(float)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void print(double)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println(double)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void print(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println(long)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void print(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println(boolean)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void print(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println(int)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void print(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println(java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void print(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Response:void sendRedirect(java.lang.String,int)",
            "org.apache.catalina.connector.CoyoteWriter:void println(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void println(char)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void println()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println(double)",
            "org.apache.catalina.connector.CoyoteWriter:void println(int)",
            "org.apache.catalina.connector.CoyoteWriter:void println(char)",
            "org.apache.catalina.connector.CoyoteWriter:void println(boolean)",
            "org.apache.catalina.connector.CoyoteWriter:void println(float)",
            "org.apache.catalina.connector.CoyoteWriter:void println(long)",
            "org.apache.catalina.connector.CoyoteWriter:void println(java.lang.String)",
            "org.apache.catalina.connector.CoyoteWriter:void println(java.lang.Object)",
            "org.apache.catalina.connector.CoyoteWriter:void println(char[])"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void print(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void println(char[])"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:int discardBodyData()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean skipPreamble()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:java.util.Map parseParameterMap(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http2.Http2Parser:void readContinuationFrame(int,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean,org.apache.coyote.http2.FrameType)"
        ]
    },
    "org.apache.coyote.http2.Http2Parser:boolean readFrame(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Http2UpgradeHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState upgradeDispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()",
            "org.apache.coyote.http11.Http11Processor:void setRequestBody(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void sslReHandShake()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseEndChunk()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.Http11InputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.Http11InputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void endRequest()"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamOutputBuffer:void end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void end()",
            "org.apache.coyote.http2.Http2OutputBuffer:void end()"
        ]
    },
    "org.apache.coyote.http2.Stream:boolean flush(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:boolean flushBufferedWrite()"
        ]
    },
    "org.apache.coyote.http2.Stream$StreamOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:void flush()",
            "org.apache.coyote.http2.Http2OutputBuffer:void flush()"
        ]
    },
    "org.apache.tomcat.util.net.WriteBuffer:boolean write(org.apache.tomcat.util.net.WriteBuffer$Sink,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream$StreamOutputBuffer:boolean flush(boolean)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int realReadBytes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:boolean checkByteBufferEof()",
            "org.apache.catalina.connector.InputBuffer:int realReadChars()",
            "org.apache.tomcat.util.buf.B2CConverter:void convert(java.nio.ByteBuffer,java.nio.CharBuffer,org.apache.tomcat.util.buf.ByteChunk$ByteInputChannel,boolean)"
        ]
    },
    "org.apache.coyote.http2.Stream$PrivilegedPush:java.lang.Void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream$PrivilegedPush:java.lang.Object run()"
        ]
    },
    "org.apache.coyote.http2.Stream:void push(org.apache.coyote.http2.Http2UpgradeHandler,org.apache.coyote.Request,org.apache.coyote.http2.Stream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream:void push(org.apache.coyote.Request)"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:void prepareResponse()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void println(float)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void println(double)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void println(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void println(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void println(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void println(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void println(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:void println(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.Http11Processor:void setRequestBody(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void sslReHandShake()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseEndChunk()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11InputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http2.StreamProcessor:boolean flushBufferedWrite()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState dispatch(org.apache.tomcat.util.net.SocketEvent)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:boolean checkByteBufferEof()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int readByte()",
            "org.apache.catalina.connector.InputBuffer:int read(java.nio.ByteBuffer)",
            "org.apache.catalina.connector.InputBuffer:int read(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int realReadChars()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:long skip(long)",
            "org.apache.catalina.connector.InputBuffer:boolean checkCharBufferEof()"
        ]
    },
    "org.apache.tomcat.util.buf.B2CConverter:void convert(java.nio.ByteBuffer,java.nio.CharBuffer,org.apache.tomcat.util.buf.ByteChunk$ByteInputChannel,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int realReadChars()"
        ]
    },
    "org.apache.coyote.http2.Stream$PrivilegedPush:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.Stream:void push(org.apache.coyote.http2.Http2UpgradeHandler,org.apache.coyote.Request,org.apache.coyote.http2.Stream)"
        ]
    },
    "org.apache.coyote.http2.Stream:void push(org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http2.StreamProcessor:void doPush(org.apache.coyote.Request)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int readByte()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read()",
            "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Integer run()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$5:java.lang.Integer run()",
            "org.apache.catalina.connector.CoyoteInputStream:int read(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])",
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)",
            "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Integer run()",
            "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Integer run()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:long skip(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:long skip(long)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:boolean checkCharBufferEof()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int read()",
            "org.apache.catalina.connector.InputBuffer:int read(char[],int,int)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Integer run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$5:java.lang.Integer run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$5:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Integer run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Integer run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:long skip(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:int read()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read(char[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:int read(char[])",
            "org.apache.catalina.connector.InputBuffer:int read(char[])",
            "org.apache.catalina.connector.CoyoteReader:int read(char[],int,int)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$5:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteReader:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:int read(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.InputBuffer:int read(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteReader:int read(char[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.http11.Http11Processor:void addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()"
        ]
    }
}
{
    "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection,org.apache.activemq.command.SessionInfo,boolean)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection,org.apache.activemq.command.SessionInfo,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection,org.apache.activemq.command.SessionInfo)",
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void addSessions(org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection,java.util.Set)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession addSession(org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection,org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.command.Response processAddSession(org.apache.activemq.command.SessionInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void addSessions(org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection,java.util.Set)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void addConnection(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.command.Response processAddSession(org.apache.activemq.command.SessionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()"
        ],
        "vulCaller": []
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireProtocolManager:void addConnection(org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConnectionContext,org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()"
        ],
        "vulCaller": [
            "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)"
        ]
    },
    "org.apache.activemq.artemis.core.protocol.openwire.OpenWireConnection:org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.activemq.artemis.core.protocol.openwire.amq.AMQSession:void initialize()"
        ],
        "vulCaller": []
    }
}
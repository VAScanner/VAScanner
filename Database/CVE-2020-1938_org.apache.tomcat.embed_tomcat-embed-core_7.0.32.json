{
    "org.apache.coyote.ajp.AjpNioProtocol:void <init>()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpNioProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.ajp.AjpProtocol:void <init>()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void <init>(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Connector:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": [
            "org.apache.catalina.startup.ConnectorCreateRule:void begin(java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()",
            "org.apache.catalina.connector.Connector:void <init>()",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.connector.Connector createConnector(java.lang.String,int,java.lang.String)"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProtocol:void <init>()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void <init>(java.lang.String)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()": {
        "isVulRoot": true,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpNioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AjpNioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.startup.ConnectorCreateRule:void begin(java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.startup.Tomcat:void start()"
        ]
    },
    "org.apache.catalina.connector.Connector:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.mbeans.ServiceMBean:void addConnector(java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.connector.Connector createConnector(java.lang.String,int,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.connector.Connector createConnector(java.lang.String,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": [
            "org.apache.catalina.startup.Embedded:org.apache.catalina.connector.Connector createConnector(java.net.InetAddress,int,java.lang.String)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.connector.Connector createConnector(java.lang.String,int,boolean)"
        ]
    },
    "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$SocketEventProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()",
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void init()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void start()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAjpConnector(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpConnector(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpsConnector(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.catalina.mbeans.ServiceMBean:void addConnector(java.lang.String,int,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.connector.Connector createConnector(java.net.InetAddress,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.connector.Connector createConnector(java.lang.String,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": [
            "org.apache.catalina.startup.Embedded:org.apache.catalina.connector.Connector createConnector(java.net.InetAddress,int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketEventProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAjpConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpsConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.connector.Connector createConnector(java.net.InetAddress,int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AjpProtocol:void <init>()",
            "org.apache.coyote.ajp.AjpAprProtocol:void <init>()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel,int)",
            "org.apache.coyote.ajp.AjpNioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void cometInterest(org.apache.tomcat.util.net.NioChannel)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.ajp.AjpNioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$PollerEvent:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void cometInterest(org.apache.tomcat.util.net.NioChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:boolean breakKeepAliveLoop(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void add(org.apache.tomcat.util.net.NioChannel)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor)",
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.ajp.AjpNioProtocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)",
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$PollerEvent:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.Http11NioProcessor:boolean breakKeepAliveLoop(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void longPoll(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AjpNioProtocol$AjpConnectionHandler:void release(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.Processor,boolean,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void complete()",
            "org.apache.catalina.core.AsyncContextImpl:void start(java.lang.Runnable)",
            "org.apache.catalina.connector.Request:java.lang.String getLocalAddr()",
            "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable)",
            "org.apache.catalina.connector.Request:java.lang.String getRemoteHost()",
            "org.apache.catalina.connector.InputBuffer:int available()",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.Request:boolean isAsyncDispatching()",
            "org.apache.catalina.connector.Request:boolean isAsync()",
            "org.apache.catalina.core.AsyncContextImpl:boolean isStarted()",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.connector.Request:void cometClose()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.AsyncContextImpl:void setTimeout(long)",
            "org.apache.catalina.core.AsyncContextImpl$1:void run()",
            "org.apache.catalina.connector.Request:int getRemotePort()",
            "org.apache.catalina.connector.Request:java.lang.String getLocalName()",
            "org.apache.catalina.connector.Request:void doUpgrade(org.apache.coyote.http11.upgrade.UpgradeInbound)",
            "org.apache.catalina.connector.Request:java.lang.String getRemoteAddr()",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.connector.Request:void finishRequest()",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.core.AsyncContextImpl:boolean timeout()",
            "org.apache.catalina.connector.Request:void checkSwallowInput()",
            "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()",
            "org.apache.catalina.core.AsyncContextImpl:void setStarted(org.apache.catalina.Context,javax.servlet.ServletRequest,javax.servlet.ServletResponse,boolean)",
            "org.apache.catalina.connector.Request:int getLocalPort()",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean restoreRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.connector.Request:void setCometTimeout(long)"
        ]
    },
    "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.Response:void reset()",
            "org.apache.coyote.Response:void sendHeaders()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.coyote.Response:void acknowledge()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void flush()",
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void finish()",
            "org.apache.coyote.Response:long getBytesWritten(boolean)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void complete()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:boolean timeout()",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void start(java.lang.Runnable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:java.lang.String getLocalAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalAddr()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getRemoteHost()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteHost()",
            "org.apache.catalina.valves.AccessLogValve$HostElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int available()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int available()",
            "org.apache.catalina.connector.InputBuffer:boolean ready()",
            "org.apache.catalina.connector.Request:boolean getAvailable()",
            "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Integer run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpNioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isAsyncDispatching()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isAsync()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:boolean isStarted()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:boolean isAsyncStarted()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve$LocalPortElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve$ProtocolElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.Request:java.util.Enumeration getAttributeNames()",
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.CometEventImpl:void setTimeout(int)",
            "org.apache.catalina.valves.AccessLogValve$ByteSentElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.connector.RequestFacade:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve$RemoteAddrElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve$HostElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:void cometClose()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CometEventImpl:void close()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setTimeout(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl$1:void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()"
        ]
    },
    "org.apache.catalina.connector.Request:int getRemotePort()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:int getRemotePort()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getLocalName()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalName()"
        ]
    },
    "org.apache.catalina.connector.Request:void doUpgrade(org.apache.coyote.http11.upgrade.UpgradeInbound)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:void doUpgrade(org.apache.coyote.http11.upgrade.UpgradeInbound)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.lang.String getRemoteHost()",
            "org.apache.catalina.authenticator.DigestAuthenticator:java.lang.String generateNonce(org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo:boolean validate(org.apache.catalina.connector.Request,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$RemoteAddrElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteAddr()",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:void finishRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CometEventImpl:void close()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.AsyncContextImpl:boolean timeout()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.connector.Request:void checkSwallowInput()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()",
            "org.apache.catalina.connector.Request:void parseParts()",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()"
        ]
    },
    "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.AsyncContextImpl:void setStarted(org.apache.catalina.Context,javax.servlet.ServletRequest,javax.servlet.ServletResponse,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.Request:int getLocalPort()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:int getLocalPort()"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean restoreRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.connector.Request:void setCometTimeout(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CometEventImpl:void setTimeout(int)"
        ]
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalOutputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.Response:void reset()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Response:void reset()",
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.Response:void sendHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.Response:void acknowledge()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Response:void sendAcknowledgement()"
        ]
    },
    "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioOutputBuffer:void flush()",
            "org.apache.coyote.http11.InternalOutputBuffer:void flush()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:void flush()"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void flush()",
            "org.apache.catalina.connector.OutputBuffer:void close()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.Response:void finish()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void close()"
        ]
    },
    "org.apache.coyote.Response:long getBytesWritten(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Response:long getBytesWritten(boolean)"
        ]
    },
    "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteHost()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$HostElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteInputStream:int available()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.InputBuffer:boolean ready()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:boolean ready()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean getAvailable()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Integer run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:boolean isAsyncStarted()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:boolean isAsyncStarted()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$LocalPortElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:javax.servlet.RequestDispatcher run()",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$ProtocolElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Enumeration getAttributeNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getAttributeNames()",
            "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.util.Enumeration run()"
        ]
    },
    "org.apache.catalina.connector.CometEventImpl:void setTimeout(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.AccessLogValve$ByteSentElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setRequest(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.AccessLogValve$RemoteAddrElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CometEventImpl:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:int getRemotePort()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalName()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:void doUpgrade(org.apache.coyote.http11.upgrade.UpgradeInbound)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:java.lang.String generateNonce(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo:boolean validate(org.apache.catalina.connector.Request,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void dispatch()"
        ]
    },
    "org.apache.catalina.connector.Request:void parseParameters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()",
            "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:void parseParts()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Collection getParts()",
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:int getLocalPort()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()"
        ]
    },
    "org.apache.catalina.connector.Response:void reset()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade:void reset()",
            "org.apache.catalina.connector.Response:void reset(int,java.lang.String)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Response:void sendAcknowledgement()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalAprOutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void flush()",
            "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
            "org.apache.catalina.connector.Response:void flushBuffer()",
            "org.apache.catalina.connector.Response:long getBytesWritten(boolean)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:void close()",
            "org.apache.catalina.connector.Response:void finishResponse()",
            "org.apache.catalina.connector.CoyoteOutputStream:void close()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.AbstractProtocol$AbstractConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void realWriteBytes(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.Response:long getBytesWritten(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$ByteSentElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:boolean ready()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int available()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean isAsyncStarted()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapResponse(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:javax.servlet.RequestDispatcher run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getAttributeNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.util.Enumeration run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doDispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationRequest:void <init>(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void doDispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void setRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void <init>(javax.servlet.http.HttpServletRequest,org.apache.catalina.Context,boolean)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync()"
        ]
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()",
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.util.Enumeration run()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.String[] run()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.String run()",
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Collection getParts()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.http.Part getPart(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade:java.util.Collection getParts()"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:void reset()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Response:void reset(int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:boolean checkError()"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void flush()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Response:void flushBuffer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade:void flushBuffer()",
            "org.apache.catalina.connector.ResponseFacade$1:java.lang.Void run()",
            "org.apache.catalina.connector.Response:void sendRedirect(java.lang.String)",
            "org.apache.catalina.connector.Request:void doUpgrade(org.apache.coyote.http11.upgrade.UpgradeInbound)",
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.Response:void finishResponse()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CometEventImpl:void close()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void realWriteBytes(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.buf.ByteChunk:void append(byte[],int,int)",
            "org.apache.tomcat.util.buf.ByteChunk:void flushBuffer()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void unwrapResponse(org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getAttributeNames()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doDispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void access$200(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.ApplicationRequest:void <init>(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void <init>(javax.servlet.http.HttpServletRequest,org.apache.catalina.Context,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:java.util.Map getParameterMap()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.util.Map run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.util.Enumeration run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.String[] run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.String run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.Part getPart(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.Part getPart(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Collection getParts()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteWriter:boolean checkError()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade:void flushBuffer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade$1:java.lang.Void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade$1:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.Response:void sendRedirect(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade:void sendRedirect(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.realm.RealmBase:boolean hasUserDataPermission(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.SecurityConstraint[])"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void append(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void writeBytes(byte[],int,int)",
            "org.apache.tomcat.util.buf.IntermediateOutputStream:void write(byte[],int,int)",
            "org.apache.tomcat.util.http.Parameters:void processParameters(byte[],int,int,java.nio.charset.Charset)",
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()",
            "org.apache.tomcat.util.buf.ByteChunk:void append(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.catalina.realm.JNDIRealm:boolean compareCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)",
            "org.apache.tomcat.util.buf.ByteChunk:int substract(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.InternalOutputBuffer:void commit()"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void flushBuffer()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.buf.ByteChunk:void append(byte[],int,int)",
            "org.apache.catalina.connector.OutputBuffer:void writeBytes(byte[],int,int)",
            "org.apache.coyote.http11.InternalOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalOutputBuffer:void flush()",
            "org.apache.tomcat.util.buf.ByteChunk:void append(byte)",
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$200(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$1:void run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.util.Map run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.Part getPart(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade$1:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade:void flushBuffer()"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:void sendRedirect(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.realm.RealmBase:boolean hasUserDataPermission(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.SecurityConstraint[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.OutputBuffer:void writeBytes(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void write(byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.buf.IntermediateOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.Parameters:void processParameters(byte[],int,int,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.Parameters:void processParameters(org.apache.tomcat.util.buf.MessageBytes,java.lang.String)",
            "org.apache.tomcat.util.http.Parameters:void processParameters(byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void append(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.tomcat.util.buf.MessageBytes:void duplicate(org.apache.tomcat.util.buf.MessageBytes)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:boolean compareCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:boolean checkCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:int substract(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void commit()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void append(byte)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.catalina.connector.OutputBuffer:void writeByte(int)",
            "org.apache.tomcat.util.buf.ByteChunk:void append(char)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:void processParameters(org.apache.tomcat.util.buf.MessageBytes,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.Parameters:void handleQueryParameters()"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:void processParameters(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)"
        ]
    },
    "org.apache.tomcat.util.buf.MessageBytes:void duplicate(org.apache.tomcat.util.buf.MessageBytes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)",
            "org.apache.tomcat.util.http.Parameters:void handleQueryParameters()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:boolean checkCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:long end()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseEndChunk()"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void writeByte(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(int)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void append(char)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:void handleQueryParameters()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.Parameters:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.connector.Request:void parseParameters()",
            "org.apache.tomcat.util.http.Parameters:java.util.Enumeration getParameterNames()",
            "org.apache.tomcat.util.http.Parameters:java.lang.String[] getParameterValues(java.lang.String)"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void prepareRequest()",
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11AprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:long end()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseEndChunk()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.Parameters:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:void prepareRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:long end()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:void endRequest()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()"
        ]
    },
    "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int realReadBytes(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseCRLF(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseCRLF()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int realReadBytes(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int realReadChars(char[],int,int)",
            "org.apache.tomcat.util.buf.ByteChunk:int substract(byte[],int,int)",
            "org.apache.catalina.connector.Request:boolean read()",
            "org.apache.tomcat.util.buf.ByteChunk:int substract()",
            "org.apache.tomcat.util.buf.ByteChunk:int substract(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseCRLF()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.InputBuffer:int realReadChars(char[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.buf.CharChunk:int substract(org.apache.tomcat.util.buf.CharChunk)",
            "org.apache.catalina.connector.InputBuffer:long skip(long)",
            "org.apache.tomcat.util.buf.CharChunk:int substract(char[],int,int)",
            "org.apache.tomcat.util.buf.CharChunk:int substract()"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:int substract(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.SavedRequestInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.tomcat.util.buf.IntermediateInputStream:int read(byte[],int,int)",
            "org.apache.catalina.connector.InputBuffer:int read(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:int substract()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int readByte()",
            "org.apache.tomcat.util.buf.IntermediateInputStream:int read()"
        ]
    },
    "org.apache.tomcat.util.buf.CharChunk:int substract(org.apache.tomcat.util.buf.CharChunk)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.InputBuffer:long skip(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:long skip(long)"
        ]
    },
    "org.apache.tomcat.util.buf.CharChunk:int substract(char[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int read(char[],int,int)"
        ]
    },
    "org.apache.tomcat.util.buf.CharChunk:int substract()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int read()"
        ]
    },
    "org.apache.coyote.http11.filters.SavedRequestInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()"
        ]
    },
    "org.apache.tomcat.util.buf.IntermediateInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.InputBuffer:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])",
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)",
            "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Integer run()",
            "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Integer run()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int readByte()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read()",
            "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Integer run()"
        ]
    },
    "org.apache.tomcat.util.buf.IntermediateInputStream:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteReader:long skip(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read(char[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:int read(char[])",
            "org.apache.catalina.connector.InputBuffer:int read(char[])",
            "org.apache.catalina.connector.CoyoteReader:int read(char[],int,int)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:int read()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean restoreRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int makeAvailable()",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:byte readByte()",
            "org.apache.catalina.connector.Request:int readPostBody(byte[],int)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Integer run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Integer run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Integer run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteReader:int read(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.InputBuffer:int read(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteReader:int read(char[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int makeAvailable()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:long skip(long)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:byte readByte()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean readBoundary()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:java.lang.String readHeaders()"
        ]
    },
    "org.apache.catalina.connector.Request:int readPostBody(byte[],int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Object run()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1:void raiseError(long,long)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:long skip(long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean readBoundary()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean skipPreamble()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:java.lang.String readHeaders()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1:void raiseError(long,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl:void close()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean skipPreamble()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean hasNext()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase,org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl:void close()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean hasNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:org.apache.tomcat.util.http.fileupload.FileItemStream next()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase,org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:int readBodyData(java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:org.apache.tomcat.util.http.fileupload.FileItemStream next()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)",
            "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:int readBodyData(java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:int discardBodyData()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParts()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:int discardBodyData()": {
        "isVulRoot": false,
        "srcRoot": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ],
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean skipPreamble()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    }
}
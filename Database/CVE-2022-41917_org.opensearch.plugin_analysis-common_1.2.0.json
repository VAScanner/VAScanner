{
    "org.opensearch.analysis.common.MappingCharFilterFactory:void parseRules(java.util.List,org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.MappingCharFilterFactory:void parseRules(java.util.List,org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder)",
            "org.opensearch.analysis.common.MappingCharFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ],
        "vulCaller": [
            "org.opensearch.analysis.common.MappingCharFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ]
    },
    "org.opensearch.analysis.common.MappingCharFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.MappingCharFilterFactory:void parseRules(java.util.List,org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder)",
            "org.opensearch.analysis.common.MappingCharFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ],
        "vulCaller": []
    },
    "org.opensearch.analysis.common.StemmerOverrideTokenFilterFactory:void parseRules(java.util.List,org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.StemmerOverrideTokenFilterFactory:void parseRules(java.util.List,org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder,java.lang.String)",
            "org.opensearch.analysis.common.StemmerOverrideTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ],
        "vulCaller": [
            "org.opensearch.analysis.common.StemmerOverrideTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ]
    },
    "org.opensearch.analysis.common.StemmerOverrideTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.StemmerOverrideTokenFilterFactory:void parseRules(java.util.List,org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder,java.lang.String)",
            "org.opensearch.analysis.common.StemmerOverrideTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ],
        "vulCaller": []
    },
    "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:byte[] parseTypes(java.util.Collection)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:byte[] parseTypes(java.util.Collection)",
            "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)",
            "org.opensearch.analysis.common.WordDelimiterGraphTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ],
        "vulCaller": [
            "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)",
            "org.opensearch.analysis.common.WordDelimiterGraphTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ]
    },
    "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:byte[] parseTypes(java.util.Collection)",
            "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)",
            "org.opensearch.analysis.common.WordDelimiterGraphTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ],
        "vulCaller": []
    },
    "org.opensearch.analysis.common.WordDelimiterGraphTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:byte[] parseTypes(java.util.Collection)",
            "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)",
            "org.opensearch.analysis.common.WordDelimiterGraphTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ],
        "vulCaller": []
    },
    "org.opensearch.analysis.common.SynonymTokenFilterFactory:org.apache.lucene.analysis.synonym.SynonymMap buildSynonyms(org.apache.lucene.analysis.Analyzer,java.io.Reader)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.SynonymTokenFilterFactory:org.apache.lucene.analysis.synonym.SynonymMap buildSynonyms(org.apache.lucene.analysis.Analyzer,java.io.Reader)",
            "org.opensearch.analysis.common.SynonymTokenFilterFactory:java.io.Reader getRulesFromSettings(org.opensearch.env.Environment)"
        ],
        "vulCaller": [
            "org.opensearch.analysis.common.SynonymGraphTokenFilterFactory:org.opensearch.index.analysis.TokenFilterFactory getChainAwareTokenFilterFactory(org.opensearch.index.analysis.TokenizerFactory,java.util.List,java.util.List,java.util.function.Function)",
            "org.opensearch.analysis.common.SynonymTokenFilterFactory:org.opensearch.index.analysis.TokenFilterFactory getChainAwareTokenFilterFactory(org.opensearch.index.analysis.TokenizerFactory,java.util.List,java.util.List,java.util.function.Function)"
        ]
    },
    "org.opensearch.analysis.common.SynonymGraphTokenFilterFactory:org.opensearch.index.analysis.TokenFilterFactory getChainAwareTokenFilterFactory(org.opensearch.index.analysis.TokenizerFactory,java.util.List,java.util.List,java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.opensearch.analysis.common.SynonymTokenFilterFactory:org.apache.lucene.analysis.synonym.SynonymMap buildSynonyms(org.apache.lucene.analysis.Analyzer,java.io.Reader)",
            "org.opensearch.analysis.common.SynonymTokenFilterFactory:java.io.Reader getRulesFromSettings(org.opensearch.env.Environment)"
        ],
        "vulCaller": []
    },
    "org.opensearch.analysis.common.SynonymTokenFilterFactory:org.opensearch.index.analysis.TokenFilterFactory getChainAwareTokenFilterFactory(org.opensearch.index.analysis.TokenizerFactory,java.util.List,java.util.List,java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "org.opensearch.analysis.common.SynonymTokenFilterFactory:org.apache.lucene.analysis.synonym.SynonymMap buildSynonyms(org.apache.lucene.analysis.Analyzer,java.io.Reader)",
            "org.opensearch.analysis.common.SynonymTokenFilterFactory:java.io.Reader getRulesFromSettings(org.opensearch.env.Environment)"
        ],
        "vulCaller": []
    },
    "org.opensearch.analysis.common.SynonymTokenFilterFactory:java.io.Reader getRulesFromSettings(org.opensearch.env.Environment)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.SynonymTokenFilterFactory:java.io.Reader getRulesFromSettings(org.opensearch.env.Environment)"
        ],
        "vulCaller": [
            "org.opensearch.analysis.common.SynonymGraphTokenFilterFactory:org.opensearch.index.analysis.TokenFilterFactory getChainAwareTokenFilterFactory(org.opensearch.index.analysis.TokenizerFactory,java.util.List,java.util.List,java.util.function.Function)",
            "org.opensearch.analysis.common.SynonymTokenFilterFactory:org.opensearch.index.analysis.TokenFilterFactory getChainAwareTokenFilterFactory(org.opensearch.index.analysis.TokenizerFactory,java.util.List,java.util.List,java.util.function.Function)"
        ]
    },
    "org.opensearch.analysis.common.HyphenationCompoundWordTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)": {
        "isVulRoot": true,
        "srcRoot": [
            "org.opensearch.analysis.common.HyphenationCompoundWordTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ],
        "vulCaller": []
    }
}
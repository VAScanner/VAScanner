{
    "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)": {
        "isVulRoot": true,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)",
            "jodd.json.MapToBean:java.lang.Object generifyList(java.util.List,java.lang.Class)",
            "jodd.json.MapToBean:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object parseObjectContent(java.lang.Class,java.lang.Class,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object _parse(char[])"
        ]
    },
    "jodd.json.MapToBean:java.lang.Object generifyList(java.util.List,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ]
    },
    "jodd.json.MapToBean:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.MapToBean:java.lang.Object generifyList(java.util.List,java.lang.Class)",
            "jodd.json.MapToBean:java.util.Map generifyMap(java.util.Map,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parseObjectContent(java.lang.Class,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parseValue(java.lang.Class,java.lang.Class,java.lang.Class)",
            "jodd.json.ObjectParser:java.lang.Object get()"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object _parse(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parse(char[],java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object parse(java.lang.String,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object parse(java.lang.String)",
            "jodd.json.JsonParser:java.lang.Object parse(char[])"
        ]
    },
    "jodd.json.MapToBean:java.util.Map generifyMap(java.util.Map,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parseValue(java.lang.Class,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parseArrayContent(java.lang.Class,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object parseObjectContent(java.lang.Class,java.lang.Class,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object _parse(char[])"
        ]
    },
    "jodd.json.ObjectParser:java.lang.Object get()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.LazyMap:void buildIfNeeded()",
            "jodd.json.JsonParser:java.lang.Object resolveLazyValue(java.lang.Object)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parse(char[],java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:java.lang.Object parse(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.JsonBodyScope:java.lang.Object parseRequestBody(java.lang.String,java.lang.Class)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:jodd.json.JsonObject parseAsJsonObject(java.lang.String)",
            "jodd.json.JsonParser:jodd.json.JsonArray parseAsJsonArray(java.lang.String)",
            "jodd.json.JsonParser:java.util.List parseAsList(java.lang.String,java.lang.Class)",
            "jodd.json.JsonParser:java.util.Map parseAsMap(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object parse(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:java.lang.Object parseArrayContent(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parseValue(java.lang.Class,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.json.LazyMap:void buildIfNeeded()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.LazyMap:boolean containsKey(java.lang.Object)",
            "jodd.json.LazyMap:boolean equals(java.lang.Object)",
            "jodd.json.LazyMap:java.lang.String toString()",
            "jodd.json.LazyMap:int hashCode()",
            "jodd.json.LazyMap:java.lang.Object remove(java.lang.Object)",
            "jodd.json.LazyMap:java.lang.Object get(java.lang.Object)",
            "jodd.json.LazyMap:void putAll(java.util.Map)",
            "jodd.json.LazyMap:java.util.Set entrySet()"
        ]
    },
    "jodd.json.JsonParser:java.lang.Object resolveLazyValue(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parseObjectContent(java.lang.Class,java.lang.Class,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object _parse(char[])"
        ]
    },
    "jodd.madvoc.scope.JsonBodyScope:java.lang.Object parseRequestBody(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.JsonBodyScope:void lambda$inject$0(java.lang.String,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)"
        ]
    },
    "jodd.json.JsonParser:jodd.json.JsonObject parseAsJsonObject(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:jodd.json.JsonArray parseAsJsonArray(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:java.util.List parseAsList(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonParser:java.util.Map parseAsMap(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.LazyMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:boolean hasSimpleProperty(jodd.bean.BeanProperty)",
            "jodd.json.JsonObject:java.lang.Double getDouble(java.lang.String,java.lang.Double)",
            "jodd.json.JsonObject:boolean containsKey(java.lang.String)",
            "jodd.json.JsonObject:jodd.json.JsonObject getJsonObject(java.lang.String,jodd.json.JsonObject)",
            "jodd.json.JsonObject:java.lang.Float getFloat(java.lang.String,java.lang.Float)",
            "jodd.bean.BeanUtilBean:java.lang.Object getSimpleProperty(jodd.bean.BeanProperty)",
            "jodd.json.JsonObject:java.lang.Object getValue(java.lang.String,java.lang.Object)",
            "jodd.bean.BeanUtilBean:boolean hasIndexProperty(jodd.bean.BeanProperty)",
            "jodd.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
            "jodd.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)",
            "jodd.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
            "jodd.json.JsonObject:java.lang.Long getLong(java.lang.String,java.lang.Long)",
            "jodd.json.JsonObject:jodd.json.JsonArray getJsonArray(java.lang.String,jodd.json.JsonArray)",
            "jodd.json.JsonObject:byte[] getBinary(java.lang.String,byte[])"
        ]
    },
    "jodd.json.LazyMap:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbListIterator:boolean moveToNext()",
            "jodd.db.oom.DbOomQuery:java.util.Set listSet(java.lang.Class[],int,boolean)",
            "jodd.db.oom.DbOomQuery:java.util.List list(java.lang.Class[],int,boolean)",
            "jodd.util.collection.MapEntry:boolean equals(java.lang.Object)"
        ]
    },
    "jodd.json.LazyMap:java.lang.String toString()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.util.StringUtil:java.lang.String toString(java.lang.Object)",
            "jodd.db.oom.DbEntityDescriptor:java.lang.String getKeyValue(java.lang.Object)",
            "jodd.lagarto.form.FormProcessorVisitor:void processTextareaStartTag(jodd.lagarto.Tag)",
            "jodd.lagarto.form.FormProcessorVisitor:java.lang.String valueToString(java.lang.String,java.lang.Object)",
            "jodd.typeconverter.TypeConverterManager:java.lang.Object convertType(java.lang.Object,java.lang.Class)",
            "jodd.lagarto.form.FormProcessorVisitor:void processInputStartTag(jodd.lagarto.Tag)",
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertValueToArray(java.lang.Object)",
            "jodd.util.StringUtil:java.lang.String[] toStringArray(java.lang.Object)",
            "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convertValueToCollection(java.lang.Object)",
            "jodd.bean.BeanTemplateParser:java.lang.String lambda$parseWithBean$1(java.lang.Object,java.lang.String)"
        ]
    },
    "jodd.json.LazyMap:int hashCode()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.util.collection.MapEntry:int hashCode()",
            "jodd.json.JsonObject:int hashCode()"
        ]
    },
    "jodd.json.LazyMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.lang.Object remove(java.lang.String)"
        ]
    },
    "jodd.json.LazyMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.lang.Double getDouble(java.lang.String)",
            "jodd.json.JsonObject:jodd.json.JsonObject getJsonObject(java.lang.String)",
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)",
            "jodd.json.JsonObject:java.lang.String getString(java.lang.String)",
            "jodd.json.JsonObject:java.lang.Integer getInteger(java.lang.String)",
            "jodd.bean.BeanUtilBean:java.lang.Object getSimpleProperty(jodd.bean.BeanProperty)",
            "jodd.bean.BeanUtilBean:java.lang.Object _getIndexProperty(jodd.bean.BeanProperty)",
            "jodd.json.JsonObject:java.lang.Long getLong(java.lang.String)",
            "jodd.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
            "jodd.json.JsonObject:byte[] getBinary(java.lang.String)",
            "jodd.json.JsonObject:jodd.json.JsonArray getJsonArray(java.lang.String)",
            "jodd.json.JsonObject:java.lang.Object getValue(java.lang.String)",
            "jodd.json.JsonObject:java.lang.Float getFloat(java.lang.String)"
        ]
    },
    "jodd.json.LazyMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:jodd.json.JsonObject mergeIn(jodd.json.JsonObject,int)"
        ]
    },
    "jodd.json.LazyMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.util.Iterator iterator()",
            "jodd.json.JsonObject:boolean objectEquals(java.util.Map,java.lang.Object)",
            "jodd.json.impl.JsonObjectSerializer:void serializeValue(jodd.json.JsonContext,jodd.json.JsonObject)",
            "jodd.json.JsonObject:java.util.stream.Stream stream()",
            "jodd.json.JsonObject:jodd.json.JsonObject mergeIn(jodd.json.JsonObject,int)"
        ]
    },
    "jodd.madvoc.scope.JsonBodyScope:void lambda$inject$0(java.lang.String,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.bean.BeanUtilBean:boolean hasSimpleProperty(jodd.bean.BeanProperty)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:boolean hasRootProperty(java.lang.Object,java.lang.String)",
            "jodd.bean.BeanUtilBean:boolean hasSimpleProperty(java.lang.Object,java.lang.String)",
            "jodd.bean.BeanUtilBean:boolean hasIndexProperty(jodd.bean.BeanProperty)"
        ]
    },
    "jodd.json.JsonObject:java.lang.Double getDouble(java.lang.String,java.lang.Double)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:boolean containsKey(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:jodd.json.JsonObject getJsonObject(java.lang.String,jodd.json.JsonObject)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:java.lang.Float getFloat(java.lang.String,java.lang.Float)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanUtilBean:java.lang.Object getSimpleProperty(jodd.bean.BeanProperty)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:java.lang.Object _getIndexProperty(jodd.bean.BeanProperty)",
            "jodd.bean.BeanUtilBean:java.lang.Object getSimpleProperty(java.lang.Object,java.lang.String)",
            "jodd.bean.BeanUtilBean:void _setIndexProperty(jodd.bean.BeanProperty,java.lang.Object)",
            "jodd.bean.BeanUtilBean:boolean hasIndexProperty(jodd.bean.BeanProperty)"
        ]
    },
    "jodd.json.JsonObject:java.lang.Object getValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanUtilBean:boolean hasIndexProperty(jodd.bean.BeanProperty)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:java.lang.Class getPropertyType(java.lang.Object,java.lang.String)",
            "jodd.bean.BeanUtilBean:boolean hasProperty(java.lang.Object,java.lang.String)",
            "jodd.bean.BeanUtilBean:boolean resolveExistingNestedProperties(jodd.bean.BeanProperty)"
        ]
    },
    "jodd.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:java.lang.Long getLong(java.lang.String,java.lang.Long)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:jodd.json.JsonArray getJsonArray(java.lang.String,jodd.json.JsonArray)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:byte[] getBinary(java.lang.String,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbListIterator:boolean moveToNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbListIterator:java.lang.Object next()",
            "jodd.db.oom.DbListIterator:boolean hasNext()"
        ]
    },
    "jodd.db.oom.DbOomQuery:java.util.Set listSet(java.lang.Class[],int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:java.util.Set listSet(int)",
            "jodd.db.oom.DbOomQuery:java.util.Set listSet()",
            "jodd.db.oom.DbOomQuery:java.util.Set listSet(java.lang.Class[])",
            "jodd.db.oom.DbOomQuery:java.util.Set listSet(int,java.lang.Class[])"
        ]
    },
    "jodd.db.oom.DbOomQuery:java.util.List list(java.lang.Class[],int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:java.util.List list(int,java.lang.Class[])",
            "jodd.db.oom.DbOomQuery:java.util.List list(int)",
            "jodd.db.oom.DbOomQuery:java.util.List list()",
            "jodd.db.oom.DbOomQuery:java.util.List list(java.lang.Class[])"
        ]
    },
    "jodd.util.collection.MapEntry:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.util.StringUtil:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.util.ArraysUtil:java.lang.String[] toStringArray(java.lang.Object[])",
            "jodd.lagarto.form.FormProcessorVisitor:void processOptionOpenTag(jodd.lagarto.Tag)"
        ]
    },
    "jodd.db.oom.DbEntityDescriptor:java.lang.String getKeyValue(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.mapper.DefaultResultSetMapper:void cacheResultSetEntities(java.lang.Object[])"
        ]
    },
    "jodd.lagarto.form.FormProcessorVisitor:void processTextareaStartTag(jodd.lagarto.Tag)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.form.FormProcessorVisitor:void tag(jodd.lagarto.Tag)"
        ]
    },
    "jodd.lagarto.form.FormProcessorVisitor:java.lang.String valueToString(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.form.FormProcessorVisitor:void processInputStartTag(jodd.lagarto.Tag)"
        ]
    },
    "jodd.typeconverter.TypeConverterManager:java.lang.Object convertType(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object readColumnValue(int,java.lang.Class,java.lang.Class,int)",
            "jodd.typeconverter.impl.FloatArrayConverter:float convertType(java.lang.Object)",
            "jodd.typeconverter.impl.BooleanArrayConverter:boolean convertType(java.lang.Object)",
            "jodd.typeconverter.impl.CharacterArrayConverter:char convertType(java.lang.Object)",
            "jodd.typeconverter.impl.ByteArrayConverter:byte convertType(java.lang.Object)",
            "jodd.json.MapToBean:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "jodd.typeconverter.impl.DoubleArrayConverter:double convertType(java.lang.Object)",
            "jodd.bean.BeanUtilUtil:java.lang.Object convertType(java.lang.Object,java.lang.Class)",
            "jodd.madvoc.config.Target:void writeValue(java.lang.String,java.lang.Object,boolean)",
            "jodd.typeconverter.impl.LongArrayConverter:long convertType(java.lang.Object)",
            "jodd.db.type.SqlType:void storeValue(java.sql.PreparedStatement,int,java.lang.Object,int)",
            "jodd.db.DbUtil:void setPreparedStatementObject(java.sql.PreparedStatement,int,java.lang.Object,int)",
            "jodd.db.type.SqlType:java.lang.Object prepareGetValue(java.lang.Object,java.lang.Class)",
            "jodd.typeconverter.impl.IntegerArrayConverter:int convertType(java.lang.Object)",
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object convertType(java.lang.Object)",
            "jodd.typeconverter.impl.ShortArrayConverter:short convertType(java.lang.Object)",
            "jodd.json.JsonParserBase:java.lang.Object convertType(java.lang.Object,java.lang.Class)",
            "jodd.typeconverter.impl.CollectionConverter:java.lang.Object convertType(java.lang.Object)"
        ]
    },
    "jodd.lagarto.form.FormProcessorVisitor:void processInputStartTag(jodd.lagarto.Tag)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.form.FormProcessorVisitor:void tag(jodd.lagarto.Tag)"
        ]
    },
    "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertValueToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convert(java.lang.Object)"
        ]
    },
    "jodd.util.StringUtil:java.lang.String[] toStringArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.form.FormProcessorVisitor:void processInputStartTag(jodd.lagarto.Tag)",
            "jodd.lagarto.form.FormProcessorVisitor:void processOptionOpenTag(jodd.lagarto.Tag)"
        ]
    },
    "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convertValueToCollection(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convert(java.lang.Object)"
        ]
    },
    "jodd.bean.BeanTemplateParser:java.lang.String lambda$parseWithBean$1(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.template.StringTemplateParser:java.lang.String parse(java.lang.String,java.util.function.Function)"
        ]
    },
    "jodd.util.collection.MapEntry:int hashCode()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:int hashCode()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.util.collection.MapEntry:int hashCode()"
        ]
    },
    "jodd.json.JsonObject:java.lang.Object remove(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:java.lang.Double getDouble(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.lang.Double getDouble(java.lang.String,java.lang.Double)"
        ]
    },
    "jodd.json.JsonObject:jodd.json.JsonObject getJsonObject(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:jodd.json.JsonObject getJsonObject(java.lang.String,jodd.json.JsonObject)"
        ]
    },
    "jodd.json.JsonObject:java.lang.String getString(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)"
        ]
    },
    "jodd.json.JsonObject:java.lang.Integer getInteger(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)"
        ]
    },
    "jodd.bean.BeanUtilBean:java.lang.Object _getIndexProperty(jodd.bean.BeanProperty)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:java.lang.Object getIndexProperty(jodd.bean.BeanProperty)",
            "jodd.bean.BeanUtilBean:java.lang.Object getIndexProperty(java.lang.Object,java.lang.String,int)"
        ]
    },
    "jodd.json.JsonObject:java.lang.Long getLong(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.lang.Long getLong(java.lang.String,java.lang.Long)"
        ]
    },
    "jodd.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)"
        ]
    },
    "jodd.json.JsonObject:byte[] getBinary(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:byte[] getBinary(java.lang.String,byte[])"
        ]
    },
    "jodd.json.JsonObject:jodd.json.JsonArray getJsonArray(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:jodd.json.JsonArray getJsonArray(java.lang.String,jodd.json.JsonArray)"
        ]
    },
    "jodd.json.JsonObject:java.lang.Object getValue(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.lang.Object getValue(java.lang.String,java.lang.Object)"
        ]
    },
    "jodd.json.JsonObject:java.lang.Float getFloat(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:java.lang.Float getFloat(java.lang.String,java.lang.Float)"
        ]
    },
    "jodd.json.JsonObject:jodd.json.JsonObject mergeIn(jodd.json.JsonObject,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:jodd.json.JsonObject mergeIn(jodd.json.JsonObject)",
            "jodd.json.JsonObject:jodd.json.JsonObject mergeInDeep(jodd.json.JsonObject)",
            "jodd.json.JsonObject:java.lang.Object lambda$mergeIn$0(int,java.lang.Object,java.lang.Object)"
        ]
    },
    "jodd.json.JsonObject:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:boolean objectEquals(java.util.Map,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:boolean equals(java.lang.Object)",
            "jodd.json.JsonObject:boolean elementEquals(java.lang.Object,java.lang.Object)"
        ]
    },
    "jodd.json.impl.JsonObjectSerializer:void serializeValue(jodd.json.JsonContext,jodd.json.JsonObject)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.impl.JsonObjectSerializer:void serializeValue(jodd.json.JsonContext,java.lang.Object)"
        ]
    },
    "jodd.json.JsonObject:java.util.stream.Stream stream()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.InstancesInjector:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.RequestScope:void injectParameters(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.RequestScope:void injectAttributes(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.ServletContextScope:void inject(javax.servlet.ServletContext,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.HeaderScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.BodyScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.InstancesInjector:void inject(javax.servlet.ServletContext,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.RequestScope:void injectUploadedFiles(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.MadvocContextScope:void inject(jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.JsonBodyScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.CookieScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.ActionPathMacroInjector:void injectMacros(java.lang.String,jodd.madvoc.macro.PathMacros,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.SessionScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.bean.BeanUtilBean:boolean hasRootProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:void lambda$setBean$0(java.lang.String,java.lang.Object,jodd.db.DbQueryNamedParameter)"
        ]
    },
    "jodd.bean.BeanUtilBean:boolean hasSimpleProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanUtilBean:java.lang.Object getSimpleProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanUtilBean:void _setIndexProperty(jodd.bean.BeanProperty,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:void setIndexProperty(java.lang.Object,java.lang.String,int,java.lang.Object)",
            "jodd.bean.BeanUtilBean:void setIndexProperty(jodd.bean.BeanProperty,java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilBean:java.lang.Class getPropertyType(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object[] parseObjects(java.lang.Class[])",
            "jodd.db.oom.JoinHintResolver:java.lang.Object[] join(java.lang.Object[],java.lang.String[])"
        ]
    },
    "jodd.bean.BeanUtilBean:boolean hasProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanUtilBean:boolean resolveExistingNestedProperties(jodd.bean.BeanProperty)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:java.lang.Class getPropertyType(java.lang.Object,java.lang.String)",
            "jodd.bean.BeanUtilBean:boolean hasProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "jodd.db.oom.DbListIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:java.lang.Object find(java.lang.Class[],boolean,java.sql.ResultSet)"
        ]
    },
    "jodd.db.oom.DbListIterator:boolean hasNext()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:java.lang.Object find(java.lang.Class[],boolean,java.sql.ResultSet)"
        ]
    },
    "jodd.db.oom.DbOomQuery:java.util.Set listSet(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.util.Set listSet()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.util.Set listSet(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.util.Set listSet(int,java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.util.List list(int,java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.util.List list(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.util.List list()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.util.List list(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:java.util.List listAll(java.lang.Class)",
            "jodd.db.oom.dao.GenericDao:java.util.List findRelated(java.lang.Class,java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.util.List find(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.util.List find(java.lang.Class,java.lang.Object)"
        ]
    },
    "jodd.util.ArraysUtil:java.lang.String[] toStringArray(java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.util.StringUtil:java.lang.String[] toStringArray(java.lang.Object)"
        ]
    },
    "jodd.lagarto.form.FormProcessorVisitor:void processOptionOpenTag(jodd.lagarto.Tag)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.form.FormProcessorVisitor:void tag(jodd.lagarto.Tag)"
        ]
    },
    "jodd.db.oom.mapper.DefaultResultSetMapper:void cacheResultSetEntities(java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object[] parseObjects(java.lang.Class[])"
        ]
    },
    "jodd.lagarto.form.FormProcessorVisitor:void tag(jodd.lagarto.Tag)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void emitTag()"
        ]
    },
    "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object readColumnValue(int,java.lang.Class,java.lang.Class,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object[] parseObjects(java.lang.Class[])"
        ]
    },
    "jodd.typeconverter.impl.FloatArrayConverter:float convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.FloatArrayConverter:float[] convertToSingleElementArray(java.lang.Object)",
            "jodd.typeconverter.impl.FloatArrayConverter:float[] convertArrayToArray(java.lang.Object)",
            "jodd.typeconverter.impl.FloatArrayConverter:float[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.BooleanArrayConverter:boolean convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convertArrayToArray(java.lang.Object)",
            "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convertToSingleElementArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.CharacterArrayConverter:char convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CharacterArrayConverter:char[] convertArrayToArray(java.lang.Object)",
            "jodd.typeconverter.impl.CharacterArrayConverter:char[] convertToSingleElementArray(java.lang.Object)",
            "jodd.typeconverter.impl.CharacterArrayConverter:char[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ByteArrayConverter:byte convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ByteArrayConverter:byte[] convertToSingleElementArray(java.lang.Object)",
            "jodd.typeconverter.impl.ByteArrayConverter:byte[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.ByteArrayConverter:byte[] convertArrayToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.DoubleArrayConverter:double convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.DoubleArrayConverter:double[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.DoubleArrayConverter:double[] convertArrayToArray(java.lang.Object)",
            "jodd.typeconverter.impl.DoubleArrayConverter:double[] convertToSingleElementArray(java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilUtil:java.lang.Object convertType(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilUtil:java.lang.Object convertIndexToMapKey(jodd.introspector.Getter,java.lang.Object)",
            "jodd.bean.BeanUtilUtil:java.lang.Object invokeSetter(jodd.introspector.Setter,jodd.bean.BeanProperty,java.lang.Object)",
            "jodd.bean.BeanUtilUtil:void arrayForcedSet(jodd.bean.BeanProperty,java.lang.Object,int,java.lang.Object)",
            "jodd.bean.BeanUtilBean:void _setIndexProperty(jodd.bean.BeanProperty,java.lang.Object)"
        ]
    },
    "jodd.madvoc.config.Target:void writeValue(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.ActionPathMacroInjector:void lambda$injectMacros$0(java.lang.String,java.lang.String,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.SessionScope:void lambda$inject$0(java.lang.String,javax.servlet.http.HttpSession,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.RequestScope:void lambda$injectUploadedFiles$2(java.lang.String,jodd.servlet.upload.MultipartRequestWrapper,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.RequestScope:void lambda$injectAttributes$0(java.lang.String,javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.RequestScope:void lambda$injectParameters$1(java.lang.String,javax.servlet.http.HttpServletRequest,boolean,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.config.Target:void writeValue(jodd.madvoc.config.InjectionPoint,java.lang.Object,boolean)",
            "jodd.madvoc.scope.ParamsScope:void lambda$inject$0(jodd.madvoc.config.Target)",
            "jodd.madvoc.scope.ServletContextScope:void lambda$inject$0(java.lang.String,javax.servlet.ServletContext,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)"
        ]
    },
    "jodd.typeconverter.impl.LongArrayConverter:long convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.LongArrayConverter:long[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.LongArrayConverter:long[] convertToSingleElementArray(java.lang.Object)",
            "jodd.typeconverter.impl.LongArrayConverter:long[] convertArrayToArray(java.lang.Object)"
        ]
    },
    "jodd.db.type.SqlType:void storeValue(java.sql.PreparedStatement,int,java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.type.NullAwareSqlType:void storeValue(java.sql.PreparedStatement,int,java.lang.Object,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object,java.lang.Class,int)"
        ]
    },
    "jodd.db.DbUtil:void setPreparedStatementObject(java.sql.PreparedStatement,int,java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object,java.lang.Class,int)"
        ]
    },
    "jodd.db.type.SqlType:java.lang.Object prepareGetValue(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.type.NullAwareSqlType:java.lang.Object readValue(java.sql.ResultSet,int,java.lang.Class,int)",
            "jodd.db.type.SqlType:java.lang.Object readValue(java.sql.ResultSet,int,java.lang.Class,int)"
        ]
    },
    "jodd.typeconverter.impl.IntegerArrayConverter:int convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.IntegerArrayConverter:int[] convertToSingleElementArray(java.lang.Object)",
            "jodd.typeconverter.impl.IntegerArrayConverter:int[] convertArrayToArray(java.lang.Object)",
            "jodd.typeconverter.impl.IntegerArrayConverter:int[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ArrayConverter:java.lang.Object convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertPrimitiveArrayToArray(java.lang.Object,java.lang.Class)",
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertArrayToArray(java.lang.Object)",
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertToSingleElementArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ShortArrayConverter:short convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ShortArrayConverter:short[] convertToSingleElementArray(java.lang.Object)",
            "jodd.typeconverter.impl.ShortArrayConverter:short[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.ShortArrayConverter:short[] convertArrayToArray(java.lang.Object)"
        ]
    },
    "jodd.json.JsonParserBase:java.lang.Object convertType(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parseArrayContent(java.lang.Class,java.lang.Class)",
            "jodd.json.JsonParserBase:void injectValueIntoObject(java.lang.Object,jodd.introspector.PropertyDescriptor,java.lang.Object)",
            "jodd.json.JsonParser:java.lang.Object parseValue(java.lang.Class,java.lang.Class,java.lang.Class)",
            "jodd.json.JsonParser:java.lang.Object parseObjectContent(java.lang.Class,java.lang.Class,java.lang.Class)",
            "jodd.json.MapToBean:void setValue(java.lang.Object,jodd.introspector.PropertyDescriptor,java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.CollectionConverter:java.lang.Object convertType(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convertValueToCollection(java.lang.Object)",
            "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convertPrimitiveArrayToCollection(java.lang.Object,java.lang.Class)",
            "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convertCollectionToCollection(java.util.Collection)"
        ]
    },
    "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.TypeConverterManager:java.lang.Object convertType(java.lang.Object,java.lang.Class)",
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CollectionConverter:java.lang.Object convert(java.lang.Object)",
            "jodd.typeconverter.TypeConverterManager:java.lang.Object convertType(java.lang.Object,java.lang.Class)",
            "jodd.typeconverter.TypeConverterManager:java.util.Collection convertToCollection(java.lang.Object,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.template.StringTemplateParser:java.lang.String parse(java.lang.String,java.util.function.Function)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.template.StringTemplateParser:java.lang.String parse(java.lang.String,java.util.function.Function)",
            "jodd.template.MapTemplateParser:java.lang.String parseWithMap(java.lang.String,java.util.Map)",
            "jodd.util.PropertiesUtil:java.lang.String resolveProperty(java.util.Map,java.lang.String)",
            "jodd.props.PropsData:java.lang.String resolveMacros(java.lang.String,java.lang.String[])",
            "jodd.bean.BeanTemplateParser:java.lang.String parseWithBean(java.lang.String,java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilBean:java.lang.Object getIndexProperty(jodd.bean.BeanProperty)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:void resolveNestedProperties(jodd.bean.BeanProperty)",
            "jodd.bean.BeanUtilBean:java.lang.Object getProperty(java.lang.Object,java.lang.String)",
            "jodd.bean.BeanUtilBean:boolean resolveExistingNestedProperties(jodd.bean.BeanProperty)"
        ]
    },
    "jodd.bean.BeanUtilBean:java.lang.Object getIndexProperty(java.lang.Object,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:jodd.json.JsonObject mergeIn(jodd.json.JsonObject)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:jodd.json.JsonObject mergeInDeep(jodd.json.JsonObject)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:java.lang.Object lambda$mergeIn$0(int,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.json.JsonObject:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.util.collection.MapEntry:boolean equals(java.lang.Object)"
        ]
    },
    "jodd.json.JsonObject:boolean elementEquals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonObject:boolean objectEquals(java.util.Map,java.lang.Object)",
            "jodd.json.JsonArray:boolean arrayEquals(java.util.List,java.lang.Object)"
        ]
    },
    "jodd.json.impl.JsonObjectSerializer:void serializeValue(jodd.json.JsonContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.InstancesInjector:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.RequestScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.madvoc.scope.RequestScope:void injectParameters(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.RequestScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.madvoc.scope.RequestScope:void injectAttributes(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.RequestScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.madvoc.scope.ServletContextScope:void inject(javax.servlet.ServletContext,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.ServletContextScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.madvoc.scope.HeaderScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.BodyScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.InstancesInjector:void inject(javax.servlet.ServletContext,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.ServletContextScope:void inject(javax.servlet.ServletContext,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.madvoc.scope.RequestScope:void injectUploadedFiles(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.RequestScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.madvoc.scope.MadvocContextScope:void inject(jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.MadvocContextScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.madvoc.scope.JsonBodyScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.CookieScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.ActionPathMacroInjector:void injectMacros(java.lang.String,jodd.madvoc.macro.PathMacros,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.ActionPathMacroInjector:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.madvoc.scope.SessionScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:void lambda$setBean$0(java.lang.String,java.lang.Object,jodd.db.DbQueryNamedParameter)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryParser:void forEachNamedParameter(java.util.function.Consumer)"
        ]
    },
    "jodd.bean.BeanUtilBean:void setIndexProperty(java.lang.Object,java.lang.String,int,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanUtilBean:void setIndexProperty(jodd.bean.BeanProperty,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object[] parseObjects(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbListIterator:boolean moveToNext()",
            "jodd.db.oom.DbOomQuery:java.util.Set listSet(java.lang.Class[],int,boolean)",
            "jodd.db.oom.DbOomQuery:java.util.List list(java.lang.Class[],int,boolean)"
        ]
    },
    "jodd.db.oom.JoinHintResolver:java.lang.Object[] join(java.lang.Object[],java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:java.lang.Object resolveRowResults(java.lang.Object[])",
            "jodd.db.oom.JoinHintResolver:java.lang.Object[] join(java.lang.Object[],java.lang.String)"
        ]
    },
    "jodd.db.oom.DbOomQuery:java.lang.Object find(java.lang.Class[],boolean,java.sql.ResultSet)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:java.lang.Object find()",
            "jodd.db.oom.DbOomQuery:java.lang.Object find(java.lang.Class[])",
            "jodd.db.oom.DbOomQuery:java.lang.Object findGeneratedColumns(java.lang.Class[])",
            "jodd.db.oom.DbOomQuery:java.lang.Object findGeneratedKey(java.lang.Class)"
        ]
    },
    "jodd.db.oom.dao.GenericDao:java.util.List listAll(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:java.util.List findRelated(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:java.util.List find(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:java.util.List find(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.lagarto.LagartoParser:void emitTag()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser$19:void parse()",
            "jodd.lagarto.LagartoParser$9:void parse()",
            "jodd.lagarto.LagartoParser$ScriptEscape$8:void parse()",
            "jodd.lagarto.LagartoParser$8:void parse()",
            "jodd.lagarto.LagartoParser$4:void parse()",
            "jodd.lagarto.LagartoParser$23:void parse()",
            "jodd.lagarto.LagartoParser$6:void parse()",
            "jodd.lagarto.LagartoParser$7:void parse()",
            "jodd.lagarto.LagartoParser$13:void parse()",
            "jodd.lagarto.LagartoParser$5:void parse()",
            "jodd.lagarto.LagartoParser$12:void parse()"
        ]
    },
    "jodd.typeconverter.impl.FloatArrayConverter:float[] convertToSingleElementArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.FloatArrayConverter:float[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.FloatArrayConverter:float[] convertArrayToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.FloatArrayConverter:float[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.FloatArrayConverter:float[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.FloatArrayConverter:float[] convertValueToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.FloatArrayConverter:float[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convertArrayToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convertValueToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convertToSingleElementArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.CharacterArrayConverter:char[] convertArrayToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CharacterArrayConverter:char[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.CharacterArrayConverter:char[] convertToSingleElementArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CharacterArrayConverter:char[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.CharacterArrayConverter:char[] convertValueToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CharacterArrayConverter:char[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ByteArrayConverter:byte[] convertToSingleElementArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ByteArrayConverter:byte[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ByteArrayConverter:byte[] convertValueToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ByteArrayConverter:byte[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ByteArrayConverter:byte[] convertArrayToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ByteArrayConverter:byte[] convert(java.lang.Object)",
            "jodd.typeconverter.impl.ByteArrayConverter:byte[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.DoubleArrayConverter:double[] convertValueToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.DoubleArrayConverter:double[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.DoubleArrayConverter:double[] convertArrayToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.DoubleArrayConverter:double[] convert(java.lang.Object)",
            "jodd.typeconverter.impl.DoubleArrayConverter:double[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.DoubleArrayConverter:double[] convertToSingleElementArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.DoubleArrayConverter:double[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilUtil:java.lang.Object convertIndexToMapKey(jodd.introspector.Getter,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:java.lang.Object getSimpleProperty(jodd.bean.BeanProperty)",
            "jodd.bean.BeanUtilBean:java.lang.Object _getIndexProperty(jodd.bean.BeanProperty)",
            "jodd.bean.BeanUtilBean:void _setIndexProperty(jodd.bean.BeanProperty,java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilUtil:java.lang.Object invokeSetter(jodd.introspector.Setter,jodd.bean.BeanProperty,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:void setSimpleProperty(jodd.bean.BeanProperty,java.lang.Object)",
            "jodd.bean.BeanUtilUtil:java.lang.Object ensureArraySize(jodd.bean.BeanProperty,java.lang.Object,java.lang.Class,int)",
            "jodd.bean.BeanUtilUtil:java.lang.Object createBeanProperty(jodd.bean.BeanProperty)"
        ]
    },
    "jodd.bean.BeanUtilUtil:void arrayForcedSet(jodd.bean.BeanProperty,java.lang.Object,int,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:void _setIndexProperty(jodd.bean.BeanProperty,java.lang.Object)"
        ]
    },
    "jodd.madvoc.scope.ActionPathMacroInjector:void lambda$injectMacros$0(java.lang.String,java.lang.String,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.SessionScope:void lambda$inject$0(java.lang.String,javax.servlet.http.HttpSession,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.RequestScope:void lambda$injectUploadedFiles$2(java.lang.String,jodd.servlet.upload.MultipartRequestWrapper,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.RequestScope:void lambda$injectAttributes$0(java.lang.String,javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.RequestScope:void lambda$injectParameters$1(java.lang.String,javax.servlet.http.HttpServletRequest,boolean,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.config.Target:void writeValue(jodd.madvoc.config.InjectionPoint,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.JsonBodyScope:void lambda$inject$0(java.lang.String,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.HeaderScope:void lambda$inject$0(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.InstancesInjector:void lambda$inject$1(javax.servlet.ServletContext,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.BodyScope:void lambda$inject$0(java.lang.String,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.MadvocContextScope:void lambda$inject$0(jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.InstancesInjector:void lambda$inject$0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,jodd.madvoc.ActionRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.CookieScope:void lambda$inject$0(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)"
        ]
    },
    "jodd.madvoc.scope.ParamsScope:void lambda$inject$0(jodd.madvoc.config.Target)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTarget(java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.scope.ServletContextScope:void lambda$inject$0(java.lang.String,javax.servlet.ServletContext,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.typeconverter.impl.LongArrayConverter:long[] convertValueToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.LongArrayConverter:long[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.LongArrayConverter:long[] convertToSingleElementArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.LongArrayConverter:long[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.LongArrayConverter:long[] convertArrayToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.LongArrayConverter:long[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.LongArrayConverter:long[] convert(java.lang.Object)"
        ]
    },
    "jodd.db.type.NullAwareSqlType:void storeValue(java.sql.PreparedStatement,int,java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object,java.lang.Class,int)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object,java.lang.Class,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object)",
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(java.lang.String,java.lang.Object,java.lang.Class,int)"
        ]
    },
    "jodd.db.type.NullAwareSqlType:java.lang.Object readValue(java.sql.ResultSet,int,java.lang.Class,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object readColumnValue(int,java.lang.Class,java.lang.Class,int)"
        ]
    },
    "jodd.db.type.SqlType:java.lang.Object readValue(java.sql.ResultSet,int,java.lang.Class,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object readColumnValue(int,java.lang.Class,java.lang.Class,int)"
        ]
    },
    "jodd.typeconverter.impl.IntegerArrayConverter:int[] convertToSingleElementArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.IntegerArrayConverter:int[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.IntegerArrayConverter:int[] convertArrayToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.IntegerArrayConverter:int[] convert(java.lang.Object)",
            "jodd.typeconverter.impl.IntegerArrayConverter:int[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.IntegerArrayConverter:int[] convertValueToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.IntegerArrayConverter:int[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertPrimitiveArrayToArray(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertArrayToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertArrayToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convert(java.lang.Object)",
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertToSingleElementArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ArrayConverter:java.lang.Object[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ShortArrayConverter:short[] convertToSingleElementArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ShortArrayConverter:short[] convertValueToArray(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ShortArrayConverter:short[] convertValueToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ShortArrayConverter:short[] convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ShortArrayConverter:short[] convertArrayToArray(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ShortArrayConverter:short[] convertValueToArray(java.lang.Object)",
            "jodd.typeconverter.impl.ShortArrayConverter:short[] convert(java.lang.Object)"
        ]
    },
    "jodd.json.JsonParserBase:void injectValueIntoObject(java.lang.Object,jodd.introspector.PropertyDescriptor,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonParser:java.lang.Object parseObjectContent(java.lang.Class,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.json.MapToBean:void setValue(java.lang.Object,jodd.introspector.PropertyDescriptor,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ]
    },
    "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convertPrimitiveArrayToCollection(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convertValueToCollection(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convertCollectionToCollection(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CollectionConverter:java.util.Collection convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ArrayConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.typeconverter.impl.CollectionConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.typeconverter.TypeConverterManager:java.util.Collection convertToCollection(java.lang.Object,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilUtil:java.lang.Object convertToCollection(java.lang.Object,java.lang.Class,java.lang.Class)"
        ]
    },
    "jodd.template.MapTemplateParser:java.lang.String parseWithMap(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.template.MapTemplateParser:java.lang.String lambda$of$0(java.util.Map,java.lang.String)"
        ]
    },
    "jodd.util.PropertiesUtil:java.lang.String resolveProperty(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.ParamManager:java.lang.String[] filterParametersForBeanName(java.lang.String,boolean)",
            "jodd.util.PropertiesUtil:void resolveAllVariables(java.util.Properties)"
        ]
    },
    "jodd.props.PropsData:java.lang.String resolveMacros(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.props.PropsEntry:java.lang.String getValue(java.lang.String[])"
        ]
    },
    "jodd.bean.BeanTemplateParser:java.lang.String parseWithBean(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.result.ServletPermanentRedirectActionResult:void render(jodd.madvoc.ActionRequest,java.lang.Object)",
            "jodd.madvoc.result.ServletRedirectActionResult:void render(jodd.madvoc.ActionRequest,java.lang.Object)",
            "jodd.bean.BeanTemplateParser:java.lang.String lambda$of$0(java.lang.Object,java.lang.String)"
        ]
    },
    "jodd.bean.BeanUtilBean:void resolveNestedProperties(jodd.bean.BeanProperty)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:java.lang.Object getProperty(java.lang.Object,java.lang.String)",
            "jodd.bean.BeanUtilBean:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilBean:java.lang.Object getProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.sqlgen.chunks.InsertChunk:void process(java.lang.StringBuilder)",
            "jodd.vtor.constraint.EqualToDeclaredFieldConstraint:boolean validate(java.lang.Object,java.lang.Object,java.lang.String)",
            "jodd.bean.BeanVisitor:void visit()",
            "jodd.db.DbQuery:void lambda$setBean$0(java.lang.String,java.lang.Object,jodd.db.DbQueryNamedParameter)",
            "jodd.db.oom.JoinHintResolver:java.lang.Object[] join(java.lang.Object[],java.lang.String[])",
            "jodd.vtor.constraint.EqualToFieldConstraint:boolean validate(java.lang.Object,java.lang.Object,java.lang.String)",
            "jodd.petite.PetiteContainer:java.lang.Object getBeanProperty(java.lang.String)",
            "jodd.db.oom.JoinHintResolver:java.lang.Object resolveValueInSpecialCase(java.lang.Object,java.lang.String)",
            "jodd.vtor.Vtor:java.util.List validate(jodd.vtor.ValidationContext,java.lang.Object,java.lang.String)",
            "jodd.db.oom.sqlgen.DbEntitySql:jodd.db.oom.sqlgen.DbSqlBuilder updateColumn(java.lang.Object,java.lang.String)",
            "jodd.db.oom.sqlgen.chunks.MatchChunk:void process(java.lang.StringBuilder)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object updateProperty(java.lang.Object,java.lang.String)",
            "jodd.lagarto.form.FormTag:java.lang.Object value(java.lang.String,javax.servlet.jsp.PageContext)",
            "jodd.db.oom.DbEntityDescriptor:java.lang.Object getIdValue(java.lang.Object)",
            "jodd.madvoc.config.Target:java.lang.Object readValue(java.lang.String)",
            "jodd.db.oom.sqlgen.chunks.UpdateSetChunk:void process(java.lang.StringBuilder)",
            "jodd.db.oom.sqlgen.DbEntitySql:jodd.db.oom.sqlgen.DbSqlBuilder findForeign(java.lang.Class,java.lang.Object)",
            "jodd.bean.BeanTemplateParser:java.lang.String lambda$parseWithBean$1(java.lang.Object,java.lang.String)"
        ]
    },
    "jodd.json.JsonArray:boolean arrayEquals(java.util.List,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.json.JsonArray:boolean equals(java.lang.Object)",
            "jodd.json.JsonObject:boolean elementEquals(java.lang.Object,java.lang.Object)"
        ]
    },
    "jodd.madvoc.scope.RequestScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.ServletContextScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.MadvocContextScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.ActionPathMacroInjector:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.RequestScope:void inject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.db.DbQueryParser:void forEachNamedParameter(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setBean(java.lang.String,java.lang.Object)",
            "jodd.db.DbQuery:jodd.db.DbQuery setMap(java.util.Map)"
        ]
    },
    "jodd.bean.BeanUtilBean:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:void setBeanProperty(java.lang.String,java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object updateProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "jodd.petite.BeanData:void injectParams(jodd.petite.ParamManager,boolean)",
            "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object[] parseObjects(java.lang.Class[])",
            "jodd.bean.BeanCopy:boolean visitProperty(java.lang.String,java.lang.Object)",
            "jodd.db.oom.JoinHintResolver:java.lang.Object[] join(java.lang.Object[],java.lang.String[])",
            "jodd.madvoc.config.Target:void writeValue(java.lang.String,java.lang.Object,boolean)",
            "jodd.db.oom.DbOomQuery:void populateGeneratedKeys(java.lang.Object)",
            "jodd.htmlstapler.HtmlStaplerFilter:void readFilterConfigParameters(javax.servlet.FilterConfig,java.lang.Object,java.lang.String[])",
            "jodd.db.oom.DbEntityDescriptor:void setIdValue(java.lang.Object,java.lang.Object)"
        ]
    },
    "jodd.db.oom.DbOomQuery:java.lang.Object resolveRowResults(java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbListIterator:boolean moveToNext()",
            "jodd.db.oom.DbOomQuery:java.util.Set listSet(java.lang.Class[],int,boolean)",
            "jodd.db.oom.DbOomQuery:java.util.List list(java.lang.Class[],int,boolean)"
        ]
    },
    "jodd.db.oom.JoinHintResolver:java.lang.Object[] join(java.lang.Object[],java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.lang.Object find()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.lang.Object find(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:java.lang.Object findById(java.lang.Class,long)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object findOneByProperty(java.lang.Class,java.lang.String,java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object findOne(java.lang.Object)"
        ]
    },
    "jodd.db.oom.DbOomQuery:java.lang.Object findGeneratedColumns(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:void populateGeneratedKeys(java.lang.Object)"
        ]
    },
    "jodd.db.oom.DbOomQuery:java.lang.Object findGeneratedKey(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.lagarto.LagartoParser$19:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$9:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$ScriptEscape$8:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$8:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$4:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$23:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$6:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$7:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$13:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$5:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.lagarto.LagartoParser$12:void parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)"
        ]
    },
    "jodd.typeconverter.impl.FloatArrayConverter:float[] convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.FloatArrayConverter:java.lang.Object convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.BooleanArrayConverter:boolean[] convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.BooleanArrayConverter:java.lang.Object convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.CharacterArrayConverter:char[] convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.CharacterArrayConverter:java.lang.Object convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ByteArrayConverter:byte[] convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ByteArrayConverter:java.lang.Object convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.DoubleArrayConverter:double[] convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.DoubleArrayConverter:java.lang.Object convert(java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilBean:void setSimpleProperty(jodd.bean.BeanProperty,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "jodd.bean.BeanUtilBean:void _setIndexProperty(jodd.bean.BeanProperty,java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilUtil:java.lang.Object ensureArraySize(jodd.bean.BeanProperty,java.lang.Object,java.lang.Class,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilUtil:java.lang.Object arrayForcedGet(jodd.bean.BeanProperty,java.lang.Object,int)",
            "jodd.bean.BeanUtilUtil:void arrayForcedSet(jodd.bean.BeanProperty,java.lang.Object,int,java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilUtil:java.lang.Object createBeanProperty(jodd.bean.BeanProperty)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:java.lang.Object getSimpleProperty(jodd.bean.BeanProperty)"
        ]
    },
    "jodd.madvoc.scope.HeaderScope:void lambda$inject$0(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.InstancesInjector:void lambda$inject$1(javax.servlet.ServletContext,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.BodyScope:void lambda$inject$0(java.lang.String,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.MadvocContextScope:void lambda$inject$0(jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.InstancesInjector:void lambda$inject$0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,jodd.madvoc.ActionRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.CookieScope:void lambda$inject$0(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndIn(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.config.Targets:void forEachTarget(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.ParamsScope:void inject(jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.typeconverter.impl.LongArrayConverter:long[] convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.LongArrayConverter:java.lang.Object convert(java.lang.Object)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setObjects(java.lang.Object[])"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setObject(java.lang.String,java.lang.Object,java.lang.Class,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:void prepareQuery()",
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(java.lang.String,java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.IntegerArrayConverter:int[] convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.IntegerArrayConverter:java.lang.Object convert(java.lang.Object)"
        ]
    },
    "jodd.typeconverter.impl.ShortArrayConverter:short[] convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.typeconverter.impl.ShortArrayConverter:java.lang.Object convert(java.lang.Object)"
        ]
    },
    "jodd.bean.BeanUtilUtil:java.lang.Object convertToCollection(java.lang.Object,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilUtil:java.lang.Object invokeSetter(jodd.introspector.Setter,jodd.bean.BeanProperty,java.lang.Object)"
        ]
    },
    "jodd.template.MapTemplateParser:java.lang.String lambda$of$0(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.ParamManager:java.lang.String parseKeyTemplate(java.lang.String)"
        ]
    },
    "jodd.petite.ParamManager:java.lang.String[] filterParametersForBeanName(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:void initBeanDefinition(jodd.petite.BeanDefinition)"
        ]
    },
    "jodd.util.PropertiesUtil:void resolveAllVariables(java.util.Properties)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.props.PropsEntry:java.lang.String getValue(java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.result.ServletPermanentRedirectActionResult:void render(jodd.madvoc.ActionRequest,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.result.ServletRedirectActionResult:void render(jodd.madvoc.ActionRequest,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanTemplateParser:java.lang.String lambda$of$0(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.sqlgen.chunks.InsertChunk:void process(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.sqlgen.DbSqlBuilder:java.lang.String generateQuery()"
        ]
    },
    "jodd.vtor.constraint.EqualToDeclaredFieldConstraint:boolean validate(java.lang.Object,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.vtor.constraint.EqualToDeclaredFieldConstraint:boolean isValid(jodd.vtor.ValidationConstraintContext,java.lang.Object)"
        ]
    },
    "jodd.bean.BeanVisitor:void visit()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanCopy:void copy()",
            "jodd.bean.BeanWalker:void bean(java.lang.Object)",
            "jodd.bean.BeanWalker:void map(java.util.Map)",
            "jodd.bean.BeanWalker:void source(java.lang.Object)"
        ]
    },
    "jodd.vtor.constraint.EqualToFieldConstraint:boolean validate(java.lang.Object,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.vtor.constraint.EqualToFieldConstraint:boolean isValid(jodd.vtor.ValidationConstraintContext,java.lang.Object)"
        ]
    },
    "jodd.petite.PetiteContainer:java.lang.Object getBeanProperty(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.JoinHintResolver:java.lang.Object resolveValueInSpecialCase(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.JoinHintResolver:java.lang.Object[] join(java.lang.Object[],java.lang.String[])"
        ]
    },
    "jodd.vtor.Vtor:java.util.List validate(jodd.vtor.ValidationContext,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.vtor.Vtor:java.util.List validate(jodd.vtor.ValidationContext,java.lang.Object)",
            "jodd.vtor.ValidationConstraintContext:void validateWithin(jodd.vtor.ValidationContext,java.lang.Object)"
        ]
    },
    "jodd.db.oom.sqlgen.DbEntitySql:jodd.db.oom.sqlgen.DbSqlBuilder updateColumn(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.sqlgen.chunks.MatchChunk:void process(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.sqlgen.DbSqlBuilder:java.lang.String generateQuery()"
        ]
    },
    "jodd.db.oom.dao.GenericDao:java.lang.Object updateProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.lagarto.form.FormTag:java.lang.Object value(java.lang.String,javax.servlet.jsp.PageContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.form.FormTag:java.lang.Object lambda$doAfterBody$0(java.lang.String)"
        ]
    },
    "jodd.db.oom.DbEntityDescriptor:java.lang.Object getIdValue(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbEntityDescriptor:java.lang.String getKeyValue(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:boolean isPersistent(jodd.db.oom.DbEntityDescriptor,java.lang.Object)"
        ]
    },
    "jodd.madvoc.config.Target:java.lang.Object readValue(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Target:java.lang.Object readValue(jodd.madvoc.config.InjectionPoint)"
        ]
    },
    "jodd.db.oom.sqlgen.chunks.UpdateSetChunk:void process(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.sqlgen.DbSqlBuilder:java.lang.String generateQuery()"
        ]
    },
    "jodd.db.oom.sqlgen.DbEntitySql:jodd.db.oom.sqlgen.DbSqlBuilder findForeign(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:java.util.List findRelated(java.lang.Class,java.lang.Object)"
        ]
    },
    "jodd.json.JsonArray:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.util.collection.MapEntry:boolean equals(java.lang.Object)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBean(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setMap(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteContainer:void setBeanProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:java.lang.Object updateProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.BeanData:void injectParams(jodd.petite.ParamManager,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:void registerBeanAndWireAndInjectParamsAndInvokeInitMethods(jodd.petite.BeanData)"
        ]
    },
    "jodd.bean.BeanCopy:boolean visitProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanVisitor:void visit()"
        ]
    },
    "jodd.db.oom.DbOomQuery:void populateGeneratedKeys(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.htmlstapler.HtmlStaplerFilter:void readFilterConfigParameters(javax.servlet.FilterConfig,java.lang.Object,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.htmlstapler.HtmlStaplerFilter:void init(javax.servlet.FilterConfig)"
        ]
    },
    "jodd.db.oom.DbEntityDescriptor:void setIdValue(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:void setEntityId(jodd.db.oom.DbEntityDescriptor,java.lang.Object,long)"
        ]
    },
    "jodd.db.oom.dao.GenericDao:java.lang.Object findById(java.lang.Class,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:java.lang.Object findOneByProperty(java.lang.Class,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:java.lang.Object findOne(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.lagarto.LagartoParser:void parse(jodd.lagarto.TagVisitor)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.form.FormTag:java.lang.String populateForm(java.lang.String,jodd.lagarto.form.FormFieldResolver)",
            "jodd.decora.parser.DecoraParser:jodd.decora.parser.DecoraTag[] parseDecorator(char[])",
            "jodd.lagarto.dom.LagartoDOMBuilder:jodd.lagarto.dom.Document doParse(jodd.lagarto.LagartoParser)",
            "jodd.lagarto.filter.SimpleLagartoServletFilter$LagartoParsingProcessor:char[] invokeLagarto(jodd.lagarto.TagAdapter)",
            "jodd.decora.parser.DecoraParser:void parsePage(char[],jodd.decora.parser.DecoraTag[])"
        ]
    },
    "jodd.typeconverter.impl.FloatArrayConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.typeconverter.impl.BooleanArrayConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.typeconverter.impl.CharacterArrayConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.typeconverter.impl.ByteArrayConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.typeconverter.impl.DoubleArrayConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanUtilBean:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanUtilUtil:java.lang.Object arrayForcedGet(jodd.bean.BeanProperty,java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.bean.BeanUtilBean:java.lang.Object _getIndexProperty(jodd.bean.BeanProperty)"
        ]
    },
    "jodd.madvoc.scope.ParamsScope:void inject(jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.typeconverter.impl.LongArrayConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setObjects(java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:void prepareQuery()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:void init()"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setObject(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:void lambda$setBean$0(java.lang.String,java.lang.Object,jodd.db.DbQueryNamedParameter)",
            "jodd.db.oom.DbOomQuery:void prepareQuery()",
            "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,java.lang.Object[],int)",
            "jodd.db.DbQuery:void lambda$setMap$1(java.util.Map,jodd.db.DbQueryNamedParameter)",
            "jodd.db.DbQuery:jodd.db.DbQuery setObjects(java.lang.String[],java.lang.Object[])"
        ]
    },
    "jodd.typeconverter.impl.IntegerArrayConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.typeconverter.impl.ShortArrayConverter:java.lang.Object convert(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.ParamManager:java.lang.String parseKeyTemplate(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.BeanData:void injectParams(jodd.petite.ParamManager,boolean)"
        ]
    },
    "jodd.petite.PetiteContainer:void initBeanDefinition(jodd.petite.BeanDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:jodd.petite.BeanDefinition lambda$invokeMethod$1(java.lang.Object,jodd.petite.WiringMode)",
            "jodd.petite.PetiteContainer:jodd.petite.BeanDefinition lambda$createBean$2(java.lang.Class,jodd.petite.WiringMode)",
            "jodd.petite.PetiteContainer:jodd.petite.BeanDefinition lambda$wire$0(java.lang.Object,jodd.petite.WiringMode)",
            "jodd.petite.PetiteContainer:java.lang.Object getBean(java.lang.String)",
            "jodd.petite.PetiteContainer:void registerBeanAndWireAndInjectParamsAndInvokeInitMethods(jodd.petite.BeanData)"
        ]
    },
    "jodd.db.oom.sqlgen.DbSqlBuilder:java.lang.String generateQuery()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:void <init>(jodd.db.DbOom,jodd.db.DbSession,jodd.db.oom.DbSqlGenerator)",
            "jodd.db.oom.DbOomQuery:void <init>(jodd.db.DbOom,jodd.db.oom.DbSqlGenerator)",
            "jodd.db.oom.sqlgen.ParsedSql:void <init>(jodd.db.oom.DbSqlGenerator)"
        ]
    },
    "jodd.vtor.constraint.EqualToDeclaredFieldConstraint:boolean isValid(jodd.vtor.ValidationConstraintContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanCopy:void copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanWalker:void bean(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanWalker:void map(java.util.Map)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.bean.BeanWalker:void source(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.vtor.constraint.EqualToFieldConstraint:boolean isValid(jodd.vtor.ValidationConstraintContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.vtor.Vtor:java.util.List validate(jodd.vtor.ValidationContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.vtor.Vtor:java.util.List validate(java.lang.Object)"
        ]
    },
    "jodd.vtor.ValidationConstraintContext:void validateWithin(jodd.vtor.ValidationContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.vtor.constraint.AssertValidConstraint:boolean isValid(jodd.vtor.ValidationConstraintContext,java.lang.Object)"
        ]
    },
    "jodd.lagarto.form.FormTag:java.lang.Object lambda$doAfterBody$0(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.form.FormProcessorVisitor:void processTextareaStartTag(jodd.lagarto.Tag)",
            "jodd.lagarto.form.FormProcessorVisitor:void processInputStartTag(jodd.lagarto.Tag)",
            "jodd.lagarto.form.FormProcessorVisitor:void processOptionOpenTag(jodd.lagarto.Tag)"
        ]
    },
    "jodd.db.oom.dao.GenericDao:boolean isPersistent(jodd.db.oom.DbEntityDescriptor,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:java.lang.Object store(java.lang.Object)"
        ]
    },
    "jodd.madvoc.config.Target:java.lang.Object readValue(jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.ServletContextScope:void lambda$outject$1(javax.servlet.ServletContext,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.CookieScope:void lambda$outject$1(javax.servlet.http.HttpServletResponse,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.HeaderScope:void lambda$outject$1(javax.servlet.http.HttpServletResponse,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.SessionScope:void lambda$outject$1(javax.servlet.http.HttpSession,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)",
            "jodd.madvoc.scope.RequestScope:void lambda$outject$3(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)"
        ]
    },
    "jodd.petite.PetiteContainer:void registerBeanAndWireAndInjectParamsAndInvokeInitMethods(jodd.petite.BeanData)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:void wire(java.lang.Object,jodd.petite.WiringMode)",
            "jodd.petite.PetiteContainer:void addBean(java.lang.String,java.lang.Object,jodd.petite.WiringMode)",
            "jodd.petite.PetiteContainer:java.lang.Object getBean(java.lang.String)",
            "jodd.petite.PetiteContainer:java.lang.Object createBean(java.lang.Class,jodd.petite.WiringMode)"
        ]
    },
    "jodd.htmlstapler.HtmlStaplerFilter:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:void setEntityId(jodd.db.oom.DbEntityDescriptor,java.lang.Object,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:java.lang.Object store(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:void deleteById(java.lang.Object)"
        ]
    },
    "jodd.lagarto.form.FormTag:java.lang.String populateForm(java.lang.String,jodd.lagarto.form.FormFieldResolver)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.form.FormTag:int doAfterBody()"
        ]
    },
    "jodd.decora.parser.DecoraParser:jodd.decora.parser.DecoraTag[] parseDecorator(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.decora.parser.DecoraParser:void decorate(java.io.Writer,char[],char[])"
        ]
    },
    "jodd.lagarto.dom.LagartoDOMBuilder:jodd.lagarto.dom.Document doParse(jodd.lagarto.LagartoParser)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.lagarto.dom.LagartoDOMBuilder:jodd.lagarto.dom.Document parse(char[])",
            "jodd.lagarto.dom.LagartoDOMBuilder:jodd.lagarto.dom.Document parse(java.lang.String)"
        ]
    },
    "jodd.lagarto.filter.SimpleLagartoServletFilter$LagartoParsingProcessor:char[] invokeLagarto(jodd.lagarto.TagAdapter)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.htmlstapler.HtmlStaplerFilter$1:char[] parse(jodd.lagarto.TagWriter,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "jodd.decora.parser.DecoraParser:void parsePage(char[],jodd.decora.parser.DecoraTag[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.decora.parser.DecoraParser:void decorate(java.io.Writer,char[],char[])"
        ]
    },
    "jodd.db.DbQueryBase:void init()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setBean(java.lang.String,java.lang.Object)",
            "jodd.db.DbQueryBase:int executeUpdate(boolean)",
            "jodd.db.DbQueryBase:jodd.db.DbCallResult executeCall()",
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(java.lang.String,java.lang.Object,java.lang.Class,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object,java.lang.Class,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,java.lang.Object[],int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,long[],int)",
            "jodd.db.DbQueryBase:java.sql.ResultSet execute()",
            "jodd.db.DbQuery:void initPrepared()",
            "jodd.db.DbQuery:jodd.db.DbQuery setMap(java.util.Map)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,int[],int)",
            "jodd.db.DbQueryBase:long executeCount(boolean)",
            "jodd.db.DbQuery:jodd.db.DbQuery clearParameters()",
            "jodd.db.DbQuery:void initCallable()",
            "jodd.db.DbQuery:jodd.db.DbQuery setObjects(java.lang.String[],java.lang.Object[])"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,java.lang.Object[],int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:void lambda$setMap$1(java.util.Map,jodd.db.DbQueryNamedParameter)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryParser:void forEachNamedParameter(java.util.function.Consumer)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setObjects(java.lang.String[],java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteContainer:jodd.petite.BeanDefinition lambda$invokeMethod$1(java.lang.Object,jodd.petite.WiringMode)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteContainer:jodd.petite.BeanDefinition lambda$createBean$2(java.lang.Class,jodd.petite.WiringMode)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteContainer:jodd.petite.BeanDefinition lambda$wire$0(java.lang.Object,jodd.petite.WiringMode)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteContainer:java.lang.Object getBean(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:void setBeanProperty(java.lang.String,java.lang.Object)",
            "jodd.petite.PetiteContainer:java.lang.Object getBean(jodd.petite.def.BeanReferences)",
            "jodd.petite.PetiteContainer:java.lang.Object getBean(java.lang.Class)",
            "jodd.petite.PetiteContainer:java.lang.Object invokeProvider(jodd.petite.def.ProviderDefinition)",
            "jodd.petite.BeanData:void wireSets()",
            "jodd.madvoc.component.MadvocContainer:java.lang.Object lookupComponent(java.lang.Class)",
            "jodd.petite.PetiteContainer:java.lang.Object getBeanProperty(java.lang.String)",
            "jodd.madvoc.component.MadvocContainer:java.lang.Object lookupComponent(java.lang.String)"
        ]
    },
    "jodd.db.oom.DbOomQuery:void <init>(jodd.db.DbOom,jodd.db.DbSession,jodd.db.oom.DbSqlGenerator)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbOom:jodd.db.oom.DbOomQuery query(jodd.db.oom.DbSqlGenerator)",
            "jodd.db.oom.DbOomQuery:jodd.db.oom.DbOomQuery query(jodd.db.DbSession,jodd.db.oom.DbSqlGenerator)",
            "jodd.db.oom.sqlgen.DbSqlBuilder:jodd.db.oom.DbOomQuery query(jodd.db.DbSession)"
        ]
    },
    "jodd.db.oom.DbOomQuery:void <init>(jodd.db.DbOom,jodd.db.oom.DbSqlGenerator)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:jodd.db.oom.DbOomQuery query(jodd.db.oom.DbSqlGenerator)",
            "jodd.db.oom.sqlgen.DbSqlBuilder:jodd.db.oom.DbOomQuery query()"
        ]
    },
    "jodd.db.oom.sqlgen.ParsedSql:void <init>(jodd.db.oom.DbSqlGenerator)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.sqlgen.DbSqlBuilder:jodd.db.oom.sqlgen.ParsedSql parse()"
        ]
    },
    "jodd.vtor.Vtor:java.util.List validate(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.vtor.constraint.AssertValidConstraint:boolean isValid(jodd.vtor.ValidationConstraintContext,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:java.lang.Object store(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.ServletContextScope:void lambda$outject$1(javax.servlet.ServletContext,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndOut(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.CookieScope:void lambda$outject$1(javax.servlet.http.HttpServletResponse,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndOut(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.HeaderScope:void lambda$outject$1(javax.servlet.http.HttpServletResponse,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndOut(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.SessionScope:void lambda$outject$1(javax.servlet.http.HttpSession,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndOut(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.madvoc.scope.RequestScope:void lambda$outject$3(javax.servlet.http.HttpServletRequest,jodd.madvoc.config.Target,jodd.madvoc.config.InjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void forEachTargetAndOut(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)"
        ]
    },
    "jodd.petite.PetiteContainer:void wire(java.lang.Object,jodd.petite.WiringMode)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:void wire(java.lang.Object)"
        ]
    },
    "jodd.petite.PetiteContainer:void addBean(java.lang.String,java.lang.Object,jodd.petite.WiringMode)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:void addSelf(java.lang.String)",
            "jodd.petite.PetiteContainer:void addBean(java.lang.String,java.lang.Object)",
            "jodd.petite.PetiteContainer:void addSelf()"
        ]
    },
    "jodd.petite.PetiteContainer:java.lang.Object createBean(java.lang.Class,jodd.petite.WiringMode)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:java.lang.Object createBean(java.lang.Class)"
        ]
    },
    "jodd.db.oom.dao.GenericDao:void deleteById(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:void deleteAllById(java.util.Collection)"
        ]
    },
    "jodd.lagarto.form.FormTag:int doAfterBody()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.decora.parser.DecoraParser:void decorate(java.io.Writer,char[],char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.decora.DecoraServletFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "jodd.lagarto.dom.LagartoDOMBuilder:jodd.lagarto.dom.Document parse(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.jerry.Jerry$JerryParser:jodd.jerry.Jerry parse(char[])"
        ]
    },
    "jodd.lagarto.dom.LagartoDOMBuilder:jodd.lagarto.dom.Document parse(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.jerry.Jerry:jodd.jerry.Jerry after(java.lang.String)",
            "jodd.jerry.Jerry:jodd.jerry.Jerry wrap(java.lang.String)",
            "jodd.jerry.Jerry:jodd.jerry.Jerry prepend(java.lang.String)",
            "jodd.jerry.Jerry:jodd.jerry.Jerry replaceWith(java.lang.String)",
            "jodd.jerry.Jerry:jodd.jerry.Jerry before(java.lang.String)",
            "jodd.jerry.Jerry:jodd.jerry.Jerry html(java.lang.String)",
            "jodd.jerry.Jerry:jodd.jerry.Jerry append(java.lang.String)",
            "jodd.jerry.Jerry$JerryParser:jodd.jerry.Jerry parse(java.lang.String)"
        ]
    },
    "jodd.htmlstapler.HtmlStaplerFilter$1:char[] parse(jodd.lagarto.TagWriter,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQueryBase:int executeUpdate(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:int executeUpdate()"
        ]
    },
    "jodd.db.DbQueryBase:jodd.db.DbCallResult executeCall()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbCallResult executeCall()"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,long[],int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQueryBase:java.sql.ResultSet execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:java.util.List list(jodd.db.QueryMapper)",
            "jodd.db.DbQueryBase:java.lang.Object find(jodd.db.QueryMapper)",
            "jodd.db.DbQueryBase:java.util.Set listSet(jodd.db.QueryMapper)",
            "jodd.db.DbQuery:java.sql.ResultSet execute()"
        ]
    },
    "jodd.db.DbQuery:void initPrepared()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setDouble(java.lang.String,double)",
            "jodd.db.DbQuery:jodd.db.DbQuery setInteger(int,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBytes(int,byte[])",
            "jodd.db.DbQuery:jodd.db.DbQuery setAsciiStream(java.lang.String,java.io.InputStream,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setAsciiStream(int,java.io.InputStream)",
            "jodd.db.DbQuery:jodd.db.DbQuery setDate(java.lang.String,java.sql.Date)",
            "jodd.db.DbQuery:jodd.db.DbQuery setString(int,java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(java.lang.String,java.lang.Object,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setNull(int,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setTimestamp(java.lang.String,java.sql.Timestamp)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBigDecimal(java.lang.String,java.math.BigDecimal)",
            "jodd.db.DbQuery:jodd.db.DbQuery setArray(java.lang.String,java.sql.Array)",
            "jodd.db.DbQuery:jodd.db.DbQuery setDouble(int,double)",
            "jodd.db.DbQuery:jodd.db.DbQuery setLong(int,long)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(int,boolean)",
            "jodd.db.DbQuery:jodd.db.DbQuery setNull(java.lang.String,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(java.lang.String,boolean)",
            "jodd.db.DbQuery:jodd.db.DbQuery setClob(java.lang.String,java.sql.Clob)",
            "jodd.db.DbQuery:jodd.db.DbQuery setTime(java.lang.String,java.sql.Time)",
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setByte(java.lang.String,byte)",
            "jodd.db.DbQuery:jodd.db.DbQuery setString(java.lang.String,java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery setTime(int,java.sql.Time)",
            "jodd.db.DbQuery:jodd.db.DbQuery setRef(java.lang.String,java.sql.Ref)",
            "jodd.db.DbQuery:jodd.db.DbQuery setShort(java.lang.String,short)",
            "jodd.db.DbQuery:jodd.db.DbQuery setAsciiStream(int,java.io.InputStream,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setArray(int,java.sql.Array)",
            "jodd.db.DbQuery:jodd.db.DbQuery setCharacterStream(int,java.io.Reader,int)",
            "jodd.db.DbQuery:void setObject(int,java.lang.Object,int,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setCharacterStream(java.lang.String,java.io.Reader,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setNull(java.lang.String,int,java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery setAsciiStream(java.lang.String,java.io.InputStream)",
            "jodd.db.DbQuery:jodd.db.DbQuery setShort(int,short)",
            "jodd.db.DbQuery:jodd.db.DbQuery setByte(int,byte)",
            "jodd.db.DbQuery:jodd.db.DbQuery setTimestamp(int,java.sql.Timestamp)",
            "jodd.db.DbQuery:jodd.db.DbQuery setFloat(java.lang.String,float)",
            "jodd.db.DbQuery:void setObject(java.lang.String,java.lang.Object,int,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBlob(java.lang.String,java.sql.Blob)",
            "jodd.db.DbQuery:jodd.db.DbQuery setNull(int,int,java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery setInteger(java.lang.String,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setRef(int,java.sql.Ref)",
            "jodd.db.DbQuery:jodd.db.DbQuery setLong(java.lang.String,long)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBigDecimal(int,java.math.BigDecimal)",
            "jodd.db.DbQuery:jodd.db.DbQuery setURL(java.lang.String,java.net.URL)",
            "jodd.db.DbQuery:jodd.db.DbQuery setFloat(int,float)",
            "jodd.db.DbQuery:jodd.db.DbQuery setClob(int,java.sql.Clob)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBytes(java.lang.String,byte[])",
            "jodd.db.DbQuery:jodd.db.DbQuery setURL(int,java.net.URL)",
            "jodd.db.DbQuery:jodd.db.DbQuery setDate(int,java.sql.Date)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBlob(int,java.sql.Blob)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,int[],int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQueryBase:long executeCount(boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:long executeCount()"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery clearParameters()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:void initCallable()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery registerOutParameter(java.lang.String,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery registerOutParameter(int,int)"
        ]
    },
    "jodd.petite.PetiteContainer:java.lang.Object getBean(jodd.petite.def.BeanReferences)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:java.lang.Object lookupMixingScopedBean(jodd.petite.BeanDefinition,jodd.petite.def.BeanReferences)",
            "jodd.petite.BeanData:java.lang.Object newBeanInstance()"
        ]
    },
    "jodd.petite.PetiteContainer:java.lang.Object getBean(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteContainer:java.lang.Object invokeProvider(jodd.petite.def.ProviderDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:java.lang.Object getBean(java.lang.String)"
        ]
    },
    "jodd.petite.BeanData:void wireSets()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.BeanData:void wireBean()"
        ]
    },
    "jodd.madvoc.component.MadvocContainer:java.lang.Object lookupComponent(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:void configureDefaults()",
            "jodd.madvoc.WebApp:void lambda$withRegisteredComponent$1(java.lang.Class,java.util.function.Consumer,jodd.madvoc.component.MadvocContainer)",
            "jodd.madvoc.component.MadvocContainer:java.lang.Object requestComponent(java.lang.Class)",
            "jodd.madvoc.WebApp:jodd.madvoc.WebApp withRegisteredComponent(java.lang.Class,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.component.MadvocContainer:java.lang.Object lookupComponent(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocContainer:java.lang.Object requestComponent(java.lang.String)",
            "jodd.madvoc.component.MadvocContainer:void lambda$fireEvent$3(java.util.Set,jodd.mutable.MutableInteger,java.lang.Class,java.lang.String)"
        ]
    },
    "jodd.db.DbOom:jodd.db.oom.DbOomQuery query(jodd.db.oom.DbSqlGenerator)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:jodd.db.oom.DbOomQuery query(jodd.db.DbSession,jodd.db.oom.DbSqlGenerator)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.sqlgen.DbSqlBuilder:jodd.db.oom.DbOomQuery query(jodd.db.DbSession)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:jodd.db.oom.DbOomQuery query(jodd.db.oom.DbSqlGenerator)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:java.util.List listAll(java.lang.Class)",
            "jodd.db.oom.dao.GenericDao:void save(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.util.List findRelated(java.lang.Class,java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:void deleteById(java.lang.Class,long)",
            "jodd.db.oom.dao.GenericDao:void increaseProperty(java.lang.Class,long,java.lang.String,java.lang.Number)",
            "jodd.db.oom.dao.GenericDao:void decreaseProperty(java.lang.Class,long,java.lang.String,java.lang.Number)",
            "jodd.db.oom.dao.GenericDao:java.util.List find(java.lang.Class,java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object findOneByProperty(java.lang.Class,java.lang.String,java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.util.List find(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object store(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object updateProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:long count(java.lang.Class)",
            "jodd.db.oom.dao.GenericDao:void update(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object updateProperty(java.lang.Object,java.lang.String)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object findById(java.lang.Class,long)",
            "jodd.db.oom.dao.GenericDao:void deleteById(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object findOne(java.lang.Object)"
        ]
    },
    "jodd.db.oom.sqlgen.DbSqlBuilder:jodd.db.oom.DbOomQuery query()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.sqlgen.DbSqlBuilder:jodd.db.oom.sqlgen.ParsedSql parse()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.config.Targets:void forEachTargetAndOut(jodd.madvoc.scope.MadvocScope,java.util.function.BiConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.scope.SessionScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.ServletContextScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.HeaderScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.CookieScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)",
            "jodd.madvoc.scope.RequestScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)"
        ]
    },
    "jodd.petite.PetiteContainer:void wire(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteContainer:void addSelf(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocContainer:void <init>()"
        ]
    },
    "jodd.petite.PetiteContainer:void addBean(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocContainer:void registerComponentInstance(java.lang.String,java.lang.Object)"
        ]
    },
    "jodd.petite.PetiteContainer:void addSelf()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteContainer:java.lang.Object createBean(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:void deleteAllById(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.decora.DecoraServletFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.jerry.Jerry$JerryParser:jodd.jerry.Jerry parse(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.jerry.Jerry:jodd.jerry.Jerry jerry(char[])"
        ]
    },
    "jodd.jerry.Jerry:jodd.jerry.Jerry after(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.jerry.Jerry:jodd.jerry.Jerry wrap(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.jerry.Jerry:jodd.jerry.Jerry prepend(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.jerry.Jerry:jodd.jerry.Jerry replaceWith(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.jerry.Jerry:jodd.jerry.Jerry before(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.jerry.Jerry:jodd.jerry.Jerry html(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.jerry.Jerry:jodd.jerry.Jerry append(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.jerry.Jerry$JerryParser:jodd.jerry.Jerry parse(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.jerry.Jerry:jodd.jerry.Jerry jerry(java.lang.String)"
        ]
    },
    "jodd.db.DbQueryBase:int executeUpdate()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:int executeUpdate()"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbCallResult executeCall()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQueryBase:java.util.List list(jodd.db.QueryMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:java.util.List list(jodd.db.QueryMapper)"
        ]
    },
    "jodd.db.DbQueryBase:java.lang.Object find(jodd.db.QueryMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:java.lang.Object find(jodd.db.QueryMapper)"
        ]
    },
    "jodd.db.DbQueryBase:java.util.Set listSet(jodd.db.QueryMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:java.util.Set listSet(jodd.db.QueryMapper)"
        ]
    },
    "jodd.db.DbQuery:java.sql.ResultSet execute()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:java.util.List list(jodd.db.QueryMapper)",
            "jodd.db.DbQueryBase:java.lang.Object find(jodd.db.QueryMapper)",
            "jodd.db.DbQueryBase:java.util.Set listSet(jodd.db.QueryMapper)",
            "jodd.db.oom.DbOomQuery:java.lang.Object find(java.lang.Class[],boolean,java.sql.ResultSet)",
            "jodd.db.oom.DbOomQuery:jodd.db.oom.mapper.ResultSetMapper executeAndBuildResultSetMapper()"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setDouble(java.lang.String,double)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setDouble(java.lang.String,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setInteger(int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setInteger(int,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBytes(int,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setAsciiStream(java.lang.String,java.io.InputStream,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setAsciiStream(int,java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setDate(java.lang.String,java.sql.Date)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setString(int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setObject(java.lang.String,java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setNull(int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setInteger(int,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBigInteger(int,java.math.BigInteger)",
            "jodd.db.DbQuery:jodd.db.DbQuery setLong(int,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setShort(int,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object,java.lang.Class,int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(int,java.lang.Boolean)",
            "jodd.db.DbQuery:jodd.db.DbQuery setFloat(int,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setDouble(int,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setByte(int,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setTimestamp(java.lang.String,java.sql.Timestamp)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBigDecimal(java.lang.String,java.math.BigDecimal)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setArray(java.lang.String,java.sql.Array)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setDouble(int,double)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setDouble(int,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setLong(int,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setBigInteger(int,java.math.BigInteger)",
            "jodd.db.DbQuery:jodd.db.DbQuery setLong(int,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(int,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(int,java.lang.Boolean)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setNull(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setByte(java.lang.String,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(java.lang.String,java.lang.Boolean)",
            "jodd.db.DbQuery:jodd.db.DbQuery setLong(java.lang.String,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setShort(java.lang.String,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setDouble(java.lang.String,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,int[],int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setInteger(java.lang.String,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBigInteger(java.lang.String,java.math.BigInteger)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,long[],int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setFloat(java.lang.String,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(java.lang.String,java.lang.Boolean)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setClob(java.lang.String,java.sql.Clob)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setTime(java.lang.String,java.sql.Time)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setByte(java.lang.String,byte)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setByte(java.lang.String,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setTime(int,java.sql.Time)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setRef(java.lang.String,java.sql.Ref)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setShort(java.lang.String,short)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setShort(java.lang.String,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setAsciiStream(int,java.io.InputStream,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setArray(int,java.sql.Array)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setCharacterStream(int,java.io.Reader,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:void setObject(int,java.lang.Object,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setCharacterStream(java.lang.String,java.io.Reader,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setNull(java.lang.String,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setAsciiStream(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setShort(int,short)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setShort(int,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setByte(int,byte)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setByte(int,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setTimestamp(int,java.sql.Timestamp)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setFloat(java.lang.String,float)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setFloat(java.lang.String,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:void setObject(java.lang.String,java.lang.Object,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBlob(java.lang.String,java.sql.Blob)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setNull(int,int,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setInteger(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,int[],int)",
            "jodd.db.DbQuery:jodd.db.DbQuery setInteger(java.lang.String,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setRef(int,java.sql.Ref)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setLong(java.lang.String,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setLong(java.lang.String,java.lang.Number)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBigInteger(java.lang.String,java.math.BigInteger)",
            "jodd.db.DbQuery:jodd.db.DbQuery setBatch(java.lang.String,long[],int)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBigDecimal(int,java.math.BigDecimal)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setURL(java.lang.String,java.net.URL)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setFloat(int,float)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery setFloat(int,java.lang.Number)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setClob(int,java.sql.Clob)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBytes(java.lang.String,byte[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setURL(int,java.net.URL)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setDate(int,java.sql.Date)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBlob(int,java.sql.Blob)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQueryBase:long executeCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:long executeCount()"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery registerOutParameter(java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery outLong(java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery outByte(java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery outInteger(java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery outString(java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery outFloat(java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery outBoolean(java.lang.String)",
            "jodd.db.DbQuery:jodd.db.DbQuery outDouble(java.lang.String)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery registerOutParameter(int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQuery:jodd.db.DbQuery outString(int)",
            "jodd.db.DbQuery:jodd.db.DbQuery outByte(int)",
            "jodd.db.DbQuery:jodd.db.DbQuery outLong(int)",
            "jodd.db.DbQuery:jodd.db.DbQuery outBoolean(int)",
            "jodd.db.DbQuery:jodd.db.DbQuery outDouble(int)",
            "jodd.db.DbQuery:jodd.db.DbQuery outInteger(int)",
            "jodd.db.DbQuery:jodd.db.DbQuery outFloat(int)"
        ]
    },
    "jodd.petite.PetiteContainer:java.lang.Object lookupMixingScopedBean(jodd.petite.BeanDefinition,jodd.petite.def.BeanReferences)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.BeanData:void wireProperties()",
            "jodd.petite.BeanData:java.lang.Object invokeMethodInjectionPoint(jodd.petite.def.MethodInjectionPoint)"
        ]
    },
    "jodd.petite.BeanData:java.lang.Object newBeanInstance()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.BeanData:void <init>(jodd.petite.PetiteContainer,jodd.petite.BeanDefinition)"
        ]
    },
    "jodd.petite.BeanData:void wireBean()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:void registerBeanAndWireAndInjectParamsAndInvokeInitMethods(jodd.petite.BeanData)"
        ]
    },
    "jodd.madvoc.WebApp:void configureDefaults()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:jodd.madvoc.WebApp start()"
        ]
    },
    "jodd.madvoc.WebApp:void lambda$withRegisteredComponent$1(java.lang.Class,java.util.function.Consumer,jodd.madvoc.component.MadvocContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.MadvocContainer:java.lang.Object requestComponent(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.WebApp:jodd.madvoc.WebApp withRegisteredComponent(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:jodd.madvoc.WebApp withActionConfig(java.lang.Class,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.component.MadvocContainer:java.lang.Object requestComponent(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.MadvocContainer:void lambda$fireEvent$3(java.util.Set,jodd.mutable.MutableInteger,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteBeans:void lambda$forEachBeanType$0(java.lang.Class,java.util.function.Consumer,jodd.petite.BeanDefinition)"
        ]
    },
    "jodd.db.oom.dao.GenericDao:void save(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:void saveAll(java.util.Collection)"
        ]
    },
    "jodd.db.oom.dao.GenericDao:void deleteById(java.lang.Class,long)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:void increaseProperty(java.lang.Class,long,java.lang.String,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:void decreaseProperty(java.lang.Class,long,java.lang.String,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:long count(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:void update(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:void updateAll(java.util.Collection)"
        ]
    },
    "jodd.madvoc.scope.SessionScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.ServletContextScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.HeaderScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.CookieScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.scope.RequestScope:void outject(jodd.madvoc.ActionRequest,jodd.madvoc.config.Targets)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.MadvocContainer:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:void <init>()",
            "jodd.util.ClassUtil:java.lang.Object newInstance(java.lang.Class)"
        ]
    },
    "jodd.madvoc.component.MadvocContainer:void registerComponentInstance(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocContainer:void registerComponentInstance(java.lang.Object)",
            "jodd.madvoc.petite.PetiteWebApp:void registerMadvocComponents()"
        ]
    },
    "jodd.jerry.Jerry:jodd.jerry.Jerry jerry(char[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.jerry.Jerry:jodd.jerry.Jerry jerry(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:int executeUpdate()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:void save(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object store(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:void deleteById(java.lang.Class,long)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object updateProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:void update(java.lang.Object)",
            "jodd.db.oom.dao.GenericDao:java.lang.Object updateProperty(java.lang.Object,java.lang.String)",
            "jodd.db.oom.dao.GenericDao:void increaseProperty(java.lang.Class,long,java.lang.String,java.lang.Number)",
            "jodd.db.oom.dao.GenericDao:void decreaseProperty(java.lang.Class,long,java.lang.String,java.lang.Number)",
            "jodd.db.oom.dao.GenericDao:void deleteById(java.lang.Object)"
        ]
    },
    "jodd.db.DbQuery:java.util.List list(jodd.db.QueryMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:java.lang.Object find(jodd.db.QueryMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:java.util.Set listSet(jodd.db.QueryMapper)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:jodd.db.oom.mapper.ResultSetMapper executeAndBuildResultSetMapper()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:java.util.Set listSet(java.lang.Class[],int,boolean)",
            "jodd.db.oom.DbListIterator:void <init>(jodd.db.oom.DbOomQuery,java.lang.Class[],boolean)",
            "jodd.db.oom.DbOomQuery:java.util.List list(java.lang.Class[],int,boolean)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setDouble(java.lang.String,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setInteger(int,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBigInteger(int,java.math.BigInteger)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setLong(int,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setShort(int,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(int,java.lang.Boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setFloat(int,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setDouble(int,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setByte(int,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setByte(java.lang.String,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBoolean(java.lang.String,java.lang.Boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setLong(java.lang.String,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setShort(java.lang.String,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setInteger(java.lang.String,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setBigInteger(java.lang.String,java.math.BigInteger)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery setFloat(java.lang.String,java.lang.Number)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:long executeCount()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.dao.GenericDao:long count(java.lang.Class)"
        ]
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outLong(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outByte(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outInteger(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outString(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outFloat(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outBoolean(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outDouble(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outString(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outByte(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outLong(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outBoolean(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outDouble(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outInteger(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.DbQuery:jodd.db.DbQuery outFloat(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.BeanData:void wireProperties()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.BeanData:void wireBean()"
        ]
    },
    "jodd.petite.BeanData:java.lang.Object invokeMethodInjectionPoint(jodd.petite.def.MethodInjectionPoint)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.BeanData:void wireMethods()",
            "jodd.petite.PetiteContainer:java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method)"
        ]
    },
    "jodd.petite.BeanData:void <init>(jodd.petite.PetiteContainer,jodd.petite.BeanDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:java.lang.Object getBean(java.lang.String)",
            "jodd.petite.PetiteContainer:java.lang.Object createBean(java.lang.Class,jodd.petite.WiringMode)"
        ]
    },
    "jodd.madvoc.WebApp:jodd.madvoc.WebApp start()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:jodd.madvoc.WebApp start(java.util.function.Consumer)",
            "jodd.madvoc.Madvoc:jodd.madvoc.WebApp _start(javax.servlet.ServletContext)"
        ]
    },
    "jodd.madvoc.WebApp:jodd.madvoc.WebApp withActionConfig(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteBeans:void lambda$forEachBeanType$0(java.lang.Class,java.util.function.Consumer,jodd.petite.BeanDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteBeans:void forEachBean(java.util.function.Consumer)"
        ]
    },
    "jodd.db.oom.dao.GenericDao:void saveAll(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.dao.GenericDao:void updateAll(java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.WebApp:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:jodd.madvoc.WebApp createWebApp()",
            "jodd.madvoc.petite.PetiteWebApp:void <init>(jodd.petite.PetiteContainer)",
            "jodd.madvoc.Madvoc:jodd.madvoc.WebApp createWebApplication()",
            "jodd.util.ClassUtil:java.lang.Object newInstance(java.lang.Class)"
        ]
    },
    "jodd.util.ClassUtil:java.lang.Object newInstance(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.methref.Methref:void <init>(java.lang.Class)",
            "jodd.csselly.selector.PseudoFunctionSelector:void registerPseudoFunction(java.lang.Class)",
            "jodd.madvoc.Madvoc:jodd.madvoc.WebApp createWebApplication()",
            "jodd.madvoc.component.ResultsManager:jodd.madvoc.result.ActionResult createResult(java.lang.Class)",
            "jodd.db.oom.JoinHintResolver:java.lang.Object[] join(java.lang.Object[],java.lang.String[])",
            "jodd.madvoc.component.WrapperManager:jodd.madvoc.ActionWrapper createWrapper(java.lang.Class)",
            "jodd.decora.DecoraServletFilter:void init(javax.servlet.FilterConfig)",
            "jodd.madvoc.config.Routes:jodd.madvoc.macro.PathMacros createPathMacroInstance()",
            "jodd.bean.BeanUtilUtil:java.lang.Object createBeanProperty(jodd.bean.BeanProperty)",
            "jodd.csselly.selector.PseudoClassSelector:void registerPseudoClass(java.lang.Class)",
            "jodd.introspector.MapperFunctionInstances:jodd.introspector.MapperFunction lambda$lookup$0(java.lang.Class)",
            "jodd.madvoc.component.MadvocController:java.lang.Object createAction(java.lang.Class)",
            "jodd.petite.ScopedProxyManager:java.lang.Object createScopedProxyBean(jodd.petite.PetiteContainer,jodd.petite.BeanDefinition)",
            "jodd.proxetta.ProxettaFactory:java.lang.Object newInstance()",
            "jodd.madvoc.config.Target:java.lang.Object lambda$static$0(java.lang.Class)",
            "jodd.bean.BeanUtilBean:java.lang.Object _getIndexProperty(jodd.bean.BeanProperty)",
            "jodd.db.debug.BaseLoggableFactory:java.lang.Object wrap(java.lang.Object,java.lang.String)",
            "jodd.db.type.SqlTypeManager:jodd.db.type.SqlType lookupSqlType(java.lang.Class)",
            "jodd.bean.BeanUtilUtil:java.lang.Object arrayForcedGet(jodd.bean.BeanProperty,java.lang.Object,int)",
            "jodd.db.oom.DbEntityManager:java.lang.Object createEntityInstance(java.lang.Class)",
            "jodd.util.ClassUtil:java.lang.Object newInstance(java.lang.Class,java.lang.Object[])",
            "jodd.petite.PetiteBeans:java.lang.Object newInternalInstance(java.lang.Class,jodd.petite.PetiteContainer)",
            "jodd.madvoc.component.ActionMethodParser:jodd.madvoc.config.ActionDefinition parseActionDefinition(java.lang.Class,java.lang.reflect.Method)",
            "jodd.madvoc.config.Targets:java.lang.Object createActionMethodArgument(java.lang.Class,java.lang.Object)",
            "jodd.pathref.Pathref:java.lang.Object createProxyObject(java.lang.Class)",
            "jodd.proxetta.advice.DelegateAdviceUtil:java.lang.Object applyAdvice(java.lang.Class)"
        ]
    },
    "jodd.madvoc.component.MadvocContainer:void registerComponentInstance(java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:void registerMadvocComponents()",
            "jodd.madvoc.WebApp:void <init>()",
            "jodd.madvoc.WebApp:jodd.madvoc.WebApp start()"
        ]
    },
    "jodd.madvoc.petite.PetiteWebApp:void registerMadvocComponents()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbListIterator:void <init>(jodd.db.oom.DbOomQuery,java.lang.Class[],boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:java.util.Iterator iterate(java.lang.Class[],boolean)"
        ]
    },
    "jodd.petite.BeanData:void wireMethods()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.BeanData:void wireBean()"
        ]
    },
    "jodd.petite.PetiteContainer:java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.WebApp:jodd.madvoc.WebApp start(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.Madvoc:jodd.madvoc.WebApp _start(javax.servlet.ServletContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.Madvoc:jodd.madvoc.WebApp startWebApplication(javax.servlet.ServletContext)"
        ]
    },
    "jodd.petite.PetiteBeans:void forEachBean(java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteBeans:void forEachBeanType(java.lang.Class,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.WebApp:jodd.madvoc.WebApp createWebApp()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.petite.PetiteWebApp:void <init>(jodd.petite.PetiteContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.Madvoc:jodd.madvoc.WebApp createWebApplication()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.Madvoc:jodd.madvoc.WebApp _start(javax.servlet.ServletContext)"
        ]
    },
    "jodd.methref.Methref:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.methref.Methref:jodd.methref.Methref on(java.lang.Class)",
            "jodd.methref.Methref:java.lang.Object onto(java.lang.Class)"
        ]
    },
    "jodd.csselly.selector.PseudoFunctionSelector:void registerPseudoFunction(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.csselly.selector.PseudoFunctionSelector:void <clinit>()"
        ]
    },
    "jodd.madvoc.component.ResultsManager:jodd.madvoc.result.ActionResult createResult(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.ResultsManager:jodd.madvoc.result.ActionResult register(java.lang.Class)"
        ]
    },
    "jodd.madvoc.component.WrapperManager:jodd.madvoc.ActionWrapper createWrapper(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.WrapperManager:jodd.madvoc.ActionWrapper resolve(java.lang.Class)"
        ]
    },
    "jodd.decora.DecoraServletFilter:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.config.Routes:jodd.madvoc.macro.PathMacros createPathMacroInstance()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Routes:jodd.madvoc.macro.PathMacros buildActionPathMacros(java.lang.String)"
        ]
    },
    "jodd.csselly.selector.PseudoClassSelector:void registerPseudoClass(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.csselly.selector.PseudoClassSelector:void <clinit>()"
        ]
    },
    "jodd.introspector.MapperFunctionInstances:jodd.introspector.MapperFunction lambda$lookup$0(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.MadvocController:java.lang.Object createAction(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocController:java.lang.String invoke(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "jodd.petite.ScopedProxyManager:java.lang.Object createScopedProxyBean(jodd.petite.PetiteContainer,jodd.petite.BeanDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.ScopedProxyManager:java.lang.Object lookupValue(jodd.petite.PetiteContainer,jodd.petite.BeanDefinition,jodd.petite.BeanDefinition)"
        ]
    },
    "jodd.proxetta.ProxettaFactory:java.lang.Object newInstance()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.config.Target:java.lang.Object lambda$static$0(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Target:void writeValue(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "jodd.db.debug.BaseLoggableFactory:java.lang.Object wrap(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,int,int,int)",
            "jodd.db.debug.LoggableCallableStatementFactory:java.sql.CallableStatement prepareCall(java.sql.Connection,java.lang.String,int,int)",
            "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,int)",
            "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,java.lang.String[])",
            "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,int[])",
            "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,int,int)",
            "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String)",
            "jodd.db.debug.LoggableCallableStatementFactory:java.sql.CallableStatement prepareCall(java.sql.Connection,java.lang.String,int,int,int)"
        ]
    },
    "jodd.db.type.SqlTypeManager:jodd.db.type.SqlType lookupSqlType(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object readColumnValue(int,java.lang.Class,java.lang.Class,int)",
            "jodd.db.type.SqlTypeManager:void register(java.lang.Class,java.lang.Class)",
            "jodd.db.DbQuery:jodd.db.DbQuery setObject(int,java.lang.Object,java.lang.Class,int)"
        ]
    },
    "jodd.db.oom.DbEntityManager:java.lang.Object createEntityInstance(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.mapper.DefaultResultSetMapper:java.lang.Object[] parseObjects(java.lang.Class[])"
        ]
    },
    "jodd.util.ClassUtil:java.lang.Object newInstance(java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.aop.AopProxy:java.lang.Object proxyOf(java.lang.Object,java.lang.Class)"
        ]
    },
    "jodd.petite.PetiteBeans:java.lang.Object newInternalInstance(java.lang.Class,jodd.petite.PetiteContainer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteBeans:jodd.petite.scope.Scope resolveScope(java.lang.Class)"
        ]
    },
    "jodd.madvoc.component.ActionMethodParser:jodd.madvoc.config.ActionDefinition parseActionDefinition(java.lang.Class,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.ActionMethodParser:jodd.madvoc.config.ActionRuntime parse(java.lang.Class,java.lang.reflect.Method,jodd.madvoc.config.ActionDefinition)"
        ]
    },
    "jodd.madvoc.config.Targets:java.lang.Object createActionMethodArgument(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:jodd.madvoc.config.Target[] makeTargets(jodd.madvoc.config.Target,jodd.madvoc.config.MethodParam[])",
            "jodd.madvoc.config.Targets:java.lang.Object lambda$makeTargets$0(java.lang.Object,java.lang.Class)"
        ]
    },
    "jodd.pathref.Pathref:java.lang.Object createProxyObject(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.pathref.Pathref:void <init>(java.lang.Class,jodd.pathref.Pathref)",
            "jodd.pathref.Pathref:void <init>(java.lang.Class)"
        ]
    },
    "jodd.proxetta.advice.DelegateAdviceUtil:java.lang.Object applyAdvice(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.WebApp:void registerMadvocComponents()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:jodd.madvoc.WebApp start()",
            "jodd.madvoc.petite.PetiteWebApp:void registerMadvocComponents()"
        ]
    },
    "jodd.db.oom.DbOomQuery:java.util.Iterator iterate(java.lang.Class[],boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.oom.DbOomQuery:java.util.Iterator iterate()",
            "jodd.db.oom.DbOomQuery:java.util.Iterator iterate(java.lang.Class[])"
        ]
    },
    "jodd.madvoc.Madvoc:jodd.madvoc.WebApp startWebApplication(javax.servlet.ServletContext)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.MadvocContextListener:void contextInitialized(javax.servlet.ServletContextEvent)"
        ]
    },
    "jodd.petite.PetiteBeans:void forEachBeanType(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocContainer:void fireEvent(java.lang.Class)"
        ]
    },
    "jodd.methref.Methref:jodd.methref.Methref on(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.result.PathResult:jodd.methref.Methref wrapTargetToMethref(java.lang.Class)"
        ]
    },
    "jodd.methref.Methref:java.lang.Object onto(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.csselly.selector.PseudoFunctionSelector:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.ResultsManager:jodd.madvoc.result.ActionResult register(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.ResultsManager:jodd.madvoc.result.ActionResult lookupAndRegisterIfMissing(java.lang.Class)"
        ]
    },
    "jodd.madvoc.component.WrapperManager:jodd.madvoc.ActionWrapper resolve(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.WrapperManager:jodd.madvoc.ActionWrapper[] resolveAll(java.lang.Class[])",
            "jodd.madvoc.component.WrapperManager:java.lang.Class[] expand(java.lang.Class[])"
        ]
    },
    "jodd.madvoc.config.Routes:jodd.madvoc.macro.PathMacros buildActionPathMacros(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.RouteChunk:void <init>(jodd.madvoc.config.Routes,jodd.madvoc.config.RouteChunk,java.lang.String)"
        ]
    },
    "jodd.csselly.selector.PseudoClassSelector:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.MadvocController:java.lang.String invoke(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.ScopedProxyManager:java.lang.Object lookupValue(jodd.petite.PetiteContainer,jodd.petite.BeanDefinition,jodd.petite.BeanDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteContainer:java.lang.Object lookupMixingScopedBean(jodd.petite.BeanDefinition,jodd.petite.def.BeanReferences)"
        ]
    },
    "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,int,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:void initializeJdbc()"
        ]
    },
    "jodd.db.debug.LoggableCallableStatementFactory:java.sql.CallableStatement prepareCall(java.sql.Connection,java.lang.String,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:void initializeJdbc()"
        ]
    },
    "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:void initializeJdbc()"
        ]
    },
    "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:void initializeJdbc()"
        ]
    },
    "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,int[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:void initializeJdbc()"
        ]
    },
    "jodd.db.debug.LoggablePreparedStatementFactory:java.sql.PreparedStatement create(java.sql.Connection,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.debug.LoggableCallableStatementFactory:java.sql.CallableStatement prepareCall(java.sql.Connection,java.lang.String,int,int,int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:void initializeJdbc()"
        ]
    },
    "jodd.db.type.SqlTypeManager:void register(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.type.SqlTypeManager:void registerDefaults()"
        ]
    },
    "jodd.aop.AopProxy:java.lang.Object proxyOf(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteBeans:jodd.petite.scope.Scope resolveScope(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteBeans:jodd.petite.BeanDefinition registerPetiteBean(java.lang.Class,java.lang.String,java.lang.Class,jodd.petite.WiringMode,boolean,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.component.ActionMethodParser:jodd.madvoc.config.ActionRuntime parse(java.lang.Class,java.lang.reflect.Method,jodd.madvoc.config.ActionDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.config.Targets:jodd.madvoc.config.Target[] makeTargets(jodd.madvoc.config.Target,jodd.madvoc.config.MethodParam[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Targets:void <init>(jodd.madvoc.ActionRequest)"
        ]
    },
    "jodd.madvoc.config.Targets:java.lang.Object lambda$makeTargets$0(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Target:void writeValue(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "jodd.pathref.Pathref:void <init>(java.lang.Class,jodd.pathref.Pathref)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.pathref.Pathref:java.lang.Object continueWith(java.lang.Object,java.lang.String,java.lang.Class)",
            "jodd.pathref.Pathref:void <init>(java.lang.Class,jodd.pathref.Pathref,jodd.pathref.Pathref$1)"
        ]
    },
    "jodd.pathref.Pathref:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.pathref.Pathref:jodd.pathref.Pathref on(java.lang.Class)"
        ]
    },
    "jodd.db.oom.DbOomQuery:java.util.Iterator iterate()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.db.oom.DbOomQuery:java.util.Iterator iterate(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.MadvocContextListener:void contextInitialized(javax.servlet.ServletContextEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.MadvocContainer:void fireEvent(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:jodd.madvoc.WebApp start()",
            "jodd.madvoc.WebApp:void shutdown()"
        ]
    },
    "jodd.madvoc.result.PathResult:jodd.methref.Methref wrapTargetToMethref(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.result.PathResult:void <init>(java.lang.Class,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.component.ResultsManager:jodd.madvoc.result.ActionResult lookupAndRegisterIfMissing(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.ResultsManager:jodd.madvoc.result.ActionResult lookup(jodd.madvoc.ActionRequest,java.lang.Object)"
        ]
    },
    "jodd.madvoc.component.WrapperManager:jodd.madvoc.ActionWrapper[] resolveAll(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.WrapperManager:java.lang.Class[] expand(java.lang.Class[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.WrapperManager:jodd.madvoc.ActionWrapper[] resolveAll(java.lang.Class[])"
        ]
    },
    "jodd.madvoc.config.RouteChunk:void <init>(jodd.madvoc.config.Routes,jodd.madvoc.config.RouteChunk,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Routes:void <init>(jodd.madvoc.component.ActionsManager)",
            "jodd.madvoc.config.RouteChunk:jodd.madvoc.config.RouteChunk add(java.lang.String)"
        ]
    },
    "jodd.db.DbQueryBase:void initializeJdbc()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.DbQueryBase:void init()"
        ]
    },
    "jodd.db.type.SqlTypeManager:void registerDefaults()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.type.SqlTypeManager:void <init>()"
        ]
    },
    "jodd.petite.PetiteBeans:jodd.petite.BeanDefinition registerPetiteBean(java.lang.Class,java.lang.String,java.lang.Class,jodd.petite.WiringMode,boolean,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.petite.PetiteRegistry$BeanRegister:void register()",
            "jodd.petite.PetiteBeans:jodd.petite.BeanDefinition registerPetiteBean(java.lang.Class)",
            "jodd.petite.PetiteBeans:jodd.petite.BeanDefinition registerPetiteBean(java.lang.Class,java.util.function.Consumer)",
            "jodd.madvoc.component.MadvocContainer:void registerComponent(java.lang.String,java.lang.Class,java.util.function.Consumer)",
            "jodd.petite.AutomagicPetiteConfigurator:void lambda$registerAsConsumer$0(jodd.io.findfile.ClassScanner$ClassPathEntry)",
            "jodd.petite.PetiteContainer:void addBean(java.lang.String,java.lang.Object,jodd.petite.WiringMode)",
            "jodd.madvoc.component.MadvocContainer:void registerComponent(java.lang.String,java.lang.Class)"
        ]
    },
    "jodd.madvoc.config.Targets:void <init>(jodd.madvoc.ActionRequest)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.ActionRequest:void <init>(jodd.madvoc.component.MadvocController,java.lang.String,java.lang.String[],jodd.madvoc.config.ActionRuntime,java.lang.Object,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "jodd.pathref.Pathref:java.lang.Object continueWith(java.lang.Object,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.pathref.Pathref:void <init>(java.lang.Class,jodd.pathref.Pathref,jodd.pathref.Pathref$1)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.pathref.Pathref$1:java.lang.Object get(int)"
        ]
    },
    "jodd.pathref.Pathref:jodd.pathref.Pathref on(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.WebApp:void shutdown()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.Madvoc:void stopWebApplication()"
        ]
    },
    "jodd.madvoc.result.PathResult:void <init>(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.result.PermRedirect:void <init>(java.lang.Class,java.util.function.Consumer)",
            "jodd.madvoc.result.Redirect:void <init>(java.lang.Class,java.util.function.Consumer)",
            "jodd.madvoc.result.Chain:void <init>(java.lang.Class,java.util.function.Consumer)",
            "jodd.madvoc.result.Forward:void <init>(java.lang.Class,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.component.ResultsManager:jodd.madvoc.result.ActionResult lookup(jodd.madvoc.ActionRequest,java.lang.Object)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.config.Routes:void <init>(jodd.madvoc.component.ActionsManager)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.ActionsManager:void <init>()"
        ]
    },
    "jodd.madvoc.config.RouteChunk:jodd.madvoc.config.RouteChunk add(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.RouteChunk:jodd.madvoc.config.RouteChunk findOrCreateChild(java.lang.String)"
        ]
    },
    "jodd.db.type.SqlTypeManager:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.db.type.SqlTypeManager:void <clinit>()"
        ]
    },
    "jodd.petite.PetiteRegistry$BeanRegister:void register()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteBeans:jodd.petite.BeanDefinition registerPetiteBean(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.petite.PetiteBeans:jodd.petite.BeanDefinition registerPetiteBean(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.MadvocContainer:void registerComponent(java.lang.String,java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocContainer:void registerComponent(java.lang.Class,java.util.function.Consumer)"
        ]
    },
    "jodd.petite.AutomagicPetiteConfigurator:void lambda$registerAsConsumer$0(jodd.io.findfile.ClassScanner$ClassPathEntry)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.MadvocContainer:void registerComponent(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocContainer:void registerComponent(java.lang.Class)"
        ]
    },
    "jodd.madvoc.ActionRequest:void <init>(jodd.madvoc.component.MadvocController,java.lang.String,java.lang.String[],jodd.madvoc.config.ActionRuntime,java.lang.Object,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocController:jodd.madvoc.ActionRequest createActionRequest(java.lang.String,java.lang.String[],jodd.madvoc.config.ActionRuntime,java.lang.Object,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "jodd.pathref.Pathref$1:java.lang.Object get(int)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.Madvoc:void stopWebApplication()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.MadvocContextListener:void contextDestroyed(javax.servlet.ServletContextEvent)"
        ]
    },
    "jodd.madvoc.result.PermRedirect:void <init>(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.result.PermRedirect:jodd.madvoc.result.PermRedirect to(java.lang.Class,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.result.Redirect:void <init>(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.result.Redirect:jodd.madvoc.result.Redirect to(java.lang.Object,java.util.function.Consumer)",
            "jodd.madvoc.result.Redirect:jodd.madvoc.result.Redirect to(java.lang.Class,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.result.Chain:void <init>(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.result.Chain:jodd.madvoc.result.Chain to(java.lang.Class,java.util.function.Consumer)",
            "jodd.madvoc.result.Chain:jodd.madvoc.result.Chain to(java.lang.Object,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.result.Forward:void <init>(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.result.Forward:jodd.madvoc.result.Forward to(java.lang.Object,java.util.function.Consumer)",
            "jodd.madvoc.result.Forward:jodd.madvoc.result.Forward to(java.lang.Class,java.util.function.Consumer)"
        ]
    },
    "jodd.madvoc.component.ActionsManager:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.proxetta.ProxettaAwareActionsManager:void <init>()",
            "jodd.util.ClassUtil:java.lang.Object newInstance(java.lang.Class)"
        ]
    },
    "jodd.madvoc.config.RouteChunk:jodd.madvoc.config.RouteChunk findOrCreateChild(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Routes:jodd.madvoc.config.RouteChunk registerPath(java.lang.String,java.lang.String)",
            "jodd.madvoc.config.Routes:jodd.madvoc.config.ActionRuntime _lookup(java.lang.String,java.lang.String[])"
        ]
    },
    "jodd.db.type.SqlTypeManager:void <clinit>()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.MadvocContainer:void registerComponent(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:void lambda$start$2(jodd.util.ClassConsumer)"
        ]
    },
    "jodd.madvoc.component.MadvocContainer:void registerComponent(java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.WebApp:void registerMadvocComponents()",
            "jodd.madvoc.petite.PetiteWebApp:void registerMadvocComponents()"
        ]
    },
    "jodd.madvoc.component.MadvocController:jodd.madvoc.ActionRequest createActionRequest(java.lang.String,java.lang.String[],jodd.madvoc.config.ActionRuntime,java.lang.Object,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.MadvocController:java.lang.String invoke(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "jodd.madvoc.MadvocContextListener:void contextDestroyed(javax.servlet.ServletContextEvent)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.result.PermRedirect:jodd.madvoc.result.PermRedirect to(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.result.Redirect:jodd.madvoc.result.Redirect to(java.lang.Object,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.result.Redirect:jodd.madvoc.result.Redirect to(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.result.Chain:jodd.madvoc.result.Chain to(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.result.Chain:jodd.madvoc.result.Chain to(java.lang.Object,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.result.Forward:jodd.madvoc.result.Forward to(java.lang.Object,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.result.Forward:jodd.madvoc.result.Forward to(java.lang.Class,java.util.function.Consumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.proxetta.ProxettaAwareActionsManager:void <init>()": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.config.Routes:jodd.madvoc.config.RouteChunk registerPath(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.ActionsManager:jodd.madvoc.config.ActionRuntime registerActionRuntime(jodd.madvoc.config.ActionRuntime)"
        ]
    },
    "jodd.madvoc.config.Routes:jodd.madvoc.config.ActionRuntime _lookup(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.config.Routes:jodd.madvoc.config.ActionRuntime lookup(java.lang.String,java.lang.String[])"
        ]
    },
    "jodd.madvoc.WebApp:void lambda$start$2(jodd.util.ClassConsumer)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.ActionsManager:jodd.madvoc.config.ActionRuntime registerActionRuntime(jodd.madvoc.config.ActionRuntime)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.ActionsManager:jodd.madvoc.config.ActionRuntime registerAction(java.lang.Class,java.lang.reflect.Method,jodd.madvoc.config.ActionDefinition)"
        ]
    },
    "jodd.madvoc.config.Routes:jodd.madvoc.config.ActionRuntime lookup(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.ActionsManager:jodd.madvoc.config.ActionRuntime lookup(java.lang.String,java.lang.String[])"
        ]
    },
    "jodd.madvoc.component.ActionsManager:jodd.madvoc.config.ActionRuntime registerAction(java.lang.Class,java.lang.reflect.Method,jodd.madvoc.config.ActionDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": [
            "jodd.madvoc.component.ActionsManager:jodd.madvoc.config.ActionRuntime registerAction(java.lang.Class,java.lang.String,jodd.madvoc.config.ActionDefinition)",
            "jodd.madvoc.proxetta.ProxettaAwareActionsManager:jodd.madvoc.config.ActionRuntime registerAction(java.lang.Class,java.lang.reflect.Method,jodd.madvoc.config.ActionDefinition)"
        ]
    },
    "jodd.madvoc.component.ActionsManager:jodd.madvoc.config.ActionRuntime lookup(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.component.ActionsManager:jodd.madvoc.config.ActionRuntime registerAction(java.lang.Class,java.lang.String,jodd.madvoc.config.ActionDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    },
    "jodd.madvoc.proxetta.ProxettaAwareActionsManager:jodd.madvoc.config.ActionRuntime registerAction(java.lang.Class,java.lang.reflect.Method,jodd.madvoc.config.ActionDefinition)": {
        "isVulRoot": false,
        "srcRoot": [
            "jodd.json.MapToBean:java.lang.Object map2bean(java.util.Map,java.lang.Class)"
        ],
        "vulCaller": []
    }
}
{
    "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)",
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)"
        ],
        "vulCaller": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)"
        ]
    },
    "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)",
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,boolean,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,boolean,java.io.File[])": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File getParent(java.io.File,int)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File getParent(java.io.File,int)",
            "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File getParent(java.io.File,int)",
            "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File getParent(java.io.File,int)",
            "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File touch(java.io.File,java.lang.String)",
            "cn.hutool.core.io.file.FileCopier:java.io.File copy()",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File touch(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileCopier:java.io.File copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.file.FileCopier:java.lang.Object copy()",
            "cn.hutool.core.io.FileUtil:java.io.File copyContent(java.io.File,java.io.File,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File copy(java.io.File,java.io.File,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File copyFilesFromDir(java.io.File,java.io.File,boolean)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String)",
            "cn.hutool.core.util.XmlUtil:org.w3c.dom.Document readXML(java.lang.String)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:boolean clean(java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean exist(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean isDirectory(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File copy(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.FileUtil:java.lang.Object load(cn.hutool.core.io.file.FileReader$ReaderHandler,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean isFile(java.lang.String)",
            "cn.hutool.core.io.resource.FileResource:void <init>(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.nio.charset.Charset,cn.hutool.core.io.file.FileReader$ReaderHandler)",
            "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.nio.charset.Charset,java.util.Collection)",
            "cn.hutool.core.io.FileUtil:java.io.File getWebRoot()",
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:byte[] unzipFileBytes(java.lang.String,java.nio.charset.Charset,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedInputStream getInputStream(java.lang.String)",
            "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File mkParentDirs(java.lang.String)",
            "cn.hutool.core.io.FileTypeUtil:java.lang.String getTypeByPath(java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean del(java.lang.String)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File getTmpDir()",
            "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String,java.io.FileFilter)",
            "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.file.FileCopier:cn.hutool.core.io.file.FileCopier create(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File mkdir(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:byte[] readBytes(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.lang.String,java.util.Collection)",
            "cn.hutool.core.io.FileUtil:java.io.File getUserHomeDir()",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean,cn.hutool.core.text.csv.CsvWriteConfig)",
            "cn.hutool.core.io.FileUtil:java.io.File[] ls(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.lang.String getParent(java.lang.String,int)",
            "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.ClassLoader,java.lang.Class)",
            "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeBytes(byte[],java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:void writeToStream(java.lang.String,java.io.OutputStream)",
            "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedOutputStream getOutputStream(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File writeFromStream(java.io.InputStream,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)"
        ]
    },
    "cn.hutool.core.util.XmlUtil:org.w3c.dom.Document readXML(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.FileUtil:boolean clean(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean exist(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean isDirectory(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File copy(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object load(cn.hutool.core.io.file.FileReader$ReaderHandler,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean isFile(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.FileResource:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.resource.ResourceUtil:cn.hutool.core.io.resource.Resource getResourceObj(java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.nio.charset.Charset,cn.hutool.core.io.file.FileReader$ReaderHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.lang.Object loadUtf8(java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.nio.charset.Charset,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.util.Collection readUtf8Lines(java.lang.String,java.util.Collection)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File getWebRoot()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.BufferedReader getUtf8Reader(java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:byte[] unzipFileBytes(java.lang.String,java.nio.charset.Charset,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:byte[] unzipFileBytes(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedInputStream getInputStream(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File mkParentDirs(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileTypeUtil:java.lang.String getTypeByPath(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean del(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File getTmpDir()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String,java.io.FileFilter)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.file.FileCopier:cn.hutool.core.io.file.FileCopier create(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File mkdir(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.FileUtil:byte[] readBytes(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File getUserHomeDir()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.lang.String readUtf8String(java.lang.String)"
        ]
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean,cn.hutool.core.text.csv.CsvWriteConfig)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File[] ls(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List listFileNames(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.ClassLoader,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.ClassLoader)",
            "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String)",
            "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.Class)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String,java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String,java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileCopier:java.lang.Object copy()": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File copyContent(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File copy(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File copy(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.FileUtil:void move(java.io.File,java.io.File,boolean)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File copyFilesFromDir(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeBytes(byte[],java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeUtf8String(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:void writeToStream(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedOutputStream getOutputStream(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File appendUtf8String(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeFromStream(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.nio.charset.Charset,boolean)"
        ]
    },
    "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:cn.hutool.core.io.resource.Resource getResourceObj(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object loadUtf8(java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List readUtf8Lines(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.util.Collection readUtf8Lines(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedReader getUtf8Reader(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:byte[] unzipFileBytes(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeUtf8Lines(java.util.Collection,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File appendUtf8Lines(java.util.Collection,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.String readUtf8String(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List listFileNames(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.io.resource.ResourceUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.resource.ResourceUtil:java.lang.String readUtf8Str(java.lang.String)",
            "cn.hutool.core.io.resource.ResourceUtil:java.io.InputStream getStreamSafe(java.lang.String)",
            "cn.hutool.core.io.resource.ResourceUtil:java.io.InputStream getStream(java.lang.String)",
            "cn.hutool.core.io.resource.ResourceUtil:cn.hutool.core.io.resource.Resource getResourceObj(java.lang.String)",
            "cn.hutool.core.io.resource.ResourceUtil:java.lang.String readStr(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.resource.ClassPathResource:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:void move(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeUtf8String(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendUtf8String(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": [
            "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List readUtf8Lines(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeUtf8Lines(java.util.Collection,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendUtf8Lines(java.util.Collection,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.lang.String readUtf8Str(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.io.InputStream getStreamSafe(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.io.InputStream getStream(java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.io.resource.ResourceUtil:java.lang.String readStr(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    },
    "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String)": {
        "isVulRoot": false,
        "srcRoot": [
            "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])",
            "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)"
        ],
        "vulCaller": []
    }
}
{
    "org.apache.zookeeper.server.FinalRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void run()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void run()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void run()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void run()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void pRequest(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void flush(java.util.LinkedList)",
            "org.apache.zookeeper.server.ZooKeeperServer:void submitRequest(org.apache.zookeeper.server.Request)"
        ]
    },
    "org.apache.zookeeper.server.quorum.CommitProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.FollowerZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.quorum.LeaderZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.quorum.ObserverZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.FollowerZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void run()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void run()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void run()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void run()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void pRequest(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void flush(java.util.LinkedList)",
            "org.apache.zookeeper.server.ZooKeeperServer:void submitRequest(org.apache.zookeeper.server.Request)"
        ]
    },
    "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.ObserverZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void run()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void run()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void run()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void run()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void pRequest(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void flush(java.util.LinkedList)",
            "org.apache.zookeeper.server.ZooKeeperServer:void submitRequest(org.apache.zookeeper.server.Request)"
        ]
    },
    "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.PrepRequestProcessor:void pRequest(org.apache.zookeeper.server.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.PrepRequestProcessor:void run()"
        ]
    },
    "org.apache.zookeeper.server.SyncRequestProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.FollowerZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.quorum.ObserverZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void initialize()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.server.ZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.SyncRequestProcessor:void flush(java.util.LinkedList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void submitRequest(org.apache.zookeeper.server.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.LearnerHandler:void run()",
            "org.apache.zookeeper.server.ZooKeeperServer:void submitRequest(org.apache.zookeeper.server.ServerCnxn,long,int,int,java.nio.ByteBuffer,java.util.List)",
            "org.apache.zookeeper.server.ZooKeeperServer:void processPacket(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection:void starter(org.apache.zookeeper.server.quorum.QuorumPeer)"
        ]
    },
    "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.FastLeaderElection:void starter(org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.quorum.QuorumCnxManager)"
        ]
    },
    "org.apache.zookeeper.server.quorum.FollowerZooKeeperServer:void setupRequestProcessors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void startup()"
        ]
    },
    "org.apache.zookeeper.server.quorum.LeaderZooKeeperServer:void setupRequestProcessors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void startup()"
        ]
    },
    "org.apache.zookeeper.server.quorum.ObserverZooKeeperServer:void setupRequestProcessors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void startup()"
        ]
    },
    "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void start()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void startup(org.apache.zookeeper.server.ZooKeeperServer)"
        ]
    },
    "org.apache.zookeeper.Login:void startThreadIfNeeded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.client.ZooKeeperSaslClient:javax.security.sasl.SaslClient createSaslClient(java.lang.String,java.lang.String)",
            "org.apache.zookeeper.server.ServerCnxnFactory:void configureSaslLogin()"
        ]
    },
    "org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer:void setupRequestProcessors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void startup()"
        ]
    },
    "org.apache.zookeeper.server.PrepRequestProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.LeaderZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.server.ZooKeeperServer:void setupRequestProcessors()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.LeaderZooKeeperServer:void setupRequestProcessors()"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void setupRequestProcessors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void startup()"
        ]
    },
    "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.FollowerZooKeeperServer:void shutdown()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ObserverZooKeeperServer:void shutdown()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.quorum.LearnerHandler:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor:void run()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void submitRequest(org.apache.zookeeper.server.ServerCnxn,long,int,int,java.nio.ByteBuffer,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void close(long)",
            "org.apache.zookeeper.server.ZooKeeperServer:long createSession(org.apache.zookeeper.server.ServerCnxn,byte[],int)"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void processPacket(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.NIOServerCnxn:void readRequest()",
            "org.apache.zookeeper.server.NettyServerCnxn:void receiveMessage(org.jboss.netty.buffer.ChannelBuffer)"
        ]
    },
    "org.apache.zookeeper.server.quorum.AuthFastLeaderElection:void starter(org.apache.zookeeper.server.quorum.QuorumPeer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection:void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,boolean)",
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection:void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)"
        ]
    },
    "org.apache.zookeeper.server.quorum.FastLeaderElection:void starter(org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.quorum.QuorumCnxManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.FastLeaderElection:void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.quorum.QuorumCnxManager)"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void startup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.Leader:void startZkServer()",
            "org.apache.zookeeper.server.quorum.Learner:void syncWithLeader(long)",
            "org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer:void startup()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void startup(org.apache.zookeeper.server.ZooKeeperServer)",
            "org.apache.zookeeper.server.NettyServerCnxnFactory:void startup(org.apache.zookeeper.server.ZooKeeperServer)"
        ]
    },
    "org.apache.zookeeper.server.quorum.QuorumPeer:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.QuorumPeerMain:void runFromConfig(org.apache.zookeeper.server.quorum.QuorumPeerConfig)",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.NIOServerCnxnFactory:void startup(org.apache.zookeeper.server.ZooKeeperServer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServerMain:void runFromConfig(org.apache.zookeeper.server.ServerConfig)"
        ]
    },
    "org.apache.zookeeper.client.ZooKeeperSaslClient:javax.security.sasl.SaslClient createSaslClient(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.client.ZooKeeperSaslClient:void <init>(java.lang.String)"
        ]
    },
    "org.apache.zookeeper.server.ServerCnxnFactory:void configureSaslLogin()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void configure(java.net.InetSocketAddress,int)",
            "org.apache.zookeeper.server.NettyServerCnxnFactory:void configure(java.net.InetSocketAddress,int)"
        ]
    },
    "org.apache.zookeeper.server.quorum.CommitProcessor:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.quorum.FollowerZooKeeperServer:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.Learner:void shutdown()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void shutdown()",
            "org.apache.zookeeper.server.NettyServerCnxnFactory:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer$ZooKeeperServerListenerImpl:void notifyStopping(java.lang.String,int)",
            "org.apache.zookeeper.server.ZooKeeperServerMain:void runFromConfig(org.apache.zookeeper.server.ServerConfig)"
        ]
    },
    "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.quorum.ObserverZooKeeperServer:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.Learner:void shutdown()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void shutdown()",
            "org.apache.zookeeper.server.NettyServerCnxnFactory:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer$ZooKeeperServerListenerImpl:void notifyStopping(java.lang.String,int)",
            "org.apache.zookeeper.server.ZooKeeperServerMain:void runFromConfig(org.apache.zookeeper.server.ServerConfig)"
        ]
    },
    "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.PrepRequestProcessor:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.CommitProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.FollowerZooKeeperServer:void shutdown()",
            "org.apache.zookeeper.server.quorum.Leader:void shutdown(java.lang.String)",
            "org.apache.zookeeper.server.quorum.ObserverZooKeeperServer:void shutdown()",
            "org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer:void shutdown()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void shutdown()",
            "org.apache.zookeeper.server.NettyServerCnxnFactory:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer$ZooKeeperServerListenerImpl:void notifyStopping(java.lang.String,int)",
            "org.apache.zookeeper.server.ZooKeeperServerMain:void runFromConfig(org.apache.zookeeper.server.ServerConfig)"
        ]
    },
    "org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.Leader:void lead()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void close(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void closeSession(long)",
            "org.apache.zookeeper.server.ZooKeeperServer:void expire(org.apache.zookeeper.server.SessionTracker$Session)"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:long createSession(org.apache.zookeeper.server.ServerCnxn,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void processConnectRequest(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer)"
        ]
    },
    "org.apache.zookeeper.server.NIOServerCnxn:void readRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.NIOServerCnxn:void readPayload()"
        ]
    },
    "org.apache.zookeeper.server.NettyServerCnxn:void receiveMessage(org.jboss.netty.buffer.ChannelBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler:void processMessage(org.jboss.netty.channel.MessageEvent,org.apache.zookeeper.server.NettyServerCnxn)"
        ]
    },
    "org.apache.zookeeper.server.quorum.AuthFastLeaderElection:void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:org.apache.zookeeper.server.quorum.Election createElectionAlgorithm(int)"
        ]
    },
    "org.apache.zookeeper.server.quorum.AuthFastLeaderElection:void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:org.apache.zookeeper.server.quorum.Election createElectionAlgorithm(int)"
        ]
    },
    "org.apache.zookeeper.server.quorum.FastLeaderElection:void <init>(org.apache.zookeeper.server.quorum.QuorumPeer,org.apache.zookeeper.server.quorum.QuorumCnxManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:org.apache.zookeeper.server.quorum.Election createElectionAlgorithm(int)"
        ]
    },
    "org.apache.zookeeper.server.quorum.Leader:void startZkServer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.Leader:void lead()"
        ]
    },
    "org.apache.zookeeper.server.quorum.Learner:void syncWithLeader(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.Follower:void followLeader()",
            "org.apache.zookeeper.server.quorum.Observer:void observeLeader()"
        ]
    },
    "org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer:void startup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer$1:void run()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void startup(org.apache.zookeeper.server.ZooKeeperServer)",
            "org.apache.zookeeper.server.NettyServerCnxnFactory:void startup(org.apache.zookeeper.server.ZooKeeperServer)"
        ]
    },
    "org.apache.zookeeper.server.NettyServerCnxnFactory:void startup(org.apache.zookeeper.server.ZooKeeperServer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServerMain:void runFromConfig(org.apache.zookeeper.server.ServerConfig)"
        ]
    },
    "org.apache.zookeeper.server.quorum.QuorumPeerMain:void runFromConfig(org.apache.zookeeper.server.quorum.QuorumPeerConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeerMain:void initializeAndRun(java.lang.String[])"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServerMain:void runFromConfig(org.apache.zookeeper.server.ServerConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServerMain:void initializeAndRun(java.lang.String[])"
        ]
    },
    "org.apache.zookeeper.client.ZooKeeperSaslClient:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ClientCnxn$SendThread:void startConnect()"
        ]
    },
    "org.apache.zookeeper.server.NIOServerCnxnFactory:void configure(java.net.InetSocketAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeerMain:void runFromConfig(org.apache.zookeeper.server.quorum.QuorumPeerConfig)",
            "org.apache.zookeeper.server.ServerCnxnFactory:org.apache.zookeeper.server.ServerCnxnFactory createFactory(java.net.InetSocketAddress,int)",
            "org.apache.zookeeper.server.ZooKeeperServerMain:void runFromConfig(org.apache.zookeeper.server.ServerConfig)"
        ]
    },
    "org.apache.zookeeper.server.NettyServerCnxnFactory:void configure(java.net.InetSocketAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeerMain:void runFromConfig(org.apache.zookeeper.server.quorum.QuorumPeerConfig)",
            "org.apache.zookeeper.server.ServerCnxnFactory:org.apache.zookeeper.server.ServerCnxnFactory createFactory(java.net.InetSocketAddress,int)",
            "org.apache.zookeeper.server.ZooKeeperServerMain:void runFromConfig(org.apache.zookeeper.server.ServerConfig)"
        ]
    },
    "org.apache.zookeeper.server.quorum.Learner:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.Follower:void shutdown()",
            "org.apache.zookeeper.server.quorum.Observer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.NIOServerCnxnFactory:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServerMain:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.NettyServerCnxnFactory:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServerMain:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer$ZooKeeperServerListenerImpl:void notifyStopping(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperCriticalThread:void handleException(java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.zookeeper.server.quorum.Leader:void shutdown(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.Leader:void lead()",
            "org.apache.zookeeper.server.quorum.Leader:org.apache.zookeeper.server.quorum.Leader$Proposal propose(org.apache.zookeeper.server.Request)",
            "org.apache.zookeeper.server.quorum.QuorumPeer:void run()",
            "org.apache.zookeeper.server.quorum.QuorumPeer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void run()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void shutdown()",
            "org.apache.zookeeper.server.NettyServerCnxnFactory:void shutdown()",
            "org.apache.zookeeper.server.ZooKeeperServer$ZooKeeperServerListenerImpl:void notifyStopping(java.lang.String,int)",
            "org.apache.zookeeper.server.ZooKeeperServerMain:void runFromConfig(org.apache.zookeeper.server.ServerConfig)"
        ]
    },
    "org.apache.zookeeper.server.quorum.Leader:void lead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void run()"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void closeSession(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ConnectionBean:void terminateSession()",
            "org.apache.zookeeper.server.ZooKeeperServer:void closeSession(org.apache.zookeeper.server.ServerCnxn,org.apache.zookeeper.proto.RequestHeader)"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void expire(org.apache.zookeeper.server.SessionTracker$Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.SessionTrackerImpl:void run()"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void processConnectRequest(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.NIOServerCnxn:void readConnectRequest()",
            "org.apache.zookeeper.server.NettyServerCnxn:void receiveMessage(org.jboss.netty.buffer.ChannelBuffer)"
        ]
    },
    "org.apache.zookeeper.server.NIOServerCnxn:void readPayload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.NIOServerCnxn:void doIO(java.nio.channels.SelectionKey)"
        ]
    },
    "org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler:void processMessage(org.jboss.netty.channel.MessageEvent,org.apache.zookeeper.server.NettyServerCnxn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler:void messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)"
        ]
    },
    "org.apache.zookeeper.server.quorum.QuorumPeer:org.apache.zookeeper.server.quorum.Election createElectionAlgorithm(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void startLeaderElection()"
        ]
    },
    "org.apache.zookeeper.server.quorum.Follower:void followLeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void run()"
        ]
    },
    "org.apache.zookeeper.server.quorum.Observer:void observeLeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void run()"
        ]
    },
    "org.apache.zookeeper.server.quorum.QuorumPeer$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.QuorumPeer:void run()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.quorum.QuorumPeerMain:void initializeAndRun(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeerMain:void main(java.lang.String[])"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServerMain:void initializeAndRun(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServerMain:void main(java.lang.String[])"
        ]
    },
    "org.apache.zookeeper.ClientCnxn$SendThread:void startConnect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ClientCnxn$SendThread:void run()"
        ]
    },
    "org.apache.zookeeper.server.ServerCnxnFactory:org.apache.zookeeper.server.ServerCnxnFactory createFactory(java.net.InetSocketAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void <init>(java.util.Map,java.io.File,java.io.File,int,int,long,int,int,int)",
            "org.apache.zookeeper.server.quorum.QuorumPeer:void <init>(java.util.Map,java.io.File,java.io.File,int,int,long,int,int,int,org.apache.zookeeper.server.quorum.flexible.QuorumVerifier)",
            "org.apache.zookeeper.server.ServerCnxnFactory:org.apache.zookeeper.server.ServerCnxnFactory createFactory(int,int)"
        ]
    },
    "org.apache.zookeeper.server.quorum.Follower:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void run()",
            "org.apache.zookeeper.server.quorum.QuorumPeer:void shutdown()"
        ]
    },
    "org.apache.zookeeper.server.quorum.Observer:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void run()"
        ]
    },
    "org.apache.zookeeper.server.quorum.QuorumPeer:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.ZooKeeperServerMain:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.ZooKeeperCriticalThread:void handleException(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.FollowerRequestProcessor:void run()",
            "org.apache.zookeeper.server.quorum.ObserverRequestProcessor:void run()",
            "org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor:void run()",
            "org.apache.zookeeper.server.PrepRequestProcessor:void run()",
            "org.apache.zookeeper.server.SessionTrackerImpl:void run()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.server.ZooKeeperThread$1:void uncaughtException(java.lang.Thread,java.lang.Throwable)"
        ]
    },
    "org.apache.zookeeper.server.quorum.Leader:org.apache.zookeeper.server.quorum.Leader$Proposal propose(org.apache.zookeeper.server.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.ProposalRequestProcessor:void processRequest(org.apache.zookeeper.server.Request)"
        ]
    },
    "org.apache.zookeeper.server.quorum.QuorumPeer:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.QuorumPeer:void start()",
            "org.apache.zookeeper.server.quorum.QuorumPeerMain:void runFromConfig(org.apache.zookeeper.server.quorum.QuorumPeerConfig)",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.ConnectionBean:void terminateSession()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void closeSession(org.apache.zookeeper.server.ServerCnxn,org.apache.zookeeper.proto.RequestHeader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.SessionTrackerImpl:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.quorum.LeaderZooKeeperServer:void startSessionTracker()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.server.ZooKeeperServer:void startSessionTracker()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.NIOServerCnxn:void readConnectRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.NIOServerCnxn:void readPayload()"
        ]
    },
    "org.apache.zookeeper.server.NIOServerCnxn:void doIO(java.nio.channels.SelectionKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void run()"
        ]
    },
    "org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler:void messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.quorum.QuorumPeer:void startLeaderElection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void start()"
        ]
    },
    "org.apache.zookeeper.server.quorum.QuorumPeerMain:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.ZooKeeperServerMain:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeerMain:void initializeAndRun(java.lang.String[])"
        ]
    },
    "org.apache.zookeeper.ClientCnxn$SendThread:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.AuthFastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.AuthFastLeaderElection,int,java.net.DatagramSocket)",
            "org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger:void <init>(org.apache.zookeeper.server.quorum.FastLeaderElection,org.apache.zookeeper.server.quorum.QuorumCnxManager)",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void start()",
            "org.apache.zookeeper.server.SyncRequestProcessor:void run()",
            "org.apache.zookeeper.ClientCnxn:void start()",
            "org.apache.zookeeper.Login:void startThreadIfNeeded()"
        ]
    },
    "org.apache.zookeeper.server.quorum.QuorumPeer:void <init>(java.util.Map,java.io.File,java.io.File,int,int,long,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.quorum.QuorumPeer:void <init>(java.util.Map,java.io.File,java.io.File,int,int,long,int,int,int,org.apache.zookeeper.server.quorum.flexible.QuorumVerifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.ServerCnxnFactory:org.apache.zookeeper.server.ServerCnxnFactory createFactory(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.ZooKeeperThread$1:void uncaughtException(java.lang.Thread,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.server.quorum.LeaderZooKeeperServer:void startSessionTracker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void startup()"
        ]
    },
    "org.apache.zookeeper.server.ZooKeeperServer:void startSessionTracker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.ZooKeeperServer:void startup()"
        ]
    },
    "org.apache.zookeeper.server.NIOServerCnxnFactory:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.server.quorum.QuorumPeer:void start()",
            "org.apache.zookeeper.server.NIOServerCnxnFactory:void startup(org.apache.zookeeper.server.ZooKeeperServer)"
        ]
    },
    "org.apache.zookeeper.ClientCnxn:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher,boolean)",
            "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher,long,byte[],boolean)"
        ]
    },
    "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)",
            "org.apache.zookeeper.ZooKeeperMain:void connectToZK(java.lang.String)"
        ]
    },
    "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher,long,byte[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher,long,byte[])"
        ]
    },
    "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.ZooKeeperMain:void connectToZK(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ZooKeeperMain:void <init>(java.lang.String[])",
            "org.apache.zookeeper.ZooKeeperMain:boolean processZKCmd(org.apache.zookeeper.ZooKeeperMain$MyCommandOptions)"
        ]
    },
    "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher,long,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.ZooKeeperMain:void <init>(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ZooKeeperMain:void main(java.lang.String[])"
        ]
    },
    "org.apache.zookeeper.ZooKeeperMain:boolean processZKCmd(org.apache.zookeeper.ZooKeeperMain$MyCommandOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ZooKeeperMain:boolean processCmd(org.apache.zookeeper.ZooKeeperMain$MyCommandOptions)"
        ]
    },
    "org.apache.zookeeper.ZooKeeperMain:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.zookeeper.ZooKeeperMain:boolean processCmd(org.apache.zookeeper.ZooKeeperMain$MyCommandOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ZooKeeperMain:void run()",
            "org.apache.zookeeper.ZooKeeperMain:void executeLine(java.lang.String)",
            "org.apache.zookeeper.ZooKeeperMain:boolean processZKCmd(org.apache.zookeeper.ZooKeeperMain$MyCommandOptions)"
        ]
    },
    "org.apache.zookeeper.ZooKeeperMain:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ZooKeeperMain:void main(java.lang.String[])"
        ]
    },
    "org.apache.zookeeper.ZooKeeperMain:void executeLine(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.zookeeper.ZooKeeperMain:void run()"
        ]
    }
}
{
    "org.cloudfoundry.identity.uaa.resources.jdbc.SimpleSearchQueryConverter:com.unboundid.scim.sdk.SCIMFilter scimFilter(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.resources.jdbc.SimpleSearchQueryConverter:java.lang.String getWhereClause(java.lang.String,java.lang.String,boolean,java.util.Map,org.cloudfoundry.identity.uaa.resources.AttributeNameMapper,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.resources.jdbc.SimpleSearchQueryConverter:java.lang.String getWhereClause(java.lang.String,java.lang.String,boolean,java.util.Map,org.cloudfoundry.identity.uaa.resources.AttributeNameMapper,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.resources.jdbc.SimpleSearchQueryConverter:org.cloudfoundry.identity.uaa.resources.jdbc.SearchQueryConverter$ProcessedFilter convert(java.lang.String,java.lang.String,boolean,org.cloudfoundry.identity.uaa.resources.AttributeNameMapper)"
        ]
    },
    "org.cloudfoundry.identity.uaa.resources.jdbc.SimpleSearchQueryConverter:org.cloudfoundry.identity.uaa.resources.jdbc.SearchQueryConverter$ProcessedFilter convert(java.lang.String,java.lang.String,boolean,org.cloudfoundry.identity.uaa.resources.AttributeNameMapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.resources.jdbc.SimpleSearchQueryConverter:org.cloudfoundry.identity.uaa.resources.jdbc.SearchQueryConverter$ProcessedFilter convert(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.cloudfoundry.identity.uaa.resources.jdbc.SimpleSearchQueryConverter:org.cloudfoundry.identity.uaa.resources.jdbc.SearchQueryConverter$ProcessedFilter convert(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.client.JdbcQueryableClientDetailsService:java.util.List query(java.lang.String,java.lang.String,boolean)",
            "org.cloudfoundry.identity.uaa.approval.JdbcApprovalStore:boolean revokeApprovals(java.lang.String)",
            "org.cloudfoundry.identity.uaa.approval.JdbcApprovalStore:java.util.List getApprovals(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupExternalMembershipManager:int delete(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:java.util.List query(java.lang.String,java.lang.String,boolean)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.util.List query(java.lang.String,java.lang.String,boolean,java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:int delete(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:java.util.List getMembers(java.lang.String,java.lang.String,boolean)",
            "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:int delete(java.lang.String)",
            "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:java.util.List query(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.cloudfoundry.identity.uaa.client.JdbcQueryableClientDetailsService:java.util.List query(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults listClientDetails(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)",
            "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:java.util.List query(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.approval.JdbcApprovalStore:boolean revokeApprovals(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:void deleteApprovals(java.lang.String)",
            "org.cloudfoundry.identity.uaa.approval.JdbcApprovalStore:boolean revokeApproval(org.cloudfoundry.identity.uaa.approval.Approval)",
            "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:java.util.List updateApprovals(org.cloudfoundry.identity.uaa.approval.Approval[])",
            "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:java.util.List updateClientApprovals(java.lang.String,org.cloudfoundry.identity.uaa.approval.Approval[])",
            "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:org.cloudfoundry.identity.uaa.resources.ActionResult revokeApprovals(java.lang.String)",
            "org.cloudfoundry.identity.uaa.zone.IdentityZoneEndpointClientRegistrationService:org.springframework.security.oauth2.provider.ClientDetails deleteClient(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.approval.JdbcApprovalStore:java.util.List getApprovals(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.approval.JdbcApprovalStore:java.util.List getApprovals(java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:java.util.List getApprovals(java.lang.String,int,int)",
            "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:java.util.List updateApprovals(org.cloudfoundry.identity.uaa.approval.Approval[])",
            "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:java.util.List updateClientApprovals(java.lang.String,org.cloudfoundry.identity.uaa.approval.Approval[])",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser syncApprovals(org.cloudfoundry.identity.uaa.scim.ScimUser)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupExternalMembershipManager:int delete(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:java.util.List query(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:java.util.List retrieveAll()",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults findUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)",
            "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:java.util.List query(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.util.List query(java.lang.String,java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.util.List query(java.lang.String,java.lang.String,boolean)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.util.List retrieveAll(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:int delete(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void onApplicationEvent(org.cloudfoundry.identity.uaa.authentication.manager.AuthEvent)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:java.util.List getMembers(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:java.util.List updateOrAddMembers(java.lang.String,java.util.List)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:java.util.List removeMembersByGroupId(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:java.util.List filterForCurrentUser(java.util.List,int,int)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup getGroup(java.lang.String,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup createGroup(org.cloudfoundry.identity.uaa.scim.ScimGroup,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup updateGroup(org.cloudfoundry.identity.uaa.scim.ScimGroup,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.springframework.http.ResponseEntity listGroupMemberships(java.lang.String,boolean,java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimGroup getGroup(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:int delete(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:java.util.List query(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.client.JdbcQueryableClientDetailsService:java.util.List query(java.lang.String,java.lang.String,boolean)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupExternalMembershipManager:java.util.List query(java.lang.String,java.lang.String,boolean)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:java.util.List query(java.lang.String,java.lang.String,boolean)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.util.List query(java.lang.String,java.lang.String,boolean,java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:java.util.List getMembers(java.lang.String,java.lang.String,boolean)",
            "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:java.util.List query(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults listClientDetails(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:java.util.List query(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.invitations.InvitationsEndpoint:org.cloudfoundry.identity.uaa.scim.ScimUser findOrCreateUser(java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.account.EmailChangeEmailService:void beginEmailChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.account.EmailAccountCreationService:void beginActivation(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.account.UaaResetPasswordService:org.cloudfoundry.identity.uaa.account.ForgotPasswordInfo forgotPassword(java.lang.String,java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.account.UaaChangePasswordService:void changePassword(java.lang.String,java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.oauth.AccessController:java.util.List getScopes(java.util.ArrayList)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupExternalMembershipManager:java.util.List query(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupExternalMembershipManager:java.util.List getExternalGroupMapsByGroupName(java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:org.cloudfoundry.identity.uaa.scim.ScimUser create(org.cloudfoundry.identity.uaa.scim.ScimUser)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:void setDefaultUserGroups(java.util.Set)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:java.lang.String getGroupId(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ChangeEmailEndpoints:org.springframework.http.ResponseEntity generateEmailVerificationCode(org.cloudfoundry.identity.uaa.account.EmailChange)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimUser getUser(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimGroup getGroup(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimExternalGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimGroup addGroup(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimExternalGroupBootstrap:void afterPropertiesSet()",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:org.cloudfoundry.identity.uaa.scim.ScimUser getScimUser(org.cloudfoundry.identity.uaa.user.UaaUser)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addToGroup(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void removeFromGroup(java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:void deleteApprovals(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:boolean updateClientSecret(org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification)",
            "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification[] changeSecretTx(org.cloudfoundry.identity.uaa.oauth.client.SecretChangeRequest[])",
            "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.springframework.security.oauth2.provider.ClientDetails[] doProcessDeletes(org.springframework.security.oauth2.provider.ClientDetails[])"
        ]
    },
    "org.cloudfoundry.identity.uaa.approval.JdbcApprovalStore:boolean revokeApproval(org.cloudfoundry.identity.uaa.approval.Approval)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:java.util.List updateApprovals(org.cloudfoundry.identity.uaa.approval.Approval[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.approval.LoginUaaApprovalsService:void updateApprovals(java.util.List)"
        ]
    },
    "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:java.util.List updateClientApprovals(java.lang.String,org.cloudfoundry.identity.uaa.approval.Approval[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:org.cloudfoundry.identity.uaa.resources.ActionResult revokeApprovals(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.approval.LoginUaaApprovalsService:void deleteApprovalsForClient(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.zone.IdentityZoneEndpointClientRegistrationService:org.springframework.security.oauth2.provider.ClientDetails deleteClient(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.zone.IdentityZoneEndpoints:org.springframework.http.ResponseEntity deleteClient(java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.approval.JdbcApprovalStore:java.util.List getApprovals(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.oauth.UserManagedAuthzApprovalHandler:boolean isApproved(org.springframework.security.oauth2.provider.AuthorizationRequest,org.springframework.security.core.Authentication)",
            "org.cloudfoundry.identity.uaa.oauth.AccessController:java.lang.String confirm(java.util.Map,javax.servlet.http.HttpServletRequest,java.security.Principal,org.springframework.web.bind.support.SessionStatus)",
            "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:void checkForApproval(java.lang.String,java.lang.String,java.util.Collection,java.util.Collection)"
        ]
    },
    "org.cloudfoundry.identity.uaa.approval.ApprovalsAdminEndpoints:java.util.List getApprovals(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.approval.LoginUaaApprovalsService:java.util.Map getCurrentApprovalsByClientId()"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser syncApprovals(org.cloudfoundry.identity.uaa.scim.ScimUser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser getUser(java.lang.String,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser createUser(org.cloudfoundry.identity.uaa.scim.ScimUser,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser updateUser(org.cloudfoundry.identity.uaa.scim.ScimUser,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults findUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:java.util.List retrieveAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults findUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.UserIdConversionEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults findUsers(java.lang.String,java.lang.String,int,int,boolean)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.util.List query(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.util.List retrieveAll()",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults listGroups(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)",
            "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:java.util.List query(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.util.List retrieveAll(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void onApplicationEvent(org.cloudfoundry.identity.uaa.authentication.manager.AuthEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void onApplicationEvent(org.springframework.context.ApplicationEvent)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:java.util.List updateOrAddMembers(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup updateGroup(org.cloudfoundry.identity.uaa.scim.ScimGroup,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:java.util.List removeMembersByGroupId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:org.cloudfoundry.identity.uaa.scim.ScimGroup delete(java.lang.String,int)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup updateGroup(org.cloudfoundry.identity.uaa.scim.ScimGroup,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteGroup(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:java.util.List filterForCurrentUser(java.util.List,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults listGroups(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup getGroup(java.lang.String,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup updateGroup(org.cloudfoundry.identity.uaa.scim.ScimGroup,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteGroup(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup addZoneManagers(org.cloudfoundry.identity.uaa.scim.ScimGroup,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteZoneScope(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup createGroup(org.cloudfoundry.identity.uaa.scim.ScimGroup,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup addZoneManagers(org.cloudfoundry.identity.uaa.scim.ScimGroup,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup updateGroup(org.cloudfoundry.identity.uaa.scim.ScimGroup,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup addZoneManagers(org.cloudfoundry.identity.uaa.scim.ScimGroup,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteZoneScope(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.springframework.http.ResponseEntity listGroupMemberships(java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimGroup getGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimCore getScimResourceId(java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimGroup getOrCreateGroup(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupExternalMembershipManager:java.util.List query(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable:java.util.List query(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.invitations.InvitationsEndpoint:org.cloudfoundry.identity.uaa.scim.ScimUser findOrCreateUser(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.invitations.InvitationsEndpoint:org.springframework.http.ResponseEntity inviteUsers(org.cloudfoundry.identity.uaa.invitations.InvitationsRequest,java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.account.EmailChangeEmailService:void beginEmailChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.account.ChangeEmailController:java.lang.String changeEmail(org.springframework.ui.Model,org.cloudfoundry.identity.uaa.account.ChangeEmailController$ValidEmail,org.springframework.validation.BindingResult,java.lang.String,java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.account.EmailAccountCreationService:void beginActivation(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.account.AccountsController:java.lang.String sendActivationEmail(org.springframework.ui.Model,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,org.cloudfoundry.identity.uaa.account.AccountsController$ValidEmail,org.springframework.validation.BindingResult,java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.account.UaaResetPasswordService:org.cloudfoundry.identity.uaa.account.ForgotPasswordInfo forgotPassword(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.account.ResetPasswordController:void forgotPassword(java.lang.String,java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.account.PasswordResetEndpoint:org.springframework.http.ResponseEntity resetPassword(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.account.UaaChangePasswordService:void changePassword(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.account.ChangePasswordController:java.lang.String changePassword(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.cloudfoundry.identity.uaa.oauth.AccessController:java.util.List getScopes(java.util.ArrayList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.oauth.AccessController:java.lang.String confirm(java.util.Map,javax.servlet.http.HttpServletRequest,java.security.Principal,org.springframework.web.bind.support.SessionStatus)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupExternalMembershipManager:java.util.List query(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults getExternalGroups(int,int,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupExternalMembershipManager:java.util.List getExternalGroupMapsByGroupName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:org.cloudfoundry.identity.uaa.scim.ScimUser create(org.cloudfoundry.identity.uaa.scim.ScimUser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:org.cloudfoundry.identity.uaa.scim.ScimUser createUser(org.cloudfoundry.identity.uaa.scim.ScimUser,java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:java.lang.Object create(java.lang.Object)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupMembershipManager:void setDefaultUserGroups(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:java.lang.String getGroupId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember mapExternalGroup(org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember unmapExternalGroupUsingName(java.lang.String,java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup addZoneManagers(org.cloudfoundry.identity.uaa.scim.ScimGroup,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteZoneScope(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ChangeEmailEndpoints:org.springframework.http.ResponseEntity generateEmailVerificationCode(org.cloudfoundry.identity.uaa.account.EmailChange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimUser getUser(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimCore getScimResourceId(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimExternalGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimGroup addGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimExternalGroupBootstrap:void afterPropertiesSet()"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimExternalGroupBootstrap:void afterPropertiesSet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:org.cloudfoundry.identity.uaa.scim.ScimUser getScimUser(org.cloudfoundry.identity.uaa.user.UaaUser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addUser(org.cloudfoundry.identity.uaa.user.UaaUser)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void onApplicationEvent(org.cloudfoundry.identity.uaa.authentication.manager.AuthEvent)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addToGroup(java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void onApplicationEvent(org.cloudfoundry.identity.uaa.authentication.manager.AuthEvent)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addToGroup(java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void removeFromGroup(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void updateUser(org.cloudfoundry.identity.uaa.scim.ScimUser,org.cloudfoundry.identity.uaa.user.UaaUser,boolean)"
        ]
    },
    "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:boolean updateClientSecret(org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification[] modifyClientDetailsTx(org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification[])"
        ]
    },
    "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification[] changeSecretTx(org.cloudfoundry.identity.uaa.oauth.client.SecretChangeRequest[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.springframework.security.oauth2.provider.ClientDetails[] doProcessDeletes(org.springframework.security.oauth2.provider.ClientDetails[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.springframework.security.oauth2.provider.ClientDetails removeClientDetails(java.lang.String)",
            "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.springframework.security.oauth2.provider.ClientDetails[] removeClientDetailsTx(org.springframework.security.oauth2.provider.client.BaseClientDetails[])",
            "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification[] modifyClientDetailsTx(org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification[])"
        ]
    },
    "org.cloudfoundry.identity.uaa.approval.LoginUaaApprovalsService:void updateApprovals(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.account.ProfileController:java.lang.String post(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.approval.LoginUaaApprovalsService:void deleteApprovalsForClient(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.account.ProfileController:java.lang.String post(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.zone.IdentityZoneEndpoints:org.springframework.http.ResponseEntity deleteClient(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.oauth.UserManagedAuthzApprovalHandler:boolean isApproved(org.springframework.security.oauth2.provider.AuthorizationRequest,org.springframework.security.core.Authentication)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.oauth.UaaAuthorizationEndpoint:org.springframework.web.servlet.ModelAndView authorize(java.util.Map,java.util.Map,org.springframework.web.bind.support.SessionStatus,java.security.Principal,javax.servlet.http.HttpServletRequest)",
            "org.cloudfoundry.identity.uaa.oauth.UaaAuthorizationEndpoint:org.springframework.web.servlet.View approveOrDeny(java.util.Map,java.util.Map,org.springframework.web.bind.support.SessionStatus,java.security.Principal)"
        ]
    },
    "org.cloudfoundry.identity.uaa.oauth.AccessController:java.lang.String confirm(java.util.Map,javax.servlet.http.HttpServletRequest,java.security.Principal,org.springframework.web.bind.support.SessionStatus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:void checkForApproval(java.lang.String,java.lang.String,java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.springframework.security.oauth2.common.OAuth2AccessToken refreshAccessToken(java.lang.String,org.springframework.security.oauth2.provider.TokenRequest)",
            "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.springframework.security.oauth2.common.OAuth2AccessToken readAccessToken(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.approval.LoginUaaApprovalsService:java.util.Map getCurrentApprovalsByClientId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.account.ProfileController:java.lang.String get(org.springframework.security.core.Authentication,org.springframework.ui.Model)",
            "org.cloudfoundry.identity.uaa.account.ProfileController:java.lang.String post(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser getUser(java.lang.String,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser deleteUser(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser createUser(org.cloudfoundry.identity.uaa.scim.ScimUser,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser updateUser(org.cloudfoundry.identity.uaa.scim.ScimUser,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.UserIdConversionEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults findUsers(java.lang.String,java.lang.String,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.util.List retrieveAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults listGroups(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void onApplicationEvent(org.springframework.context.ApplicationEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:org.cloudfoundry.identity.uaa.scim.ScimGroup delete(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.lang.Object delete(java.lang.String,int)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteGroup(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup addZoneManagers(org.cloudfoundry.identity.uaa.scim.ScimGroup,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteZoneScope(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteZoneAdmin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimCore getScimResourceId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:java.util.List getMembers(java.util.Set,java.util.List)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimGroup getOrCreateGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimGroup lambda$afterPropertiesSet$8(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.invitations.InvitationsEndpoint:org.springframework.http.ResponseEntity inviteUsers(org.cloudfoundry.identity.uaa.invitations.InvitationsRequest,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.account.ChangeEmailController:java.lang.String changeEmail(org.springframework.ui.Model,org.cloudfoundry.identity.uaa.account.ChangeEmailController$ValidEmail,org.springframework.validation.BindingResult,java.lang.String,java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.account.AccountsController:java.lang.String sendActivationEmail(org.springframework.ui.Model,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,org.cloudfoundry.identity.uaa.account.AccountsController$ValidEmail,org.springframework.validation.BindingResult,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.account.ResetPasswordController:void forgotPassword(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.account.ResetPasswordController:java.lang.String forgotPassword(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.account.PasswordResetEndpoint:org.springframework.http.ResponseEntity resetPassword(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.account.ChangePasswordController:java.lang.String changePassword(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults getExternalGroups(int,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults listExternalGroups(int,int,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:org.cloudfoundry.identity.uaa.scim.ScimUser createUser(org.cloudfoundry.identity.uaa.scim.ScimUser,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.invitations.InvitationsEndpoint:org.cloudfoundry.identity.uaa.scim.ScimUser findOrCreateUser(java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.account.EmailAccountCreationService:org.cloudfoundry.identity.uaa.scim.ScimUser createUser(java.lang.String,java.lang.String,java.lang.String)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser createUser(org.cloudfoundry.identity.uaa.scim.ScimUser,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void createNewUser(org.cloudfoundry.identity.uaa.user.UaaUser)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimUserProvisioning:java.lang.Object create(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember mapExternalGroup(org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember unmapExternalGroupUsingName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember unmapExternalGroupUsingName(java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addUser(org.cloudfoundry.identity.uaa.user.UaaUser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void afterPropertiesSet()",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void onApplicationEvent(org.cloudfoundry.identity.uaa.authentication.manager.AuthEvent)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addToGroup(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addGroups(java.lang.String,java.util.Collection)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void updateUser(org.cloudfoundry.identity.uaa.scim.ScimUser,org.cloudfoundry.identity.uaa.user.UaaUser,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void updateUser(org.cloudfoundry.identity.uaa.scim.ScimUser,org.cloudfoundry.identity.uaa.user.UaaUser)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void onApplicationEvent(org.cloudfoundry.identity.uaa.authentication.manager.AuthEvent)"
        ]
    },
    "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification[] modifyClientDetailsTx(org.cloudfoundry.identity.uaa.oauth.client.ClientDetailsModification[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.springframework.security.oauth2.provider.ClientDetails removeClientDetails(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.client.ClientAdminEndpoints:org.springframework.security.oauth2.provider.ClientDetails[] removeClientDetailsTx(org.springframework.security.oauth2.provider.client.BaseClientDetails[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.account.ProfileController:java.lang.String post(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.oauth.UaaAuthorizationEndpoint:org.springframework.web.servlet.ModelAndView authorize(java.util.Map,java.util.Map,org.springframework.web.bind.support.SessionStatus,java.security.Principal,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.oauth.UaaAuthorizationEndpoint:org.springframework.web.servlet.View approveOrDeny(java.util.Map,java.util.Map,org.springframework.web.bind.support.SessionStatus,java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.springframework.security.oauth2.common.OAuth2AccessToken refreshAccessToken(java.lang.String,org.springframework.security.oauth2.provider.TokenRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.springframework.security.oauth2.common.OAuth2AccessToken readAccessToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.oauth.CheckTokenEndpoint:org.cloudfoundry.identity.uaa.oauth.token.Claims checkToken(java.lang.String,java.util.List)"
        ]
    },
    "org.cloudfoundry.identity.uaa.account.ProfileController:java.lang.String get(org.springframework.security.core.Authentication,org.springframework.ui.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimUserEndpoints:org.cloudfoundry.identity.uaa.scim.ScimUser deleteUser(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.jdbc.JdbcScimGroupProvisioning:java.lang.Object delete(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup createGroup(org.cloudfoundry.identity.uaa.scim.ScimGroup,javax.servlet.http.HttpServletResponse)",
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteGroup(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroup deleteZoneAdmin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:java.util.List getMembers(java.util.Set,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:void addMembers(org.cloudfoundry.identity.uaa.scim.ScimGroup)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:org.cloudfoundry.identity.uaa.scim.ScimGroup lambda$afterPropertiesSet$8(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap$lambda_afterPropertiesSet_8__65:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.cloudfoundry.identity.uaa.account.ResetPasswordController:java.lang.String forgotPassword(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.resources.SearchResults listExternalGroups(int,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.account.EmailAccountCreationService:org.cloudfoundry.identity.uaa.scim.ScimUser createUser(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.account.EmailAccountCreationService:void beginActivation(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void createNewUser(org.cloudfoundry.identity.uaa.user.UaaUser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addUser(org.cloudfoundry.identity.uaa.user.UaaUser)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember unmapExternalGroupUsingName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember deprecatedUnmapExternalGroupUsingName(java.lang.String,java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void afterPropertiesSet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addGroups(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void updateUser(org.cloudfoundry.identity.uaa.scim.ScimUser,org.cloudfoundry.identity.uaa.user.UaaUser,boolean)",
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void createNewUser(org.cloudfoundry.identity.uaa.user.UaaUser)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void updateUser(org.cloudfoundry.identity.uaa.scim.ScimUser,org.cloudfoundry.identity.uaa.user.UaaUser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimUserBootstrap:void addUser(org.cloudfoundry.identity.uaa.user.UaaUser)"
        ]
    },
    "org.cloudfoundry.identity.uaa.oauth.CheckTokenEndpoint:org.cloudfoundry.identity.uaa.oauth.token.Claims checkToken(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:void addMembers(org.cloudfoundry.identity.uaa.scim.ScimGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:void afterPropertiesSet()"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap$lambda_afterPropertiesSet_8__65:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.zone.IdentityZoneHolder$MergedZoneBrandingInformation:java.util.Optional lambda$tryGet$1(java.util.function.Function,org.cloudfoundry.identity.uaa.zone.BrandingInformation)",
            "org.cloudfoundry.identity.uaa.util.TokenValidation:org.cloudfoundry.identity.uaa.util.TokenValidation checkUser(java.util.function.Function)",
            "org.cloudfoundry.identity.uaa.util.MapCollector:void lambda$accumulator$0(java.util.HashMap,java.lang.Object)"
        ]
    },
    "org.cloudfoundry.identity.uaa.scim.endpoints.ScimGroupEndpoints:org.cloudfoundry.identity.uaa.scim.ScimGroupExternalMember deprecatedUnmapExternalGroupUsingName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.scim.bootstrap.ScimGroupBootstrap:void afterPropertiesSet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.zone.IdentityZoneHolder$MergedZoneBrandingInformation:java.util.Optional lambda$tryGet$1(java.util.function.Function,org.cloudfoundry.identity.uaa.zone.BrandingInformation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.zone.IdentityZoneHolder$MergedZoneBrandingInformation$lambda_tryGet_1__24:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.cloudfoundry.identity.uaa.util.TokenValidation:org.cloudfoundry.identity.uaa.util.TokenValidation checkUser(java.util.function.Function)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.util.TokenValidation:org.cloudfoundry.identity.uaa.util.TokenValidation checkUser(org.cloudfoundry.identity.uaa.user.UaaUser)",
            "org.cloudfoundry.identity.uaa.util.TokenValidation:org.cloudfoundry.identity.uaa.util.TokenValidation checkUser(org.cloudfoundry.identity.uaa.user.UaaUserDatabase)"
        ]
    },
    "org.cloudfoundry.identity.uaa.util.MapCollector:void lambda$accumulator$0(java.util.HashMap,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.zone.IdentityZoneHolder$MergedZoneBrandingInformation$lambda_tryGet_1__24:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.zone.IdentityZoneHolder$MergedZoneBrandingInformation:java.util.Optional lambda$tryGet$1(java.util.function.Function,org.cloudfoundry.identity.uaa.zone.BrandingInformation)",
            "org.cloudfoundry.identity.uaa.util.TokenValidation:org.cloudfoundry.identity.uaa.util.TokenValidation checkUser(java.util.function.Function)",
            "org.cloudfoundry.identity.uaa.util.MapCollector:void lambda$accumulator$0(java.util.HashMap,java.lang.Object)"
        ]
    },
    "org.cloudfoundry.identity.uaa.util.TokenValidation:org.cloudfoundry.identity.uaa.util.TokenValidation checkUser(org.cloudfoundry.identity.uaa.user.UaaUser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.cloudfoundry.identity.uaa.util.TokenValidation validateToken(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.util.TokenValidation:org.cloudfoundry.identity.uaa.util.TokenValidation checkUser(org.cloudfoundry.identity.uaa.user.UaaUserDatabase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.cloudfoundry.identity.uaa.util.TokenValidation validateToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.springframework.security.oauth2.common.OAuth2AccessToken refreshAccessToken(java.lang.String,org.springframework.security.oauth2.provider.TokenRequest)",
            "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.springframework.security.oauth2.provider.OAuth2Authentication loadAuthentication(java.lang.String)",
            "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.springframework.security.oauth2.common.OAuth2AccessToken readAccessToken(java.lang.String)"
        ]
    },
    "org.cloudfoundry.identity.uaa.oauth.UaaTokenServices:org.springframework.security.oauth2.provider.OAuth2Authentication loadAuthentication(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.cloudfoundry.identity.uaa.oauth.CheckTokenEndpoint:org.cloudfoundry.identity.uaa.oauth.token.Claims checkToken(java.lang.String,java.util.List)"
        ]
    }
}
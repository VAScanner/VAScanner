{
    "org.xmlbeam.config.DefaultXMLFactoriesConfig:javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.xmlbeam.config.DefaultXMLFactoriesConfig:javax.xml.parsers.DocumentBuilder createDocumentBuilder()",
            "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory()"
        ]
    },
    "org.xmlbeam.config.DefaultXMLFactoriesConfig:javax.xml.transform.Transformer createTransformer(org.w3c.dom.Document[])": {
        "isVulRoot": true,
        "vulCaller": [
            "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.transform.Transformer createTransformer(org.w3c.dom.Document[])"
        ]
    },
    "org.xmlbeam.config.DefaultXMLFactoriesConfig:javax.xml.parsers.DocumentBuilder createDocumentBuilder()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.parsers.DocumentBuilder createDocumentBuilder()",
            "org.xmlbeam.XBProjector:java.lang.Object projectEmptyDocument(java.lang.Class)",
            "org.xmlbeam.XBProjector:java.lang.Object projectEmptyElement(java.lang.String,java.lang.Class)"
        ]
    },
    "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory()"
        ]
    },
    "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.transform.Transformer createTransformer(org.w3c.dom.Document[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.io.StreamOutput:void write(java.lang.Object)",
            "org.xmlbeam.util.intern.DOMHelper:java.lang.String toXMLString(org.xmlbeam.XBProjector,org.w3c.dom.Node)",
            "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.transform.Transformer createTransformer(org.w3c.dom.Document[])",
            "org.xmlbeam.DefaultFileIO$3:void close()"
        ]
    },
    "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.parsers.DocumentBuilder createDocumentBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.io.UrlIO$1:org.w3c.dom.Document resolve(java.lang.Class[])",
            "org.xmlbeam.io.StreamInput:org.w3c.dom.Document readDocument()",
            "org.xmlbeam.io.UrlIO:java.lang.Object read(java.lang.Class)",
            "org.xmlbeam.util.IOHelper:org.w3c.dom.Document loadDocument(org.xmlbeam.XBProjector,java.io.InputStream)",
            "org.xmlbeam.DefaultFileIO:java.lang.Object read(java.lang.Class)",
            "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.parsers.DocumentBuilder createDocumentBuilder()",
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:org.w3c.dom.Node getNodeForMethod(java.lang.reflect.Method,java.lang.Object[])",
            "org.xmlbeam.XBProjector:java.lang.Object projectEmptyDocument(java.lang.Class)",
            "org.xmlbeam.XBProjector:java.lang.Object projectEmptyElement(java.lang.String,java.lang.Class)",
            "org.xmlbeam.DefaultFileIO$2:org.w3c.dom.Document resolve(java.lang.Class[])"
        ]
    },
    "org.xmlbeam.XBProjector:java.lang.Object projectEmptyDocument(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.XBProjector:java.lang.Object projectEmptyElement(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.io.StreamOutput:void write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultFileIO:org.xmlbeam.io.FileIO write(java.lang.Object)"
        ]
    },
    "org.xmlbeam.util.intern.DOMHelper:java.lang.String toXMLString(org.xmlbeam.XBProjector,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector:java.lang.String asString(java.lang.Object)",
            "org.xmlbeam.DefaultDOMAccessInvoker:java.lang.String asString()"
        ]
    },
    "org.xmlbeam.DefaultFileIO$3:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultFileValue:void close()",
            "org.xmlbeam.DefaultFileList:void close()"
        ]
    },
    "org.xmlbeam.io.UrlIO$1:org.w3c.dom.Document resolve(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateMultiValues(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue bindSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList bindMultiValues(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.xmlbeam.io.StreamInput:org.w3c.dom.Document readDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.io.StreamInput:java.lang.Object read(java.lang.Class)",
            "org.xmlbeam.io.StreamInput:org.w3c.dom.Document access$000(org.xmlbeam.io.StreamInput)"
        ]
    },
    "org.xmlbeam.io.UrlIO:java.lang.Object read(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector$IOBuilder:java.lang.Object fromURLAnnotation(java.lang.Class,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.IOHelper:org.w3c.dom.Document loadDocument(org.xmlbeam.XBProjector,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultFileIO$1:org.w3c.dom.Document resolve(java.lang.Class[])",
            "org.xmlbeam.XBProjector$2$1:org.w3c.dom.Document resolve(java.lang.Class[])",
            "org.xmlbeam.DefaultFileIO$2:org.w3c.dom.Document resolve(java.lang.Class[])"
        ]
    },
    "org.xmlbeam.DefaultFileIO:java.lang.Object read(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:org.w3c.dom.Node getNodeForMethod(java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeReadProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$UpdateInvocationHandler:java.lang.Object invokeXpathProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.DefaultFileIO$2:org.w3c.dom.Document resolve(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateMultiValues(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue bindSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList bindMultiValues(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.xmlbeam.DefaultFileIO:org.xmlbeam.io.FileIO write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.XBProjector:java.lang.String asString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultDOMAccessInvoker:java.lang.String asString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultDOMAccessInvoker$XMLRenderingObjectInvoker:java.lang.String toString()",
            "org.xmlbeam.XBProjector:java.lang.String asString(java.lang.Object)"
        ]
    },
    "org.xmlbeam.DefaultFileValue:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultFileValue:void close()",
            "org.xmlbeam.DefaultFileList:void close()"
        ]
    },
    "org.xmlbeam.DefaultFileList:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultFileValue:void close()",
            "org.xmlbeam.DefaultFileList:void close()"
        ]
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:boolean asBoolean()",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:int asInt()",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.String asString()",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.Date asDate()",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object as(java.lang.Class)"
        ]
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateMultiValues(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object[] asArrayOf(java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List asListOf(java.lang.Class)"
        ]
    },
    "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue bindSingeValue(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue asBoolean()",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue asInt()",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue asString()",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue asDate()",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue as(java.lang.Class)"
        ]
    },
    "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList bindMultiValues(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList asListOf(java.lang.Class)"
        ]
    },
    "org.xmlbeam.io.StreamInput:java.lang.Object read(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector:java.lang.Object projectXMLString(java.lang.String,java.lang.Class)"
        ]
    },
    "org.xmlbeam.io.StreamInput:org.w3c.dom.Document access$000(org.xmlbeam.io.StreamInput)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.io.StreamInput$1:org.w3c.dom.Document resolve(java.lang.Class[])"
        ]
    },
    "org.xmlbeam.XBProjector$IOBuilder:java.lang.Object fromURLAnnotation(java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultFileIO$1:org.w3c.dom.Document resolve(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateMultiValues(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue bindSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList bindMultiValues(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.xmlbeam.XBProjector$2$1:org.w3c.dom.Document resolve(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateMultiValues(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue bindSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList bindMultiValues(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeReadProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeXpathProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler$UpdateInvocationHandler:java.lang.Object invokeXpathProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$XPathInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.DefaultDOMAccessInvoker$XMLRenderingObjectInvoker:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.types.DefaultTypeConverter:java.lang.String render(java.lang.Class,java.lang.Object,java.lang.String[])",
            "org.xmlbeam.io.UrlIO:java.lang.String write(java.lang.Object)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.String toString(java.lang.Object)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.Preprocessor:java.lang.String resolveParameter(java.lang.String,java.util.Map,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.xmlbeam.ProjectionInvocationHandler$UpdateInvocationHandler:java.lang.Object invokeXpathProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:boolean asBoolean()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:int asInt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.String asString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.Date asDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object as(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object[] asArrayOf(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List asListOf(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue asBoolean()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue asInt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue asString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue asDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue as(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList asListOf(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.XBProjector:java.lang.Object projectXMLString(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector$2:java.lang.Object createProjection(java.lang.Class)"
        ]
    },
    "org.xmlbeam.io.StreamInput$1:org.w3c.dom.Document resolve(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateMultiValues(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue bindSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList bindMultiValues(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeXpathProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$XPathInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler$XPathInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.types.DefaultTypeConverter:java.lang.String render(java.lang.Class,java.lang.Object,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.MethodParamVariableResolver:java.lang.Object resolveVariable(javax.xml.namespace.QName)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:int applyIterableSetOnElement(java.lang.Iterable,org.w3c.dom.Element,org.xmlbeam.util.intern.duplex.DuplexExpression)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoList:java.lang.Object set(int,java.lang.Object)",
            "org.xmlbeam.AutoList:boolean add(java.lang.Object)",
            "org.xmlbeam.AutoList:void add(int,java.lang.Object)",
            "org.xmlbeam.AutoList:boolean remove(java.lang.Object)",
            "org.xmlbeam.AutoValue:java.lang.Object set(java.lang.Object)"
        ]
    },
    "org.xmlbeam.io.UrlIO:java.lang.String write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector$IOBuilder:java.lang.String toURLAnnotationViaPOST(java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:boolean compare(org.xmlbeam.util.intern.duplex.SimpleNode,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object jjtAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.Preprocessor:java.lang.String resolveParameter(java.lang.String,java.util.Map,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.Preprocessor:java.lang.String applyParams(java.lang.String,java.util.Map,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.xmlbeam.XBProjector$2:java.lang.Object createProjection(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$OverrideByDefaultMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.intern.MethodParamVariableResolver:java.lang.Object resolveVariable(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object resolveVariable(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.MethodParamVariableResolver:java.lang.Object resolveVariable(javax.xml.namespace.QName)"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:int applyIterableSetOnElement(java.lang.Iterable,org.w3c.dom.Element,org.xmlbeam.util.intern.duplex.DuplexExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.AutoList:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoList:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "org.xmlbeam.AutoList:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void pushNode(org.xmlbeam.util.intern.duplex.Node)",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void openNodeScope(org.xmlbeam.util.intern.duplex.Node)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_add_error_token(int,int)",
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.ParseException generateParseException()",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:void findChildElementsByName(org.w3c.dom.Element,java.lang.String,java.util.List)",
            "org.xmlbeam.AutoList:boolean add(java.lang.Object)",
            "org.xmlbeam.AutoList:void add(int,java.lang.Object)",
            "org.xmlbeam.XBProjector:void addDOMChangeListener(org.xmlbeam.intern.DOMChangeListener)",
            "org.xmlbeam.AutoList$1:void refresh(boolean)"
        ]
    },
    "org.xmlbeam.AutoList:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoList:void add(int,java.lang.Object)"
        ]
    },
    "org.xmlbeam.AutoList:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoList:boolean remove(java.lang.Object)"
        ]
    },
    "org.xmlbeam.AutoValue:java.lang.Object set(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.XBProjector$IOBuilder:java.lang.String toURLAnnotationViaPOST(java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:boolean compare(org.xmlbeam.util.intern.duplex.SimpleNode,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object jjtAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object childrenAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object firstChildAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object secondChildAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.util.List childrenAcceptWithFilter(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node,org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:org.w3c.dom.Element createChildElement(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.Preprocessor:java.lang.String applyParams(java.lang.String,java.util.Map,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:org.w3c.dom.Node getNodeForMethod(java.lang.reflect.Method,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.String resolveXPath(java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.types.DefaultTypeConverter:void <init>(java.util.Locale,java.util.TimeZone)",
            "org.xmlbeam.types.DefaultTypeConverter:boolean isConvertable(java.lang.Class)",
            "org.xmlbeam.types.DefaultTypeConverter:org.xmlbeam.types.DefaultTypeConverter setConversionForType(java.lang.Class,org.xmlbeam.types.DefaultTypeConverter$Conversion)",
            "org.xmlbeam.io.UrlIO:void <init>(org.xmlbeam.XBProjector,java.lang.String)",
            "org.xmlbeam.io.UrlIO:org.xmlbeam.io.UrlIO addRequestProperty(java.lang.String,java.lang.String)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression$3:void apply(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.Preprocessor:void <clinit>()",
            "org.xmlbeam.util.intern.DOMHelper:void fillNSMapWithPrefixesDeclaredInElement(java.util.Map,org.w3c.dom.Element)",
            "org.xmlbeam.config.DefaultXMLFactoriesConfig$2:org.xmlbeam.config.DefaultXMLFactoriesConfig$NSMapping add(java.lang.String,java.lang.String)",
            "org.xmlbeam.ProjectionInvocationHandler:void <init>(org.xmlbeam.XBProjector,org.w3c.dom.Node,java.lang.Class,java.util.Map,boolean,boolean)",
            "org.xmlbeam.XBProjector$MixinBuilder:org.xmlbeam.XBProjector addProjectionMixin(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.xmlbeam.XBProjector$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$OverrideByDefaultMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler$OverrideByDefaultMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$OverrideByDefaultMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object resolveVariable(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object access$400(org.xmlbeam.util.intern.duplex.BuildDocumentVisitor,org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.JJTXParserState:void pushNode(org.xmlbeam.util.intern.duplex.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,int)",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,boolean)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.JJTXParserState:void openNodeScope(org.xmlbeam.util.intern.duplex.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()",
            "org.xmlbeam.util.intern.duplex.XParser:void XPath()",
            "org.xmlbeam.util.intern.duplex.XParser:void ExpressionFormat()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParamList()",
            "org.xmlbeam.util.intern.duplex.XParser:void Param()",
            "org.xmlbeam.util.intern.duplex.XParser:void EnclosedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void Expr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void LetExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetClause()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IfExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void OrExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AndExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void RangeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void InstanceofExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void TreatExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastableExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void RelativePathExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()",
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevForwardStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseAxis()",
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevReverseStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void NameTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void Wildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void PredicateList()",
            "org.xmlbeam.util.intern.duplex.XParser:void Predicate()",
            "org.xmlbeam.util.intern.duplex.XParser:void Literal()",
            "org.xmlbeam.util.intern.duplex.XParser:void NumericLiteral()",
            "org.xmlbeam.util.intern.duplex.XParser:void VariableFormat()",
            "org.xmlbeam.util.intern.duplex.XParser:void VarName()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ContextItemExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void LiteralFunctionItem()",
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()",
            "org.xmlbeam.util.intern.duplex.XParser:void DynamicFunctionInvocation()",
            "org.xmlbeam.util.intern.duplex.XParser:void SingleType()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()",
            "org.xmlbeam.util.intern.duplex.XParser:void OccurrenceIndicator()",
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void AtomicType()",
            "org.xmlbeam.util.intern.duplex.XParser:void AnyKindTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void TextTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void CommentTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void NamespaceNodeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void PITest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttribNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaAttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementName()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AnyFunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypedFunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void NCName()",
            "org.xmlbeam.util.intern.duplex.XParser:void QName()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void jj_add_error_token(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_scan_token(int)",
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.ParseException generateParseException()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.ParseException generateParseException()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.Token jj_consume_token(int)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:void findChildElementsByName(org.w3c.dom.Element,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.util.List findAlltMatchingChildElements(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode,org.xmlbeam.util.intern.duplex.SimpleNode)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:void access$200(org.xmlbeam.util.intern.duplex.BuildDocumentVisitor,org.w3c.dom.Element,java.lang.String,java.util.List)"
        ]
    },
    "org.xmlbeam.XBProjector:void addDOMChangeListener(org.xmlbeam.intern.DOMChangeListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoList:void <init>(org.w3c.dom.Node,org.xmlbeam.evaluation.InvocationContext)",
            "org.xmlbeam.AutoMap:void <init>(org.w3c.dom.Node,org.xmlbeam.evaluation.InvocationContext)"
        ]
    },
    "org.xmlbeam.AutoList$1:void refresh(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DomChangeTracker:void invokeRefresh(boolean)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object jjtAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object childrenAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.util.List childrenAcceptWithFilter(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node,org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$FindNameTestVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.util.List findAlltMatchingChildElements(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode,org.xmlbeam.util.intern.duplex.SimpleNode)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluateStepExprVisitor:java.util.List visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object firstChildAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object resolveVariable(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Node ensureExistence(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Element ensureParentExistence(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:void deleteAllMatchingChildren(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Node createChildWithPredicate(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object secondChildAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.SimpleNode:java.util.List childrenAcceptWithFilter(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node,org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:org.w3c.dom.Element createChildElement(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.String resolveXPath(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.types.DefaultTypeConverter:void <init>(java.util.Locale,java.util.TimeZone)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector:void <init>(org.xmlbeam.config.XMLFactoriesConfig,org.xmlbeam.XBProjector$Flags[])"
        ]
    },
    "org.xmlbeam.types.DefaultTypeConverter:boolean isConvertable(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateAsList(javax.xml.xpath.XPathExpression,org.w3c.dom.Node,java.lang.reflect.Method,org.xmlbeam.evaluation.InvocationContext)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object convertToComponentType(org.xmlbeam.evaluation.InvocationContext,org.w3c.dom.Node,java.lang.Class)",
            "org.xmlbeam.AutoMap:void collectChildrenValues(java.util.Set,org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:void <init>(org.w3c.dom.Node,java.lang.reflect.Method,java.lang.String,org.xmlbeam.XBProjector,boolean)"
        ]
    },
    "org.xmlbeam.types.DefaultTypeConverter:org.xmlbeam.types.DefaultTypeConverter setConversionForType(java.lang.Class,org.xmlbeam.types.DefaultTypeConverter$Conversion)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.io.UrlIO:void <init>(org.xmlbeam.XBProjector,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector$IOBuilder:org.xmlbeam.io.UrlIO url(java.lang.String)"
        ]
    },
    "org.xmlbeam.io.UrlIO:org.xmlbeam.io.UrlIO addRequestProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.intern.duplex.DuplexExpression$3:void apply(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:void eachDirectChild(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor$VisitorClosure,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:void eachChild(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor$VisitorClosure,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.Preprocessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.Preprocessor:int getParameterIndex(java.lang.String)",
            "org.xmlbeam.util.intern.Preprocessor:java.lang.String applyParams(java.lang.String,java.util.Map,java.lang.Object[])",
            "org.xmlbeam.util.intern.Preprocessor:java.lang.String resolveParameter(java.lang.String,java.util.Map,java.lang.Object[])",
            "org.xmlbeam.util.intern.Preprocessor:void <clinit>()",
            "org.xmlbeam.util.intern.MethodParamVariableResolver:java.lang.Object resolveVariable(javax.xml.namespace.QName)",
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:org.w3c.dom.Node getNodeForMethod(java.lang.reflect.Method,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.String resolveXPath(java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.intern.DOMHelper:void fillNSMapWithPrefixesDeclaredInElement(java.util.Map,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.DOMHelper:java.util.Map getNamespaceMapping(org.w3c.dom.Document)",
            "org.xmlbeam.util.intern.DOMHelper:void fillNSMapWithPrefixesDeclaredInElement(java.util.Map,org.w3c.dom.Element)"
        ]
    },
    "org.xmlbeam.config.DefaultXMLFactoriesConfig$2:org.xmlbeam.config.DefaultXMLFactoriesConfig$NSMapping add(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.ProjectionInvocationHandler:void <init>(org.xmlbeam.XBProjector,org.w3c.dom.Node,java.lang.Class,java.util.Map,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector:java.lang.Object projectDOMNode(org.w3c.dom.Node,java.lang.Class)"
        ]
    },
    "org.xmlbeam.XBProjector$MixinBuilder:org.xmlbeam.XBProjector addProjectionMixin(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.XBProjector$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$OverrideByDefaultMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object jjtAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object access$400(org.xmlbeam.util.intern.duplex.BuildDocumentVisitor,org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void OrExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AndExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void RangeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()",
            "org.xmlbeam.util.intern.duplex.XParser:void XPath()",
            "org.xmlbeam.util.intern.duplex.XParser:void ExpressionFormat()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParamList()",
            "org.xmlbeam.util.intern.duplex.XParser:void Param()",
            "org.xmlbeam.util.intern.duplex.XParser:void EnclosedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void Expr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void LetExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetClause()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IfExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void OrExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AndExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void RangeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void InstanceofExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void TreatExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastableExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void RelativePathExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()",
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevForwardStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseAxis()",
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevReverseStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void NameTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void Wildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void PredicateList()",
            "org.xmlbeam.util.intern.duplex.XParser:void Predicate()",
            "org.xmlbeam.util.intern.duplex.XParser:void Literal()",
            "org.xmlbeam.util.intern.duplex.XParser:void NumericLiteral()",
            "org.xmlbeam.util.intern.duplex.XParser:void VariableFormat()",
            "org.xmlbeam.util.intern.duplex.XParser:void VarName()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ContextItemExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void LiteralFunctionItem()",
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()",
            "org.xmlbeam.util.intern.duplex.XParser:void DynamicFunctionInvocation()",
            "org.xmlbeam.util.intern.duplex.XParser:void SingleType()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()",
            "org.xmlbeam.util.intern.duplex.XParser:void OccurrenceIndicator()",
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void AtomicType()",
            "org.xmlbeam.util.intern.duplex.XParser:void AnyKindTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void TextTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void CommentTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void NamespaceNodeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void PITest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttribNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaAttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementName()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AnyFunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypedFunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void NCName()",
            "org.xmlbeam.util.intern.duplex.XParser:void QName()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.DuplexXPathParser:org.xmlbeam.util.intern.duplex.DuplexExpression compile(java.lang.CharSequence)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void XPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ExpressionFormat()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ParamList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void Param()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ParamList()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void EnclosedExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void Expr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void XPath()",
            "org.xmlbeam.util.intern.duplex.XParser:void EnclosedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IfExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void Predicate()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ForExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void SimpleForBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForClause()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void LetExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void LetExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetClause()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void IfExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void OrExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()",
            "org.xmlbeam.util.intern.duplex.XParser:void OperatorExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AndExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void OrExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AndExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void RangeExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void RangeExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void InstanceofExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void TreatExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void InstanceofExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void CastableExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void TreatExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void CastExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void CastableExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void CastExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ValueExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void RelativePathExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void RelativePathExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AbbrevForwardStep()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ReverseAxis()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AbbrevReverseStep()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevForwardStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void NameTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void Wildcard()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NameTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void PredicateList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AxisStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void Predicate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FilterExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void PredicateList()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void Literal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void NumericLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Literal()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void VariableFormat()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()",
            "org.xmlbeam.util.intern.duplex.XParser:void VarName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void VarName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void VarRef()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ContextItemExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void LiteralFunctionItem()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void DynamicFunctionInvocation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FilterExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void SingleType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void CastableExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void TypeDeclaration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Param()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void InstanceofExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void TreatExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypedFunctionTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void OccurrenceIndicator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ItemType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedItemType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AtomicType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SingleType()",
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AnyKindTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void TextTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void CommentTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void NamespaceNodeTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void PITest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AttribNameOrWildcard()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void SchemaAttributeTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AttributeDeclaration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaAttributeTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ElementNameOrWildcard()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void SchemaElementTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ElementDeclaration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaElementTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AttributeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AttribNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeDeclaration()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ElementName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ElementNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementDeclaration()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void TypeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AnyFunctionTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void TypedFunctionTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedItemType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void NCName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PITest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void QName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Param()",
            "org.xmlbeam.util.intern.duplex.XParser:void NameTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void VarName()",
            "org.xmlbeam.util.intern.duplex.XParser:void LiteralFunctionItem()",
            "org.xmlbeam.util.intern.duplex.XParser:void AtomicType()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementName()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void NCName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()",
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_scan_token(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_67()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_63()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_62()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_61()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_19()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_60()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_109()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_108()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_107()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_106()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_57()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_94()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_93()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_92()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_87()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_52()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_86()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_85()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_84()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_83()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_80()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_79()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_78()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_77()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_76()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_75()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_74()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_73()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_72()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_64()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_65()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_61()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_60()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_59()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_58()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_57()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_56()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_55()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_54()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_53()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_52()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_51()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_50()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_49()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_48()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_47()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_46()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_45()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_41()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_44()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_43()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_40()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_39()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_38()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_36()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_37()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_33()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_34()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_28()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_31()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_30()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_29()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_25()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_26()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_23()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_16()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_18()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_218()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_17()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_217()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_216()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_215()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_214()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_213()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_212()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_211()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_210()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_209()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_208()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_207()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_206()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_205()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_204()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_203()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_202()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_201()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_200()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_199()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_198()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_13()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_197()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_196()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_195()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_194()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_193()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_192()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_191()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_15()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_27()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_190()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_189()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_188()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_187()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_186()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_185()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_14()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_184()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_26()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_183()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_182()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_181()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_180()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_12()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_179()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_178()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_30()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_177()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_176()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_96()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_175()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_174()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_173()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_172()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_171()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_170()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_169()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_158()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_168()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_167()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_166()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_165()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_29()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_164()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_163()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_162()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_161()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_95()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_6()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_75()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_93()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_151()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_92()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_4()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_21()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_152()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_20()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_147()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_155()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_79()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_77()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_150()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_80()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_145()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_78()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_81()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_84()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_82()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_83()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_76()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_85()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_127()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_125()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_124()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_123()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_117()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_120()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_121()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_118()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_22()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_112()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_58()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_68()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.Token jj_consume_token(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()",
            "org.xmlbeam.util.intern.duplex.XParser:void ExpressionFormat()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParamList()",
            "org.xmlbeam.util.intern.duplex.XParser:void Param()",
            "org.xmlbeam.util.intern.duplex.XParser:void EnclosedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void Expr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForClause()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void LetExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetClause()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IfExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void OrExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AndExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void RangeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void InstanceofExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void TreatExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastableExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void GeneralComp()",
            "org.xmlbeam.util.intern.duplex.XParser:void ValueComp()",
            "org.xmlbeam.util.intern.duplex.XParser:void NodeComp()",
            "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void RelativePathExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AxisStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()",
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevForwardStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseAxis()",
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevReverseStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void NameTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void Wildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void FilterExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void Predicate()",
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void Literal()",
            "org.xmlbeam.util.intern.duplex.XParser:void NumericLiteral()",
            "org.xmlbeam.util.intern.duplex.XParser:void VarRef()",
            "org.xmlbeam.util.intern.duplex.XParser:void VariableFormat()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ContextItemExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void LiteralFunctionItem()",
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()",
            "org.xmlbeam.util.intern.duplex.XParser:void DynamicFunctionInvocation()",
            "org.xmlbeam.util.intern.duplex.XParser:void SingleType()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()",
            "org.xmlbeam.util.intern.duplex.XParser:void OccurrenceIndicator()",
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AnyKindTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void TextTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void CommentTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void NamespaceNodeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void PITest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttribNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaAttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AnyFunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypedFunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void QName()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.util.List findAlltMatchingChildElements(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode,org.xmlbeam.util.intern.duplex.SimpleNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:void access$200(org.xmlbeam.util.intern.duplex.BuildDocumentVisitor,org.w3c.dom.Element,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluateStepExprVisitor:java.util.List visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.AutoList:void <init>(org.w3c.dom.Node,org.xmlbeam.evaluation.InvocationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeReadProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.DefaultFileList:void <init>(org.w3c.dom.Node,org.xmlbeam.evaluation.InvocationContext,java.io.Closeable)"
        ]
    },
    "org.xmlbeam.AutoMap:void <init>(org.w3c.dom.Node,org.xmlbeam.evaluation.InvocationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeReadProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.DomChangeTracker:void invokeRefresh(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DomChangeTracker:void refreshForReadIfNeeded()",
            "org.xmlbeam.DomChangeTracker:void refreshForWriteIfNeeded()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$FindNameTestVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object jjtAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluateStepExprVisitor:java.util.List visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluateStepExprVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Node ensureExistence(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoMap$2:void refresh(boolean)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.xmlbeam.AutoValue$1:void refresh(boolean)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Element ensureParentExistence(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.xmlbeam.AutoList$1:void refresh(boolean)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.DuplexExpression:void deleteAllMatchingChildren(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoMap:java.lang.Object remove(java.lang.CharSequence)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Node createChildWithPredicate(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:int applyIterableSetOnElement(java.lang.Iterable,org.w3c.dom.Element,org.xmlbeam.util.intern.duplex.DuplexExpression)",
            "org.xmlbeam.AutoList:boolean add(java.lang.Object)",
            "org.xmlbeam.AutoList:void add(int,java.lang.Object)"
        ]
    },
    "org.xmlbeam.XBProjector:void <init>(org.xmlbeam.config.XMLFactoriesConfig,org.xmlbeam.XBProjector$Flags[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector:void <init>(org.xmlbeam.XBProjector$Flags[])"
        ]
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateAsList(javax.xml.xpath.XPathExpression,org.w3c.dom.Node,java.lang.reflect.Method,org.xmlbeam.evaluation.InvocationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateMultiValues(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeReadProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object convertToComponentType(org.xmlbeam.evaluation.InvocationContext,org.w3c.dom.Node,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoList:java.lang.Object get(int)",
            "org.xmlbeam.AutoList:java.lang.Object set(int,java.lang.Object)",
            "org.xmlbeam.AutoValue:java.lang.Object get()",
            "org.xmlbeam.AutoValue:java.lang.Object set(java.lang.Object)",
            "org.xmlbeam.AutoMap:java.lang.Object get(java.lang.CharSequence)",
            "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.xmlbeam.AutoMap:java.lang.Object remove(java.lang.CharSequence)",
            "org.xmlbeam.AutoMap:void collectChildren(java.util.Set,org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.xmlbeam.AutoMap:void collectChildrenValues(java.util.Set,org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoMap:java.util.Set entrySet()",
            "org.xmlbeam.AutoMap:void collectChildrenValues(java.util.Set,org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:void <init>(org.w3c.dom.Node,java.lang.reflect.Method,java.lang.String,org.xmlbeam.XBProjector,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler:void <init>(org.xmlbeam.XBProjector,org.w3c.dom.Node,java.lang.Class,java.util.Map,boolean,boolean)"
        ]
    },
    "org.xmlbeam.XBProjector$IOBuilder:org.xmlbeam.io.UrlIO url(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector$IOBuilder:java.lang.Object fromURLAnnotation(java.lang.Class,java.lang.Object[])",
            "org.xmlbeam.XBProjector$IOBuilder:java.lang.String toURLAnnotationViaPOST(java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.intern.duplex.SimpleNode:void eachDirectChild(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor$VisitorClosure,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor:org.xmlbeam.util.intern.duplex.ExpressionType visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.SimpleNode:void eachChild(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor$VisitorClosure,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:void eachChild(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor$VisitorClosure,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:void <init>(org.xmlbeam.util.intern.duplex.SimpleNode,java.lang.CharSequence,java.util.Map)"
        ]
    },
    "org.xmlbeam.util.intern.Preprocessor:int getParameterIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.Preprocessor:java.lang.String resolveParameter(java.lang.String,java.util.Map,java.lang.Object[])",
            "org.xmlbeam.util.intern.MethodParamVariableResolver:java.lang.Object resolveVariable(javax.xml.namespace.QName)"
        ]
    },
    "org.xmlbeam.util.intern.DOMHelper:java.util.Map getNamespaceMapping(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Node ensureExistence(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Element ensureParentExistence(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:void deleteAllMatchingChildren(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Node createChildWithPredicate(org.w3c.dom.Node)",
            "org.xmlbeam.config.DefaultXMLFactoriesConfig:javax.xml.xpath.XPath createXPath(org.w3c.dom.Document[])"
        ]
    },
    "org.xmlbeam.XBProjector:java.lang.Object projectDOMNode(org.w3c.dom.Node,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateAsList(javax.xml.xpath.XPathExpression,org.w3c.dom.Node,java.lang.reflect.Method,org.xmlbeam.evaluation.InvocationContext)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object convertToComponentType(org.xmlbeam.evaluation.InvocationContext,org.w3c.dom.Node,java.lang.Class)",
            "org.xmlbeam.io.StreamInput:java.lang.Object read(java.lang.Class)",
            "org.xmlbeam.io.UrlIO:java.lang.Object read(java.lang.Class)",
            "org.xmlbeam.DefaultFileIO:java.lang.Object read(java.lang.Class)",
            "org.xmlbeam.XBProjector:java.lang.Object projectEmptyDocument(java.lang.Class)",
            "org.xmlbeam.XBProjector:java.lang.Object projectEmptyElement(java.lang.String,java.lang.Class)",
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeReadProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.intern.duplex.DuplexXPathParser:org.xmlbeam.util.intern.duplex.DuplexExpression compile(java.lang.CharSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:void <init>(org.xmlbeam.XBProjector,org.xmlbeam.evaluation.DocumentResolver,java.lang.String)",
            "org.xmlbeam.DefaultXPathBinder:void <init>(org.xmlbeam.XBProjector,org.xmlbeam.evaluation.DocumentResolver,java.lang.String,java.io.Closeable)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$XPathInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoMap:java.lang.Object get(java.lang.CharSequence)",
            "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.xmlbeam.AutoMap:java.lang.Object remove(java.lang.CharSequence)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Expr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void LetExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IfExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()",
            "org.xmlbeam.util.intern.duplex.XParser:void DynamicFunctionInvocation()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void SimpleForClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void OperatorExpr()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ValueExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ForwardStep()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AxisStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ReverseStep()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AxisStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void AxisStep()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void FilterExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FilterExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void VarRef()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void KindTest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_67()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_114()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_63()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_103()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_62()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_102()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_61()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_101()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_19()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_110()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_1()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_60()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_100()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_109()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_109(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_65()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_108()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_108(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_65()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_107()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_107(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_65()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_106()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_106(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_59()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_57()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_96()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_98()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_94()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_94(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_56()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_93()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_93(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_56()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_92()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_92(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_56()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_87()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_87(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_51()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_52()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_82()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_86()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_86(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_51()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_85()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_85(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_51()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_84()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_84(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_51()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_83()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_83(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_51()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_80()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_80(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_50()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_79()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_79(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_49()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_78()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_78(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_49()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_77()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_77(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_49()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_76()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_76(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_49()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_75()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_75(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_49()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_74()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_74(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_49()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_73()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_73(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_49()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_72()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_72(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_49()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_64()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_64(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_63()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_65()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_65(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_63()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_61()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_61(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_107()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_60()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_60(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_107()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_59()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_59(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_35()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_58()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_58(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_35()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_57()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_57(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_35()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_56()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_56(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_33()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_55()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_55(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_33()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_54()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_54(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_33()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_53()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_53(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_33()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_52()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_52(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_33()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_51()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_51(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_33()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_50()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_50(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_34()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_49()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_49(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_34()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_48()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_48(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_34()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_47()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_47(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_34()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_46()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_46(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_34()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_45()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_45(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_34()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_41()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_41(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_104()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_44()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_44(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_42()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_43()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_43(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_42()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_40()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_40(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_103()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_39()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_39(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_97()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_38()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_38(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_41()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_36()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_36(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_35()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_37()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_37(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_35()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_33()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_33(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_32()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_34()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_34(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_32()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_28()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_28(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_27()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_31()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_31(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_27()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_30()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_30(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_27()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_29()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_29(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_27()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_25()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_25(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_24()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_26()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_26(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_24()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_23()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_23(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_36()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_16()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_16(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_18()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_18(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_31()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_218()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_218(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_17()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_17(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_28()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_217()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_217(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_216()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_216(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_215()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_215(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_214()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_214(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_213()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_213(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_212()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_212(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_211()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_211(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_210()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_210(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_209()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_209(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_208()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_208(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_207()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_207(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_206()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_206(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_205()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_205(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_204()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_204(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_203()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_203(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_202()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_202(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_201()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_201(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_200(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_199()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_199(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_198()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_198(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_13()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_13(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_197()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_197(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_196()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_196(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_195()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_195(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_194()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_194(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_193()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_193(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_192()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_192(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_191()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_191(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_15()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_15(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_26()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_27()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_10()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_190()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_190(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_189()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_189(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_188()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_188(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_187()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_187(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_186()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_186(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_185()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_185(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_14()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_14(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_26()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_184()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_184(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_26()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_9()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_183()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_183(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_182()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_182(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_181()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_181(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_180()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_180(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_12()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_12(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_179()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_179(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_178()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_178(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_30()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_13()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_96()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_177()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_177(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_176()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_176(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_96()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_25()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_175()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_175(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_174()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_174(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_173()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_173(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_172()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_172(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_171()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_171(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_170()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_170(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_169()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_169(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_158()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_158(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_159()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_168()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_168(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_167()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_167(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_166()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_166(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_165()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_165(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_29()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_12()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_95()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_164()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_164(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_163()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_163(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_162()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_162(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_161()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_161(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_95()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_24()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_6()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_6(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_66()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_75()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_130()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_93()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_157()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_151()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_151(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_92()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_156()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_4()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_4(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_21()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_4()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_69()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_152()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_152(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_153()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_20()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_2()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_147()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_147(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_148()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_155()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_155(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_90()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_79()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_142()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_134()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_77()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_141()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_132()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_150()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_150(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_88()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_80()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_135()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_145()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_145(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_146()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_78()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_133()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_81()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_136()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_84()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_139()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_82()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_137()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_83()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_138()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_76()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_131()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_85()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_140()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_127()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_127(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_71()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_125()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_125(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_102()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_124()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_124(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_102()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_123()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_123(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_102()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_117()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_117(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_120()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_120(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_121()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_121(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_70()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_118()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_118(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_119()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_22()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_5()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_112()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_112(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_113()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_58()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_97()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_68()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_115()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void GeneralComp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void ValueComp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void NodeComp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()"
        ]
    },
    "org.xmlbeam.DefaultFileList:void <init>(org.w3c.dom.Node,org.xmlbeam.evaluation.InvocationContext,java.io.Closeable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList bindMultiValues(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.xmlbeam.DomChangeTracker:void refreshForReadIfNeeded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoList:java.lang.Object get(int)",
            "org.xmlbeam.AutoList:int size()",
            "org.xmlbeam.AutoList:java.lang.Object set(int,java.lang.Object)",
            "org.xmlbeam.AutoList:boolean remove(java.lang.Object)",
            "org.xmlbeam.AutoList:org.w3c.dom.Node getNode()",
            "org.xmlbeam.AutoValue:java.lang.Object get()",
            "org.xmlbeam.AutoValue:java.lang.Object set(java.lang.Object)",
            "org.xmlbeam.AutoValue:boolean isPresent()",
            "org.xmlbeam.AutoValue:org.xmlbeam.types.XBAutoValue rename(java.lang.String)",
            "org.xmlbeam.AutoValue:java.lang.String getName()",
            "org.xmlbeam.AutoValue:org.w3c.dom.Node getNode()",
            "org.xmlbeam.AutoMap:java.lang.Object get(java.lang.CharSequence)",
            "org.xmlbeam.AutoMap:java.lang.Object remove(java.lang.CharSequence)",
            "org.xmlbeam.AutoMap:java.util.Set entrySet()"
        ]
    },
    "org.xmlbeam.DomChangeTracker:void refreshForWriteIfNeeded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoList:boolean add(java.lang.Object)",
            "org.xmlbeam.AutoList:void add(int,java.lang.Object)",
            "org.xmlbeam.AutoValue:java.lang.Object set(java.lang.Object)",
            "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.String,java.lang.Object)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluateStepExprVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object jjtAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object firstChildAccept(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object lastChildAccept(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.AutoMap$2:void refresh(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DomChangeTracker:void invokeRefresh(boolean)"
        ]
    },
    "org.xmlbeam.AutoValue$1:void refresh(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DomChangeTracker:void invokeRefresh(boolean)"
        ]
    },
    "org.xmlbeam.AutoMap:java.lang.Object remove(java.lang.CharSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.xmlbeam.AutoMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.xmlbeam.XBProjector:void <init>(org.xmlbeam.XBProjector$Flags[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.AutoList:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object childrenAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.util.List childrenAcceptWithFilter(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node,org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter)",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:org.xmlbeam.util.intern.duplex.Node rootNode()",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:org.xmlbeam.util.intern.duplex.Node peekNode()",
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.ParseException generateParseException()",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Node ensureExistence(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Element ensureParentExistence(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:void deleteAllMatchingChildren(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Node createChildWithPredicate(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object unList(java.lang.Object)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.AutoList:java.lang.Object get(int)",
            "org.xmlbeam.AutoList:java.lang.Object set(int,java.lang.Object)",
            "org.xmlbeam.AutoList:void add(int,java.lang.Object)",
            "org.xmlbeam.AutoList:java.lang.Object remove(int)"
        ]
    },
    "org.xmlbeam.AutoValue:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoValue:java.lang.Object remove()",
            "org.xmlbeam.AutoValue:boolean equals(java.lang.Object)",
            "org.xmlbeam.AutoValue:int hashCode()",
            "org.xmlbeam.AutoValue$2:java.lang.Object next()"
        ]
    },
    "org.xmlbeam.AutoMap:java.lang.Object get(java.lang.CharSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.xmlbeam.AutoMap:void collectChildren(java.util.Set,org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoMap:java.util.Set entrySet()",
            "org.xmlbeam.AutoMap:void collectChildren(java.util.Set,org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.xmlbeam.AutoMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.IOHelper:void addRequestProperties(java.util.Map,java.net.HttpURLConnection)",
            "org.xmlbeam.config.DefaultXMLFactoriesConfig$1:java.lang.String getPrefix(java.lang.String)",
            "org.xmlbeam.ProjectionInvocationHandler:void <init>(org.xmlbeam.XBProjector,org.w3c.dom.Node,java.lang.Class,java.util.Map,boolean,boolean)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor:org.xmlbeam.util.intern.duplex.ExpressionType visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor$1:void apply(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.DuplexExpression:void <init>(org.xmlbeam.util.intern.duplex.SimpleNode,java.lang.CharSequence,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.DuplexXPathParser:org.xmlbeam.util.intern.duplex.DuplexExpression compile(java.lang.CharSequence)"
        ]
    },
    "org.xmlbeam.config.DefaultXMLFactoriesConfig:javax.xml.xpath.XPath createXPath(org.w3c.dom.Document[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.xpath.XPath createXPath(org.w3c.dom.Document[])"
        ]
    },
    "org.xmlbeam.evaluation.DefaultXPathEvaluator:void <init>(org.xmlbeam.XBProjector,org.xmlbeam.evaluation.DocumentResolver,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.io.StreamInput:org.xmlbeam.evaluation.XPathEvaluator evalXPath(java.lang.String)",
            "org.xmlbeam.io.UrlIO:org.xmlbeam.evaluation.XPathEvaluator evalXPath(java.lang.String)",
            "org.xmlbeam.DefaultFileIO:org.xmlbeam.evaluation.XPathEvaluator evalXPath(java.lang.String)",
            "org.xmlbeam.XBProjector$2:org.xmlbeam.evaluation.XPathEvaluator evalXPath(java.lang.String)"
        ]
    },
    "org.xmlbeam.DefaultXPathBinder:void <init>(org.xmlbeam.XBProjector,org.xmlbeam.evaluation.DocumentResolver,java.lang.String,java.io.Closeable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.DefaultFileIO:org.xmlbeam.evaluation.XPathBinder bindXPath(java.lang.String)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_114()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_114(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_64()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_103()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_103(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_98()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_102()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_102(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_98()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_101()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_101(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_98()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_110()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_110(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_101()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_1()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_1(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_3()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_100(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_98()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_109(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NumericLiteral()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_65()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_105()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.ParseException generateParseException()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_108(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NumericLiteral()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_107(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NumericLiteral()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_106(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Literal()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_59()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_99()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_96()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_96(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_95()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_98()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_98(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_99()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_94(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Wildcard()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_56()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_91()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_93(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Wildcard()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_92(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Wildcard()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_87(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_51()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_81()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_82()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_82(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_47()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_86(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_85(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_84(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_83(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_80(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevForwardStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_50()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_71()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_79(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_49()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_70()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_78(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_77(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_76(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_75(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_74(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_73(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_72(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardAxis()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_64(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void RelativePathExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_63()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_63(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_43()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_65(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void RelativePathExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_61(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_107()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_106()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_60(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_59(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NodeComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_35()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_21()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_58(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NodeComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_57(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NodeComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_56(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ValueComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_33()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_19()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_55(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ValueComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_54(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ValueComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_53(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ValueComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_52(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ValueComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_51(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ValueComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_50(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void GeneralComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_34()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_20()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_49(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void GeneralComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_48(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void GeneralComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_47(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void GeneralComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_46(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void GeneralComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_45(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void GeneralComp()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_41(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void CastExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_104()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_103()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_44(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_42()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_42(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_105()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_43(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_40(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void CastableExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_103()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_97()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_39(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void TreatExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_97()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_41()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_38(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void InstanceofExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_41()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_35()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_40()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_36(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_35()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_35(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_40()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_37(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_33(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_32()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_32(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_39()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_34(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_28(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_27()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_27(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_38()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_31(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_30(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_29(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_25(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_24()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_24(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_37()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_26(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_23(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void RangeExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_36()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_22()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_32()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_16(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_18(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AndExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_31()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_17()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_28()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_218(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_94()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_63()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_160()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_17(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void OrExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_28()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_11()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_217(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_216(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_215(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_214(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_213(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_212(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_211(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_210(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_209(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_208(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_207(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_206(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_205(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_204(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_203(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_202(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_201(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_200(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_199(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_198(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_13(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetClause()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_197(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_196(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_195(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_194(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_193(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_192(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_191(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_15(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_10()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_10(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_23()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_190(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_189(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_188(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_187(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_186(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_185(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_14(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_184(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_9()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_9(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_23()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_183(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_182(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_181(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_180(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_12(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForClause()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_179(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_178(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_177(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_176(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_25()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_8()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_175(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_174(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_67()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_101()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_90()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_86()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_21()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_87()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_91()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_89()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_74()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_173(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_172(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_171(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_170(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_169(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_158(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void TypedFunctionTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_159()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_159(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_93()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_168(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_167(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_166(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_165(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_164(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_163(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_162(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_161(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_24()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_7()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_6(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Expr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_66()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_111()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_57()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_130()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_130(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_71()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_157()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_157(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_73()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_151(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_156()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_156(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_73()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_4(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ParamList()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_69()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_116()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_152(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_153()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_153(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_2()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_2(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_3()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_147(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_148()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_148(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_155(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ElementNameOrWildcard()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_90()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_153()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_142()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_142(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_143()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_134()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_134(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_141()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_141(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_143()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_132()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_132(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_150(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AttribNameOrWildcard()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_88()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_148()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_135()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_135(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_145(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PITest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_146()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_146(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_133()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_133(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_136()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_136(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_139()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_139(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_137()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_137(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_138()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_138(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_131()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_131(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_140()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_140(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_127(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_71()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_75()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_122()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_125(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void OccurrenceIndicator()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_102()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_72()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_124(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void OccurrenceIndicator()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_123(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void OccurrenceIndicator()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_117(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_120(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SingleType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_121(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_70()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_158()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_159()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_117()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_22()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_118(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void DynamicFunctionInvocation()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_119()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_119(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_58()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_5()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_5(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_112(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_113()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_113(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_63()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_97()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_97(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_95()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_115()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_115(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_64()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.AutoList:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object[] asArrayOf(java.lang.Class)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression$1:java.util.List filter(org.xmlbeam.util.intern.duplex.SimpleNode[])",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:org.xmlbeam.util.intern.duplex.Node popNode()",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:org.xmlbeam.util.intern.duplex.Node peekNode()",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void clearNodeScope(org.xmlbeam.util.intern.duplex.Node)",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,int)",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,boolean)",
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.ParseException generateParseException()",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:void deleteAllMatchingChildren(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.w3c.dom.Node createChildWithPredicate(org.w3c.dom.Node)",
            "org.xmlbeam.AutoList:java.lang.Object get(int)",
            "org.xmlbeam.AutoList:int size()",
            "org.xmlbeam.AutoList:java.lang.Object set(int,java.lang.Object)",
            "org.xmlbeam.AutoList:void add(int,java.lang.Object)",
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeReadProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.AutoList:org.w3c.dom.Node getNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector:java.lang.String asString(java.lang.Object)"
        ]
    },
    "org.xmlbeam.AutoValue:boolean isPresent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoValue:boolean equals(java.lang.Object)",
            "org.xmlbeam.AutoValue:int hashCode()",
            "org.xmlbeam.AutoValue$2:boolean hasNext()"
        ]
    },
    "org.xmlbeam.AutoValue:org.xmlbeam.types.XBAutoValue rename(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.AutoValue:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.AutoValue:org.w3c.dom.Node getNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.XBProjector:java.lang.String asString(java.lang.Object)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object firstChildAccept(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor:org.xmlbeam.util.intern.duplex.ExpressionType visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:org.xmlbeam.util.intern.duplex.ExpressionType getExpressionType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object lastChildAccept(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor:org.xmlbeam.util.intern.duplex.ExpressionType visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.AutoMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.types.DefaultTypeConverter:org.xmlbeam.types.DefaultTypeConverter setConversionForType(java.lang.Class,org.xmlbeam.types.DefaultTypeConverter$Conversion)",
            "org.xmlbeam.XBProjector$MixinBuilder:java.lang.Object removeProjectionMixin(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.JJTXParserState:org.xmlbeam.util.intern.duplex.Node rootNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.intern.duplex.JJTXParserState:org.xmlbeam.util.intern.duplex.Node peekNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void RelativePathExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void OccurrenceIndicator()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionQName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object unList(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.AutoList:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.JJTXParserState:org.xmlbeam.util.intern.duplex.Node popNode()",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void clearNodeScope(org.xmlbeam.util.intern.duplex.Node)",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,int)",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,boolean)",
            "org.xmlbeam.AutoList:java.lang.Object remove(int)"
        ]
    },
    "org.xmlbeam.AutoValue:java.lang.Object remove()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.AutoValue:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoValue:boolean equals(java.lang.Object)"
        ]
    },
    "org.xmlbeam.AutoValue:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoValue:int hashCode()"
        ]
    },
    "org.xmlbeam.AutoValue$2:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.util.List childrenAcceptWithFilter(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node,org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_add_error_token(int,int)",
            "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor:org.xmlbeam.util.intern.duplex.ExpressionType visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.util.List findAlltMatchingChildElements(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode,org.xmlbeam.util.intern.duplex.SimpleNode)",
            "org.xmlbeam.util.intern.ReflectionHelper:java.lang.Class findDeclaringInterface(java.lang.reflect.Method,java.lang.Class)",
            "org.xmlbeam.util.intern.DOMHelper:void fillNSMapWithPrefixesDeclaredInElement(java.util.Map,org.w3c.dom.Element)",
            "org.xmlbeam.util.intern.DOMHelper:boolean namedNodeMapsAreEqual(org.w3c.dom.NamedNodeMap,org.w3c.dom.NamedNodeMap)",
            "org.xmlbeam.util.intern.DOMHelper:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.util.intern.DOMHelper:void trim(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.DOMHelper:void removeNodes(java.lang.Iterable)",
            "org.xmlbeam.util.intern.DOMHelper:void setDirectTextContent(org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.util.UnionIterator:java.lang.Object next()",
            "org.xmlbeam.util.IOHelper:void addRequestProperties(java.util.Map,java.net.HttpURLConnection)",
            "org.xmlbeam.config.DefaultXMLFactoriesConfig$1:java.lang.String getPrefix(java.lang.String)",
            "org.xmlbeam.ProjectionInvocationHandler:void <init>(org.xmlbeam.XBProjector,org.w3c.dom.Node,java.lang.Class,java.util.Map,boolean,boolean)",
            "org.xmlbeam.XBProjector$MixinBuilder:org.xmlbeam.XBProjector addProjectionMixin(java.lang.Class,java.lang.Object)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:int applyIterableSetOnElement(java.lang.Iterable,org.w3c.dom.Element,org.xmlbeam.util.intern.duplex.DuplexExpression)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoList:boolean remove(java.lang.Object)",
            "org.xmlbeam.XBProjector:void notifyDOMChangeListeners()"
        ]
    },
    "org.xmlbeam.AutoMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.types.DefaultTypeConverter:java.lang.Object convertTo(java.lang.Class,java.lang.String,java.lang.String[])",
            "org.xmlbeam.types.DefaultTypeConverter:org.xmlbeam.types.DefaultTypeConverter$Conversion getConversionForType(java.lang.Class)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.String namespaceURI(java.lang.String)",
            "org.xmlbeam.util.intern.duplex.DuplexExpression:java.lang.String getVariableFormatPattern(java.lang.String)",
            "org.xmlbeam.util.intern.Preprocessor:int getParameterIndex(java.lang.String)",
            "org.xmlbeam.util.intern.Preprocessor:java.lang.String resolveParameter(java.lang.String,java.util.Map,java.lang.Object[])",
            "org.xmlbeam.util.intern.MethodParamVariableResolver:java.lang.Object resolveVariable(javax.xml.namespace.QName)",
            "org.xmlbeam.config.DefaultXMLFactoriesConfig$2:org.xmlbeam.config.DefaultXMLFactoriesConfig$NSMapping add(java.lang.String,java.lang.String)",
            "org.xmlbeam.config.DefaultXMLFactoriesConfig$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.xmlbeam.ProjectionInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.xmlbeam.XBProjector$MixinBuilder:org.xmlbeam.XBProjector addProjectionMixin(java.lang.Class,java.lang.Object)",
            "org.xmlbeam.XBProjector$MixinBuilder:java.lang.Object getProjectionMixin(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.XBProjector$MixinBuilder:java.lang.Object removeProjectionMixin(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.XBProjector:java.lang.Object projectDOMNode(org.w3c.dom.Node,java.lang.Class)"
        ]
    },
    "org.xmlbeam.util.IOHelper:void addRequestProperties(java.util.Map,java.net.HttpURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.IOHelper:java.io.InputStream httpGet(java.lang.String,java.util.Map[])",
            "org.xmlbeam.util.IOHelper:java.io.InputStream httpPost(java.lang.String,java.lang.String,java.util.Map[])"
        ]
    },
    "org.xmlbeam.config.DefaultXMLFactoriesConfig$1:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor$1:void apply(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:void eachDirectChild(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor$VisitorClosure,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:void eachChild(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor$VisitorClosure,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object jjtAccept(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object firstChildAccept(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.lang.Object lastChildAccept(org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.xpath.XPath createXPath(org.w3c.dom.Document[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateMultiValues(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableValue bindSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.DefaultXPathBinder:org.xmlbeam.types.CloseableList bindMultiValues(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.XBProjector$ConfigBuilder:javax.xml.xpath.XPath createXPath(org.w3c.dom.Document[])",
            "org.xmlbeam.ProjectionInvocationHandler$XPathInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoMap:java.lang.Object get(java.lang.CharSequence)",
            "org.xmlbeam.AutoMap:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.xmlbeam.AutoMap:java.lang.Object remove(java.lang.CharSequence)"
        ]
    },
    "org.xmlbeam.io.StreamInput:org.xmlbeam.evaluation.XPathEvaluator evalXPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.io.UrlIO:org.xmlbeam.evaluation.XPathEvaluator evalXPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultFileIO:org.xmlbeam.evaluation.XPathEvaluator evalXPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.XBProjector$2:org.xmlbeam.evaluation.XPathEvaluator evalXPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultFileIO:org.xmlbeam.evaluation.XPathBinder bindXPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_114(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_64()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_104()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_103(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_98()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_45()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_102(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_101(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_110(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void VarName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_101()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_60()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_1(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_3()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_3(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_100(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_105()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_105(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_59()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_99()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_99(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_98()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_96(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FilterExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_95()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_95(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_45()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_98(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PredicateList()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_99()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_46()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_91()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_91(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_54()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_81()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_81(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_47()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_82(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_47()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_68()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_71()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_71(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_48()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_70()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_70(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_48()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_63(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void RelativePathExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_43()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_42()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_62()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_61()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_106()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_105()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_21()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_21(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_22()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_19()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_19(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_22()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_20()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_20(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_22()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_42(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_105()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_104()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_40()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_32()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_39()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_35(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_32(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_39()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_27()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_38()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_27(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_38()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_24()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_37()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_24(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_37()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_23()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_36()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_22()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_22(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_32()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_32()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_18()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_31()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_160()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_160(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_55()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_11()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_11(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_23()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_10(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_23()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_6()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_66()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_118()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_112()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_119()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_113()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_9(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_8()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_8(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_23()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_90()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_90(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_54()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_86()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_144()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_87()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_152()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_147()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_91()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_154()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_89()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_149()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_74()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_129()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_159(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void TypedFunctionTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_7()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_7(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_23()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_111()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_111(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_61()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_130(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_157(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_73()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_128()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_156(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_116()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_116(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_68()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_153(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_2(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_148(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_142(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_143()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_143(int)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_134(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_53()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_88()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_126()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_141(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_132(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_135(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_146(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PITest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_133(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_136(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_139(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_137(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_138(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_131(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_140(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void KindTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_122()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_122(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_70()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_72()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_122()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_119(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void DynamicFunctionInvocation()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_5(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Param()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_113(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_97(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FilterExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_115(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.DuplexExpression$1:java.util.List filter(org.xmlbeam.util.intern.duplex.SimpleNode[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.util.List childrenAcceptWithFilter(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node,org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.JJTXParserState:org.xmlbeam.util.intern.duplex.Node popNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void clearNodeScope(org.xmlbeam.util.intern.duplex.Node)",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,int)",
            "org.xmlbeam.util.intern.duplex.JJTXParserState:void closeNodeScope(org.xmlbeam.util.intern.duplex.Node,boolean)",
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()",
            "org.xmlbeam.util.intern.duplex.XParser:void XPath()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParamList()",
            "org.xmlbeam.util.intern.duplex.XParser:void Param()",
            "org.xmlbeam.util.intern.duplex.XParser:void EnclosedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void Expr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void LetExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetClause()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IfExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void OrExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AndExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void RangeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void InstanceofExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void TreatExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastableExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevForwardStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void NameTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void PredicateList()",
            "org.xmlbeam.util.intern.duplex.XParser:void Predicate()",
            "org.xmlbeam.util.intern.duplex.XParser:void VarName()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void LiteralFunctionItem()",
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()",
            "org.xmlbeam.util.intern.duplex.XParser:void DynamicFunctionInvocation()",
            "org.xmlbeam.util.intern.duplex.XParser:void SingleType()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()",
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void AtomicType()",
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void PITest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttribNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaAttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementName()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypedFunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void NCName()",
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.JJTXParserState:void clearNodeScope(org.xmlbeam.util.intern.duplex.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()",
            "org.xmlbeam.util.intern.duplex.XParser:void XPath()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParamList()",
            "org.xmlbeam.util.intern.duplex.XParser:void Param()",
            "org.xmlbeam.util.intern.duplex.XParser:void EnclosedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void Expr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ForExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleForBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void LetExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetClause()",
            "org.xmlbeam.util.intern.duplex.XParser:void SimpleLetBinding()",
            "org.xmlbeam.util.intern.duplex.XParser:void QuantifiedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IfExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void OrExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AndExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void RangeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AdditiveExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void MultiplicativeExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnionExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void IntersectExceptExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void InstanceofExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void TreatExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastableExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void CastExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void UnaryExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void AbbrevForwardStep()",
            "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void NameTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void PredicateList()",
            "org.xmlbeam.util.intern.duplex.XParser:void Predicate()",
            "org.xmlbeam.util.intern.duplex.XParser:void VarName()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionCall()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionItemExpr()",
            "org.xmlbeam.util.intern.duplex.XParser:void LiteralFunctionItem()",
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()",
            "org.xmlbeam.util.intern.duplex.XParser:void DynamicFunctionInvocation()",
            "org.xmlbeam.util.intern.duplex.XParser:void SingleType()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()",
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void AtomicType()",
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void PITest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttribNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaAttributeTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementNameOrWildcard()",
            "org.xmlbeam.util.intern.duplex.XParser:void SchemaElementTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementDeclaration()",
            "org.xmlbeam.util.intern.duplex.XParser:void AttributeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void ElementName()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypeName()",
            "org.xmlbeam.util.intern.duplex.XParser:void FunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void TypedFunctionTest()",
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedItemType()",
            "org.xmlbeam.util.intern.duplex.XParser:void NCName()",
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.AutoValue$2:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.util.List childrenAcceptWithFilter(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node,org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_add_error_token(int,int)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.util.List findAlltMatchingChildElements(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode,org.xmlbeam.util.intern.duplex.SimpleNode)",
            "org.xmlbeam.util.intern.ReflectionHelper:java.lang.Class findDeclaringInterface(java.lang.reflect.Method,java.lang.Class)",
            "org.xmlbeam.util.intern.DOMHelper:void fillNSMapWithPrefixesDeclaredInElement(java.util.Map,org.w3c.dom.Element)",
            "org.xmlbeam.util.intern.DOMHelper:boolean namedNodeMapsAreEqual(org.w3c.dom.NamedNodeMap,org.w3c.dom.NamedNodeMap)",
            "org.xmlbeam.util.intern.DOMHelper:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.util.intern.DOMHelper:void trim(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.DOMHelper:void removeNodes(java.lang.Iterable)",
            "org.xmlbeam.util.intern.DOMHelper:void setDirectTextContent(org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.util.UnionIterator:boolean hasNext()",
            "org.xmlbeam.util.UnionIterator:java.lang.Object next()",
            "org.xmlbeam.util.IOHelper:void addRequestProperties(java.util.Map,java.net.HttpURLConnection)",
            "org.xmlbeam.config.DefaultXMLFactoriesConfig$1:java.lang.String getPrefix(java.lang.String)",
            "org.xmlbeam.ProjectionInvocationHandler:void <init>(org.xmlbeam.XBProjector,org.w3c.dom.Node,java.lang.Class,java.util.Map,boolean,boolean)",
            "org.xmlbeam.XBProjector$MixinBuilder:org.xmlbeam.XBProjector addProjectionMixin(java.lang.Class,java.lang.Object)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:int applyIterableSetOnElement(java.lang.Iterable,org.w3c.dom.Element,org.xmlbeam.util.intern.duplex.DuplexExpression)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoList:boolean remove(java.lang.Object)",
            "org.xmlbeam.XBProjector:void notifyDOMChangeListeners()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.DuplexExpression:org.xmlbeam.util.intern.duplex.ExpressionType getExpressionType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeReadProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.XBProjector$MixinBuilder:java.lang.Object removeProjectionMixin(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.intern.ReflectionHelper:java.lang.Class findDeclaringInterface(java.lang.reflect.Method,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.intern.DOMHelper:boolean namedNodeMapsAreEqual(org.w3c.dom.NamedNodeMap,org.w3c.dom.NamedNodeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.DOMHelper:boolean nodesAreEqual(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.DOMHelper:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:int applyIterableSetOnElement(java.lang.Iterable,org.w3c.dom.Element,org.xmlbeam.util.intern.duplex.DuplexExpression)",
            "org.xmlbeam.AutoValue:org.xmlbeam.types.XBAutoValue rename(java.lang.String)"
        ]
    },
    "org.xmlbeam.util.intern.DOMHelper:void trim(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.DOMHelper:void trim(org.w3c.dom.Node)",
            "org.xmlbeam.DefaultFileIO$3:void close()",
            "org.xmlbeam.AutoList:java.lang.Object remove(int)",
            "org.xmlbeam.AutoList:boolean remove(java.lang.Object)",
            "org.xmlbeam.AutoValue:java.lang.Object remove()"
        ]
    },
    "org.xmlbeam.util.intern.DOMHelper:void removeNodes(java.lang.Iterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.DOMHelper:void setDirectTextContent(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.UnionIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.util.List childrenAcceptWithFilter(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node,org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_add_error_token(int,int)",
            "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor:org.xmlbeam.util.intern.duplex.ExpressionType visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.util.List findAlltMatchingChildElements(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode,org.xmlbeam.util.intern.duplex.SimpleNode)",
            "org.xmlbeam.util.intern.ReflectionHelper:java.lang.Class findDeclaringInterface(java.lang.reflect.Method,java.lang.Class)",
            "org.xmlbeam.util.intern.DOMHelper:void fillNSMapWithPrefixesDeclaredInElement(java.util.Map,org.w3c.dom.Element)",
            "org.xmlbeam.util.intern.DOMHelper:boolean namedNodeMapsAreEqual(org.w3c.dom.NamedNodeMap,org.w3c.dom.NamedNodeMap)",
            "org.xmlbeam.util.intern.DOMHelper:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.util.intern.DOMHelper:void trim(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.DOMHelper:void removeNodes(java.lang.Iterable)",
            "org.xmlbeam.util.intern.DOMHelper:void setDirectTextContent(org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.util.UnionIterator:java.lang.Object next()",
            "org.xmlbeam.util.IOHelper:void addRequestProperties(java.util.Map,java.net.HttpURLConnection)",
            "org.xmlbeam.config.DefaultXMLFactoriesConfig$1:java.lang.String getPrefix(java.lang.String)",
            "org.xmlbeam.ProjectionInvocationHandler:void <init>(org.xmlbeam.XBProjector,org.w3c.dom.Node,java.lang.Class,java.util.Map,boolean,boolean)",
            "org.xmlbeam.XBProjector$MixinBuilder:org.xmlbeam.XBProjector addProjectionMixin(java.lang.Class,java.lang.Object)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:int applyIterableSetOnElement(java.lang.Iterable,org.w3c.dom.Element,org.xmlbeam.util.intern.duplex.DuplexExpression)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoList:boolean remove(java.lang.Object)",
            "org.xmlbeam.XBProjector:void notifyDOMChangeListeners()"
        ]
    },
    "org.xmlbeam.XBProjector:void notifyDOMChangeListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.types.DefaultTypeConverter:java.lang.Object convertTo(java.lang.Class,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object evaluateSingeValue(java.lang.Class,java.lang.Class)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.util.List evaluateAsList(javax.xml.xpath.XPathExpression,org.w3c.dom.Node,java.lang.reflect.Method,org.xmlbeam.evaluation.InvocationContext)",
            "org.xmlbeam.evaluation.DefaultXPathEvaluator:java.lang.Object convertToComponentType(org.xmlbeam.evaluation.InvocationContext,org.w3c.dom.Node,java.lang.Class)",
            "org.xmlbeam.AutoMap:void collectChildrenValues(java.util.Set,org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler:java.lang.Object invokeReadProjection(org.xmlbeam.evaluation.InvocationContext,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.types.DefaultTypeConverter:org.xmlbeam.types.DefaultTypeConverter$Conversion getConversionForType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.String namespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:org.w3c.dom.Attr createAttribute(org.w3c.dom.Element,java.lang.String)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:org.w3c.dom.Element createChildElement(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:boolean elementNameMatches(org.w3c.dom.Element,java.lang.String)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:org.w3c.dom.Attr getAttributeNodeByName(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.DuplexExpression:java.lang.String getVariableFormatPattern(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.MethodParamVariableResolver:java.lang.Object resolveVariable(javax.xml.namespace.QName)"
        ]
    },
    "org.xmlbeam.config.DefaultXMLFactoriesConfig$1:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.XBProjector$MixinBuilder:java.lang.Object getProjectionMixin(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.util.IOHelper:java.io.InputStream httpGet(java.lang.String,java.util.Map[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.IOHelper:org.w3c.dom.Document getDocumentFromURL(javax.xml.parsers.DocumentBuilder,java.lang.String,java.util.Map,java.lang.Class[])"
        ]
    },
    "org.xmlbeam.util.IOHelper:java.io.InputStream httpPost(java.lang.String,java.lang.String,java.util.Map[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.io.UrlIO:java.lang.String write(java.lang.Object)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_104()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_104(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_98()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_45()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_66()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_3(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:org.xmlbeam.util.intern.duplex.SimpleNode START()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_105(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void Literal()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_99(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_95(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void FilterExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_46()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_67()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_91(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NameTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_54()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_89()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_81(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ReverseStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_68()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_68(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_46()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_71(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_48()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_69()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_70(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ForwardStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_42()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_60()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_62()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_62(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_107()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_21(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_19(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_20(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_22(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ComparisonExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_160(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void QName()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_11(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_8(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_90(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NameTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_144()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_144(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_146()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_154()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_154(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_90()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_149()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_149(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_88()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_129()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_129(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_71()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_7(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ExprSingle()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_111(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ParenthesizedExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_128()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_128(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_71()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_116(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void InlineFunction()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_143(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void DocumentTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_88()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_88(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_100()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_126()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_126(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_71()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_122(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void SequenceType()"
        ]
    },
    "org.xmlbeam.util.UnionIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.SimpleNode:java.util.List childrenAcceptWithFilter(org.xmlbeam.util.intern.duplex.XParserVisitor,org.w3c.dom.Node,org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter)",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_add_error_token(int,int)",
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.util.List findAlltMatchingChildElements(org.w3c.dom.Node,java.lang.String,org.xmlbeam.util.intern.duplex.SimpleNode,org.xmlbeam.util.intern.duplex.SimpleNode)",
            "org.xmlbeam.util.intern.ReflectionHelper:java.lang.Class findDeclaringInterface(java.lang.reflect.Method,java.lang.Class)",
            "org.xmlbeam.util.intern.DOMHelper:void fillNSMapWithPrefixesDeclaredInElement(java.util.Map,org.w3c.dom.Element)",
            "org.xmlbeam.util.intern.DOMHelper:boolean namedNodeMapsAreEqual(org.w3c.dom.NamedNodeMap,org.w3c.dom.NamedNodeMap)",
            "org.xmlbeam.util.intern.DOMHelper:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.util.intern.DOMHelper:void trim(org.w3c.dom.Node)",
            "org.xmlbeam.util.intern.DOMHelper:void removeNodes(java.lang.Iterable)",
            "org.xmlbeam.util.intern.DOMHelper:void setDirectTextContent(org.w3c.dom.Node,java.lang.String)",
            "org.xmlbeam.util.UnionIterator:boolean hasNext()",
            "org.xmlbeam.util.UnionIterator:java.lang.Object next()",
            "org.xmlbeam.util.IOHelper:void addRequestProperties(java.util.Map,java.net.HttpURLConnection)",
            "org.xmlbeam.config.DefaultXMLFactoriesConfig$1:java.lang.String getPrefix(java.lang.String)",
            "org.xmlbeam.ProjectionInvocationHandler:void <init>(org.xmlbeam.XBProjector,org.w3c.dom.Node,java.lang.Class,java.util.Map,boolean,boolean)",
            "org.xmlbeam.XBProjector$MixinBuilder:org.xmlbeam.XBProjector addProjectionMixin(java.lang.Class,java.lang.Object)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:int applyIterableSetOnElement(java.lang.Iterable,org.w3c.dom.Element,org.xmlbeam.util.intern.duplex.DuplexExpression)",
            "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler:java.lang.Object invokeProjection(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.xmlbeam.AutoList:boolean remove(java.lang.Object)",
            "org.xmlbeam.XBProjector:void notifyDOMChangeListeners()"
        ]
    },
    "org.xmlbeam.util.intern.DOMHelper:boolean nodesAreEqual(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.DOMHelper:boolean nodeListsAreEqual(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.xmlbeam.util.intern.DOMHelper:boolean namedNodeMapsAreEqual(org.w3c.dom.NamedNodeMap,org.w3c.dom.NamedNodeMap)",
            "org.xmlbeam.AutoList:boolean remove(java.lang.Object)",
            "org.xmlbeam.AutoList:int indexOf(java.lang.Object)",
            "org.xmlbeam.DefaultDOMAccessInvoker:boolean equals(java.lang.Object)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:org.w3c.dom.Attr createAttribute(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:java.lang.Object visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:boolean elementNameMatches(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:void findChildElementsByName(org.w3c.dom.Element,java.lang.String,java.util.List)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:org.w3c.dom.Attr getAttributeNodeByName(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:org.w3c.dom.Attr access$100(org.xmlbeam.util.intern.duplex.BuildDocumentVisitor,org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.xmlbeam.util.IOHelper:org.w3c.dom.Document getDocumentFromURL(javax.xml.parsers.DocumentBuilder,java.lang.String,java.util.Map,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.io.UrlIO$1:org.w3c.dom.Document resolve(java.lang.Class[])",
            "org.xmlbeam.io.UrlIO:java.lang.Object read(java.lang.Class)",
            "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler:org.w3c.dom.Node getNodeForMethod(java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_104(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PrimaryExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_66()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_66(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_44()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_67()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_67(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_44()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_89()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_89(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_100()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_68(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AxisStep()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_69()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_69(int)",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_46()",
            "org.xmlbeam.util.intern.duplex.XParser:void jj_rescan_token()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_62(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PathExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_144(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void PITest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_154(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ElementNameOrWildcard()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_149(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AttribNameOrWildcard()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_129(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_128(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_88(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_50()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_126(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void ItemType()"
        ]
    },
    "org.xmlbeam.util.intern.DOMHelper:boolean nodeListsAreEqual(org.w3c.dom.NodeList,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.DOMHelper:boolean nodesAreEqual(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.AutoList:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.xmlbeam.DefaultDOMAccessInvoker:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.AutoValue:boolean equals(java.lang.Object)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor:org.w3c.dom.Attr access$100(org.xmlbeam.util.intern.duplex.BuildDocumentVisitor,org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluateStepExprVisitor:java.util.List visit(org.xmlbeam.util.intern.duplex.SimpleNode,org.w3c.dom.Node)"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_66(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_44()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3_63()",
            "org.xmlbeam.util.intern.duplex.XParser:boolean jj_3R_43()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_67(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void StepExpr()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_89(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void NodeTest()"
        ]
    },
    "org.xmlbeam.util.intern.duplex.XParser:boolean jj_2_69(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.xmlbeam.util.intern.duplex.XParser:void AxisStep()"
        ]
    }
}
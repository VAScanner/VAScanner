{
    "org.keycloak.email.DefaultEmailSenderProvider:void setupTruststore(java.util.Properties)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.email.DefaultEmailSenderProvider:void send(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.email.DefaultEmailSenderProvider:void send(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void send(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void send(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void send(java.lang.String,java.util.List,java.lang.String,java.util.Map)"
        ]
    },
    "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void send(java.lang.String,java.util.List,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendConfirmIdentityBrokerLink(java.lang.String,long)",
            "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void send(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendConfirmIdentityBrokerLink(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.broker.IdpEmailVerificationAuthenticator:void authenticateImpl(org.keycloak.authentication.AuthenticationFlowContext,org.keycloak.authentication.authenticators.broker.util.SerializedBrokeredIdentityContext,org.keycloak.broker.provider.BrokeredIdentityContext)"
        ]
    },
    "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void send(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendEvent(org.keycloak.events.Event)",
            "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendPasswordReset(java.lang.String,long)",
            "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendExecuteActions(java.lang.String,long)",
            "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendVerifyEmail(java.lang.String,long)"
        ]
    },
    "org.keycloak.authentication.authenticators.broker.IdpEmailVerificationAuthenticator:void authenticateImpl(org.keycloak.authentication.AuthenticationFlowContext,org.keycloak.authentication.authenticators.broker.util.SerializedBrokeredIdentityContext,org.keycloak.broker.provider.BrokeredIdentityContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.broker.AbstractIdpAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)"
        ]
    },
    "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendEvent(org.keycloak.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.events.email.EmailEventListenerProvider:void onEvent(org.keycloak.events.Event)"
        ]
    },
    "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendPasswordReset(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.resetcred.ResetCredentialEmail:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)"
        ]
    },
    "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendExecuteActions(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UsersResource:javax.ws.rs.core.Response executeActionsEmail(java.lang.String,java.lang.String,java.lang.String,java.util.List)"
        ]
    },
    "org.keycloak.email.freemarker.FreeMarkerEmailTemplateProvider:void sendVerifyEmail(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.forms.login.freemarker.FreeMarkerLoginFormsProvider:javax.ws.rs.core.Response createResponse(org.keycloak.models.UserModel$RequiredAction)"
        ]
    },
    "org.keycloak.authentication.authenticators.broker.AbstractIdpAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()"
        ]
    },
    "org.keycloak.events.email.EmailEventListenerProvider:void onEvent(org.keycloak.events.Event)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.authenticators.resetcred.ResetCredentialEmail:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()"
        ]
    },
    "org.keycloak.services.resources.admin.UsersResource:javax.ws.rs.core.Response executeActionsEmail(java.lang.String,java.lang.String,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UsersResource:javax.ws.rs.core.Response resetPasswordEmail(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.admin.UsersResource:javax.ws.rs.core.Response sendVerifyEmail(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.forms.login.freemarker.FreeMarkerLoginFormsProvider:javax.ws.rs.core.Response createResponse(org.keycloak.models.UserModel$RequiredAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response emailVerification(java.lang.String,java.lang.String)",
            "org.keycloak.authentication.requiredactions.UpdatePassword:void requiredActionChallenge(org.keycloak.authentication.RequiredActionContext)",
            "org.keycloak.authentication.requiredactions.UpdatePassword:void processAction(org.keycloak.authentication.RequiredActionContext)",
            "org.keycloak.authentication.requiredactions.UpdateProfile:void requiredActionChallenge(org.keycloak.authentication.RequiredActionContext)",
            "org.keycloak.authentication.requiredactions.UpdateProfile:void processAction(org.keycloak.authentication.RequiredActionContext)",
            "org.keycloak.authentication.requiredactions.UpdateTotp:void requiredActionChallenge(org.keycloak.authentication.RequiredActionContext)",
            "org.keycloak.authentication.requiredactions.UpdateTotp:void processAction(org.keycloak.authentication.RequiredActionContext)",
            "org.keycloak.authentication.requiredactions.VerifyEmail:void requiredActionChallenge(org.keycloak.authentication.RequiredActionContext)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateClient()",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateOnly()"
        ]
    },
    "org.keycloak.services.resources.admin.UsersResource:javax.ws.rs.core.Response resetPasswordEmail(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UsersResource:javax.ws.rs.core.Response sendVerifyEmail(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response emailVerification(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.requiredactions.UpdatePassword:void requiredActionChallenge(org.keycloak.authentication.RequiredActionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response executionActions(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionModel,org.jboss.resteasy.spi.HttpRequest,org.keycloak.events.EventBuilder,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.util.Set)"
        ]
    },
    "org.keycloak.authentication.requiredactions.UpdatePassword:void processAction(org.keycloak.authentication.RequiredActionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRequireAction(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.requiredactions.UpdateProfile:void requiredActionChallenge(org.keycloak.authentication.RequiredActionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response executionActions(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionModel,org.jboss.resteasy.spi.HttpRequest,org.keycloak.events.EventBuilder,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.util.Set)"
        ]
    },
    "org.keycloak.authentication.requiredactions.UpdateProfile:void processAction(org.keycloak.authentication.RequiredActionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRequireAction(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.requiredactions.UpdateTotp:void requiredActionChallenge(org.keycloak.authentication.RequiredActionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response executionActions(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionModel,org.jboss.resteasy.spi.HttpRequest,org.keycloak.events.EventBuilder,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.util.Set)"
        ]
    },
    "org.keycloak.authentication.requiredactions.UpdateTotp:void processAction(org.keycloak.authentication.RequiredActionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRequireAction(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.requiredactions.VerifyEmail:void requiredActionChallenge(org.keycloak.authentication.RequiredActionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response executionActions(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionModel,org.jboss.resteasy.spi.HttpRequest,org.keycloak.events.EventBuilder,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.util.Set)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.ClientRegistrationAuth:boolean authenticateClient(org.keycloak.models.ClientModel)",
            "org.keycloak.protocol.oidc.utils.AuthorizeClientUtil:org.keycloak.protocol.oidc.utils.AuthorizeClientUtil$ClientAuthResult authorizeClient(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticate()",
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response buildResourceOwnerPasswordCredentialsGrant()",
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.models.ClientSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response executionActions(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionModel,org.jboss.resteasy.spi.HttpRequest,org.keycloak.events.EventBuilder,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response actionRequired(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionModel,org.keycloak.common.ClientConnection,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.events.EventBuilder)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRequireAction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response requiredActionPOST(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response requiredActionGET(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)"
        ]
    },
    "org.keycloak.services.clientregistration.ClientRegistrationAuth:boolean authenticateClient(org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.ClientRegistrationAuth:void requireView(org.keycloak.models.ClientModel)"
        ]
    },
    "org.keycloak.protocol.oidc.utils.AuthorizeClientUtil:org.keycloak.protocol.oidc.utils.AuthorizeClientUtil$ClientAuthResult authorizeClient(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.ClientsManagementService:org.keycloak.models.ClientModel authorizeClient()",
            "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:void authorizeClient()",
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:org.keycloak.models.ClientModel authorizeClient()",
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:void checkClient()"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response browserAuthentication(org.keycloak.models.ClientSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processResult(org.keycloak.authentication.AuthenticationProcessor$Result)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response handleBrowserException(java.lang.Exception)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildRegister()",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildForgotCredential()",
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.models.ClientSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response buildResourceOwnerPasswordCredentialsGrant()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response build()"
        ]
    },
    "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.models.ClientSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildAuthorizationCodeAuthorizationResponse()",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.models.ClientSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response actionRequired(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionModel,org.keycloak.common.ClientConnection,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.events.EventBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response nextActionAfterAuthentication(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionModel,org.keycloak.common.ClientConnection,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.events.EventBuilder)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response requiredActionPOST(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response requiredActionGET(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processAuthentication(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processResetCredentials(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegistration(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,boolean)",
            "org.keycloak.services.resources.LoginActionsService$Checks:boolean verifyCode(java.lang.String)"
        ]
    },
    "org.keycloak.services.clientregistration.ClientRegistrationAuth:void requireView(org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.AbstractClientRegistrationProvider:org.keycloak.representations.idm.ClientRepresentation get(java.lang.String)",
            "org.keycloak.services.clientregistration.AdapterInstallationClientRegistrationProvider:javax.ws.rs.core.Response get(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.ClientsManagementService:org.keycloak.models.ClientModel authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response registerNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response unregisterNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:void authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:javax.ws.rs.core.Response introspect()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:org.keycloak.models.ClientModel authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logoutToken(java.lang.String)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:void checkClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response build()"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response browserAuthentication(org.keycloak.models.ClientSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response cancelled(java.lang.String)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response error(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response redirectToLoginPage(java.lang.Throwable,org.keycloak.services.managers.ClientSessionCode)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processResult(org.keycloak.authentication.AuthenticationProcessor$Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response handleBrowserException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response browserAuthentication(org.keycloak.models.ClientSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)",
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.models.ClientSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildRegister()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response build()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildForgotCredential()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response build()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildAuthorizationCodeAuthorizationResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response build()"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.models.ClientSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.models.ClientSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.models.ClientSessionModel,boolean,boolean)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response nextActionAfterAuthentication(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionModel,org.keycloak.common.ClientConnection,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.events.EventBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService$Checks:boolean verifyRequiredAction(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processAuthentication(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticate(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticateForm(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService$Checks:boolean isActionActive(org.keycloak.services.managers.ClientSessionCode$ActionType)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processResetCredentials(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsGET(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentials(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegistration(java.lang.String,org.keycloak.models.ClientSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerPage(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegister(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginGet(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginPost(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginGet(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginPost(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService$Checks:boolean verifyCode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService$Checks:boolean verifyCode(java.lang.String,java.lang.String,org.keycloak.services.managers.ClientSessionCode$ActionType)",
            "org.keycloak.services.resources.LoginActionsService$Checks:boolean verifyRequiredAction(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.clientregistration.AbstractClientRegistrationProvider:org.keycloak.representations.idm.ClientRepresentation get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response getOIDC(java.lang.String)",
            "org.keycloak.services.clientregistration.DefaultClientRegistrationProvider:javax.ws.rs.core.Response getDefault(java.lang.String)"
        ]
    },
    "org.keycloak.services.clientregistration.AdapterInstallationClientRegistrationProvider:javax.ws.rs.core.Response get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response registerNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response unregisterNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:javax.ws.rs.core.Response introspect()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logoutToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response cancelled(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.social.twitter.TwitterIdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response error(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleLoginResponse(java.lang.String,org.keycloak.saml.processing.core.saml.v2.common.SAMLDocumentHolder,org.keycloak.dom.saml.v2.protocol.ResponseType,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response redirectToLoginPage(java.lang.Throwable,org.keycloak.services.managers.ClientSessionCode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.models.ClientSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.models.ClientSessionModel,boolean,boolean)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.models.ClientSessionModel,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response idpInitiatedSSO(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService$Checks:boolean verifyRequiredAction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processConsent(javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRequireAction(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticateForm(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticateForm(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService$Checks:boolean isActionActive(org.keycloak.services.managers.ClientSessionCode$ActionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService$Checks:boolean verifyCode(java.lang.String,java.lang.String,org.keycloak.services.managers.ClientSessionCode$ActionType)",
            "org.keycloak.services.resources.LoginActionsService$Checks:boolean verifyRequiredAction(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsGET(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentials(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsGET(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerPage(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegister(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginGet(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginPost(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginGet(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginPost(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService$Checks:boolean verifyCode(java.lang.String,java.lang.String,org.keycloak.services.managers.ClientSessionCode$ActionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticate(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticateForm(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentials(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerPage(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegister(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,boolean)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response emailVerification(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response executeActions(java.lang.String)"
        ]
    },
    "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response getOIDC(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.clientregistration.DefaultClientRegistrationProvider:javax.ws.rs.core.Response getDefault(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.social.twitter.TwitterIdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleLoginResponse(java.lang.String,org.keycloak.saml.processing.core.saml.v2.common.SAMLDocumentHolder,org.keycloak.dom.saml.v2.protocol.ResponseType,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleSamlResponse(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService$1:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response idpInitiatedSSO(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processConsent(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response executeActions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleSamlResponse(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService$1:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$RedirectBindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.protocol.saml.SamlService$PostBindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$RedirectBindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$PostBindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response authenticate(java.io.InputStream)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response authenticate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response soapBinding(java.io.InputStream)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response soapBinding(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
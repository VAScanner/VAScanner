{
    "org.keycloak.authorization.client.util.HttpMethod:java.lang.Object execute(org.keycloak.authorization.client.util.HttpResponseProcessor)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.authorization.client.util.HttpMethodResponse:java.lang.Object execute()",
            "org.keycloak.authorization.client.util.HttpMethodResponse$2:java.lang.Object execute()",
            "org.keycloak.authorization.client.util.HttpMethod:void execute()"
        ]
    },
    "org.keycloak.authorization.client.util.HttpMethodResponse:java.lang.Object execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.authorization.client.representation.PermissionResponse forResource(org.keycloak.authorization.client.representation.PermissionRequest)",
            "org.keycloak.authorization.client.resource.ProtectionResource:org.keycloak.authorization.client.representation.TokenIntrospectionResponse introspectRequestingPartyToken(java.lang.String)",
            "org.keycloak.authorization.client.resource.EntitlementResource:org.keycloak.authorization.client.representation.EntitlementResponse getAll(java.lang.String)",
            "org.keycloak.authorization.client.resource.EntitlementResource:org.keycloak.authorization.client.representation.EntitlementResponse get(java.lang.String,org.keycloak.authorization.client.representation.EntitlementRequest)",
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.representation.RegistrationResponse create(org.keycloak.authorization.client.representation.ResourceRepresentation)",
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.representation.RegistrationResponse findById(java.lang.String)",
            "org.keycloak.authorization.client.resource.ProtectedResource:java.util.Set findByFilter(java.lang.String)",
            "org.keycloak.authorization.client.resource.ProtectedResource:java.util.Set findAll()",
            "org.keycloak.authorization.client.resource.AuthorizationResource:org.keycloak.authorization.client.representation.AuthorizationResponse authorize(org.keycloak.authorization.client.representation.AuthorizationRequest)",
            "org.keycloak.authorization.client.AuthzClient:void <init>(org.keycloak.authorization.client.Configuration)",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken()",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authorization.client.util.HttpMethodResponse$2:java.lang.Object execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.authorization.client.representation.PermissionResponse forResource(org.keycloak.authorization.client.representation.PermissionRequest)",
            "org.keycloak.authorization.client.resource.ProtectionResource:org.keycloak.authorization.client.representation.TokenIntrospectionResponse introspectRequestingPartyToken(java.lang.String)",
            "org.keycloak.authorization.client.resource.EntitlementResource:org.keycloak.authorization.client.representation.EntitlementResponse getAll(java.lang.String)",
            "org.keycloak.authorization.client.resource.EntitlementResource:org.keycloak.authorization.client.representation.EntitlementResponse get(java.lang.String,org.keycloak.authorization.client.representation.EntitlementRequest)",
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.representation.RegistrationResponse create(org.keycloak.authorization.client.representation.ResourceRepresentation)",
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.representation.RegistrationResponse findById(java.lang.String)",
            "org.keycloak.authorization.client.resource.ProtectedResource:java.util.Set findByFilter(java.lang.String)",
            "org.keycloak.authorization.client.resource.ProtectedResource:java.util.Set findAll()",
            "org.keycloak.authorization.client.resource.AuthorizationResource:org.keycloak.authorization.client.representation.AuthorizationResponse authorize(org.keycloak.authorization.client.representation.AuthorizationRequest)",
            "org.keycloak.authorization.client.AuthzClient:void <init>(org.keycloak.authorization.client.Configuration)",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken()",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authorization.client.util.HttpMethod:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:void update(org.keycloak.authorization.client.representation.ResourceRepresentation)",
            "org.keycloak.authorization.client.resource.ProtectedResource:void delete(java.lang.String)"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.authorization.client.representation.PermissionResponse forResource(org.keycloak.authorization.client.representation.PermissionRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectionResource:org.keycloak.authorization.client.representation.TokenIntrospectionResponse introspectRequestingPartyToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.EntitlementResource:org.keycloak.authorization.client.representation.EntitlementResponse getAll(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.EntitlementResource:org.keycloak.authorization.client.representation.EntitlementResponse get(java.lang.String,org.keycloak.authorization.client.representation.EntitlementRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.representation.RegistrationResponse create(org.keycloak.authorization.client.representation.ResourceRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.representation.RegistrationResponse findById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:java.util.Set findByFilter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:java.util.Set findAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.AuthorizationResource:org.keycloak.authorization.client.representation.AuthorizationResponse authorize(org.keycloak.authorization.client.representation.AuthorizationRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.AuthzClient:void <init>(org.keycloak.authorization.client.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create(org.keycloak.authorization.client.Configuration)"
        ]
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.resource.ProtectionResource protection()"
        ]
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.resource.AuthorizationResource authorization(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:void update(org.keycloak.authorization.client.representation.ResourceRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:void delete(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create(org.keycloak.authorization.client.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create()"
        ]
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.resource.ProtectionResource protection()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.resource.AuthorizationResource authorization(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create()": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
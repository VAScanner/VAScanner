{
    "org.apache.xerces.util.SymbolHash:void clear()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:int hash(char[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:int hash(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:int hash(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:boolean reset()",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void init()",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reset(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.xni.parser.XMLEntityResolver,org.apache.xerces.util.SymbolTable,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Document,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void backupNSSupport()",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void parseSchemas(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaSymbols:void <clinit>()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLScanner:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLEntityManager:void startDocumentEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLEntityManager:void startDTDEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.util.NamespaceSupport:void reset(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.AbstractSAXParser:void reset()",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:int hash(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:int hash(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:int hash(java.lang.String)"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:int hash(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:int hash(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:int hash(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:int hash(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:int hash(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:int hash(char[],int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanNmtoken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPI()",
            "org.apache.xerces.impl.XMLScanner:void scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,org.apache.xerces.xni.XMLAttributes,int,boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager$EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDExternalSubset(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityManager$EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:boolean reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void setOutputByteStream(java.io.OutputStream)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void setOutputCharStream(java.io.Writer)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Element)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.DocumentFragment)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Document)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath$Scanner:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath$1:void <init>(org.apache.xerces.impl.xpath.XPath,org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(int,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(int,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.validation.ValidationContext)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,java.lang.String,short)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void reset(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.xni.parser.XMLEntityResolver,org.apache.xerces.util.SymbolTable,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Document,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void backupNSSupport()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.apache.xerces.impl.xs.SchemaNamespaceSupport)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUse traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void parseSchemas(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:boolean reset()",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void init()",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reset(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.xni.parser.XMLEntityResolver,org.apache.xerces.util.SymbolTable,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Document,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void backupNSSupport()",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void parseSchemas(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaSymbols:void <clinit>()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLScanner:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLEntityManager:void startDocumentEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLEntityManager:void startDTDEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.util.NamespaceSupport:void reset(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.AbstractSAXParser:void reset()",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaSymbols:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void storeKeyRef(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean nonAnnotationContent(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSParticleDecl checkOccurrences(org.apache.xerces.impl.xs.XSParticleDecl,java.lang.String,org.w3c.dom.Element,int,long)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUse traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:boolean isAttrOrAttrGroup(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()",
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:void <init>()",
            "org.apache.xerces.impl.xs.SchemaSymbols:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void startDocumentEntity(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void startDTDEntity(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.NamespaceSupport:void reset(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:boolean reset()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void reset(org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASURI(java.lang.String)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.dom3.ls.DOMInputSource)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:boolean reset()",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void init()",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reset(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.xni.parser.XMLEntityResolver,org.apache.xerces.util.SymbolTable,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Document,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void backupNSSupport()",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void parseSchemas(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaSymbols:void <clinit>()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLScanner:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLEntityManager:void startDocumentEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLEntityManager:void startDTDEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.util.NamespaceSupport:void reset(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.AbstractSAXParser:void reset()",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:boolean reset()",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void init()",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reset(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.xni.parser.XMLEntityResolver,org.apache.xerces.util.SymbolTable,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Document,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void backupNSSupport()",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void parseSchemas(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaSymbols:void <clinit>()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLScanner:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLEntityManager:void startDocumentEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLEntityManager:void startDTDEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.util.NamespaceSupport:void reset(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.AbstractSAXParser:void reset()",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:int hash(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:int hash(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:int hash(java.lang.String)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:int hash(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:int hash(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:int hash(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.StandardParserConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanPI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,org.apache.xerces.xni.XMLAttributes,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDExternalSubset(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Element)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.DocumentFragment)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Document)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void setOutputByteStream(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.SerializerFactoryImpl:org.apache.xml.serialize.Serializer makeSerializer(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.HTMLSerializer:void <init>(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.XHTMLSerializer:void <init>(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.XMLSerializer:void <init>(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.XMLSerializer:boolean writeNode(java.io.OutputStream,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void setOutputCharStream(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.SerializerFactoryImpl:org.apache.xml.serialize.Serializer makeSerializer(java.io.Writer,org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.HTMLSerializer:void <init>(java.io.Writer,org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.XHTMLSerializer:void <init>(java.io.Writer,org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.XMLSerializer:void <init>(java.io.Writer,org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.XMLSerializer:java.lang.String writeToString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.TextSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.HTMLSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.XMLSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:boolean writeNode(java.io.OutputStream,org.w3c.dom.Node)",
            "org.apache.xml.serialize.XMLSerializer:java.lang.String writeToString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.DocumentFragment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:boolean writeNode(java.io.OutputStream,org.w3c.dom.Node)",
            "org.apache.xml.serialize.XMLSerializer:java.lang.String writeToString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:boolean writeNode(java.io.OutputStream,org.w3c.dom.Node)",
            "org.apache.xml.serialize.XMLSerializer:java.lang.String writeToString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath$1:void <init>(org.apache.xerces.impl.xpath.XPath,org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void main(java.lang.String[])",
            "org.apache.xerces.impl.xs.identity.Selector$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.identity.Field$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.validation.ValidationContext)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.validation.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.validation.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void parseSchemas(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGrpOrAttrGrpRedefinedByRestriction(int,org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUse traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUse traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseLocalElements()",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.parsers.BasicParserConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.StandardParserConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void storeKeyRef(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void storeKeyRef(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean nonAnnotationContent(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Document,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <init>(org.apache.xerces.impl.xs.traversers.XSDHandler)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] getAvailableArray()",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void returnAttrArray(java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSParticleDecl checkOccurrences(org.apache.xerces.impl.xs.XSParticleDecl,java.lang.String,org.w3c.dom.Element,int,long)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUse traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUse traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSParticleDecl checkOccurrences(org.apache.xerces.impl.xs.XSParticleDecl,java.lang.String,org.w3c.dom.Element,int,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:boolean isAttrOrAttrGroup(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSequence(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void resolveKeyRefs()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.XSGrammarBucket:org.apache.xerces.impl.xs.SchemaGrammar[] getGrammars()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addRedefinedGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.XSGroupDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSComplexTypeDecl[] getUncheckedComplexTypeDecls()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl[] getRedefinedGroupDecls()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void setUncheckedTypeNum(int)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroups()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.impl.xs.XSTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.XSTypeDecl,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)",
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void <init>(org.apache.xerces.impl.xs.XSGrammarBucket)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.StandardParserConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Document getSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,short)",
            "org.apache.xerces.parsers.DOMParser:void parse(java.lang.String)",
            "org.apache.xerces.parsers.DOMParser:void parse(org.xml.sax.InputSource)",
            "org.apache.xerces.parsers.DOMBuilderImpl:org.w3c.dom.Document parseURI(java.lang.String)",
            "org.apache.xerces.parsers.DOMBuilderImpl:org.w3c.dom.Document parse(org.apache.xerces.dom3.ls.DOMInputSource)",
            "org.apache.xerces.parsers.AbstractSAXParser:void parse(java.lang.String)",
            "org.apache.xerces.parsers.AbstractSAXParser:void parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.dom3.ls.DOMInputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaSymbols$SchemaSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.StandardParserConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanXMLDeclOrTextDecl(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDExternalSubset(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.SerializerFactoryImpl:org.apache.xml.serialize.Serializer makeSerializer(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.HTMLSerializer:void <init>(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.XHTMLSerializer:void <init>(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.XMLSerializer:void <init>(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.XMLSerializer:boolean writeNode(java.io.OutputStream,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.SerializerFactoryImpl:org.apache.xml.serialize.Serializer makeSerializer(java.io.Writer,org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.HTMLSerializer:void <init>(java.io.Writer,org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.XHTMLSerializer:void <init>(java.io.Writer,org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.XMLSerializer:void <init>(java.io.Writer,org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.XMLSerializer:java.lang.String writeToString(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:java.lang.String saveXML(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.TextSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.SerializerFactoryImpl:org.apache.xml.serialize.Serializer makeSerializer(org.apache.xml.serialize.OutputFormat)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.SerializerFactoryImpl:org.apache.xml.serialize.Serializer makeSerializer(org.apache.xml.serialize.OutputFormat)",
            "org.apache.xml.serialize.XHTMLSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.SerializerFactoryImpl:org.apache.xml.serialize.Serializer makeSerializer(org.apache.xml.serialize.OutputFormat)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.identity.Selector$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Field$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.validation.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.validation.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.validation.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.validation.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGrpOrAttrGrpRedefinedByRestriction(int,org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Document,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUse traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseLocalElements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)"
        ]
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.StandardParserConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void <init>(org.apache.xerces.impl.xs.XSGrammarBucket)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <init>(org.apache.xerces.impl.xs.traversers.XSDHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] getAvailableArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void returnAttrArray(java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUse traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSequence(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void resolveKeyRefs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSParticleDecl getErrorContent()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.XSGrammarBucket:org.apache.xerces.impl.xs.SchemaGrammar[] getGrammars()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void addGrammars(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.impl.xs.XSGrammarBucket)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addRedefinedGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.XSGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSComplexTypeDecl[] getUncheckedComplexTypeDecls()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl[] getRedefinedGroupDecls()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void setUncheckedTypeNum(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDXSParserConfiguration:org.apache.xerces.impl.xs.XMLSchemaValidator createSchemaValidator()",
            "org.apache.xerces.parsers.StandardParserConfiguration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.impl.xs.XSTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.XSTypeDecl,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSAttributeGroupDecl:java.lang.String validRestrictionOf(org.apache.xerces.impl.xs.XSAttributeGroupDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.impl.xs.XSTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.XSTypeDecl,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.impl.xs.XSTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSTypeDecl,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void <init>(org.apache.xerces.impl.xs.XSGrammarBucket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Document getSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,short)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Document getSchema(java.lang.String,java.lang.String,java.lang.String,boolean,short)"
        ]
    },
    "org.apache.xerces.parsers.DOMParser:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderImpl:org.w3c.dom.Document parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xerces.parsers.DOMBuilderImpl:org.w3c.dom.Document parseURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMBuilderImpl:org.w3c.dom.Document parse(org.apache.xerces.dom3.ls.DOMInputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanXMLDeclOrTextDecl(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:java.lang.String saveXML(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.SerializerFactoryImpl:org.apache.xml.serialize.Serializer makeSerializer(org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.XHTMLSerializer:void setOutputFormat(org.apache.xml.serialize.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.SerializerFactoryImpl:org.apache.xml.serialize.Serializer makeSerializer(org.apache.xml.serialize.OutputFormat)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.validation.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,org.apache.xerces.impl.validation.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short,short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.validation.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.validation.ValidationContext)",
            "org.apache.xerces.impl.xs.identity.IDValue:boolean isDuplicateOf(org.apache.xerces.impl.dv.XSSimpleType,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,java.lang.Object[],java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:boolean checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:boolean checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeUse)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.String)",
            "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.impl.xs.XSTypeDecl,java.lang.Object,org.apache.xerces.impl.validation.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.XSComplexTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSParticleDecl getErrorContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSParticleDecl getErrorContent()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void <clinit>()"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void addGrammars(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.impl.xs.XSGrammarBucket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.DTDXSParserConfiguration:org.apache.xerces.impl.xs.XMLSchemaValidator createSchemaValidator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDXSParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDXSParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.StandardParserConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSAttributeGroupDecl:java.lang.String validRestrictionOf(org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Document getSchema(java.lang.String,java.lang.String,java.lang.String,boolean,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Document,java.lang.String,java.lang.String,short)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:org.w3c.dom.Document parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,org.apache.xerces.impl.validation.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()"
        ]
    },
    "org.apache.xerces.impl.xs.identity.IDValue:boolean isDuplicateOf(org.apache.xerces.impl.dv.XSSimpleType,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.IDValue:boolean isDuplicateOf(org.apache.xerces.impl.xs.identity.IDValue)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:boolean checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:boolean checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeUse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUse traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.XMLString processElementContent(org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.impl.xs.XSTypeDecl,java.lang.Object,org.apache.xerces.impl.validation.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.XMLString processElementContent(org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.parsers.DTDXSParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDXSParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.DTDXSParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.StandardParserConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.XSParticleDecl)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseUnordered(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkMapAndSum(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void prepareBuiltInTypes()"
        ]
    },
    "org.apache.xerces.impl.xs.identity.IDValue:boolean isDuplicateOf(org.apache.xerces.impl.xs.identity.IDValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void addValue(org.apache.xerces.impl.xs.identity.Field,org.apache.xerces.impl.xs.identity.IDValue)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:boolean contains(org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.XMLString processElementContent(org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.DTDXSParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.DTDXSParserConfiguration:void <init>()",
            "org.apache.xerces.parsers.DTDXSParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.XSParticleDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseUnordered(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkMapAndSum(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void prepareBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:java.util.Hashtable getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSListSimpleType createTypeList(java.lang.String,java.lang.String,short,org.apache.xerces.impl.dv.XSSimpleType)",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSUnionSimpleType createTypeUnion(java.lang.String,java.lang.String,short,org.apache.xerces.impl.dv.XSSimpleType[])"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void addValue(org.apache.xerces.impl.xs.identity.Field,org.apache.xerces.impl.xs.identity.IDValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Field$Matcher:void matched(java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:boolean contains(org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void append(org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void addValue(org.apache.xerces.impl.xs.identity.Field,org.apache.xerces.impl.xs.identity.IDValue)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$KeyRefValueStore:void endDocumentFragment()"
        ]
    },
    "org.apache.xerces.parsers.DOMBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DTDXSParserConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMBuilderImpl:void <init>()",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>()"
        ]
    },
    "org.apache.xerces.parsers.DTDXSParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:java.util.Hashtable getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:void <init>(org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSListSimpleType createTypeList(java.lang.String,java.lang.String,short,org.apache.xerces.impl.dv.XSSimpleType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSUnionSimpleType createTypeUnion(java.lang.String,java.lang.String,short,org.apache.xerces.impl.dv.XSSimpleType[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Field$Matcher:void matched(java.lang.String,org.apache.xerces.impl.dv.XSSimpleType,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.XPathMatcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.identity.XPathMatcher:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void append(org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache:void endElement()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache:void transplant(org.apache.xerces.impl.xs.identity.IdentityConstraint)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$KeyRefValueStore:void endDocumentFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.DOMBuilderImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMImplementationImpl:org.apache.xerces.dom3.ls.DOMBuilder createDOMBuilder(short)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMImplementationImpl:org.apache.xerces.dom3.as.DOMASBuilder createDOMASBuilder()"
        ]
    },
    "org.apache.xerces.parsers.DOMBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.identity.XPathMatcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Selector$Matcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.XPathMatcher:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Selector$Matcher:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache:void endElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache:void transplant(org.apache.xerces.impl.xs.identity.IdentityConstraint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DOMImplementationImpl:org.apache.xerces.dom3.ls.DOMBuilder createDOMBuilder(short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DOMImplementationImpl:org.apache.xerces.dom3.as.DOMASBuilder createDOMASBuilder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.identity.Selector$Matcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Selector$Matcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Selector$Matcher:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    }
}